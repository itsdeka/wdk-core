'use strict';

var uiCore = require('@layerzerolabs/ui-core');
var uiWallet = require('@layerzerolabs/ui-wallet');
var TonConnect = require('@tonconnect/sdk');
var bigintBuffer = require('bigint-buffer');
var ton = require('@ton/ton');
var lodash = require('lodash');
var $cjs$crypto = require('crypto');
var ui = require('@tonconnect/ui');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var TonConnect__default = /*#__PURE__*/_interopDefault(TonConnect);
var $cjs$crypto__namespace = /*#__PURE__*/_interopNamespace($cjs$crypto);

var __defProp = Object.defineProperty;
var __require = /* @__PURE__ */ ((x2) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x2, {
  get: (a2, b2) => (typeof require !== "undefined" ? require : a2)[b2]
}) : x2)(function(x2) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x2 + '" is not supported');
});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// ../../node_modules/mobx/dist/mobx.esm.js
var niceErrors = {
  0: "Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'",
  1: function _(annotationType, key) {
    return "Cannot apply '" + annotationType + "' to '" + key.toString() + "': Field not found.";
  },
  /*
  2(prop) {
      return `invalid decorator for '${prop.toString()}'`
  },
  3(prop) {
      return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`
  },
  4(prop) {
      return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`
  },
  */
  5: "'keys()' can only be used on observable objects, arrays, sets and maps",
  6: "'values()' can only be used on observable objects, arrays, sets and maps",
  7: "'entries()' can only be used on observable objects, arrays and maps",
  8: "'set()' can only be used on observable objects, arrays and maps",
  9: "'remove()' can only be used on observable objects, arrays and maps",
  10: "'has()' can only be used on observable objects, arrays and maps",
  11: "'get()' can only be used on observable objects, arrays and maps",
  12: "Invalid annotation",
  13: "Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",
  14: "Intercept handlers should return nothing or a change object",
  15: "Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",
  16: "Modification exception: the internal structure of an observable array was changed.",
  17: function _2(index, length) {
    return "[mobx.array] Index out of bounds, " + index + " is larger than " + length;
  },
  18: "mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js",
  19: function _3(other) {
    return "Cannot initialize from classes that inherit from Map: " + other.constructor.name;
  },
  20: function _4(other) {
    return "Cannot initialize map from " + other;
  },
  21: function _5(dataStructure) {
    return "Cannot convert to map from '" + dataStructure + "'";
  },
  22: "mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js",
  23: "It is not possible to get index atoms from arrays",
  24: function _6(thing) {
    return "Cannot obtain administration from " + thing;
  },
  25: function _7(property, name) {
    return "the entry '" + property + "' does not exist in the observable map '" + name + "'";
  },
  26: "please specify a property",
  27: function _8(property, name) {
    return "no observable property '" + property.toString() + "' found on the observable object '" + name + "'";
  },
  28: function _9(thing) {
    return "Cannot obtain atom from " + thing;
  },
  29: "Expecting some object",
  30: "invalid action stack. did you forget to finish an action?",
  31: "missing option for computed: get",
  32: function _10(name, derivation) {
    return "Cycle detected in computation " + name + ": " + derivation;
  },
  33: function _11(name) {
    return "The setter of computed value '" + name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?";
  },
  34: function _12(name) {
    return "[ComputedValue '" + name + "'] It is not possible to assign a new value to a computed value.";
  },
  35: "There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`",
  36: "isolateGlobalState should be called before MobX is running any reactions",
  37: function _13(method) {
    return "[mobx] `observableArray." + method + "()` mutates the array in-place, which is not allowed inside a derivation. Use `array.slice()." + method + "()` instead";
  },
  38: "'ownKeys()' can only be used on observable objects",
  39: "'defineProperty()' can only be used on observable objects"
};
var errors = process.env.NODE_ENV !== "production" ? niceErrors : {};
function die(error) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  if (process.env.NODE_ENV !== "production") {
    var e2 = typeof error === "string" ? error : errors[error];
    if (typeof e2 === "function")
      e2 = e2.apply(null, args);
    throw new Error("[MobX] " + e2);
  }
  throw new Error(typeof error === "number" ? "[MobX] minified error nr: " + error + (args.length ? " " + args.map(String).join(",") : "") + ". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts" : "[MobX] " + error);
}
var mockGlobal = {};
function getGlobal() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return mockGlobal;
}
var assign = Object.assign;
var getDescriptor = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var objectPrototype = Object.prototype;
var EMPTY_ARRAY = [];
Object.freeze(EMPTY_ARRAY);
var EMPTY_OBJECT = {};
Object.freeze(EMPTY_OBJECT);
var hasProxy = typeof Proxy !== "undefined";
var plainObjectString = /* @__PURE__ */ Object.toString();
function assertProxies() {
  if (!hasProxy) {
    die(process.env.NODE_ENV !== "production" ? "`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`" : "Proxy not available");
  }
}
function warnAboutProxyRequirement(msg) {
  if (process.env.NODE_ENV !== "production" && globalState.verifyProxies) {
    die("MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to " + msg);
  }
}
function getNextId() {
  return ++globalState.mobxGuid;
}
function once(func) {
  var invoked = false;
  return function() {
    if (invoked) {
      return;
    }
    invoked = true;
    return func.apply(this, arguments);
  };
}
var noop = function noop2() {
};
function isFunction(fn) {
  return typeof fn === "function";
}
function isStringish(value) {
  var t2 = typeof value;
  switch (t2) {
    case "string":
    case "symbol":
    case "number":
      return true;
  }
  return false;
}
function isObject(value) {
  return value !== null && typeof value === "object";
}
function isPlainObject(value) {
  if (!isObject(value)) {
    return false;
  }
  var proto = Object.getPrototypeOf(value);
  if (proto == null) {
    return true;
  }
  var protoConstructor = Object.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof protoConstructor === "function" && protoConstructor.toString() === plainObjectString;
}
function isGenerator(obj) {
  var constructor = obj == null ? void 0 : obj.constructor;
  if (!constructor) {
    return false;
  }
  if ("GeneratorFunction" === constructor.name || "GeneratorFunction" === constructor.displayName) {
    return true;
  }
  return false;
}
function addHiddenProp(object2, propName, value) {
  defineProperty(object2, propName, {
    enumerable: false,
    writable: true,
    configurable: true,
    value
  });
}
function addHiddenFinalProp(object2, propName, value) {
  defineProperty(object2, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value
  });
}
function createInstanceofPredicate(name, theClass) {
  var propName = "isMobX" + name;
  theClass.prototype[propName] = true;
  return function(x2) {
    return isObject(x2) && x2[propName] === true;
  };
}
function isES6Map(thing) {
  return thing != null && Object.prototype.toString.call(thing) === "[object Map]";
}
function isPlainES6Map(thing) {
  var mapProto = Object.getPrototypeOf(thing);
  var objectProto = Object.getPrototypeOf(mapProto);
  var nullProto = Object.getPrototypeOf(objectProto);
  return nullProto === null;
}
function isES6Set(thing) {
  return thing != null && Object.prototype.toString.call(thing) === "[object Set]";
}
var hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== "undefined";
function getPlainObjectKeys(object2) {
  var keys = Object.keys(object2);
  if (!hasGetOwnPropertySymbols) {
    return keys;
  }
  var symbols = Object.getOwnPropertySymbols(object2);
  if (!symbols.length) {
    return keys;
  }
  return [].concat(keys, symbols.filter(function(s2) {
    return objectPrototype.propertyIsEnumerable.call(object2, s2);
  }));
}
var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : hasGetOwnPropertySymbols ? function(obj) {
  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
} : (
  /* istanbul ignore next */
  Object.getOwnPropertyNames
);
function stringifyKey(key) {
  if (typeof key === "string") {
    return key;
  }
  if (typeof key === "symbol") {
    return key.toString();
  }
  return new String(key).toString();
}
function toPrimitive(value) {
  return value === null ? null : typeof value === "object" ? "" + value : value;
}
function hasProp(target, prop) {
  return objectPrototype.hasOwnProperty.call(target, prop);
}
var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors2(target) {
  var res = {};
  ownKeys(target).forEach(function(key) {
    res[key] = getDescriptor(target, key);
  });
  return res;
};
function getFlag(flags, mask) {
  return !!(flags & mask);
}
function setFlag(flags, mask, newValue) {
  if (newValue) {
    flags |= mask;
  } else {
    flags &= ~mask;
  }
  return flags;
}
function _arrayLikeToArray(r2, a2) {
  (null == a2 || a2 > r2.length) && (a2 = r2.length);
  for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
    n2[e2] = r2[e2];
  return n2;
}
function _defineProperties(e2, r2) {
  for (var t2 = 0; t2 < r2.length; t2++) {
    var o2 = r2[t2];
    o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
  }
}
function _createClass(e2, r2, t2) {
  return r2 && _defineProperties(e2.prototype, r2), t2 && _defineProperties(e2, t2), Object.defineProperty(e2, "prototype", {
    writable: false
  }), e2;
}
function _createForOfIteratorHelperLoose(r2, e2) {
  var t2 = "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (t2)
    return (t2 = t2.call(r2)).next.bind(t2);
  if (Array.isArray(r2) || (t2 = _unsupportedIterableToArray(r2)) || e2 && r2 && "number" == typeof r2.length) {
    t2 && (r2 = t2);
    var o2 = 0;
    return function() {
      return o2 >= r2.length ? {
        done: true
      } : {
        done: false,
        value: r2[o2++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t2 = arguments[e2];
      for (var r2 in t2)
        ({}).hasOwnProperty.call(t2, r2) && (n2[r2] = t2[r2]);
    }
    return n2;
  }, _extends.apply(null, arguments);
}
function _inheritsLoose(t2, o2) {
  t2.prototype = Object.create(o2.prototype), t2.prototype.constructor = t2, _setPrototypeOf(t2, o2);
}
function _setPrototypeOf(t2, e2) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
    return t3.__proto__ = e3, t3;
  }, _setPrototypeOf(t2, e2);
}
function _toPrimitive(t2, r2) {
  if ("object" != typeof t2 || !t2)
    return t2;
  var e2 = t2[Symbol.toPrimitive];
  if (void 0 !== e2) {
    var i2 = e2.call(t2, r2 || "default");
    if ("object" != typeof i2)
      return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function _toPropertyKey(t2) {
  var i2 = _toPrimitive(t2, "string");
  return "symbol" == typeof i2 ? i2 : i2 + "";
}
function _unsupportedIterableToArray(r2, a2) {
  if (r2) {
    if ("string" == typeof r2)
      return _arrayLikeToArray(r2, a2);
    var t2 = {}.toString.call(r2).slice(8, -1);
    return "Object" === t2 && r2.constructor && (t2 = r2.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r2) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r2, a2) : void 0;
  }
}
var storedAnnotationsSymbol = /* @__PURE__ */ Symbol("mobx-stored-annotations");
function createDecoratorAnnotation(annotation) {
  function decorator(target, property) {
    if (is20223Decorator(property)) {
      return annotation.decorate_20223_(target, property);
    } else {
      storeAnnotation(target, property, annotation);
    }
  }
  return Object.assign(decorator, annotation);
}
function storeAnnotation(prototype, key, annotation) {
  if (!hasProp(prototype, storedAnnotationsSymbol)) {
    addHiddenProp(prototype, storedAnnotationsSymbol, _extends({}, prototype[storedAnnotationsSymbol]));
  }
  if (process.env.NODE_ENV !== "production" && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {
    var fieldName = prototype.constructor.name + ".prototype." + key.toString();
    die("'" + fieldName + "' is decorated with 'override', but no such decorated member was found on prototype.");
  }
  assertNotDecorated(prototype, annotation, key);
  if (!isOverride(annotation)) {
    prototype[storedAnnotationsSymbol][key] = annotation;
  }
}
function assertNotDecorated(prototype, annotation, key) {
  if (process.env.NODE_ENV !== "production" && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {
    var fieldName = prototype.constructor.name + ".prototype." + key.toString();
    var currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_;
    var requestedAnnotationType = annotation.annotationType_;
    die("Cannot apply '@" + requestedAnnotationType + "' to '" + fieldName + "':" + ("\nThe field is already decorated with '@" + currentAnnotationType + "'.") + "\nRe-decorating fields is not allowed.\nUse '@override' decorator for methods overridden by subclass.");
  }
}
function collectStoredAnnotations(target) {
  if (!hasProp(target, storedAnnotationsSymbol)) {
    addHiddenProp(target, storedAnnotationsSymbol, _extends({}, target[storedAnnotationsSymbol]));
  }
  return target[storedAnnotationsSymbol];
}
function is20223Decorator(context) {
  return typeof context == "object" && typeof context["kind"] == "string";
}
function assert20223DecoratorType(context, types) {
  if (process.env.NODE_ENV !== "production" && !types.includes(context.kind)) {
    die("The decorator applied to '" + String(context.name) + "' cannot be used on a " + context.kind + " element");
  }
}
var $mobx = /* @__PURE__ */ Symbol("mobx administration");
var Atom = /* @__PURE__ */ function() {
  function Atom2(name_) {
    if (name_ === void 0) {
      name_ = process.env.NODE_ENV !== "production" ? "Atom@" + getNextId() : "Atom";
    }
    this.name_ = void 0;
    this.flags_ = 0;
    this.observers_ = /* @__PURE__ */ new Set();
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.NOT_TRACKING_;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    this.name_ = name_;
  }
  var _proto = Atom2.prototype;
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.reportObserved = function reportObserved$1() {
    return reportObserved(this);
  };
  _proto.reportChanged = function reportChanged() {
    startBatch();
    propagateChanged(this);
    endBatch();
  };
  _proto.toString = function toString3() {
    return this.name_;
  };
  return _createClass(Atom2, [{
    key: "isBeingObserved",
    get: function get3() {
      return getFlag(this.flags_, Atom2.isBeingObservedMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Atom2.isBeingObservedMask_, newValue);
    }
  }, {
    key: "isPendingUnobservation",
    get: function get3() {
      return getFlag(this.flags_, Atom2.isPendingUnobservationMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Atom2.isPendingUnobservationMask_, newValue);
    }
  }, {
    key: "diffValue",
    get: function get3() {
      return getFlag(this.flags_, Atom2.diffValueMask_) ? 1 : 0;
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Atom2.diffValueMask_, newValue === 1 ? true : false);
    }
  }]);
}();
Atom.isBeingObservedMask_ = 1;
Atom.isPendingUnobservationMask_ = 2;
Atom.diffValueMask_ = 4;
var isAtom = /* @__PURE__ */ createInstanceofPredicate("Atom", Atom);
function createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
  if (onBecomeObservedHandler === void 0) {
    onBecomeObservedHandler = noop;
  }
  if (onBecomeUnobservedHandler === void 0) {
    onBecomeUnobservedHandler = noop;
  }
  var atom = new Atom(name);
  if (onBecomeObservedHandler !== noop) {
    onBecomeObserved(atom, onBecomeObservedHandler);
  }
  if (onBecomeUnobservedHandler !== noop) {
    onBecomeUnobserved(atom, onBecomeUnobservedHandler);
  }
  return atom;
}
function identityComparer(a2, b2) {
  return a2 === b2;
}
function structuralComparer(a2, b2) {
  return deepEqual(a2, b2);
}
function shallowComparer(a2, b2) {
  return deepEqual(a2, b2, 1);
}
function defaultComparer(a2, b2) {
  if (Object.is) {
    return Object.is(a2, b2);
  }
  return a2 === b2 ? a2 !== 0 || 1 / a2 === 1 / b2 : a2 !== a2 && b2 !== b2;
}
var comparer = {
  identity: identityComparer,
  structural: structuralComparer,
  "default": defaultComparer,
  shallow: shallowComparer
};
function deepEnhancer(v2, _15, name) {
  if (isObservable(v2)) {
    return v2;
  }
  if (Array.isArray(v2)) {
    return observable.array(v2, {
      name
    });
  }
  if (isPlainObject(v2)) {
    return observable.object(v2, void 0, {
      name
    });
  }
  if (isES6Map(v2)) {
    return observable.map(v2, {
      name
    });
  }
  if (isES6Set(v2)) {
    return observable.set(v2, {
      name
    });
  }
  if (typeof v2 === "function" && !isAction(v2) && !isFlow(v2)) {
    if (isGenerator(v2)) {
      return flow(v2);
    } else {
      return autoAction(name, v2);
    }
  }
  return v2;
}
function shallowEnhancer(v2, _15, name) {
  if (v2 === void 0 || v2 === null) {
    return v2;
  }
  if (isObservableObject(v2) || isObservableArray(v2) || isObservableMap(v2) || isObservableSet(v2)) {
    return v2;
  }
  if (Array.isArray(v2)) {
    return observable.array(v2, {
      name,
      deep: false
    });
  }
  if (isPlainObject(v2)) {
    return observable.object(v2, void 0, {
      name,
      deep: false
    });
  }
  if (isES6Map(v2)) {
    return observable.map(v2, {
      name,
      deep: false
    });
  }
  if (isES6Set(v2)) {
    return observable.set(v2, {
      name,
      deep: false
    });
  }
  if (process.env.NODE_ENV !== "production") {
    die("The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets");
  }
}
function referenceEnhancer(newValue) {
  return newValue;
}
function refStructEnhancer(v2, oldValue) {
  if (process.env.NODE_ENV !== "production" && isObservable(v2)) {
    die("observable.struct should not be used with observable values");
  }
  if (deepEqual(v2, oldValue)) {
    return oldValue;
  }
  return v2;
}
var OVERRIDE = "override";
function isOverride(annotation) {
  return annotation.annotationType_ === OVERRIDE;
}
function createActionAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$1,
    extend_: extend_$1,
    decorate_20223_: decorate_20223_$1
  };
}
function make_$1(adm, key, descriptor, source) {
  var _this$options_;
  if ((_this$options_ = this.options_) != null && _this$options_.bound) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
  }
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 2;
  }
  if (isAction(descriptor.value)) {
    return 1;
  }
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false);
  defineProperty(source, key, actionDescriptor);
  return 2;
}
function extend_$1(adm, key, descriptor, proxyTrap) {
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor);
  return adm.defineProperty_(key, actionDescriptor, proxyTrap);
}
function decorate_20223_$1(mthd, context) {
  if (process.env.NODE_ENV !== "production") {
    assert20223DecoratorType(context, ["method", "field"]);
  }
  var kind = context.kind, name = context.name, addInitializer = context.addInitializer;
  var ann = this;
  var _createAction = function _createAction2(m2) {
    var _ann$options_$name, _ann$options_, _ann$options_$autoAct, _ann$options_2;
    return createAction((_ann$options_$name = (_ann$options_ = ann.options_) == null ? void 0 : _ann$options_.name) != null ? _ann$options_$name : name.toString(), m2, (_ann$options_$autoAct = (_ann$options_2 = ann.options_) == null ? void 0 : _ann$options_2.autoAction) != null ? _ann$options_$autoAct : false);
  };
  if (kind == "field") {
    return function(initMthd) {
      var _ann$options_3;
      var mthd2 = initMthd;
      if (!isAction(mthd2)) {
        mthd2 = _createAction(mthd2);
      }
      if ((_ann$options_3 = ann.options_) != null && _ann$options_3.bound) {
        mthd2 = mthd2.bind(this);
        mthd2.isMobxAction = true;
      }
      return mthd2;
    };
  }
  if (kind == "method") {
    var _this$options_2;
    if (!isAction(mthd)) {
      mthd = _createAction(mthd);
    }
    if ((_this$options_2 = this.options_) != null && _this$options_2.bound) {
      addInitializer(function() {
        var self2 = this;
        var bound = self2[name].bind(self2);
        bound.isMobxAction = true;
        self2[name] = bound;
      });
    }
    return mthd;
  }
  die("Cannot apply '" + ann.annotationType_ + "' to '" + String(name) + "' (kind: " + kind + "):" + ("\n'" + ann.annotationType_ + "' can only be used on properties with a function value."));
}
function assertActionDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (process.env.NODE_ENV !== "production" && !isFunction(value)) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on properties with a function value."));
  }
}
function createActionDescriptor(adm, annotation, key, descriptor, safeDescriptors) {
  var _annotation$options_, _annotation$options_$, _annotation$options_2, _annotation$options_$2, _annotation$options_3, _annotation$options_4, _adm$proxy_2;
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertActionDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if ((_annotation$options_ = annotation.options_) != null && _annotation$options_.bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return {
    value: createAction(
      (_annotation$options_$ = (_annotation$options_2 = annotation.options_) == null ? void 0 : _annotation$options_2.name) != null ? _annotation$options_$ : key.toString(),
      value,
      (_annotation$options_$2 = (_annotation$options_3 = annotation.options_) == null ? void 0 : _annotation$options_3.autoAction) != null ? _annotation$options_$2 : false,
      // https://github.com/mobxjs/mobx/discussions/3140
      (_annotation$options_4 = annotation.options_) != null && _annotation$options_4.bound ? (_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_ : void 0
    ),
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}
function createFlowAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$2,
    extend_: extend_$2,
    decorate_20223_: decorate_20223_$2
  };
}
function make_$2(adm, key, descriptor, source) {
  var _this$options_;
  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0 : 2;
  }
  if ((_this$options_ = this.options_) != null && _this$options_.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {
    if (this.extend_(adm, key, descriptor, false) === null) {
      return 0;
    }
  }
  if (isFlow(descriptor.value)) {
    return 1;
  }
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false);
  defineProperty(source, key, flowDescriptor);
  return 2;
}
function extend_$2(adm, key, descriptor, proxyTrap) {
  var _this$options_2;
  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, (_this$options_2 = this.options_) == null ? void 0 : _this$options_2.bound);
  return adm.defineProperty_(key, flowDescriptor, proxyTrap);
}
function decorate_20223_$2(mthd, context) {
  var _this$options_3;
  if (process.env.NODE_ENV !== "production") {
    assert20223DecoratorType(context, ["method"]);
  }
  var name = context.name, addInitializer = context.addInitializer;
  if (!isFlow(mthd)) {
    mthd = flow(mthd);
  }
  if ((_this$options_3 = this.options_) != null && _this$options_3.bound) {
    addInitializer(function() {
      var self2 = this;
      var bound = self2[name].bind(self2);
      bound.isMobXFlow = true;
      self2[name] = bound;
    });
  }
  return mthd;
}
function assertFlowDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;
  if (process.env.NODE_ENV !== "production" && !isFunction(value)) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on properties with a generator function value."));
  }
}
function createFlowDescriptor(adm, annotation, key, descriptor, bound, safeDescriptors) {
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }
  assertFlowDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;
  if (!isFlow(value)) {
    value = flow(value);
  }
  if (bound) {
    var _adm$proxy_;
    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
    value.isMobXFlow = true;
  }
  return {
    value,
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}
function createComputedAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$3,
    extend_: extend_$3,
    decorate_20223_: decorate_20223_$3
  };
}
function make_$3(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
}
function extend_$3(adm, key, descriptor, proxyTrap) {
  assertComputedDescriptor(adm, this, key, descriptor);
  return adm.defineComputedProperty_(key, _extends({}, this.options_, {
    get: descriptor.get,
    set: descriptor.set
  }), proxyTrap);
}
function decorate_20223_$3(get3, context) {
  if (process.env.NODE_ENV !== "production") {
    assert20223DecoratorType(context, ["getter"]);
  }
  var ann = this;
  var key = context.name, addInitializer = context.addInitializer;
  addInitializer(function() {
    var adm = asObservableObject(this)[$mobx];
    var options = _extends({}, ann.options_, {
      get: get3,
      context: this
    });
    options.name || (options.name = process.env.NODE_ENV !== "production" ? adm.name_ + "." + key.toString() : "ObservableObject." + key.toString());
    adm.values_.set(key, new ComputedValue(options));
  });
  return function() {
    return this[$mobx].getObservablePropValue_(key);
  };
}
function assertComputedDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var get3 = _ref2.get;
  if (process.env.NODE_ENV !== "production" && !get3) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on getter(+setter) properties."));
  }
}
function createObservableAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$4,
    extend_: extend_$4,
    decorate_20223_: decorate_20223_$4
  };
}
function make_$4(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0 : 1;
}
function extend_$4(adm, key, descriptor, proxyTrap) {
  var _this$options_$enhanc, _this$options_;
  assertObservableDescriptor(adm, this, key, descriptor);
  return adm.defineObservableProperty_(key, descriptor.value, (_this$options_$enhanc = (_this$options_ = this.options_) == null ? void 0 : _this$options_.enhancer) != null ? _this$options_$enhanc : deepEnhancer, proxyTrap);
}
function decorate_20223_$4(desc, context) {
  if (process.env.NODE_ENV !== "production") {
    if (context.kind === "field") {
      throw die("Please use `@observable accessor " + String(context.name) + "` instead of `@observable " + String(context.name) + "`");
    }
    assert20223DecoratorType(context, ["accessor"]);
  }
  var ann = this;
  var kind = context.kind, name = context.name;
  var initializedObjects = /* @__PURE__ */ new WeakSet();
  function initializeObservable(target, value) {
    var _ann$options_$enhance, _ann$options_;
    var adm = asObservableObject(target)[$mobx];
    var observable2 = new ObservableValue(value, (_ann$options_$enhance = (_ann$options_ = ann.options_) == null ? void 0 : _ann$options_.enhancer) != null ? _ann$options_$enhance : deepEnhancer, process.env.NODE_ENV !== "production" ? adm.name_ + "." + name.toString() : "ObservableObject." + name.toString(), false);
    adm.values_.set(name, observable2);
    initializedObjects.add(target);
  }
  if (kind == "accessor") {
    return {
      get: function get3() {
        if (!initializedObjects.has(this)) {
          initializeObservable(this, desc.get.call(this));
        }
        return this[$mobx].getObservablePropValue_(name);
      },
      set: function set4(value) {
        if (!initializedObjects.has(this)) {
          initializeObservable(this, value);
        }
        return this[$mobx].setObservablePropValue_(name, value);
      },
      init: function init(value) {
        if (!initializedObjects.has(this)) {
          initializeObservable(this, value);
        }
        return value;
      }
    };
  }
  return;
}
function assertObservableDescriptor(adm, _ref, key, descriptor) {
  var annotationType_ = _ref.annotationType_;
  if (process.env.NODE_ENV !== "production" && !("value" in descriptor)) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' cannot be used on getter/setter properties"));
  }
}
var AUTO = "true";
var autoAnnotation = /* @__PURE__ */ createAutoAnnotation();
function createAutoAnnotation(options) {
  return {
    annotationType_: AUTO,
    options_: options,
    make_: make_$5,
    extend_: extend_$5,
    decorate_20223_: decorate_20223_$5
  };
}
function make_$5(adm, key, descriptor, source) {
  var _this$options_3, _this$options_4;
  if (descriptor.get) {
    return computed.make_(adm, key, descriptor, source);
  }
  if (descriptor.set) {
    var set4 = createAction(key.toString(), descriptor.set);
    if (source === adm.target_) {
      return adm.defineProperty_(key, {
        configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
        set: set4
      }) === null ? 0 : 2;
    }
    defineProperty(source, key, {
      configurable: true,
      set: set4
    });
    return 2;
  }
  if (source !== adm.target_ && typeof descriptor.value === "function") {
    var _this$options_2;
    if (isGenerator(descriptor.value)) {
      var _this$options_;
      var flowAnnotation2 = (_this$options_ = this.options_) != null && _this$options_.autoBind ? flow.bound : flow;
      return flowAnnotation2.make_(adm, key, descriptor, source);
    }
    var actionAnnotation2 = (_this$options_2 = this.options_) != null && _this$options_2.autoBind ? autoAction.bound : autoAction;
    return actionAnnotation2.make_(adm, key, descriptor, source);
  }
  var observableAnnotation2 = ((_this$options_3 = this.options_) == null ? void 0 : _this$options_3.deep) === false ? observable.ref : observable;
  if (typeof descriptor.value === "function" && (_this$options_4 = this.options_) != null && _this$options_4.autoBind) {
    var _adm$proxy_;
    descriptor.value = descriptor.value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }
  return observableAnnotation2.make_(adm, key, descriptor, source);
}
function extend_$5(adm, key, descriptor, proxyTrap) {
  var _this$options_5, _this$options_6;
  if (descriptor.get) {
    return computed.extend_(adm, key, descriptor, proxyTrap);
  }
  if (descriptor.set) {
    return adm.defineProperty_(key, {
      configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
      set: createAction(key.toString(), descriptor.set)
    }, proxyTrap);
  }
  if (typeof descriptor.value === "function" && (_this$options_5 = this.options_) != null && _this$options_5.autoBind) {
    var _adm$proxy_2;
    descriptor.value = descriptor.value.bind((_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_);
  }
  var observableAnnotation2 = ((_this$options_6 = this.options_) == null ? void 0 : _this$options_6.deep) === false ? observable.ref : observable;
  return observableAnnotation2.extend_(adm, key, descriptor, proxyTrap);
}
function decorate_20223_$5(desc, context) {
  die("'" + this.annotationType_ + "' cannot be used as a decorator");
}
var OBSERVABLE = "observable";
var OBSERVABLE_REF = "observable.ref";
var OBSERVABLE_SHALLOW = "observable.shallow";
var OBSERVABLE_STRUCT = "observable.struct";
var defaultCreateObservableOptions = {
  deep: true,
  name: void 0,
  defaultDecorator: void 0,
  proxy: true
};
Object.freeze(defaultCreateObservableOptions);
function asCreateObservableOptions(thing) {
  return thing || defaultCreateObservableOptions;
}
var observableAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE);
var observableRefAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_REF, {
  enhancer: referenceEnhancer
});
var observableShallowAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_SHALLOW, {
  enhancer: shallowEnhancer
});
var observableStructAnnotation = /* @__PURE__ */ createObservableAnnotation(OBSERVABLE_STRUCT, {
  enhancer: refStructEnhancer
});
var observableDecoratorAnnotation = /* @__PURE__ */ createDecoratorAnnotation(observableAnnotation);
function getEnhancerFromOptions(options) {
  return options.deep === true ? deepEnhancer : options.deep === false ? referenceEnhancer : getEnhancerFromAnnotation(options.defaultDecorator);
}
function getAnnotationFromOptions(options) {
  var _options$defaultDecor;
  return options ? (_options$defaultDecor = options.defaultDecorator) != null ? _options$defaultDecor : createAutoAnnotation(options) : void 0;
}
function getEnhancerFromAnnotation(annotation) {
  var _annotation$options_$, _annotation$options_;
  return !annotation ? deepEnhancer : (_annotation$options_$ = (_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.enhancer) != null ? _annotation$options_$ : deepEnhancer;
}
function createObservable(v2, arg2, arg3) {
  if (is20223Decorator(arg2)) {
    return observableAnnotation.decorate_20223_(v2, arg2);
  }
  if (isStringish(arg2)) {
    storeAnnotation(v2, arg2, observableAnnotation);
    return;
  }
  if (isObservable(v2)) {
    return v2;
  }
  if (isPlainObject(v2)) {
    return observable.object(v2, arg2, arg3);
  }
  if (Array.isArray(v2)) {
    return observable.array(v2, arg2);
  }
  if (isES6Map(v2)) {
    return observable.map(v2, arg2);
  }
  if (isES6Set(v2)) {
    return observable.set(v2, arg2);
  }
  if (typeof v2 === "object" && v2 !== null) {
    return v2;
  }
  return observable.box(v2, arg2);
}
assign(createObservable, observableDecoratorAnnotation);
var observableFactories = {
  box: function box(value, options) {
    var o2 = asCreateObservableOptions(options);
    return new ObservableValue(value, getEnhancerFromOptions(o2), o2.name, true, o2.equals);
  },
  array: function array(initialValues, options) {
    var o2 = asCreateObservableOptions(options);
    return (globalState.useProxies === false || o2.proxy === false ? createLegacyArray : createObservableArray)(initialValues, getEnhancerFromOptions(o2), o2.name);
  },
  map: function map(initialValues, options) {
    var o2 = asCreateObservableOptions(options);
    return new ObservableMap(initialValues, getEnhancerFromOptions(o2), o2.name);
  },
  set: function set(initialValues, options) {
    var o2 = asCreateObservableOptions(options);
    return new ObservableSet(initialValues, getEnhancerFromOptions(o2), o2.name);
  },
  object: function object(props, decorators, options) {
    return initObservable(function() {
      return extendObservable(globalState.useProxies === false || (options == null ? void 0 : options.proxy) === false ? asObservableObject({}, options) : asDynamicObservableObject({}, options), props, decorators);
    });
  },
  ref: /* @__PURE__ */ createDecoratorAnnotation(observableRefAnnotation),
  shallow: /* @__PURE__ */ createDecoratorAnnotation(observableShallowAnnotation),
  deep: observableDecoratorAnnotation,
  struct: /* @__PURE__ */ createDecoratorAnnotation(observableStructAnnotation)
};
var observable = /* @__PURE__ */ assign(createObservable, observableFactories);
var COMPUTED = "computed";
var COMPUTED_STRUCT = "computed.struct";
var computedAnnotation = /* @__PURE__ */ createComputedAnnotation(COMPUTED);
var computedStructAnnotation = /* @__PURE__ */ createComputedAnnotation(COMPUTED_STRUCT, {
  equals: comparer.structural
});
var computed = function computed2(arg1, arg2) {
  if (is20223Decorator(arg2)) {
    return computedAnnotation.decorate_20223_(arg1, arg2);
  }
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, computedAnnotation);
  }
  if (isPlainObject(arg1)) {
    return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1));
  }
  if (process.env.NODE_ENV !== "production") {
    if (!isFunction(arg1)) {
      die("First argument to `computed` should be an expression.");
    }
    if (isFunction(arg2)) {
      die("A setter as second argument is no longer supported, use `{ set: fn }` option instead");
    }
  }
  var opts = isPlainObject(arg2) ? arg2 : {};
  opts.get = arg1;
  opts.name || (opts.name = arg1.name || "");
  return new ComputedValue(opts);
};
Object.assign(computed, computedAnnotation);
computed.struct = /* @__PURE__ */ createDecoratorAnnotation(computedStructAnnotation);
var _getDescriptor$config;
var _getDescriptor;
var currentActionId = 0;
var nextActionId = 1;
var isFunctionNameConfigurable = (_getDescriptor$config = (_getDescriptor = /* @__PURE__ */ getDescriptor(function() {
}, "name")) == null ? void 0 : _getDescriptor.configurable) != null ? _getDescriptor$config : false;
var tmpNameDescriptor = {
  value: "action",
  configurable: true,
  writable: false,
  enumerable: false
};
function createAction(actionName, fn, autoAction2, ref) {
  if (autoAction2 === void 0) {
    autoAction2 = false;
  }
  if (process.env.NODE_ENV !== "production") {
    if (!isFunction(fn)) {
      die("`action` can only be invoked on functions");
    }
    if (typeof actionName !== "string" || !actionName) {
      die("actions should have valid names, got: '" + actionName + "'");
    }
  }
  function res() {
    return executeAction(actionName, autoAction2, fn, ref || this, arguments);
  }
  res.isMobxAction = true;
  res.toString = function() {
    return fn.toString();
  };
  if (isFunctionNameConfigurable) {
    tmpNameDescriptor.value = actionName;
    defineProperty(res, "name", tmpNameDescriptor);
  }
  return res;
}
function executeAction(actionName, canRunAsDerivation, fn, scope, args) {
  var runInfo = _startAction(actionName, canRunAsDerivation, scope, args);
  try {
    return fn.apply(scope, args);
  } catch (err) {
    runInfo.error_ = err;
    throw err;
  } finally {
    _endAction(runInfo);
  }
}
function _startAction(actionName, canRunAsDerivation, scope, args) {
  var notifySpy_ = process.env.NODE_ENV !== "production" && isSpyEnabled() && !!actionName;
  var startTime_ = 0;
  if (process.env.NODE_ENV !== "production" && notifySpy_) {
    startTime_ = Date.now();
    var flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY;
    spyReportStart({
      type: ACTION,
      name: actionName,
      object: scope,
      arguments: flattenedArgs
    });
  }
  var prevDerivation_ = globalState.trackingDerivation;
  var runAsAction = !canRunAsDerivation || !prevDerivation_;
  startBatch();
  var prevAllowStateChanges_ = globalState.allowStateChanges;
  if (runAsAction) {
    untrackedStart();
    prevAllowStateChanges_ = allowStateChangesStart(true);
  }
  var prevAllowStateReads_ = allowStateReadsStart(true);
  var runInfo = {
    runAsAction_: runAsAction,
    prevDerivation_,
    prevAllowStateChanges_,
    prevAllowStateReads_,
    notifySpy_,
    startTime_,
    actionId_: nextActionId++,
    parentActionId_: currentActionId
  };
  currentActionId = runInfo.actionId_;
  return runInfo;
}
function _endAction(runInfo) {
  if (currentActionId !== runInfo.actionId_) {
    die(30);
  }
  currentActionId = runInfo.parentActionId_;
  if (runInfo.error_ !== void 0) {
    globalState.suppressReactionErrors = true;
  }
  allowStateChangesEnd(runInfo.prevAllowStateChanges_);
  allowStateReadsEnd(runInfo.prevAllowStateReads_);
  endBatch();
  if (runInfo.runAsAction_) {
    untrackedEnd(runInfo.prevDerivation_);
  }
  if (process.env.NODE_ENV !== "production" && runInfo.notifySpy_) {
    spyReportEnd({
      time: Date.now() - runInfo.startTime_
    });
  }
  globalState.suppressReactionErrors = false;
}
function allowStateChangesStart(allowStateChanges) {
  var prev = globalState.allowStateChanges;
  globalState.allowStateChanges = allowStateChanges;
  return prev;
}
function allowStateChangesEnd(prev) {
  globalState.allowStateChanges = prev;
}
var CREATE = "create";
var ObservableValue = /* @__PURE__ */ function(_Atom) {
  function ObservableValue2(value, enhancer, name_, notifySpy, equals) {
    var _this;
    if (name_ === void 0) {
      name_ = process.env.NODE_ENV !== "production" ? "ObservableValue@" + getNextId() : "ObservableValue";
    }
    if (notifySpy === void 0) {
      notifySpy = true;
    }
    if (equals === void 0) {
      equals = comparer["default"];
    }
    _this = _Atom.call(this, name_) || this;
    _this.enhancer = void 0;
    _this.name_ = void 0;
    _this.equals = void 0;
    _this.hasUnreportedChange_ = false;
    _this.interceptors_ = void 0;
    _this.changeListeners_ = void 0;
    _this.value_ = void 0;
    _this.dehancer = void 0;
    _this.enhancer = enhancer;
    _this.name_ = name_;
    _this.equals = equals;
    _this.value_ = enhancer(value, void 0, name_);
    if (process.env.NODE_ENV !== "production" && notifySpy && isSpyEnabled()) {
      spyReport({
        type: CREATE,
        object: _this,
        observableKind: "value",
        debugObjectName: _this.name_,
        newValue: "" + _this.value_
      });
    }
    return _this;
  }
  _inheritsLoose(ObservableValue2, _Atom);
  var _proto = ObservableValue2.prototype;
  _proto.dehanceValue = function dehanceValue(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.set = function set4(newValue) {
    var oldValue = this.value_;
    newValue = this.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportStart({
          type: UPDATE,
          object: this,
          observableKind: "value",
          debugObjectName: this.name_,
          newValue,
          oldValue
        });
      }
      this.setNewValue_(newValue);
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportEnd();
      }
    }
  };
  _proto.prepareNewValue_ = function prepareNewValue_(newValue) {
    checkIfStateModificationsAreAllowed(this);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this,
        type: UPDATE,
        newValue
      });
      if (!change) {
        return globalState.UNCHANGED;
      }
      newValue = change.newValue;
    }
    newValue = this.enhancer(newValue, this.value_, this.name_);
    return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;
  };
  _proto.setNewValue_ = function setNewValue_(newValue) {
    var oldValue = this.value_;
    this.value_ = newValue;
    this.reportChanged();
    if (hasListeners(this)) {
      notifyListeners(this, {
        type: UPDATE,
        object: this,
        newValue,
        oldValue
      });
    }
  };
  _proto.get = function get3() {
    this.reportObserved();
    return this.dehanceValue(this.value_);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately) {
      listener({
        observableKind: "value",
        debugObjectName: this.name_,
        object: this,
        type: UPDATE,
        newValue: this.value_,
        oldValue: void 0
      });
    }
    return registerListener(this, listener);
  };
  _proto.raw = function raw() {
    return this.value_;
  };
  _proto.toJSON = function toJSON2() {
    return this.get();
  };
  _proto.toString = function toString3() {
    return this.name_ + "[" + this.value_ + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[Symbol.toPrimitive] = function() {
    return this.valueOf();
  };
  return ObservableValue2;
}(Atom);
var ComputedValue = /* @__PURE__ */ function() {
  function ComputedValue2(options) {
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.observing_ = [];
    this.newObserving_ = null;
    this.observers_ = /* @__PURE__ */ new Set();
    this.runId_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    this.unboundDepsCount_ = 0;
    this.value_ = new CaughtException(null);
    this.name_ = void 0;
    this.triggeredBy_ = void 0;
    this.flags_ = 0;
    this.derivation = void 0;
    this.setter_ = void 0;
    this.isTracing_ = TraceMode.NONE;
    this.scope_ = void 0;
    this.equals_ = void 0;
    this.requiresReaction_ = void 0;
    this.keepAlive_ = void 0;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    if (!options.get) {
      die(31);
    }
    this.derivation = options.get;
    this.name_ = options.name || (process.env.NODE_ENV !== "production" ? "ComputedValue@" + getNextId() : "ComputedValue");
    if (options.set) {
      this.setter_ = createAction(process.env.NODE_ENV !== "production" ? this.name_ + "-setter" : "ComputedValue-setter", options.set);
    }
    this.equals_ = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer["default"]);
    this.scope_ = options.context;
    this.requiresReaction_ = options.requiresReaction;
    this.keepAlive_ = !!options.keepAlive;
  }
  var _proto = ComputedValue2.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    propagateMaybeChanged(this);
  };
  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function(listener) {
        return listener();
      });
    }
  };
  _proto.get = function get3() {
    if (this.isComputing) {
      die(32, this.name_, this.derivation);
    }
    if (globalState.inBatch === 0 && // !globalState.trackingDerivatpion &&
    this.observers_.size === 0 && !this.keepAlive_) {
      if (shouldCompute(this)) {
        this.warnAboutUntrackedRead_();
        startBatch();
        this.value_ = this.computeValue_(false);
        endBatch();
      }
    } else {
      reportObserved(this);
      if (shouldCompute(this)) {
        var prevTrackingContext = globalState.trackingContext;
        if (this.keepAlive_ && !prevTrackingContext) {
          globalState.trackingContext = this;
        }
        if (this.trackAndCompute()) {
          propagateChangeConfirmed(this);
        }
        globalState.trackingContext = prevTrackingContext;
      }
    }
    var result = this.value_;
    if (isCaughtException(result)) {
      throw result.cause;
    }
    return result;
  };
  _proto.set = function set4(value) {
    if (this.setter_) {
      if (this.isRunningSetter) {
        die(33, this.name_);
      }
      this.isRunningSetter = true;
      try {
        this.setter_.call(this.scope_, value);
      } finally {
        this.isRunningSetter = false;
      }
    } else {
      die(34, this.name_);
    }
  };
  _proto.trackAndCompute = function trackAndCompute() {
    var oldValue = this.value_;
    var wasSuspended = (
      /* see #1208 */
      this.dependenciesState_ === IDerivationState_.NOT_TRACKING_
    );
    var newValue = this.computeValue_(true);
    var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals_(oldValue, newValue);
    if (changed) {
      this.value_ = newValue;
      if (process.env.NODE_ENV !== "production" && isSpyEnabled()) {
        spyReport({
          observableKind: "computed",
          debugObjectName: this.name_,
          object: this.scope_,
          type: "update",
          oldValue,
          newValue
        });
      }
    }
    return changed;
  };
  _proto.computeValue_ = function computeValue_(track) {
    this.isComputing = true;
    var prev = allowStateChangesStart(false);
    var res;
    if (track) {
      res = trackDerivedFunction(this, this.derivation, this.scope_);
    } else {
      if (globalState.disableErrorBoundaries === true) {
        res = this.derivation.call(this.scope_);
      } else {
        try {
          res = this.derivation.call(this.scope_);
        } catch (e2) {
          res = new CaughtException(e2);
        }
      }
    }
    allowStateChangesEnd(prev);
    this.isComputing = false;
    return res;
  };
  _proto.suspend_ = function suspend_() {
    if (!this.keepAlive_) {
      clearObserving(this);
      this.value_ = void 0;
      if (process.env.NODE_ENV !== "production" && this.isTracing_ !== TraceMode.NONE) {
        console.log("[mobx.trace] Computed value '" + this.name_ + "' was suspended and it will recompute on the next access.");
      }
    }
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    var _this = this;
    var firstTime = true;
    var prevValue = void 0;
    return autorun(function() {
      var newValue = _this.get();
      if (!firstTime || fireImmediately) {
        var prevU = untrackedStart();
        listener({
          observableKind: "computed",
          debugObjectName: _this.name_,
          type: UPDATE,
          object: _this,
          newValue,
          oldValue: prevValue
        });
        untrackedEnd(prevU);
      }
      firstTime = false;
      prevValue = newValue;
    });
  };
  _proto.warnAboutUntrackedRead_ = function warnAboutUntrackedRead_() {
    if (!(process.env.NODE_ENV !== "production")) {
      return;
    }
    if (this.isTracing_ !== TraceMode.NONE) {
      console.log("[mobx.trace] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
    if (typeof this.requiresReaction_ === "boolean" ? this.requiresReaction_ : globalState.computedRequiresReaction) {
      console.warn("[mobx] Computed value '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute.");
    }
  };
  _proto.toString = function toString3() {
    return this.name_ + "[" + this.derivation.toString() + "]";
  };
  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };
  _proto[Symbol.toPrimitive] = function() {
    return this.valueOf();
  };
  return _createClass(ComputedValue2, [{
    key: "isComputing",
    get: function get3() {
      return getFlag(this.flags_, ComputedValue2.isComputingMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue2.isComputingMask_, newValue);
    }
  }, {
    key: "isRunningSetter",
    get: function get3() {
      return getFlag(this.flags_, ComputedValue2.isRunningSetterMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue2.isRunningSetterMask_, newValue);
    }
  }, {
    key: "isBeingObserved",
    get: function get3() {
      return getFlag(this.flags_, ComputedValue2.isBeingObservedMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue2.isBeingObservedMask_, newValue);
    }
  }, {
    key: "isPendingUnobservation",
    get: function get3() {
      return getFlag(this.flags_, ComputedValue2.isPendingUnobservationMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue2.isPendingUnobservationMask_, newValue);
    }
  }, {
    key: "diffValue",
    get: function get3() {
      return getFlag(this.flags_, ComputedValue2.diffValueMask_) ? 1 : 0;
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, ComputedValue2.diffValueMask_, newValue === 1 ? true : false);
    }
  }]);
}();
ComputedValue.isComputingMask_ = 1;
ComputedValue.isRunningSetterMask_ = 2;
ComputedValue.isBeingObservedMask_ = 4;
ComputedValue.isPendingUnobservationMask_ = 8;
ComputedValue.diffValueMask_ = 16;
var isComputedValue = /* @__PURE__ */ createInstanceofPredicate("ComputedValue", ComputedValue);
var IDerivationState_;
(function(IDerivationState_2) {
  IDerivationState_2[IDerivationState_2["NOT_TRACKING_"] = -1] = "NOT_TRACKING_";
  IDerivationState_2[IDerivationState_2["UP_TO_DATE_"] = 0] = "UP_TO_DATE_";
  IDerivationState_2[IDerivationState_2["POSSIBLY_STALE_"] = 1] = "POSSIBLY_STALE_";
  IDerivationState_2[IDerivationState_2["STALE_"] = 2] = "STALE_";
})(IDerivationState_ || (IDerivationState_ = {}));
var TraceMode;
(function(TraceMode2) {
  TraceMode2[TraceMode2["NONE"] = 0] = "NONE";
  TraceMode2[TraceMode2["LOG"] = 1] = "LOG";
  TraceMode2[TraceMode2["BREAK"] = 2] = "BREAK";
})(TraceMode || (TraceMode = {}));
var CaughtException = function CaughtException2(cause) {
  this.cause = void 0;
  this.cause = cause;
};
function isCaughtException(e2) {
  return e2 instanceof CaughtException;
}
function shouldCompute(derivation) {
  switch (derivation.dependenciesState_) {
    case IDerivationState_.UP_TO_DATE_:
      return false;
    case IDerivationState_.NOT_TRACKING_:
    case IDerivationState_.STALE_:
      return true;
    case IDerivationState_.POSSIBLY_STALE_: {
      var prevAllowStateReads = allowStateReadsStart(true);
      var prevUntracked = untrackedStart();
      var obs = derivation.observing_, l2 = obs.length;
      for (var i2 = 0; i2 < l2; i2++) {
        var obj = obs[i2];
        if (isComputedValue(obj)) {
          if (globalState.disableErrorBoundaries) {
            obj.get();
          } else {
            try {
              obj.get();
            } catch (e2) {
              untrackedEnd(prevUntracked);
              allowStateReadsEnd(prevAllowStateReads);
              return true;
            }
          }
          if (derivation.dependenciesState_ === IDerivationState_.STALE_) {
            untrackedEnd(prevUntracked);
            allowStateReadsEnd(prevAllowStateReads);
            return true;
          }
        }
      }
      changeDependenciesStateTo0(derivation);
      untrackedEnd(prevUntracked);
      allowStateReadsEnd(prevAllowStateReads);
      return false;
    }
  }
}
function checkIfStateModificationsAreAllowed(atom) {
  if (!(process.env.NODE_ENV !== "production")) {
    return;
  }
  var hasObservers = atom.observers_.size > 0;
  if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === "always")) {
    console.warn("[MobX] " + (globalState.enforceActions ? "Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: " : "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: ") + atom.name_);
  }
}
function checkIfStateReadsAreAllowed(observable2) {
  if (process.env.NODE_ENV !== "production" && !globalState.allowStateReads && globalState.observableRequiresReaction) {
    console.warn("[mobx] Observable '" + observable2.name_ + "' being read outside a reactive context.");
  }
}
function trackDerivedFunction(derivation, f2, context) {
  var prevAllowStateReads = allowStateReadsStart(true);
  changeDependenciesStateTo0(derivation);
  derivation.newObserving_ = new Array(
    // Reserve constant space for initial dependencies, dynamic space otherwise.
    // See https://github.com/mobxjs/mobx/pull/3833
    derivation.runId_ === 0 ? 100 : derivation.observing_.length
  );
  derivation.unboundDepsCount_ = 0;
  derivation.runId_ = ++globalState.runId;
  var prevTracking = globalState.trackingDerivation;
  globalState.trackingDerivation = derivation;
  globalState.inBatch++;
  var result;
  if (globalState.disableErrorBoundaries === true) {
    result = f2.call(context);
  } else {
    try {
      result = f2.call(context);
    } catch (e2) {
      result = new CaughtException(e2);
    }
  }
  globalState.inBatch--;
  globalState.trackingDerivation = prevTracking;
  bindDependencies(derivation);
  warnAboutDerivationWithoutDependencies(derivation);
  allowStateReadsEnd(prevAllowStateReads);
  return result;
}
function warnAboutDerivationWithoutDependencies(derivation) {
  if (!(process.env.NODE_ENV !== "production")) {
    return;
  }
  if (derivation.observing_.length !== 0) {
    return;
  }
  if (typeof derivation.requiresObservable_ === "boolean" ? derivation.requiresObservable_ : globalState.reactionRequiresObservable) {
    console.warn("[mobx] Derivation '" + derivation.name_ + "' is created/updated without reading any observable value.");
  }
}
function bindDependencies(derivation) {
  var prevObserving = derivation.observing_;
  var observing = derivation.observing_ = derivation.newObserving_;
  var lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_;
  var i0 = 0, l2 = derivation.unboundDepsCount_;
  for (var i2 = 0; i2 < l2; i2++) {
    var dep = observing[i2];
    if (dep.diffValue === 0) {
      dep.diffValue = 1;
      if (i0 !== i2) {
        observing[i0] = dep;
      }
      i0++;
    }
    if (dep.dependenciesState_ > lowestNewObservingDerivationState) {
      lowestNewObservingDerivationState = dep.dependenciesState_;
    }
  }
  observing.length = i0;
  derivation.newObserving_ = null;
  l2 = prevObserving.length;
  while (l2--) {
    var _dep = prevObserving[l2];
    if (_dep.diffValue === 0) {
      removeObserver(_dep, derivation);
    }
    _dep.diffValue = 0;
  }
  while (i0--) {
    var _dep2 = observing[i0];
    if (_dep2.diffValue === 1) {
      _dep2.diffValue = 0;
      addObserver(_dep2, derivation);
    }
  }
  if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {
    derivation.dependenciesState_ = lowestNewObservingDerivationState;
    derivation.onBecomeStale_();
  }
}
function clearObserving(derivation) {
  var obs = derivation.observing_;
  derivation.observing_ = [];
  var i2 = obs.length;
  while (i2--) {
    removeObserver(obs[i2], derivation);
  }
  derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
}
function untracked(action2) {
  var prev = untrackedStart();
  try {
    return action2();
  } finally {
    untrackedEnd(prev);
  }
}
function untrackedStart() {
  var prev = globalState.trackingDerivation;
  globalState.trackingDerivation = null;
  return prev;
}
function untrackedEnd(prev) {
  globalState.trackingDerivation = prev;
}
function allowStateReadsStart(allowStateReads) {
  var prev = globalState.allowStateReads;
  globalState.allowStateReads = allowStateReads;
  return prev;
}
function allowStateReadsEnd(prev) {
  globalState.allowStateReads = prev;
}
function changeDependenciesStateTo0(derivation) {
  if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
    return;
  }
  derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_;
  var obs = derivation.observing_;
  var i2 = obs.length;
  while (i2--) {
    obs[i2].lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
  }
}
var MobXGlobals = function MobXGlobals2() {
  this.version = 6;
  this.UNCHANGED = {};
  this.trackingDerivation = null;
  this.trackingContext = null;
  this.runId = 0;
  this.mobxGuid = 0;
  this.inBatch = 0;
  this.pendingUnobservations = [];
  this.pendingReactions = [];
  this.isRunningReactions = false;
  this.allowStateChanges = false;
  this.allowStateReads = true;
  this.enforceActions = true;
  this.spyListeners = [];
  this.globalReactionErrorHandlers = [];
  this.computedRequiresReaction = false;
  this.reactionRequiresObservable = false;
  this.observableRequiresReaction = false;
  this.disableErrorBoundaries = false;
  this.suppressReactionErrors = false;
  this.useProxies = true;
  this.verifyProxies = false;
  this.safeDescriptors = true;
};
var canMergeGlobalState = true;
var globalState = /* @__PURE__ */ function() {
  var global78 = /* @__PURE__ */ getGlobal();
  if (global78.__mobxInstanceCount > 0 && !global78.__mobxGlobals) {
    canMergeGlobalState = false;
  }
  if (global78.__mobxGlobals && global78.__mobxGlobals.version !== new MobXGlobals().version) {
    canMergeGlobalState = false;
  }
  if (!canMergeGlobalState) {
    setTimeout(function() {
      {
        die(35);
      }
    }, 1);
    return new MobXGlobals();
  } else if (global78.__mobxGlobals) {
    global78.__mobxInstanceCount += 1;
    if (!global78.__mobxGlobals.UNCHANGED) {
      global78.__mobxGlobals.UNCHANGED = {};
    }
    return global78.__mobxGlobals;
  } else {
    global78.__mobxInstanceCount = 1;
    return global78.__mobxGlobals = /* @__PURE__ */ new MobXGlobals();
  }
}();
function addObserver(observable2, node) {
  observable2.observers_.add(node);
  if (observable2.lowestObserverState_ > node.dependenciesState_) {
    observable2.lowestObserverState_ = node.dependenciesState_;
  }
}
function removeObserver(observable2, node) {
  observable2.observers_["delete"](node);
  if (observable2.observers_.size === 0) {
    queueForUnobservation(observable2);
  }
}
function queueForUnobservation(observable2) {
  if (observable2.isPendingUnobservation === false) {
    observable2.isPendingUnobservation = true;
    globalState.pendingUnobservations.push(observable2);
  }
}
function startBatch() {
  globalState.inBatch++;
}
function endBatch() {
  if (--globalState.inBatch === 0) {
    runReactions();
    var list = globalState.pendingUnobservations;
    for (var i2 = 0; i2 < list.length; i2++) {
      var observable2 = list[i2];
      observable2.isPendingUnobservation = false;
      if (observable2.observers_.size === 0) {
        if (observable2.isBeingObserved) {
          observable2.isBeingObserved = false;
          observable2.onBUO();
        }
        if (observable2 instanceof ComputedValue) {
          observable2.suspend_();
        }
      }
    }
    globalState.pendingUnobservations = [];
  }
}
function reportObserved(observable2) {
  checkIfStateReadsAreAllowed(observable2);
  var derivation = globalState.trackingDerivation;
  if (derivation !== null) {
    if (derivation.runId_ !== observable2.lastAccessedBy_) {
      observable2.lastAccessedBy_ = derivation.runId_;
      derivation.newObserving_[derivation.unboundDepsCount_++] = observable2;
      if (!observable2.isBeingObserved && globalState.trackingContext) {
        observable2.isBeingObserved = true;
        observable2.onBO();
      }
    }
    return observable2.isBeingObserved;
  } else if (observable2.observers_.size === 0 && globalState.inBatch > 0) {
    queueForUnobservation(observable2);
  }
  return false;
}
function propagateChanged(observable2) {
  if (observable2.lowestObserverState_ === IDerivationState_.STALE_) {
    return;
  }
  observable2.lowestObserverState_ = IDerivationState_.STALE_;
  observable2.observers_.forEach(function(d2) {
    if (d2.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      if (process.env.NODE_ENV !== "production" && d2.isTracing_ !== TraceMode.NONE) {
        logTraceInfo(d2, observable2);
      }
      d2.onBecomeStale_();
    }
    d2.dependenciesState_ = IDerivationState_.STALE_;
  });
}
function propagateChangeConfirmed(observable2) {
  if (observable2.lowestObserverState_ === IDerivationState_.STALE_) {
    return;
  }
  observable2.lowestObserverState_ = IDerivationState_.STALE_;
  observable2.observers_.forEach(function(d2) {
    if (d2.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {
      d2.dependenciesState_ = IDerivationState_.STALE_;
      if (process.env.NODE_ENV !== "production" && d2.isTracing_ !== TraceMode.NONE) {
        logTraceInfo(d2, observable2);
      }
    } else if (d2.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      observable2.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    }
  });
}
function propagateMaybeChanged(observable2) {
  if (observable2.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {
    return;
  }
  observable2.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_;
  observable2.observers_.forEach(function(d2) {
    if (d2.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      d2.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_;
      d2.onBecomeStale_();
    }
  });
}
function logTraceInfo(derivation, observable2) {
  console.log("[mobx.trace] '" + derivation.name_ + "' is invalidated due to a change in: '" + observable2.name_ + "'");
  if (derivation.isTracing_ === TraceMode.BREAK) {
    var lines = [];
    printDepTree(getDependencyTree(derivation), lines, 1);
    new Function("debugger;\n/*\nTracing '" + derivation.name_ + "'\n\nYou are entering this break point because derivation '" + derivation.name_ + "' is being traced and '" + observable2.name_ + "' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\//g, "/") : "") + "\n\nThe dependencies for this derivation are:\n\n" + lines.join("\n") + "\n*/\n    ")();
  }
}
function printDepTree(tree, lines, depth) {
  if (lines.length >= 1e3) {
    lines.push("(and many more)");
    return;
  }
  lines.push("" + "	".repeat(depth - 1) + tree.name);
  if (tree.dependencies) {
    tree.dependencies.forEach(function(child) {
      return printDepTree(child, lines, depth + 1);
    });
  }
}
var Reaction = /* @__PURE__ */ function() {
  function Reaction2(name_, onInvalidate_, errorHandler_, requiresObservable_) {
    if (name_ === void 0) {
      name_ = process.env.NODE_ENV !== "production" ? "Reaction@" + getNextId() : "Reaction";
    }
    this.name_ = void 0;
    this.onInvalidate_ = void 0;
    this.errorHandler_ = void 0;
    this.requiresObservable_ = void 0;
    this.observing_ = [];
    this.newObserving_ = [];
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.runId_ = 0;
    this.unboundDepsCount_ = 0;
    this.flags_ = 0;
    this.isTracing_ = TraceMode.NONE;
    this.name_ = name_;
    this.onInvalidate_ = onInvalidate_;
    this.errorHandler_ = errorHandler_;
    this.requiresObservable_ = requiresObservable_;
  }
  var _proto = Reaction2.prototype;
  _proto.onBecomeStale_ = function onBecomeStale_() {
    this.schedule_();
  };
  _proto.schedule_ = function schedule_() {
    if (!this.isScheduled) {
      this.isScheduled = true;
      globalState.pendingReactions.push(this);
      runReactions();
    }
  };
  _proto.runReaction_ = function runReaction_() {
    if (!this.isDisposed) {
      startBatch();
      this.isScheduled = false;
      var prev = globalState.trackingContext;
      globalState.trackingContext = this;
      if (shouldCompute(this)) {
        this.isTrackPending = true;
        try {
          this.onInvalidate_();
          if (process.env.NODE_ENV !== "production" && this.isTrackPending && isSpyEnabled()) {
            spyReport({
              name: this.name_,
              type: "scheduled-reaction"
            });
          }
        } catch (e2) {
          this.reportExceptionInDerivation_(e2);
        }
      }
      globalState.trackingContext = prev;
      endBatch();
    }
  };
  _proto.track = function track(fn) {
    if (this.isDisposed) {
      return;
    }
    startBatch();
    var notify = isSpyEnabled();
    var startTime;
    if (process.env.NODE_ENV !== "production" && notify) {
      startTime = Date.now();
      spyReportStart({
        name: this.name_,
        type: "reaction"
      });
    }
    this.isRunning = true;
    var prevReaction = globalState.trackingContext;
    globalState.trackingContext = this;
    var result = trackDerivedFunction(this, fn, void 0);
    globalState.trackingContext = prevReaction;
    this.isRunning = false;
    this.isTrackPending = false;
    if (this.isDisposed) {
      clearObserving(this);
    }
    if (isCaughtException(result)) {
      this.reportExceptionInDerivation_(result.cause);
    }
    if (process.env.NODE_ENV !== "production" && notify) {
      spyReportEnd({
        time: Date.now() - startTime
      });
    }
    endBatch();
  };
  _proto.reportExceptionInDerivation_ = function reportExceptionInDerivation_(error) {
    var _this = this;
    if (this.errorHandler_) {
      this.errorHandler_(error, this);
      return;
    }
    if (globalState.disableErrorBoundaries) {
      throw error;
    }
    var message = process.env.NODE_ENV !== "production" ? "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this + "'" : "[mobx] uncaught error in '" + this + "'";
    if (!globalState.suppressReactionErrors) {
      console.error(message, error);
    } else if (process.env.NODE_ENV !== "production") {
      console.warn("[mobx] (error in reaction '" + this.name_ + "' suppressed, fix error of causing action below)");
    }
    if (process.env.NODE_ENV !== "production" && isSpyEnabled()) {
      spyReport({
        type: "error",
        name: this.name_,
        message,
        error: "" + error
      });
    }
    globalState.globalReactionErrorHandlers.forEach(function(f2) {
      return f2(error, _this);
    });
  };
  _proto.dispose = function dispose() {
    if (!this.isDisposed) {
      this.isDisposed = true;
      if (!this.isRunning) {
        startBatch();
        clearObserving(this);
        endBatch();
      }
    }
  };
  _proto.getDisposer_ = function getDisposer_(abortSignal) {
    var _this2 = this;
    var dispose = function dispose2() {
      _this2.dispose();
      abortSignal == null || abortSignal.removeEventListener == null || abortSignal.removeEventListener("abort", dispose2);
    };
    abortSignal == null || abortSignal.addEventListener == null || abortSignal.addEventListener("abort", dispose);
    dispose[$mobx] = this;
    return dispose;
  };
  _proto.toString = function toString3() {
    return "Reaction[" + this.name_ + "]";
  };
  _proto.trace = function trace$1(enterBreakPoint) {
    if (enterBreakPoint === void 0) {
      enterBreakPoint = false;
    }
    trace(this, enterBreakPoint);
  };
  return _createClass(Reaction2, [{
    key: "isDisposed",
    get: function get3() {
      return getFlag(this.flags_, Reaction2.isDisposedMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction2.isDisposedMask_, newValue);
    }
  }, {
    key: "isScheduled",
    get: function get3() {
      return getFlag(this.flags_, Reaction2.isScheduledMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction2.isScheduledMask_, newValue);
    }
  }, {
    key: "isTrackPending",
    get: function get3() {
      return getFlag(this.flags_, Reaction2.isTrackPendingMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction2.isTrackPendingMask_, newValue);
    }
  }, {
    key: "isRunning",
    get: function get3() {
      return getFlag(this.flags_, Reaction2.isRunningMask_);
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction2.isRunningMask_, newValue);
    }
  }, {
    key: "diffValue",
    get: function get3() {
      return getFlag(this.flags_, Reaction2.diffValueMask_) ? 1 : 0;
    },
    set: function set4(newValue) {
      this.flags_ = setFlag(this.flags_, Reaction2.diffValueMask_, newValue === 1 ? true : false);
    }
  }]);
}();
Reaction.isDisposedMask_ = 1;
Reaction.isScheduledMask_ = 2;
Reaction.isTrackPendingMask_ = 4;
Reaction.isRunningMask_ = 8;
Reaction.diffValueMask_ = 16;
var MAX_REACTION_ITERATIONS = 100;
var reactionScheduler = function reactionScheduler2(f2) {
  return f2();
};
function runReactions() {
  if (globalState.inBatch > 0 || globalState.isRunningReactions) {
    return;
  }
  reactionScheduler(runReactionsHelper);
}
function runReactionsHelper() {
  globalState.isRunningReactions = true;
  var allReactions = globalState.pendingReactions;
  var iterations = 0;
  while (allReactions.length > 0) {
    if (++iterations === MAX_REACTION_ITERATIONS) {
      console.error(process.env.NODE_ENV !== "production" ? "Reaction doesn't converge to a stable state after " + MAX_REACTION_ITERATIONS + " iterations." + (" Probably there is a cycle in the reactive function: " + allReactions[0]) : "[mobx] cycle in reaction: " + allReactions[0]);
      allReactions.splice(0);
    }
    var remainingReactions = allReactions.splice(0);
    for (var i2 = 0, l2 = remainingReactions.length; i2 < l2; i2++) {
      remainingReactions[i2].runReaction_();
    }
  }
  globalState.isRunningReactions = false;
}
var isReaction = /* @__PURE__ */ createInstanceofPredicate("Reaction", Reaction);
function isSpyEnabled() {
  return process.env.NODE_ENV !== "production" && !!globalState.spyListeners.length;
}
function spyReport(event) {
  if (!(process.env.NODE_ENV !== "production")) {
    return;
  }
  if (!globalState.spyListeners.length) {
    return;
  }
  var listeners = globalState.spyListeners;
  for (var i2 = 0, l2 = listeners.length; i2 < l2; i2++) {
    listeners[i2](event);
  }
}
function spyReportStart(event) {
  if (!(process.env.NODE_ENV !== "production")) {
    return;
  }
  var change = _extends({}, event, {
    spyReportStart: true
  });
  spyReport(change);
}
var END_EVENT = {
  type: "report-end",
  spyReportEnd: true
};
function spyReportEnd(change) {
  if (!(process.env.NODE_ENV !== "production")) {
    return;
  }
  if (change) {
    spyReport(_extends({}, change, {
      type: "report-end",
      spyReportEnd: true
    }));
  } else {
    spyReport(END_EVENT);
  }
}
function spy(listener) {
  if (!(process.env.NODE_ENV !== "production")) {
    console.warn("[mobx.spy] Is a no-op in production builds");
    return function() {
    };
  } else {
    globalState.spyListeners.push(listener);
    return once(function() {
      globalState.spyListeners = globalState.spyListeners.filter(function(l2) {
        return l2 !== listener;
      });
    });
  }
}
var ACTION = "action";
var ACTION_BOUND = "action.bound";
var AUTOACTION = "autoAction";
var AUTOACTION_BOUND = "autoAction.bound";
var DEFAULT_ACTION_NAME = "<unnamed action>";
var actionAnnotation = /* @__PURE__ */ createActionAnnotation(ACTION);
var actionBoundAnnotation = /* @__PURE__ */ createActionAnnotation(ACTION_BOUND, {
  bound: true
});
var autoActionAnnotation = /* @__PURE__ */ createActionAnnotation(AUTOACTION, {
  autoAction: true
});
var autoActionBoundAnnotation = /* @__PURE__ */ createActionAnnotation(AUTOACTION_BOUND, {
  autoAction: true,
  bound: true
});
function createActionFactory(autoAction2) {
  var res = function action2(arg1, arg2) {
    if (isFunction(arg1)) {
      return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction2);
    }
    if (isFunction(arg2)) {
      return createAction(arg1, arg2, autoAction2);
    }
    if (is20223Decorator(arg2)) {
      return (autoAction2 ? autoActionAnnotation : actionAnnotation).decorate_20223_(arg1, arg2);
    }
    if (isStringish(arg2)) {
      return storeAnnotation(arg1, arg2, autoAction2 ? autoActionAnnotation : actionAnnotation);
    }
    if (isStringish(arg1)) {
      return createDecoratorAnnotation(createActionAnnotation(autoAction2 ? AUTOACTION : ACTION, {
        name: arg1,
        autoAction: autoAction2
      }));
    }
    if (process.env.NODE_ENV !== "production") {
      die("Invalid arguments for `action`");
    }
  };
  return res;
}
var action = /* @__PURE__ */ createActionFactory(false);
Object.assign(action, actionAnnotation);
var autoAction = /* @__PURE__ */ createActionFactory(true);
Object.assign(autoAction, autoActionAnnotation);
action.bound = /* @__PURE__ */ createDecoratorAnnotation(actionBoundAnnotation);
autoAction.bound = /* @__PURE__ */ createDecoratorAnnotation(autoActionBoundAnnotation);
function isAction(thing) {
  return isFunction(thing) && thing.isMobxAction === true;
}
function autorun(view, opts) {
  var _opts$name, _opts, _opts2, _opts3;
  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }
  if (process.env.NODE_ENV !== "production") {
    if (!isFunction(view)) {
      die("Autorun expects a function as first argument");
    }
    if (isAction(view)) {
      die("Autorun does not accept actions since actions are untrackable");
    }
  }
  var name = (_opts$name = (_opts = opts) == null ? void 0 : _opts.name) != null ? _opts$name : process.env.NODE_ENV !== "production" ? view.name || "Autorun@" + getNextId() : "Autorun";
  var runSync = !opts.scheduler && !opts.delay;
  var reaction;
  if (runSync) {
    reaction = new Reaction(name, function() {
      this.track(reactionRunner);
    }, opts.onError, opts.requiresObservable);
  } else {
    var scheduler = createSchedulerFromOptions(opts);
    var isScheduled = false;
    reaction = new Reaction(name, function() {
      if (!isScheduled) {
        isScheduled = true;
        scheduler(function() {
          isScheduled = false;
          if (!reaction.isDisposed) {
            reaction.track(reactionRunner);
          }
        });
      }
    }, opts.onError, opts.requiresObservable);
  }
  function reactionRunner() {
    view(reaction);
  }
  if (!((_opts2 = opts) != null && (_opts2 = _opts2.signal) != null && _opts2.aborted)) {
    reaction.schedule_();
  }
  return reaction.getDisposer_((_opts3 = opts) == null ? void 0 : _opts3.signal);
}
var run = function run2(f2) {
  return f2();
};
function createSchedulerFromOptions(opts) {
  return opts.scheduler ? opts.scheduler : opts.delay ? function(f2) {
    return setTimeout(f2, opts.delay);
  } : run;
}
var ON_BECOME_OBSERVED = "onBO";
var ON_BECOME_UNOBSERVED = "onBUO";
function onBecomeObserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);
}
function onBecomeUnobserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);
}
function interceptHook(hook, thing, arg2, arg3) {
  var atom = typeof arg3 === "function" ? getAtom(thing, arg2) : getAtom(thing);
  var cb = isFunction(arg3) ? arg3 : arg2;
  var listenersKey = hook + "L";
  if (atom[listenersKey]) {
    atom[listenersKey].add(cb);
  } else {
    atom[listenersKey] = /* @__PURE__ */ new Set([cb]);
  }
  return function() {
    var hookListeners = atom[listenersKey];
    if (hookListeners) {
      hookListeners["delete"](cb);
      if (hookListeners.size === 0) {
        delete atom[listenersKey];
      }
    }
  };
}
function extendObservable(target, properties, annotations, options) {
  if (process.env.NODE_ENV !== "production") {
    if (arguments.length > 4) {
      die("'extendObservable' expected 2-4 arguments");
    }
    if (typeof target !== "object") {
      die("'extendObservable' expects an object as first argument");
    }
    if (isObservableMap(target)) {
      die("'extendObservable' should not be used on maps, use map.merge instead");
    }
    if (!isPlainObject(properties)) {
      die("'extendObservable' only accepts plain objects as second argument");
    }
    if (isObservable(properties) || isObservable(annotations)) {
      die("Extending an object with another observable (object) is not supported");
    }
  }
  var descriptors = getOwnPropertyDescriptors(properties);
  initObservable(function() {
    var adm = asObservableObject(target, options)[$mobx];
    ownKeys(descriptors).forEach(function(key) {
      adm.extend_(
        key,
        descriptors[key],
        // must pass "undefined" for { key: undefined }
        !annotations ? true : key in annotations ? annotations[key] : true
      );
    });
  });
  return target;
}
function getDependencyTree(thing, property) {
  return nodeToDependencyTree(getAtom(thing, property));
}
function nodeToDependencyTree(node) {
  var result = {
    name: node.name_
  };
  if (node.observing_ && node.observing_.length > 0) {
    result.dependencies = unique(node.observing_).map(nodeToDependencyTree);
  }
  return result;
}
function unique(list) {
  return Array.from(new Set(list));
}
var generatorId = 0;
function FlowCancellationError() {
  this.message = "FLOW_CANCELLED";
}
FlowCancellationError.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var flowAnnotation = /* @__PURE__ */ createFlowAnnotation("flow");
var flowBoundAnnotation = /* @__PURE__ */ createFlowAnnotation("flow.bound", {
  bound: true
});
var flow = /* @__PURE__ */ Object.assign(function flow2(arg1, arg2) {
  if (is20223Decorator(arg2)) {
    return flowAnnotation.decorate_20223_(arg1, arg2);
  }
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, flowAnnotation);
  }
  if (process.env.NODE_ENV !== "production" && arguments.length !== 1) {
    die("Flow expects single argument with generator function");
  }
  var generator = arg1;
  var name = generator.name || "<unnamed flow>";
  var res = function res2() {
    var ctx = this;
    var args = arguments;
    var runId = ++generatorId;
    var gen = action(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
    var rejector;
    var pendingPromise = void 0;
    var promise = new Promise(function(resolve, reject) {
      var stepId = 0;
      rejector = reject;
      function onFulfilled(res3) {
        pendingPromise = void 0;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res3);
        } catch (e2) {
          return reject(e2);
        }
        next(ret);
      }
      function onRejected(err) {
        pendingPromise = void 0;
        var ret;
        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen["throw"]).call(gen, err);
        } catch (e2) {
          return reject(e2);
        }
        next(ret);
      }
      function next(ret) {
        if (isFunction(ret == null ? void 0 : ret.then)) {
          ret.then(next, reject);
          return;
        }
        if (ret.done) {
          return resolve(ret.value);
        }
        pendingPromise = Promise.resolve(ret.value);
        return pendingPromise.then(onFulfilled, onRejected);
      }
      onFulfilled(void 0);
    });
    promise.cancel = action(name + " - runid: " + runId + " - cancel", function() {
      try {
        if (pendingPromise) {
          cancelPromise(pendingPromise);
        }
        var _res = gen["return"](void 0);
        var yieldedPromise = Promise.resolve(_res.value);
        yieldedPromise.then(noop, noop);
        cancelPromise(yieldedPromise);
        rejector(new FlowCancellationError());
      } catch (e2) {
        rejector(e2);
      }
    });
    return promise;
  };
  res.isMobXFlow = true;
  return res;
}, flowAnnotation);
flow.bound = /* @__PURE__ */ createDecoratorAnnotation(flowBoundAnnotation);
function cancelPromise(promise) {
  if (isFunction(promise.cancel)) {
    promise.cancel();
  }
}
function isFlow(fn) {
  return (fn == null ? void 0 : fn.isMobXFlow) === true;
}
function _isObservable(value, property) {
  if (!value) {
    return false;
  }
  if (property !== void 0) {
    if (process.env.NODE_ENV !== "production" && (isObservableMap(value) || isObservableArray(value))) {
      return die("isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.");
    }
    if (isObservableObject(value)) {
      return value[$mobx].values_.has(property);
    }
    return false;
  }
  return isObservableObject(value) || !!value[$mobx] || isAtom(value) || isReaction(value) || isComputedValue(value);
}
function isObservable(value) {
  if (process.env.NODE_ENV !== "production" && arguments.length !== 1) {
    die("isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property");
  }
  return _isObservable(value);
}
function trace() {
  if (!(process.env.NODE_ENV !== "production")) {
    return;
  }
  var enterBreakPoint = false;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (typeof args[args.length - 1] === "boolean") {
    enterBreakPoint = args.pop();
  }
  var derivation = getAtomFromArgs(args);
  if (!derivation) {
    return die("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");
  }
  if (derivation.isTracing_ === TraceMode.NONE) {
    console.log("[mobx.trace] '" + derivation.name_ + "' tracing enabled");
  }
  derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;
}
function getAtomFromArgs(args) {
  switch (args.length) {
    case 0:
      return globalState.trackingDerivation;
    case 1:
      return getAtom(args[0]);
    case 2:
      return getAtom(args[0], args[1]);
  }
}
function transaction(action2, thisArg) {
  if (thisArg === void 0) {
    thisArg = void 0;
  }
  startBatch();
  try {
    return action2.apply(thisArg);
  } finally {
    endBatch();
  }
}
function getAdm(target) {
  return target[$mobx];
}
var objectProxyTraps = {
  has: function has(target, name) {
    if (process.env.NODE_ENV !== "production" && globalState.trackingDerivation) {
      warnAboutProxyRequirement("detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.");
    }
    return getAdm(target).has_(name);
  },
  get: function get(target, name) {
    return getAdm(target).get_(name);
  },
  set: function set2(target, name, value) {
    var _getAdm$set_;
    if (!isStringish(name)) {
      return false;
    }
    if (process.env.NODE_ENV !== "production" && !getAdm(target).values_.has(name)) {
      warnAboutProxyRequirement("add a new observable property through direct assignment. Use 'set' from 'mobx' instead.");
    }
    return (_getAdm$set_ = getAdm(target).set_(name, value, true)) != null ? _getAdm$set_ : true;
  },
  deleteProperty: function deleteProperty(target, name) {
    var _getAdm$delete_;
    if (process.env.NODE_ENV !== "production") {
      warnAboutProxyRequirement("delete properties from an observable object. Use 'remove' from 'mobx' instead.");
    }
    if (!isStringish(name)) {
      return false;
    }
    return (_getAdm$delete_ = getAdm(target).delete_(name, true)) != null ? _getAdm$delete_ : true;
  },
  defineProperty: function defineProperty2(target, name, descriptor) {
    var _getAdm$definePropert;
    if (process.env.NODE_ENV !== "production") {
      warnAboutProxyRequirement("define property on an observable object. Use 'defineProperty' from 'mobx' instead.");
    }
    return (_getAdm$definePropert = getAdm(target).defineProperty_(name, descriptor)) != null ? _getAdm$definePropert : true;
  },
  ownKeys: function ownKeys2(target) {
    if (process.env.NODE_ENV !== "production" && globalState.trackingDerivation) {
      warnAboutProxyRequirement("iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.");
    }
    return getAdm(target).ownKeys_();
  },
  preventExtensions: function preventExtensions(target) {
    die(13);
  }
};
function asDynamicObservableObject(target, options) {
  var _target$$mobx, _target$$mobx$proxy_;
  assertProxies();
  target = asObservableObject(target, options);
  return (_target$$mobx$proxy_ = (_target$$mobx = target[$mobx]).proxy_) != null ? _target$$mobx$proxy_ : _target$$mobx.proxy_ = new Proxy(target, objectProxyTraps);
}
function hasInterceptors(interceptable) {
  return interceptable.interceptors_ !== void 0 && interceptable.interceptors_.length > 0;
}
function registerInterceptor(interceptable, handler) {
  var interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = []);
  interceptors.push(handler);
  return once(function() {
    var idx = interceptors.indexOf(handler);
    if (idx !== -1) {
      interceptors.splice(idx, 1);
    }
  });
}
function interceptChange(interceptable, change) {
  var prevU = untrackedStart();
  try {
    var interceptors = [].concat(interceptable.interceptors_ || []);
    for (var i2 = 0, l2 = interceptors.length; i2 < l2; i2++) {
      change = interceptors[i2](change);
      if (change && !change.type) {
        die(14);
      }
      if (!change) {
        break;
      }
    }
    return change;
  } finally {
    untrackedEnd(prevU);
  }
}
function hasListeners(listenable) {
  return listenable.changeListeners_ !== void 0 && listenable.changeListeners_.length > 0;
}
function registerListener(listenable, handler) {
  var listeners = listenable.changeListeners_ || (listenable.changeListeners_ = []);
  listeners.push(handler);
  return once(function() {
    var idx = listeners.indexOf(handler);
    if (idx !== -1) {
      listeners.splice(idx, 1);
    }
  });
}
function notifyListeners(listenable, change) {
  var prevU = untrackedStart();
  var listeners = listenable.changeListeners_;
  if (!listeners) {
    return;
  }
  listeners = listeners.slice();
  for (var i2 = 0, l2 = listeners.length; i2 < l2; i2++) {
    listeners[i2](change);
  }
  untrackedEnd(prevU);
}
function makeObservable(target, annotations, options) {
  initObservable(function() {
    var _annotations;
    var adm = asObservableObject(target, options)[$mobx];
    if (process.env.NODE_ENV !== "production" && annotations && target[storedAnnotationsSymbol]) {
      die("makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.");
    }
    (_annotations = annotations) != null ? _annotations : annotations = collectStoredAnnotations(target);
    ownKeys(annotations).forEach(function(key) {
      return adm.make_(key, annotations[key]);
    });
  });
  return target;
}
var SPLICE = "splice";
var UPDATE = "update";
var MAX_SPLICE_SIZE = 1e4;
var arrayTraps = {
  get: function get2(target, name) {
    var adm = target[$mobx];
    if (name === $mobx) {
      return adm;
    }
    if (name === "length") {
      return adm.getArrayLength_();
    }
    if (typeof name === "string" && !isNaN(name)) {
      return adm.get_(parseInt(name));
    }
    if (hasProp(arrayExtensions, name)) {
      return arrayExtensions[name];
    }
    return target[name];
  },
  set: function set3(target, name, value) {
    var adm = target[$mobx];
    if (name === "length") {
      adm.setArrayLength_(value);
    }
    if (typeof name === "symbol" || isNaN(name)) {
      target[name] = value;
    } else {
      adm.set_(parseInt(name), value);
    }
    return true;
  },
  preventExtensions: function preventExtensions2() {
    die(15);
  }
};
var ObservableArrayAdministration = /* @__PURE__ */ function() {
  function ObservableArrayAdministration2(name, enhancer, owned_, legacyMode_) {
    if (name === void 0) {
      name = process.env.NODE_ENV !== "production" ? "ObservableArray@" + getNextId() : "ObservableArray";
    }
    this.owned_ = void 0;
    this.legacyMode_ = void 0;
    this.atom_ = void 0;
    this.values_ = [];
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.enhancer_ = void 0;
    this.dehancer = void 0;
    this.proxy_ = void 0;
    this.lastKnownLength_ = 0;
    this.owned_ = owned_;
    this.legacyMode_ = legacyMode_;
    this.atom_ = new Atom(name);
    this.enhancer_ = function(newV, oldV) {
      return enhancer(newV, oldV, process.env.NODE_ENV !== "production" ? name + "[..]" : "ObservableArray[..]");
    };
  }
  var _proto = ObservableArrayAdministration2.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.dehanceValues_ = function dehanceValues_(values) {
    if (this.dehancer !== void 0 && values.length > 0) {
      return values.map(this.dehancer);
    }
    return values;
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }
    if (fireImmediately) {
      listener({
        observableKind: "array",
        object: this.proxy_,
        debugObjectName: this.atom_.name_,
        type: "splice",
        index: 0,
        added: this.values_.slice(),
        addedCount: this.values_.length,
        removed: [],
        removedCount: 0
      });
    }
    return registerListener(this, listener);
  };
  _proto.getArrayLength_ = function getArrayLength_() {
    this.atom_.reportObserved();
    return this.values_.length;
  };
  _proto.setArrayLength_ = function setArrayLength_(newLength) {
    if (typeof newLength !== "number" || isNaN(newLength) || newLength < 0) {
      die("Out of range: " + newLength);
    }
    var currentLength = this.values_.length;
    if (newLength === currentLength) {
      return;
    } else if (newLength > currentLength) {
      var newItems = new Array(newLength - currentLength);
      for (var i2 = 0; i2 < newLength - currentLength; i2++) {
        newItems[i2] = void 0;
      }
      this.spliceWithArray_(currentLength, 0, newItems);
    } else {
      this.spliceWithArray_(newLength, currentLength - newLength);
    }
  };
  _proto.updateArrayLength_ = function updateArrayLength_(oldLength, delta) {
    if (oldLength !== this.lastKnownLength_) {
      die(16);
    }
    this.lastKnownLength_ += delta;
    if (this.legacyMode_ && delta > 0) {
      reserveArrayBuffer(oldLength + delta + 1);
    }
  };
  _proto.spliceWithArray_ = function spliceWithArray_(index, deleteCount, newItems) {
    var _this = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    var length = this.values_.length;
    if (index === void 0) {
      index = 0;
    } else if (index > length) {
      index = length;
    } else if (index < 0) {
      index = Math.max(0, length + index);
    }
    if (arguments.length === 1) {
      deleteCount = length - index;
    } else if (deleteCount === void 0 || deleteCount === null) {
      deleteCount = 0;
    } else {
      deleteCount = Math.max(0, Math.min(deleteCount, length - index));
    }
    if (newItems === void 0) {
      newItems = EMPTY_ARRAY;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_,
        type: SPLICE,
        index,
        removedCount: deleteCount,
        added: newItems
      });
      if (!change) {
        return EMPTY_ARRAY;
      }
      deleteCount = change.removedCount;
      newItems = change.added;
    }
    newItems = newItems.length === 0 ? newItems : newItems.map(function(v2) {
      return _this.enhancer_(v2, void 0);
    });
    if (this.legacyMode_ || process.env.NODE_ENV !== "production") {
      var lengthDelta = newItems.length - deleteCount;
      this.updateArrayLength_(length, lengthDelta);
    }
    var res = this.spliceItemsIntoValues_(index, deleteCount, newItems);
    if (deleteCount !== 0 || newItems.length !== 0) {
      this.notifyArraySplice_(index, newItems, res);
    }
    return this.dehanceValues_(res);
  };
  _proto.spliceItemsIntoValues_ = function spliceItemsIntoValues_(index, deleteCount, newItems) {
    if (newItems.length < MAX_SPLICE_SIZE) {
      var _this$values_;
      return (_this$values_ = this.values_).splice.apply(_this$values_, [index, deleteCount].concat(newItems));
    } else {
      var res = this.values_.slice(index, index + deleteCount);
      var oldItems = this.values_.slice(index + deleteCount);
      this.values_.length += newItems.length - deleteCount;
      for (var i2 = 0; i2 < newItems.length; i2++) {
        this.values_[index + i2] = newItems[i2];
      }
      for (var _i = 0; _i < oldItems.length; _i++) {
        this.values_[index + newItems.length + _i] = oldItems[_i];
      }
      return res;
    }
  };
  _proto.notifyArrayChildUpdate_ = function notifyArrayChildUpdate_(index, newValue, oldValue) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      type: UPDATE,
      debugObjectName: this.atom_.name_,
      index,
      newValue,
      oldValue
    } : null;
    if (process.env.NODE_ENV !== "production" && notifySpy) {
      spyReportStart(change);
    }
    this.atom_.reportChanged();
    if (notify) {
      notifyListeners(this, change);
    }
    if (process.env.NODE_ENV !== "production" && notifySpy) {
      spyReportEnd();
    }
  };
  _proto.notifyArraySplice_ = function notifyArraySplice_(index, added, removed) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      debugObjectName: this.atom_.name_,
      type: SPLICE,
      index,
      removed,
      added,
      removedCount: removed.length,
      addedCount: added.length
    } : null;
    if (process.env.NODE_ENV !== "production" && notifySpy) {
      spyReportStart(change);
    }
    this.atom_.reportChanged();
    if (notify) {
      notifyListeners(this, change);
    }
    if (process.env.NODE_ENV !== "production" && notifySpy) {
      spyReportEnd();
    }
  };
  _proto.get_ = function get_(index) {
    if (this.legacyMode_ && index >= this.values_.length) {
      console.warn(process.env.NODE_ENV !== "production" ? "[mobx.array] Attempt to read an array index (" + index + ") that is out of bounds (" + this.values_.length + "). Please check length first. Out of bound indices will not be tracked by MobX" : "[mobx] Out of bounds read: " + index);
      return void 0;
    }
    this.atom_.reportObserved();
    return this.dehanceValue_(this.values_[index]);
  };
  _proto.set_ = function set_(index, newValue) {
    var values = this.values_;
    if (this.legacyMode_ && index > values.length) {
      die(17, index, values.length);
    }
    if (index < values.length) {
      checkIfStateModificationsAreAllowed(this.atom_);
      var oldValue = values[index];
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: UPDATE,
          object: this.proxy_,
          // since "this" is the real array we need to pass its proxy
          index,
          newValue
        });
        if (!change) {
          return;
        }
        newValue = change.newValue;
      }
      newValue = this.enhancer_(newValue, oldValue);
      var changed = newValue !== oldValue;
      if (changed) {
        values[index] = newValue;
        this.notifyArrayChildUpdate_(index, newValue, oldValue);
      }
    } else {
      var newItems = new Array(index + 1 - values.length);
      for (var i2 = 0; i2 < newItems.length - 1; i2++) {
        newItems[i2] = void 0;
      }
      newItems[newItems.length - 1] = newValue;
      this.spliceWithArray_(values.length, 0, newItems);
    }
  };
  return ObservableArrayAdministration2;
}();
function createObservableArray(initialValues, enhancer, name, owned) {
  if (name === void 0) {
    name = process.env.NODE_ENV !== "production" ? "ObservableArray@" + getNextId() : "ObservableArray";
  }
  if (owned === void 0) {
    owned = false;
  }
  assertProxies();
  return initObservable(function() {
    var adm = new ObservableArrayAdministration(name, enhancer, owned, false);
    addHiddenFinalProp(adm.values_, $mobx, adm);
    var proxy = new Proxy(adm.values_, arrayTraps);
    adm.proxy_ = proxy;
    if (initialValues && initialValues.length) {
      adm.spliceWithArray_(0, 0, initialValues);
    }
    return proxy;
  });
}
var arrayExtensions = {
  clear: function clear() {
    return this.splice(0);
  },
  replace: function replace(newItems) {
    var adm = this[$mobx];
    return adm.spliceWithArray_(0, adm.values_.length, newItems);
  },
  // Used by JSON.stringify
  toJSON: function toJSON() {
    return this.slice();
  },
  /*
   * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)
   * since these functions alter the inner structure of the array, the have side effects.
   * Because the have side effects, they should not be used in computed function,
   * and for that reason the do not call dependencyState.notifyObserved
   */
  splice: function splice(index, deleteCount) {
    for (var _len = arguments.length, newItems = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      newItems[_key - 2] = arguments[_key];
    }
    var adm = this[$mobx];
    switch (arguments.length) {
      case 0:
        return [];
      case 1:
        return adm.spliceWithArray_(index);
      case 2:
        return adm.spliceWithArray_(index, deleteCount);
    }
    return adm.spliceWithArray_(index, deleteCount, newItems);
  },
  spliceWithArray: function spliceWithArray(index, deleteCount, newItems) {
    return this[$mobx].spliceWithArray_(index, deleteCount, newItems);
  },
  push: function push() {
    var adm = this[$mobx];
    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      items[_key2] = arguments[_key2];
    }
    adm.spliceWithArray_(adm.values_.length, 0, items);
    return adm.values_.length;
  },
  pop: function pop() {
    return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];
  },
  shift: function shift() {
    return this.splice(0, 1)[0];
  },
  unshift: function unshift() {
    var adm = this[$mobx];
    for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      items[_key3] = arguments[_key3];
    }
    adm.spliceWithArray_(0, 0, items);
    return adm.values_.length;
  },
  reverse: function reverse() {
    if (globalState.trackingDerivation) {
      die(37, "reverse");
    }
    this.replace(this.slice().reverse());
    return this;
  },
  sort: function sort() {
    if (globalState.trackingDerivation) {
      die(37, "sort");
    }
    var copy = this.slice();
    copy.sort.apply(copy, arguments);
    this.replace(copy);
    return this;
  },
  remove: function remove(value) {
    var adm = this[$mobx];
    var idx = adm.dehanceValues_(adm.values_).indexOf(value);
    if (idx > -1) {
      this.splice(idx, 1);
      return true;
    }
    return false;
  }
};
addArrayExtension("at", simpleFunc);
addArrayExtension("concat", simpleFunc);
addArrayExtension("flat", simpleFunc);
addArrayExtension("includes", simpleFunc);
addArrayExtension("indexOf", simpleFunc);
addArrayExtension("join", simpleFunc);
addArrayExtension("lastIndexOf", simpleFunc);
addArrayExtension("slice", simpleFunc);
addArrayExtension("toString", simpleFunc);
addArrayExtension("toLocaleString", simpleFunc);
addArrayExtension("toSorted", simpleFunc);
addArrayExtension("toSpliced", simpleFunc);
addArrayExtension("with", simpleFunc);
addArrayExtension("every", mapLikeFunc);
addArrayExtension("filter", mapLikeFunc);
addArrayExtension("find", mapLikeFunc);
addArrayExtension("findIndex", mapLikeFunc);
addArrayExtension("findLast", mapLikeFunc);
addArrayExtension("findLastIndex", mapLikeFunc);
addArrayExtension("flatMap", mapLikeFunc);
addArrayExtension("forEach", mapLikeFunc);
addArrayExtension("map", mapLikeFunc);
addArrayExtension("some", mapLikeFunc);
addArrayExtension("toReversed", mapLikeFunc);
addArrayExtension("reduce", reduceLikeFunc);
addArrayExtension("reduceRight", reduceLikeFunc);
function addArrayExtension(funcName, funcFactory) {
  if (typeof Array.prototype[funcName] === "function") {
    arrayExtensions[funcName] = funcFactory(funcName);
  }
}
function simpleFunc(funcName) {
  return function() {
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
function mapLikeFunc(funcName) {
  return function(callback, thisArg) {
    var _this2 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName](function(element, index) {
      return callback.call(thisArg, element, index, _this2);
    });
  };
}
function reduceLikeFunc(funcName) {
  return function() {
    var _this3 = this;
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    var callback = arguments[0];
    arguments[0] = function(accumulator, currentValue, index) {
      return callback(accumulator, currentValue, index, _this3);
    };
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}
var isObservableArrayAdministration = /* @__PURE__ */ createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);
function isObservableArray(thing) {
  return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);
}
var ObservableMapMarker = {};
var ADD = "add";
var DELETE = "delete";
var ObservableMap = /* @__PURE__ */ function() {
  function ObservableMap2(initialData, enhancer_, name_) {
    var _this = this;
    if (enhancer_ === void 0) {
      enhancer_ = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ = process.env.NODE_ENV !== "production" ? "ObservableMap@" + getNextId() : "ObservableMap";
    }
    this.enhancer_ = void 0;
    this.name_ = void 0;
    this[$mobx] = ObservableMapMarker;
    this.data_ = void 0;
    this.hasMap_ = void 0;
    this.keysAtom_ = void 0;
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = enhancer_;
    this.name_ = name_;
    if (!isFunction(Map)) {
      die(18);
    }
    initObservable(function() {
      _this.keysAtom_ = createAtom(process.env.NODE_ENV !== "production" ? _this.name_ + ".keys()" : "ObservableMap.keys()");
      _this.data_ = /* @__PURE__ */ new Map();
      _this.hasMap_ = /* @__PURE__ */ new Map();
      if (initialData) {
        _this.merge(initialData);
      }
    });
  }
  var _proto = ObservableMap2.prototype;
  _proto.has_ = function has_(key) {
    return this.data_.has(key);
  };
  _proto.has = function has2(key) {
    var _this2 = this;
    if (!globalState.trackingDerivation) {
      return this.has_(key);
    }
    var entry = this.hasMap_.get(key);
    if (!entry) {
      var newEntry = entry = new ObservableValue(this.has_(key), referenceEnhancer, process.env.NODE_ENV !== "production" ? this.name_ + "." + stringifyKey(key) + "?" : "ObservableMap.key?", false);
      this.hasMap_.set(key, newEntry);
      onBecomeUnobserved(newEntry, function() {
        return _this2.hasMap_["delete"](key);
      });
    }
    return entry.get();
  };
  _proto.set = function set4(key, value) {
    var hasKey = this.has_(key);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: hasKey ? UPDATE : ADD,
        object: this,
        newValue: value,
        name: key
      });
      if (!change) {
        return this;
      }
      value = change.newValue;
    }
    if (hasKey) {
      this.updateValue_(key, value);
    } else {
      this.addValue_(key, value);
    }
    return this;
  };
  _proto["delete"] = function _delete(key) {
    var _this3 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        name: key
      });
      if (!change) {
        return false;
      }
    }
    if (this.has_(key)) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: this.data_.get(key).value_,
        name: key
      } : null;
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportStart(_change);
      }
      transaction(function() {
        var _this3$hasMap_$get;
        _this3.keysAtom_.reportChanged();
        (_this3$hasMap_$get = _this3.hasMap_.get(key)) == null || _this3$hasMap_$get.setNewValue_(false);
        var observable2 = _this3.data_.get(key);
        observable2.setNewValue_(void 0);
        _this3.data_["delete"](key);
      });
      if (notify) {
        notifyListeners(this, _change);
      }
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportEnd();
      }
      return true;
    }
    return false;
  };
  _proto.updateValue_ = function updateValue_(key, newValue) {
    var observable2 = this.data_.get(key);
    newValue = observable2.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: UPDATE,
        object: this,
        oldValue: observable2.value_,
        name: key,
        newValue
      } : null;
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportStart(change);
      }
      observable2.setNewValue_(newValue);
      if (notify) {
        notifyListeners(this, change);
      }
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportEnd();
      }
    }
  };
  _proto.addValue_ = function addValue_(key, newValue) {
    var _this4 = this;
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    transaction(function() {
      var _this4$hasMap_$get;
      var observable2 = new ObservableValue(newValue, _this4.enhancer_, process.env.NODE_ENV !== "production" ? _this4.name_ + "." + stringifyKey(key) : "ObservableMap.key", false);
      _this4.data_.set(key, observable2);
      newValue = observable2.value_;
      (_this4$hasMap_$get = _this4.hasMap_.get(key)) == null || _this4$hasMap_$get.setNewValue_(true);
      _this4.keysAtom_.reportChanged();
    });
    var notifySpy = isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "map",
      debugObjectName: this.name_,
      type: ADD,
      object: this,
      name: key,
      newValue
    } : null;
    if (process.env.NODE_ENV !== "production" && notifySpy) {
      spyReportStart(change);
    }
    if (notify) {
      notifyListeners(this, change);
    }
    if (process.env.NODE_ENV !== "production" && notifySpy) {
      spyReportEnd();
    }
  };
  _proto.get = function get3(key) {
    if (this.has(key)) {
      return this.dehanceValue_(this.data_.get(key).get());
    }
    return this.dehanceValue_(void 0);
  };
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.keys = function keys() {
    this.keysAtom_.reportObserved();
    return this.data_.keys();
  };
  _proto.values = function values() {
    var self2 = this;
    var keys = this.keys();
    return makeIterableForMap({
      next: function next() {
        var _keys$next = keys.next(), done = _keys$next.done, value = _keys$next.value;
        return {
          done,
          value: done ? void 0 : self2.get(value)
        };
      }
    });
  };
  _proto.entries = function entries() {
    var self2 = this;
    var keys = this.keys();
    return makeIterableForMap({
      next: function next() {
        var _keys$next2 = keys.next(), done = _keys$next2.done, value = _keys$next2.value;
        return {
          done,
          value: done ? void 0 : [value, self2.get(value)]
        };
      }
    });
  };
  _proto[Symbol.iterator] = function() {
    return this.entries();
  };
  _proto.forEach = function forEach(callback, thisArg) {
    for (var _iterator = _createForOfIteratorHelperLoose(this), _step; !(_step = _iterator()).done; ) {
      var _step$value = _step.value, key = _step$value[0], value = _step$value[1];
      callback.call(thisArg, value, key, this);
    }
  };
  _proto.merge = function merge(other) {
    var _this5 = this;
    if (isObservableMap(other)) {
      other = new Map(other);
    }
    transaction(function() {
      if (isPlainObject(other)) {
        getPlainObjectKeys(other).forEach(function(key) {
          return _this5.set(key, other[key]);
        });
      } else if (Array.isArray(other)) {
        other.forEach(function(_ref) {
          var key = _ref[0], value = _ref[1];
          return _this5.set(key, value);
        });
      } else if (isES6Map(other)) {
        if (!isPlainES6Map(other)) {
          die(19, other);
        }
        other.forEach(function(value, key) {
          return _this5.set(key, value);
        });
      } else if (other !== null && other !== void 0) {
        die(20, other);
      }
    });
    return this;
  };
  _proto.clear = function clear2() {
    var _this6 = this;
    transaction(function() {
      untracked(function() {
        for (var _iterator2 = _createForOfIteratorHelperLoose(_this6.keys()), _step2; !(_step2 = _iterator2()).done; ) {
          var key = _step2.value;
          _this6["delete"](key);
        }
      });
    });
  };
  _proto.replace = function replace2(values) {
    var _this7 = this;
    transaction(function() {
      var replacementMap = convertToMap(values);
      var orderedData = /* @__PURE__ */ new Map();
      var keysReportChangedCalled = false;
      for (var _iterator3 = _createForOfIteratorHelperLoose(_this7.data_.keys()), _step3; !(_step3 = _iterator3()).done; ) {
        var key = _step3.value;
        if (!replacementMap.has(key)) {
          var deleted = _this7["delete"](key);
          if (deleted) {
            keysReportChangedCalled = true;
          } else {
            var value = _this7.data_.get(key);
            orderedData.set(key, value);
          }
        }
      }
      for (var _iterator4 = _createForOfIteratorHelperLoose(replacementMap.entries()), _step4; !(_step4 = _iterator4()).done; ) {
        var _step4$value = _step4.value, _key = _step4$value[0], _value = _step4$value[1];
        var keyExisted = _this7.data_.has(_key);
        _this7.set(_key, _value);
        if (_this7.data_.has(_key)) {
          var _value2 = _this7.data_.get(_key);
          orderedData.set(_key, _value2);
          if (!keyExisted) {
            keysReportChangedCalled = true;
          }
        }
      }
      if (!keysReportChangedCalled) {
        if (_this7.data_.size !== orderedData.size) {
          _this7.keysAtom_.reportChanged();
        } else {
          var iter1 = _this7.data_.keys();
          var iter2 = orderedData.keys();
          var next1 = iter1.next();
          var next2 = iter2.next();
          while (!next1.done) {
            if (next1.value !== next2.value) {
              _this7.keysAtom_.reportChanged();
              break;
            }
            next1 = iter1.next();
            next2 = iter2.next();
          }
        }
      }
      _this7.data_ = orderedData;
    });
    return this;
  };
  _proto.toString = function toString3() {
    return "[object ObservableMap]";
  };
  _proto.toJSON = function toJSON2() {
    return Array.from(this);
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (process.env.NODE_ENV !== "production" && fireImmediately === true) {
      die("`observe` doesn't support fireImmediately=true in combination with maps.");
    }
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  return _createClass(ObservableMap2, [{
    key: "size",
    get: function get3() {
      this.keysAtom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: Symbol.toStringTag,
    get: function get3() {
      return "Map";
    }
  }]);
}();
var isObservableMap = /* @__PURE__ */ createInstanceofPredicate("ObservableMap", ObservableMap);
function makeIterableForMap(iterator) {
  iterator[Symbol.toStringTag] = "MapIterator";
  return makeIterable(iterator);
}
function convertToMap(dataStructure) {
  if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {
    return dataStructure;
  } else if (Array.isArray(dataStructure)) {
    return new Map(dataStructure);
  } else if (isPlainObject(dataStructure)) {
    var map2 = /* @__PURE__ */ new Map();
    for (var key in dataStructure) {
      map2.set(key, dataStructure[key]);
    }
    return map2;
  } else {
    return die(21, dataStructure);
  }
}
var ObservableSetMarker = {};
var ObservableSet = /* @__PURE__ */ function() {
  function ObservableSet2(initialData, enhancer, name_) {
    var _this = this;
    if (enhancer === void 0) {
      enhancer = deepEnhancer;
    }
    if (name_ === void 0) {
      name_ = process.env.NODE_ENV !== "production" ? "ObservableSet@" + getNextId() : "ObservableSet";
    }
    this.name_ = void 0;
    this[$mobx] = ObservableSetMarker;
    this.data_ = /* @__PURE__ */ new Set();
    this.atom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = void 0;
    this.name_ = name_;
    if (!isFunction(Set)) {
      die(22);
    }
    this.enhancer_ = function(newV, oldV) {
      return enhancer(newV, oldV, name_);
    };
    initObservable(function() {
      _this.atom_ = createAtom(_this.name_);
      if (initialData) {
        _this.replace(initialData);
      }
    });
  }
  var _proto = ObservableSet2.prototype;
  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== void 0) {
      return this.dehancer(value);
    }
    return value;
  };
  _proto.clear = function clear2() {
    var _this2 = this;
    transaction(function() {
      untracked(function() {
        for (var _iterator = _createForOfIteratorHelperLoose(_this2.data_.values()), _step; !(_step = _iterator()).done; ) {
          var value = _step.value;
          _this2["delete"](value);
        }
      });
    });
  };
  _proto.forEach = function forEach(callbackFn, thisArg) {
    for (var _iterator2 = _createForOfIteratorHelperLoose(this), _step2; !(_step2 = _iterator2()).done; ) {
      var value = _step2.value;
      callbackFn.call(thisArg, value, value, this);
    }
  };
  _proto.add = function add(value) {
    var _this3 = this;
    checkIfStateModificationsAreAllowed(this.atom_);
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: ADD,
        object: this,
        newValue: value
      });
      if (!change) {
        return this;
      }
    }
    if (!this.has(value)) {
      transaction(function() {
        _this3.data_.add(_this3.enhancer_(value, void 0));
        _this3.atom_.reportChanged();
      });
      var notifySpy = process.env.NODE_ENV !== "production" && isSpyEnabled();
      var notify = hasListeners(this);
      var _change = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: ADD,
        object: this,
        newValue: value
      } : null;
      if (notifySpy && process.env.NODE_ENV !== "production") {
        spyReportStart(_change);
      }
      if (notify) {
        notifyListeners(this, _change);
      }
      if (notifySpy && process.env.NODE_ENV !== "production") {
        spyReportEnd();
      }
    }
    return this;
  };
  _proto["delete"] = function _delete(value) {
    var _this4 = this;
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        oldValue: value
      });
      if (!change) {
        return false;
      }
    }
    if (this.has(value)) {
      var notifySpy = process.env.NODE_ENV !== "production" && isSpyEnabled();
      var notify = hasListeners(this);
      var _change2 = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: value
      } : null;
      if (notifySpy && process.env.NODE_ENV !== "production") {
        spyReportStart(_change2);
      }
      transaction(function() {
        _this4.atom_.reportChanged();
        _this4.data_["delete"](value);
      });
      if (notify) {
        notifyListeners(this, _change2);
      }
      if (notifySpy && process.env.NODE_ENV !== "production") {
        spyReportEnd();
      }
      return true;
    }
    return false;
  };
  _proto.has = function has2(value) {
    this.atom_.reportObserved();
    return this.data_.has(this.dehanceValue_(value));
  };
  _proto.entries = function entries() {
    var values = this.values();
    return makeIterableForSet({
      next: function next() {
        var _values$next = values.next(), value = _values$next.value, done = _values$next.done;
        return !done ? {
          value: [value, value],
          done
        } : {
          value: void 0,
          done
        };
      }
    });
  };
  _proto.keys = function keys() {
    return this.values();
  };
  _proto.values = function values() {
    this.atom_.reportObserved();
    var self2 = this;
    var values2 = this.data_.values();
    return makeIterableForSet({
      next: function next() {
        var _values$next2 = values2.next(), value = _values$next2.value, done = _values$next2.done;
        return !done ? {
          value: self2.dehanceValue_(value),
          done
        } : {
          value: void 0,
          done
        };
      }
    });
  };
  _proto.intersection = function intersection(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.intersection(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.intersection(otherSet);
    }
  };
  _proto.union = function union(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.union(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.union(otherSet);
    }
  };
  _proto.difference = function difference(otherSet) {
    return new Set(this).difference(otherSet);
  };
  _proto.symmetricDifference = function symmetricDifference(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.symmetricDifference(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.symmetricDifference(otherSet);
    }
  };
  _proto.isSubsetOf = function isSubsetOf(otherSet) {
    return new Set(this).isSubsetOf(otherSet);
  };
  _proto.isSupersetOf = function isSupersetOf(otherSet) {
    return new Set(this).isSupersetOf(otherSet);
  };
  _proto.isDisjointFrom = function isDisjointFrom(otherSet) {
    if (isES6Set(otherSet) && !isObservableSet(otherSet)) {
      return otherSet.isDisjointFrom(this);
    } else {
      var dehancedSet = new Set(this);
      return dehancedSet.isDisjointFrom(otherSet);
    }
  };
  _proto.replace = function replace2(other) {
    var _this5 = this;
    if (isObservableSet(other)) {
      other = new Set(other);
    }
    transaction(function() {
      if (Array.isArray(other)) {
        _this5.clear();
        other.forEach(function(value) {
          return _this5.add(value);
        });
      } else if (isES6Set(other)) {
        _this5.clear();
        other.forEach(function(value) {
          return _this5.add(value);
        });
      } else if (other !== null && other !== void 0) {
        die("Cannot initialize set from " + other);
      }
    });
    return this;
  };
  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (process.env.NODE_ENV !== "production" && fireImmediately === true) {
      die("`observe` doesn't support fireImmediately=true in combination with sets.");
    }
    return registerListener(this, listener);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.toJSON = function toJSON2() {
    return Array.from(this);
  };
  _proto.toString = function toString3() {
    return "[object ObservableSet]";
  };
  _proto[Symbol.iterator] = function() {
    return this.values();
  };
  return _createClass(ObservableSet2, [{
    key: "size",
    get: function get3() {
      this.atom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: Symbol.toStringTag,
    get: function get3() {
      return "Set";
    }
  }]);
}();
var isObservableSet = /* @__PURE__ */ createInstanceofPredicate("ObservableSet", ObservableSet);
function makeIterableForSet(iterator) {
  iterator[Symbol.toStringTag] = "SetIterator";
  return makeIterable(iterator);
}
var descriptorCache = /* @__PURE__ */ Object.create(null);
var REMOVE = "remove";
var ObservableObjectAdministration = /* @__PURE__ */ function() {
  function ObservableObjectAdministration2(target_, values_, name_, defaultAnnotation_) {
    if (values_ === void 0) {
      values_ = /* @__PURE__ */ new Map();
    }
    if (defaultAnnotation_ === void 0) {
      defaultAnnotation_ = autoAnnotation;
    }
    this.target_ = void 0;
    this.values_ = void 0;
    this.name_ = void 0;
    this.defaultAnnotation_ = void 0;
    this.keysAtom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.proxy_ = void 0;
    this.isPlainObject_ = void 0;
    this.appliedAnnotations_ = void 0;
    this.pendingKeys_ = void 0;
    this.target_ = target_;
    this.values_ = values_;
    this.name_ = name_;
    this.defaultAnnotation_ = defaultAnnotation_;
    this.keysAtom_ = new Atom(process.env.NODE_ENV !== "production" ? this.name_ + ".keys" : "ObservableObject.keys");
    this.isPlainObject_ = isPlainObject(this.target_);
    if (process.env.NODE_ENV !== "production" && !isAnnotation(this.defaultAnnotation_)) {
      die("defaultAnnotation must be valid annotation");
    }
    if (process.env.NODE_ENV !== "production") {
      this.appliedAnnotations_ = {};
    }
  }
  var _proto = ObservableObjectAdministration2.prototype;
  _proto.getObservablePropValue_ = function getObservablePropValue_(key) {
    return this.values_.get(key).get();
  };
  _proto.setObservablePropValue_ = function setObservablePropValue_(key, newValue) {
    var observable2 = this.values_.get(key);
    if (observable2 instanceof ComputedValue) {
      observable2.set(newValue);
      return true;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: UPDATE,
        object: this.proxy_ || this.target_,
        name: key,
        newValue
      });
      if (!change) {
        return null;
      }
      newValue = change.newValue;
    }
    newValue = observable2.prepareNewValue_(newValue);
    if (newValue !== globalState.UNCHANGED) {
      var notify = hasListeners(this);
      var notifySpy = process.env.NODE_ENV !== "production" && isSpyEnabled();
      var _change = notify || notifySpy ? {
        type: UPDATE,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        oldValue: observable2.value_,
        name: key,
        newValue
      } : null;
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportStart(_change);
      }
      observable2.setNewValue_(newValue);
      if (notify) {
        notifyListeners(this, _change);
      }
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportEnd();
      }
    }
    return true;
  };
  _proto.get_ = function get_(key) {
    if (globalState.trackingDerivation && !hasProp(this.target_, key)) {
      this.has_(key);
    }
    return this.target_[key];
  };
  _proto.set_ = function set_(key, value, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (hasProp(this.target_, key)) {
      if (this.values_.has(key)) {
        return this.setObservablePropValue_(key, value);
      } else if (proxyTrap) {
        return Reflect.set(this.target_, key, value);
      } else {
        this.target_[key] = value;
        return true;
      }
    } else {
      return this.extend_(key, {
        value,
        enumerable: true,
        writable: true,
        configurable: true
      }, this.defaultAnnotation_, proxyTrap);
    }
  };
  _proto.has_ = function has_(key) {
    if (!globalState.trackingDerivation) {
      return key in this.target_;
    }
    this.pendingKeys_ || (this.pendingKeys_ = /* @__PURE__ */ new Map());
    var entry = this.pendingKeys_.get(key);
    if (!entry) {
      entry = new ObservableValue(key in this.target_, referenceEnhancer, process.env.NODE_ENV !== "production" ? this.name_ + "." + stringifyKey(key) + "?" : "ObservableObject.key?", false);
      this.pendingKeys_.set(key, entry);
    }
    return entry.get();
  };
  _proto.make_ = function make_(key, annotation) {
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return;
    }
    assertAnnotable(this, annotation, key);
    if (!(key in this.target_)) {
      var _this$target_$storedA;
      if ((_this$target_$storedA = this.target_[storedAnnotationsSymbol]) != null && _this$target_$storedA[key]) {
        return;
      } else {
        die(1, annotation.annotationType_, this.name_ + "." + key.toString());
      }
    }
    var source = this.target_;
    while (source && source !== objectPrototype) {
      var descriptor = getDescriptor(source, key);
      if (descriptor) {
        var outcome = annotation.make_(this, key, descriptor, source);
        if (outcome === 0) {
          return;
        }
        if (outcome === 1) {
          break;
        }
      }
      source = Object.getPrototypeOf(source);
    }
    recordAnnotationApplied(this, annotation, key);
  };
  _proto.extend_ = function extend_(key, descriptor, annotation, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }
    if (annotation === false) {
      return this.defineProperty_(key, descriptor, proxyTrap);
    }
    assertAnnotable(this, annotation, key);
    var outcome = annotation.extend_(this, key, descriptor, proxyTrap);
    if (outcome) {
      recordAnnotationApplied(this, annotation, key);
    }
    return outcome;
  };
  _proto.defineProperty_ = function defineProperty_(key, descriptor, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: descriptor.value
        });
        if (!change) {
          return null;
        }
        var newValue = change.newValue;
        if (descriptor.value !== newValue) {
          descriptor = _extends({}, descriptor, {
            value: newValue
          });
        }
      }
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      this.notifyPropertyAddition_(key, descriptor.value);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.defineObservableProperty_ = function defineObservableProperty_(key, value, enhancer, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: value
        });
        if (!change) {
          return null;
        }
        value = change.newValue;
      }
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: true,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      var observable2 = new ObservableValue(value, enhancer, process.env.NODE_ENV !== "production" ? this.name_ + "." + key.toString() : "ObservableObject.key", false);
      this.values_.set(key, observable2);
      this.notifyPropertyAddition_(key, observable2.value_);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.defineComputedProperty_ = function defineComputedProperty_(key, options, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    try {
      startBatch();
      var deleteOutcome = this.delete_(key);
      if (!deleteOutcome) {
        return deleteOutcome;
      }
      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: void 0
        });
        if (!change) {
          return null;
        }
      }
      options.name || (options.name = process.env.NODE_ENV !== "production" ? this.name_ + "." + key.toString() : "ObservableObject.key");
      options.context = this.proxy_ || this.target_;
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: false,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      };
      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }
      this.values_.set(key, new ComputedValue(options));
      this.notifyPropertyAddition_(key, void 0);
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.delete_ = function delete_(key, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }
    checkIfStateModificationsAreAllowed(this.keysAtom_);
    if (!hasProp(this.target_, key)) {
      return true;
    }
    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_ || this.target_,
        name: key,
        type: REMOVE
      });
      if (!change) {
        return null;
      }
    }
    try {
      var _this$pendingKeys_;
      startBatch();
      var notify = hasListeners(this);
      var notifySpy = process.env.NODE_ENV !== "production" && isSpyEnabled();
      var observable2 = this.values_.get(key);
      var value = void 0;
      if (!observable2 && (notify || notifySpy)) {
        var _getDescriptor2;
        value = (_getDescriptor2 = getDescriptor(this.target_, key)) == null ? void 0 : _getDescriptor2.value;
      }
      if (proxyTrap) {
        if (!Reflect.deleteProperty(this.target_, key)) {
          return false;
        }
      } else {
        delete this.target_[key];
      }
      if (process.env.NODE_ENV !== "production") {
        delete this.appliedAnnotations_[key];
      }
      if (observable2) {
        this.values_["delete"](key);
        if (observable2 instanceof ObservableValue) {
          value = observable2.value_;
        }
        propagateChanged(observable2);
      }
      this.keysAtom_.reportChanged();
      (_this$pendingKeys_ = this.pendingKeys_) == null || (_this$pendingKeys_ = _this$pendingKeys_.get(key)) == null || _this$pendingKeys_.set(key in this.target_);
      if (notify || notifySpy) {
        var _change2 = {
          type: REMOVE,
          observableKind: "object",
          object: this.proxy_ || this.target_,
          debugObjectName: this.name_,
          oldValue: value,
          name: key
        };
        if (process.env.NODE_ENV !== "production" && notifySpy) {
          spyReportStart(_change2);
        }
        if (notify) {
          notifyListeners(this, _change2);
        }
        if (process.env.NODE_ENV !== "production" && notifySpy) {
          spyReportEnd();
        }
      }
    } finally {
      endBatch();
    }
    return true;
  };
  _proto.observe_ = function observe_(callback, fireImmediately) {
    if (process.env.NODE_ENV !== "production" && fireImmediately === true) {
      die("`observe` doesn't support the fire immediately property for observable objects.");
    }
    return registerListener(this, callback);
  };
  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };
  _proto.notifyPropertyAddition_ = function notifyPropertyAddition_(key, value) {
    var _this$pendingKeys_2;
    var notify = hasListeners(this);
    var notifySpy = process.env.NODE_ENV !== "production" && isSpyEnabled();
    if (notify || notifySpy) {
      var change = notify || notifySpy ? {
        type: ADD,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: value
      } : null;
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportStart(change);
      }
      if (notify) {
        notifyListeners(this, change);
      }
      if (process.env.NODE_ENV !== "production" && notifySpy) {
        spyReportEnd();
      }
    }
    (_this$pendingKeys_2 = this.pendingKeys_) == null || (_this$pendingKeys_2 = _this$pendingKeys_2.get(key)) == null || _this$pendingKeys_2.set(true);
    this.keysAtom_.reportChanged();
  };
  _proto.ownKeys_ = function ownKeys_() {
    this.keysAtom_.reportObserved();
    return ownKeys(this.target_);
  };
  _proto.keys_ = function keys_() {
    this.keysAtom_.reportObserved();
    return Object.keys(this.target_);
  };
  return ObservableObjectAdministration2;
}();
function asObservableObject(target, options) {
  var _options$name;
  if (process.env.NODE_ENV !== "production" && options && isObservableObject(target)) {
    die("Options can't be provided for already observable objects.");
  }
  if (hasProp(target, $mobx)) {
    if (process.env.NODE_ENV !== "production" && !(getAdministration(target) instanceof ObservableObjectAdministration)) {
      die("Cannot convert '" + getDebugName(target) + "' into observable object:\nThe target is already observable of different type.\nExtending builtins is not supported.");
    }
    return target;
  }
  if (process.env.NODE_ENV !== "production" && !Object.isExtensible(target)) {
    die("Cannot make the designated object observable; it is not extensible");
  }
  var name = (_options$name = options == null ? void 0 : options.name) != null ? _options$name : process.env.NODE_ENV !== "production" ? (isPlainObject(target) ? "ObservableObject" : target.constructor.name) + "@" + getNextId() : "ObservableObject";
  var adm = new ObservableObjectAdministration(target, /* @__PURE__ */ new Map(), String(name), getAnnotationFromOptions(options));
  addHiddenProp(target, $mobx, adm);
  return target;
}
var isObservableObjectAdministration = /* @__PURE__ */ createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);
function getCachedObservablePropDescriptor(key) {
  return descriptorCache[key] || (descriptorCache[key] = {
    get: function get3() {
      return this[$mobx].getObservablePropValue_(key);
    },
    set: function set4(value) {
      return this[$mobx].setObservablePropValue_(key, value);
    }
  });
}
function isObservableObject(thing) {
  if (isObject(thing)) {
    return isObservableObjectAdministration(thing[$mobx]);
  }
  return false;
}
function recordAnnotationApplied(adm, annotation, key) {
  var _adm$target_$storedAn;
  if (process.env.NODE_ENV !== "production") {
    adm.appliedAnnotations_[key] = annotation;
  }
  (_adm$target_$storedAn = adm.target_[storedAnnotationsSymbol]) == null || delete _adm$target_$storedAn[key];
}
function assertAnnotable(adm, annotation, key) {
  if (process.env.NODE_ENV !== "production" && !isAnnotation(annotation)) {
    die("Cannot annotate '" + adm.name_ + "." + key.toString() + "': Invalid annotation.");
  }
  if (process.env.NODE_ENV !== "production" && !isOverride(annotation) && hasProp(adm.appliedAnnotations_, key)) {
    var fieldName = adm.name_ + "." + key.toString();
    var currentAnnotationType = adm.appliedAnnotations_[key].annotationType_;
    var requestedAnnotationType = annotation.annotationType_;
    die("Cannot apply '" + requestedAnnotationType + "' to '" + fieldName + "':" + ("\nThe field is already annotated with '" + currentAnnotationType + "'.") + "\nRe-annotating fields is not allowed.\nUse 'override' annotation for methods overridden by subclass.");
  }
}
var ENTRY_0 = /* @__PURE__ */ createArrayEntryDescriptor(0);
var safariPrototypeSetterInheritanceBug = /* @__PURE__ */ function() {
  var v2 = false;
  var p2 = {};
  Object.defineProperty(p2, "0", {
    set: function set4() {
      v2 = true;
    }
  });
  Object.create(p2)["0"] = 1;
  return v2 === false;
}();
var OBSERVABLE_ARRAY_BUFFER_SIZE = 0;
var StubArray = function StubArray2() {
};
function inherit(ctor, proto) {
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ctor.prototype, proto);
  } else if (ctor.prototype.__proto__ !== void 0) {
    ctor.prototype.__proto__ = proto;
  } else {
    ctor.prototype = proto;
  }
}
inherit(StubArray, Array.prototype);
var LegacyObservableArray = /* @__PURE__ */ function(_StubArray) {
  function LegacyObservableArray2(initialValues, enhancer, name, owned) {
    var _this;
    if (name === void 0) {
      name = process.env.NODE_ENV !== "production" ? "ObservableArray@" + getNextId() : "ObservableArray";
    }
    if (owned === void 0) {
      owned = false;
    }
    _this = _StubArray.call(this) || this;
    initObservable(function() {
      var adm = new ObservableArrayAdministration(name, enhancer, owned, true);
      adm.proxy_ = _this;
      addHiddenFinalProp(_this, $mobx, adm);
      if (initialValues && initialValues.length) {
        _this.spliceWithArray(0, 0, initialValues);
      }
      if (safariPrototypeSetterInheritanceBug) {
        Object.defineProperty(_this, "0", ENTRY_0);
      }
    });
    return _this;
  }
  _inheritsLoose(LegacyObservableArray2, _StubArray);
  var _proto = LegacyObservableArray2.prototype;
  _proto.concat = function concat() {
    this[$mobx].atom_.reportObserved();
    for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {
      arrays[_key] = arguments[_key];
    }
    return Array.prototype.concat.apply(
      this.slice(),
      //@ts-ignore
      arrays.map(function(a2) {
        return isObservableArray(a2) ? a2.slice() : a2;
      })
    );
  };
  _proto[Symbol.iterator] = function() {
    var self2 = this;
    var nextIndex = 0;
    return makeIterable({
      next: function next() {
        return nextIndex < self2.length ? {
          value: self2[nextIndex++],
          done: false
        } : {
          done: true,
          value: void 0
        };
      }
    });
  };
  return _createClass(LegacyObservableArray2, [{
    key: "length",
    get: function get3() {
      return this[$mobx].getArrayLength_();
    },
    set: function set4(newLength) {
      this[$mobx].setArrayLength_(newLength);
    }
  }, {
    key: Symbol.toStringTag,
    get: function get3() {
      return "Array";
    }
  }]);
}(StubArray);
Object.entries(arrayExtensions).forEach(function(_ref) {
  var prop = _ref[0], fn = _ref[1];
  if (prop !== "concat") {
    addHiddenProp(LegacyObservableArray.prototype, prop, fn);
  }
});
function createArrayEntryDescriptor(index) {
  return {
    enumerable: false,
    configurable: true,
    get: function get3() {
      return this[$mobx].get_(index);
    },
    set: function set4(value) {
      this[$mobx].set_(index, value);
    }
  };
}
function createArrayBufferItem(index) {
  defineProperty(LegacyObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
}
function reserveArrayBuffer(max) {
  if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {
    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {
      createArrayBufferItem(index);
    }
    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
  }
}
reserveArrayBuffer(1e3);
function createLegacyArray(initialValues, enhancer, name) {
  return new LegacyObservableArray(initialValues, enhancer, name);
}
function getAtom(thing, property) {
  if (typeof thing === "object" && thing !== null) {
    if (isObservableArray(thing)) {
      if (property !== void 0) {
        die(23);
      }
      return thing[$mobx].atom_;
    }
    if (isObservableSet(thing)) {
      return thing.atom_;
    }
    if (isObservableMap(thing)) {
      if (property === void 0) {
        return thing.keysAtom_;
      }
      var observable2 = thing.data_.get(property) || thing.hasMap_.get(property);
      if (!observable2) {
        die(25, property, getDebugName(thing));
      }
      return observable2;
    }
    if (isObservableObject(thing)) {
      if (!property) {
        return die(26);
      }
      var _observable = thing[$mobx].values_.get(property);
      if (!_observable) {
        die(27, property, getDebugName(thing));
      }
      return _observable;
    }
    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
      return thing;
    }
  } else if (isFunction(thing)) {
    if (isReaction(thing[$mobx])) {
      return thing[$mobx];
    }
  }
  die(28);
}
function getAdministration(thing, property) {
  if (!thing) {
    die(29);
  }
  if (property !== void 0) {
    return getAdministration(getAtom(thing, property));
  }
  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
    return thing;
  }
  if (isObservableMap(thing) || isObservableSet(thing)) {
    return thing;
  }
  if (thing[$mobx]) {
    return thing[$mobx];
  }
  die(24, thing);
}
function getDebugName(thing, property) {
  var named;
  if (property !== void 0) {
    named = getAtom(thing, property);
  } else if (isAction(thing)) {
    return thing.name;
  } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {
    named = getAdministration(thing);
  } else {
    named = getAtom(thing);
  }
  return named.name_;
}
function initObservable(cb) {
  var derivation = untrackedStart();
  var allowStateChanges = allowStateChangesStart(true);
  startBatch();
  try {
    return cb();
  } finally {
    endBatch();
    allowStateChangesEnd(allowStateChanges);
    untrackedEnd(derivation);
  }
}
var toString = objectPrototype.toString;
function deepEqual(a2, b2, depth) {
  if (depth === void 0) {
    depth = -1;
  }
  return eq(a2, b2, depth);
}
function eq(a2, b2, depth, aStack, bStack) {
  if (a2 === b2) {
    return a2 !== 0 || 1 / a2 === 1 / b2;
  }
  if (a2 == null || b2 == null) {
    return false;
  }
  if (a2 !== a2) {
    return b2 !== b2;
  }
  var type4 = typeof a2;
  if (type4 !== "function" && type4 !== "object" && typeof b2 != "object") {
    return false;
  }
  var className = toString.call(a2);
  if (className !== toString.call(b2)) {
    return false;
  }
  switch (className) {
    case "[object RegExp]":
    case "[object String]":
      return "" + a2 === "" + b2;
    case "[object Number]":
      if (+a2 !== +a2) {
        return +b2 !== +b2;
      }
      return +a2 === 0 ? 1 / +a2 === 1 / b2 : +a2 === +b2;
    case "[object Date]":
    case "[object Boolean]":
      return +a2 === +b2;
    case "[object Symbol]":
      return typeof Symbol !== "undefined" && Symbol.valueOf.call(a2) === Symbol.valueOf.call(b2);
    case "[object Map]":
    case "[object Set]":
      if (depth >= 0) {
        depth++;
      }
      break;
  }
  a2 = unwrap(a2);
  b2 = unwrap(b2);
  var areArrays = className === "[object Array]";
  if (!areArrays) {
    if (typeof a2 != "object" || typeof b2 != "object") {
      return false;
    }
    var aCtor = a2.constructor, bCtor = b2.constructor;
    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && "constructor" in a2 && "constructor" in b2) {
      return false;
    }
  }
  if (depth === 0) {
    return false;
  } else if (depth < 0) {
    depth = -1;
  }
  aStack = aStack || [];
  bStack = bStack || [];
  var length = aStack.length;
  while (length--) {
    if (aStack[length] === a2) {
      return bStack[length] === b2;
    }
  }
  aStack.push(a2);
  bStack.push(b2);
  if (areArrays) {
    length = a2.length;
    if (length !== b2.length) {
      return false;
    }
    while (length--) {
      if (!eq(a2[length], b2[length], depth - 1, aStack, bStack)) {
        return false;
      }
    }
  } else {
    var keys = Object.keys(a2);
    var key;
    length = keys.length;
    if (Object.keys(b2).length !== length) {
      return false;
    }
    while (length--) {
      key = keys[length];
      if (!(hasProp(b2, key) && eq(a2[key], b2[key], depth - 1, aStack, bStack))) {
        return false;
      }
    }
  }
  aStack.pop();
  bStack.pop();
  return true;
}
function unwrap(a2) {
  if (isObservableArray(a2)) {
    return a2.slice();
  }
  if (isES6Map(a2) || isObservableMap(a2)) {
    return Array.from(a2.entries());
  }
  if (isES6Set(a2) || isObservableSet(a2)) {
    return Array.from(a2.entries());
  }
  return a2;
}
var _getGlobal$Iterator;
var maybeIteratorPrototype = ((_getGlobal$Iterator = getGlobal().Iterator) == null ? void 0 : _getGlobal$Iterator.prototype) || {};
function makeIterable(iterator) {
  iterator[Symbol.iterator] = getSelf;
  return Object.assign(Object.create(maybeIteratorPrototype), iterator);
}
function getSelf() {
  return this;
}
function isAnnotation(thing) {
  return (
    // Can be function
    thing instanceof Object && typeof thing.annotationType_ === "string" && isFunction(thing.make_) && isFunction(thing.extend_)
  );
}
["Symbol", "Map", "Set"].forEach(function(m2) {
  var g2 = getGlobal();
  if (typeof g2[m2] === "undefined") {
    die("MobX requires global '" + m2 + "' to be available or polyfilled");
  }
});
if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
    spy,
    extras: {
      getDebugName
    },
    $mobx
  });
}

// ../../node_modules/@ton/core/dist/index.js
var dist_exports2 = {};
__export(dist_exports2, {
  ADNLAddress: () => __export324,
  Address: () => __export353,
  BitBuilder: () => __export284,
  BitReader: () => __export294,
  BitString: () => __export303,
  Builder: () => __export274,
  Cell: () => __export234,
  CellType: () => __export244,
  ComputeError: () => __export94,
  Dictionary: () => __export225,
  ExternalAddress: () => __export333,
  ReserveMode: () => __export1410,
  SendMode: () => __export1510,
  ShardAccountRefValue: () => __export1110,
  Slice: () => __export254,
  TupleBuilder: () => __export1111,
  TupleReader: () => __export1211,
  address: () => __export343,
  base32Decode: () => __export410,
  base32Encode: () => __export310,
  beginCell: () => __export264,
  comment: () => __export47,
  contractAddress: () => __export313,
  convertToMerkleProof: () => __export203,
  crc16: () => __export610,
  crc32c: () => __export510,
  exoticMerkleProof: () => __export2111,
  exoticMerkleUpdate: () => __export194,
  exoticPruned: () => __export184,
  external: () => __export48,
  fromNano: () => __export74,
  generateMerkleProof: () => __export174,
  generateMerkleProofDirect: () => __export169,
  generateMerkleUpdate: () => __export1511,
  getMethodId: () => __export224,
  internal: () => __export49,
  loadAccount: () => __export462,
  loadAccountState: () => __export442,
  loadAccountStatus: () => __export422,
  loadAccountStatusChange: () => __export40,
  loadAccountStorage: () => __export38,
  loadCommonMessageInfo: () => __export323,
  loadCommonMessageInfoRelaxed: () => __export302,
  loadComputeSkipReason: () => __export283,
  loadCurrencyCollection: () => __export263,
  loadDepthBalanceInfo: () => __export243,
  loadHashUpdate: () => __export223,
  loadLibRef: () => __export37,
  loadMasterchainStateExtra: () => __export202,
  loadMessage: () => __export193,
  loadMessageRelaxed: () => __export173,
  loadOutAction: () => __export362,
  loadOutList: () => __export342,
  loadShardAccount: () => __export1310,
  loadShardAccounts: () => __export103,
  loadShardIdent: () => __export83,
  loadShardStateUnsplit: () => __export63,
  loadSimpleLibrary: () => __export56,
  loadSplitMergeInfo: () => __export165,
  loadStateInit: () => __export732,
  loadStorageInfo: () => __export71,
  loadStorageUsed: () => __export69,
  loadStorageUsedShort: () => __export67,
  loadTickTock: () => __export65,
  loadTransaction: () => __export632,
  loadTransactionActionPhase: () => __export61,
  loadTransactionBouncePhase: () => __export59,
  loadTransactionComputePhase: () => __export57,
  loadTransactionCreditPhase: () => __export552,
  loadTransactionDescription: () => __export532,
  loadTransactionStoragePhase: () => __export51,
  openContract: () => __export104,
  parseTuple: () => __export1411,
  safeSign: () => __export168,
  safeSignVerify: () => __export0104,
  serializeTuple: () => __export1311,
  storeAccount: () => __export452,
  storeAccountState: () => __export432,
  storeAccountStatus: () => __export41,
  storeAccountStatusChange: () => __export39,
  storeAccountStorage: () => __export372,
  storeCommonMessageInfo: () => __export312,
  storeCommonMessageInfoRelaxed: () => __export293,
  storeComputeSkipReason: () => __export273,
  storeCurrencyCollection: () => __export253,
  storeDepthBalanceInfo: () => __export233,
  storeHashUpdate: () => __export2110,
  storeLibRef: () => __export221,
  storeMessage: () => __export183,
  storeMessageRelaxed: () => __export166,
  storeOutAction: () => __export352,
  storeOutList: () => __export332,
  storeShardAccount: () => __export1210,
  storeShardAccounts: () => __export93,
  storeShardIdent: () => __export73,
  storeSimpleLibrary: () => __export46,
  storeSplitMergeInfo: () => __export098,
  storeStateInit: () => __export722,
  storeStorageInfo: () => __export70,
  storeStorageUsed: () => __export68,
  storeStorageUsedShort: () => __export66,
  storeTickTock: () => __export64,
  storeTransaction: () => __export622,
  storeTransactionActionPhase: () => __export60,
  storeTransactionBouncePhase: () => __export58,
  storeTransactionComputePhase: () => __export562,
  storeTransactionCreditPhase: () => __export542,
  storeTransactionDescription: () => __export522,
  storeTransactionsStoragePhase: () => __export50,
  toNano: () => __export84
});

// ../../node_modules/@ton/core/dist/crypto/safeSign.js
var safeSign_exports = {};
__export(safeSign_exports, {
  safeSign: () => __export114,
  safeSignVerify: () => __export023
});

// ../../node_modules/@ton/crypto/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  deriveED25519HardenedKey: () => __export72,
  deriveEd25519Path: () => __export62,
  deriveMnemonicHardenedKey: () => __export113,
  deriveMnemonicsPath: () => __export211,
  deriveSymmetricHardenedKey: () => __export44,
  deriveSymmetricPath: () => __export34,
  getED25519MasterKeyFromSeed: () => __export82,
  getMnemonicsMasterKeyFromSeed: () => __export022,
  getSecureRandomBytes: () => __export262,
  getSecureRandomNumber: () => __export242,
  getSecureRandomWords: () => __export252,
  getSymmetricMasterKeyFromSeed: () => __export54,
  hmac_sha512: () => __export272,
  keyPairFromSecretKey: () => __export11,
  keyPairFromSeed: () => __export122,
  mnemonicNew: () => __export21,
  mnemonicToHDSeed: () => __export162,
  mnemonicToPrivateKey: () => __export192,
  mnemonicToSeed: () => __export172,
  mnemonicToWalletKey: () => __export182,
  mnemonicValidate: () => __export20,
  mnemonicWordList: () => __export152,
  newSecurePassphrase: () => __export222,
  newSecureWords: () => __export232,
  openBox: () => __export132,
  pbkdf2_sha512: () => __export282,
  sealBox: () => __export142,
  sha256: () => __export322,
  sha256_sync: () => __export31,
  sha512: () => __export30,
  sha512_sync: () => __export292,
  sign: () => __export102,
  signVerify: () => __export92
});

// ../../node_modules/@ton/crypto/dist/hd/mnemonics.js
var mnemonics_exports = {};
__export(mnemonics_exports, {
  deriveMnemonicHardenedKey: () => __export17,
  deriveMnemonicsPath: () => __export013,
  getMnemonicsMasterKeyFromSeed: () => __export25
});

// ../../node_modules/@ton/crypto/dist/primitives/hmac_sha512.js
var hmac_sha512_exports2 = {};
__export(hmac_sha512_exports2, {
  hmac_sha512: () => __export07,
  hmac_sha512_fallback: () => __export13
});

// ../../node_modules/@ton/crypto-primitives/dist/node.js
var node_exports = {};
__export(node_exports, {
  getSecureRandomBytes: () => __export5,
  getSecureRandomWords: () => __export4,
  hmac_sha512: () => __export3,
  pbkdf2_sha512: () => __export2,
  sha256: () => __export12,
  sha512: () => __export06
});

// ../../node_modules/@ton/crypto-primitives/dist/node/sha512.js
var sha512_exports = {};
__export(sha512_exports, {
  sha512: () => __export0
});
function $$cjs_default$$(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global2 !== "undefined" && global2 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global2 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global2 !== "undefined" && global2 || typeof globalThis !== "undefined" && globalThis || {};
var exports$1 = {};
var module$1 = {
  get exports() {
    return exports$1;
  },
  set exports(value) {
    exports$1 = value;
  }
};
var __importDefault = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports$1, "__esModule", { value: true });
exports$1.sha512 = void 0;
var crypto_1 = __importDefault($$cjs_default$$(typeof $cjs$crypto__namespace !== "undefined" ? $cjs$crypto__namespace : {}));
async function sha512(source) {
  return crypto_1.default.createHash("sha512").update(source).digest();
}
exports$1.sha512 = sha512;
var __export0;
if (Object.isExtensible(module$1.exports)) {
  __export0 = module$1.exports["sha512"];
}

// ../../node_modules/@ton/crypto-primitives/dist/node/sha256.js
var sha256_exports = {};
__export(sha256_exports, {
  sha256: () => __export02
});
function $$cjs_default$$2(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global3 !== "undefined" && global3 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global3 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global3 !== "undefined" && global3 || typeof globalThis !== "undefined" && globalThis || {};
var exports2 = {};
var module2 = {
  get exports() {
    return exports2;
  },
  set exports(value) {
    exports2 = value;
  }
};
var __importDefault2 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports2, "__esModule", { value: true });
exports2.sha256 = void 0;
var crypto_12 = __importDefault2($$cjs_default$$2(typeof $cjs$crypto__namespace !== "undefined" ? $cjs$crypto__namespace : {}));
async function sha256(source) {
  return crypto_12.default.createHash("sha256").update(source).digest();
}
exports2.sha256 = sha256;
var __export02;
if (Object.isExtensible(module2.exports)) {
  __export02 = module2.exports["sha256"];
}

// ../../node_modules/@ton/crypto-primitives/dist/node/pbkdf2_sha512.js
var pbkdf2_sha512_exports = {};
__export(pbkdf2_sha512_exports, {
  pbkdf2_sha512: () => __export03
});
function $$cjs_default$$3(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global4 !== "undefined" && global4 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global4 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global4 !== "undefined" && global4 || typeof globalThis !== "undefined" && globalThis || {};
var exports3 = {};
var module3 = {
  get exports() {
    return exports3;
  },
  set exports(value) {
    exports3 = value;
  }
};
var __importDefault3 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports3, "__esModule", { value: true });
exports3.pbkdf2_sha512 = void 0;
var crypto_13 = __importDefault3($$cjs_default$$3(typeof $cjs$crypto__namespace !== "undefined" ? $cjs$crypto__namespace : {}));
function pbkdf2_sha512(key, salt, iterations, keyLen) {
  return new Promise((resolve, reject) => crypto_13.default.pbkdf2(key, salt, iterations, keyLen, "sha512", (error, derivedKey) => {
    if (error) {
      reject(error);
    } else {
      resolve(derivedKey);
    }
  }));
}
exports3.pbkdf2_sha512 = pbkdf2_sha512;
var __export03;
if (Object.isExtensible(module3.exports)) {
  __export03 = module3.exports["pbkdf2_sha512"];
}

// ../../node_modules/@ton/crypto-primitives/dist/node/hmac_sha512.js
var hmac_sha512_exports = {};
__export(hmac_sha512_exports, {
  hmac_sha512: () => __export04
});
function $$cjs_default$$4(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global5 !== "undefined" && global5 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global5 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global5 !== "undefined" && global5 || typeof globalThis !== "undefined" && globalThis || {};
var exports4 = {};
var module4 = {
  get exports() {
    return exports4;
  },
  set exports(value) {
    exports4 = value;
  }
};
var __importDefault4 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports4, "__esModule", { value: true });
exports4.hmac_sha512 = void 0;
var crypto_14 = __importDefault4($$cjs_default$$4(typeof $cjs$crypto__namespace !== "undefined" ? $cjs$crypto__namespace : {}));
async function hmac_sha512(key, data) {
  let keyBuffer = typeof key === "string" ? Buffer.from(key, "utf-8") : key;
  let dataBuffer = typeof data === "string" ? Buffer.from(data, "utf-8") : data;
  return crypto_14.default.createHmac("sha512", keyBuffer).update(dataBuffer).digest();
}
exports4.hmac_sha512 = hmac_sha512;
var __export04;
if (Object.isExtensible(module4.exports)) {
  __export04 = module4.exports["hmac_sha512"];
}

// ../../node_modules/@ton/crypto-primitives/dist/node/getSecureRandom.js
var getSecureRandom_exports = {};
__export(getSecureRandom_exports, {
  getSecureRandomBytes: () => __export1,
  getSecureRandomWords: () => __export05
});
function $$cjs_default$$5(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global6 !== "undefined" && global6 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global6 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global6 !== "undefined" && global6 || typeof globalThis !== "undefined" && globalThis || {};
var exports5 = {};
var module5 = {
  get exports() {
    return exports5;
  },
  set exports(value) {
    exports5 = value;
  }
};
var __importDefault5 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports5, "__esModule", { value: true });
exports5.getSecureRandomWords = exports5.getSecureRandomBytes = void 0;
var crypto_15 = __importDefault5($$cjs_default$$5(typeof $cjs$crypto__namespace !== "undefined" ? $cjs$crypto__namespace : {}));
function getSecureRandomBytes(size) {
  return crypto_15.default.randomBytes(size);
}
exports5.getSecureRandomBytes = getSecureRandomBytes;
function getSecureRandomWords(size) {
  let res = new Uint16Array(size);
  crypto_15.default.randomFillSync(res);
  return res;
}
exports5.getSecureRandomWords = getSecureRandomWords;
var __export05;
var __export1;
if (Object.isExtensible(module5.exports)) {
  __export05 = module5.exports["getSecureRandomWords"];
  __export1 = module5.exports["getSecureRandomBytes"];
}

// ../../node_modules/@ton/crypto-primitives/dist/node.js
function $$cjs_default$$6(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global7 !== "undefined" && global7 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global7 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global7 !== "undefined" && global7 || typeof globalThis !== "undefined" && globalThis || {};
var exports6 = {};
var module6 = {
  get exports() {
    return exports6;
  },
  set exports(value) {
    exports6 = value;
  }
};
Object.defineProperty(exports6, "__esModule", { value: true });
exports6.sha512 = exports6.sha256 = exports6.pbkdf2_sha512 = exports6.hmac_sha512 = exports6.getSecureRandomWords = exports6.getSecureRandomBytes = void 0;
var getSecureRandom_1 = $$cjs_default$$6(typeof getSecureRandom_exports !== "undefined" ? getSecureRandom_exports : {});
Object.defineProperty(exports6, "getSecureRandomBytes", { enumerable: true, get: function() {
  return getSecureRandom_1.getSecureRandomBytes;
} });
Object.defineProperty(exports6, "getSecureRandomWords", { enumerable: true, get: function() {
  return getSecureRandom_1.getSecureRandomWords;
} });
var hmac_sha512_1 = $$cjs_default$$6(typeof hmac_sha512_exports !== "undefined" ? hmac_sha512_exports : {});
Object.defineProperty(exports6, "hmac_sha512", { enumerable: true, get: function() {
  return hmac_sha512_1.hmac_sha512;
} });
var pbkdf2_sha512_1 = $$cjs_default$$6(typeof pbkdf2_sha512_exports !== "undefined" ? pbkdf2_sha512_exports : {});
Object.defineProperty(exports6, "pbkdf2_sha512", { enumerable: true, get: function() {
  return pbkdf2_sha512_1.pbkdf2_sha512;
} });
var sha256_1 = $$cjs_default$$6(typeof sha256_exports !== "undefined" ? sha256_exports : {});
Object.defineProperty(exports6, "sha256", { enumerable: true, get: function() {
  return sha256_1.sha256;
} });
var sha512_1 = $$cjs_default$$6(typeof sha512_exports !== "undefined" ? sha512_exports : {});
Object.defineProperty(exports6, "sha512", { enumerable: true, get: function() {
  return sha512_1.sha512;
} });
var __export06;
var __export12;
var __export2;
var __export3;
var __export4;
var __export5;
if (Object.isExtensible(module6.exports)) {
  __export06 = module6.exports["sha512"];
  __export12 = module6.exports["sha256"];
  __export2 = module6.exports["pbkdf2_sha512"];
  __export3 = module6.exports["hmac_sha512"];
  __export4 = module6.exports["getSecureRandomWords"];
  __export5 = module6.exports["getSecureRandomBytes"];
}

// ../../node_modules/jssha/dist/sha.mjs
var sha_exports = {};
__export(sha_exports, {
  default: () => sha_default
});
var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
function n(t2, n2, e2, r2) {
  let i2, s2, o2;
  const h2 = n2 || [0], u2 = (e2 = e2 || 0) >>> 3, w2 = -1 === r2 ? 3 : 0;
  for (i2 = 0; i2 < t2.length; i2 += 1)
    o2 = i2 + u2, s2 = o2 >>> 2, h2.length <= s2 && h2.push(0), h2[s2] |= t2[i2] << 8 * (w2 + r2 * (o2 % 4));
  return { value: h2, binLen: 8 * t2.length + e2 };
}
function e(e2, r2, i2) {
  switch (r2) {
    case "UTF8":
    case "UTF16BE":
    case "UTF16LE":
      break;
    default:
      throw new Error("encoding must be UTF8, UTF16BE, or UTF16LE");
  }
  switch (e2) {
    case "HEX":
      return function(t2, n2, e3) {
        return function(t3, n3, e4, r3) {
          let i3, s2, o2, h2;
          if (0 != t3.length % 2)
            throw new Error("String of HEX type must be in byte increments");
          const u2 = n3 || [0], w2 = (e4 = e4 || 0) >>> 3, c2 = -1 === r3 ? 3 : 0;
          for (i3 = 0; i3 < t3.length; i3 += 2) {
            if (s2 = parseInt(t3.substr(i3, 2), 16), isNaN(s2))
              throw new Error("String of HEX type contains invalid characters");
            for (h2 = (i3 >>> 1) + w2, o2 = h2 >>> 2; u2.length <= o2; )
              u2.push(0);
            u2[o2] |= s2 << 8 * (c2 + r3 * (h2 % 4));
          }
          return { value: u2, binLen: 4 * t3.length + e4 };
        }(t2, n2, e3, i2);
      };
    case "TEXT":
      return function(t2, n2, e3) {
        return function(t3, n3, e4, r3, i3) {
          let s2, o2, h2, u2, w2, c2, f2, a2, l2 = 0;
          const A2 = e4 || [0], E2 = (r3 = r3 || 0) >>> 3;
          if ("UTF8" === n3)
            for (f2 = -1 === i3 ? 3 : 0, h2 = 0; h2 < t3.length; h2 += 1)
              for (s2 = t3.charCodeAt(h2), o2 = [], 128 > s2 ? o2.push(s2) : 2048 > s2 ? (o2.push(192 | s2 >>> 6), o2.push(128 | 63 & s2)) : 55296 > s2 || 57344 <= s2 ? o2.push(224 | s2 >>> 12, 128 | s2 >>> 6 & 63, 128 | 63 & s2) : (h2 += 1, s2 = 65536 + ((1023 & s2) << 10 | 1023 & t3.charCodeAt(h2)), o2.push(240 | s2 >>> 18, 128 | s2 >>> 12 & 63, 128 | s2 >>> 6 & 63, 128 | 63 & s2)), u2 = 0; u2 < o2.length; u2 += 1) {
                for (c2 = l2 + E2, w2 = c2 >>> 2; A2.length <= w2; )
                  A2.push(0);
                A2[w2] |= o2[u2] << 8 * (f2 + i3 * (c2 % 4)), l2 += 1;
              }
          else
            for (f2 = -1 === i3 ? 2 : 0, a2 = "UTF16LE" === n3 && 1 !== i3 || "UTF16LE" !== n3 && 1 === i3, h2 = 0; h2 < t3.length; h2 += 1) {
              for (s2 = t3.charCodeAt(h2), true === a2 && (u2 = 255 & s2, s2 = u2 << 8 | s2 >>> 8), c2 = l2 + E2, w2 = c2 >>> 2; A2.length <= w2; )
                A2.push(0);
              A2[w2] |= s2 << 8 * (f2 + i3 * (c2 % 4)), l2 += 2;
            }
          return { value: A2, binLen: 8 * l2 + r3 };
        }(t2, r2, n2, e3, i2);
      };
    case "B64":
      return function(n2, e3, r3) {
        return function(n3, e4, r4, i3) {
          let s2, o2, h2, u2, w2, c2, f2, a2 = 0;
          const l2 = e4 || [0], A2 = (r4 = r4 || 0) >>> 3, E2 = -1 === i3 ? 3 : 0, H2 = n3.indexOf("=");
          if (-1 === n3.search(/^[a-zA-Z0-9=+/]+$/))
            throw new Error("Invalid character in base-64 string");
          if (n3 = n3.replace(/=/g, ""), -1 !== H2 && H2 < n3.length)
            throw new Error("Invalid '=' found in base-64 string");
          for (o2 = 0; o2 < n3.length; o2 += 4) {
            for (w2 = n3.substr(o2, 4), u2 = 0, h2 = 0; h2 < w2.length; h2 += 1)
              s2 = t.indexOf(w2.charAt(h2)), u2 |= s2 << 18 - 6 * h2;
            for (h2 = 0; h2 < w2.length - 1; h2 += 1) {
              for (f2 = a2 + A2, c2 = f2 >>> 2; l2.length <= c2; )
                l2.push(0);
              l2[c2] |= (u2 >>> 16 - 8 * h2 & 255) << 8 * (E2 + i3 * (f2 % 4)), a2 += 1;
            }
          }
          return { value: l2, binLen: 8 * a2 + r4 };
        }(n2, e3, r3, i2);
      };
    case "BYTES":
      return function(t2, n2, e3) {
        return function(t3, n3, e4, r3) {
          let i3, s2, o2, h2;
          const u2 = n3 || [0], w2 = (e4 = e4 || 0) >>> 3, c2 = -1 === r3 ? 3 : 0;
          for (s2 = 0; s2 < t3.length; s2 += 1)
            i3 = t3.charCodeAt(s2), h2 = s2 + w2, o2 = h2 >>> 2, u2.length <= o2 && u2.push(0), u2[o2] |= i3 << 8 * (c2 + r3 * (h2 % 4));
          return { value: u2, binLen: 8 * t3.length + e4 };
        }(t2, n2, e3, i2);
      };
    case "ARRAYBUFFER":
      try {
        new ArrayBuffer(0);
      } catch (t2) {
        throw new Error("ARRAYBUFFER not supported by this environment");
      }
      return function(t2, e3, r3) {
        return function(t3, e4, r4, i3) {
          return n(new Uint8Array(t3), e4, r4, i3);
        }(t2, e3, r3, i2);
      };
    case "UINT8ARRAY":
      try {
        new Uint8Array(0);
      } catch (t2) {
        throw new Error("UINT8ARRAY not supported by this environment");
      }
      return function(t2, e3, r3) {
        return n(t2, e3, r3, i2);
      };
    default:
      throw new Error("format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
  }
}
function r(n2, e2, r2, i2) {
  switch (n2) {
    case "HEX":
      return function(t2) {
        return function(t3, n3, e3, r3) {
          let i3, s2, o2 = "";
          const h2 = n3 / 8, u2 = -1 === e3 ? 3 : 0;
          for (i3 = 0; i3 < h2; i3 += 1)
            s2 = t3[i3 >>> 2] >>> 8 * (u2 + e3 * (i3 % 4)), o2 += "0123456789abcdef".charAt(s2 >>> 4 & 15) + "0123456789abcdef".charAt(15 & s2);
          return r3.outputUpper ? o2.toUpperCase() : o2;
        }(t2, e2, r2, i2);
      };
    case "B64":
      return function(n3) {
        return function(n4, e3, r3, i3) {
          let s2, o2, h2, u2, w2, c2 = "";
          const f2 = e3 / 8, a2 = -1 === r3 ? 3 : 0;
          for (s2 = 0; s2 < f2; s2 += 3)
            for (u2 = s2 + 1 < f2 ? n4[s2 + 1 >>> 2] : 0, w2 = s2 + 2 < f2 ? n4[s2 + 2 >>> 2] : 0, h2 = (n4[s2 >>> 2] >>> 8 * (a2 + r3 * (s2 % 4)) & 255) << 16 | (u2 >>> 8 * (a2 + r3 * ((s2 + 1) % 4)) & 255) << 8 | w2 >>> 8 * (a2 + r3 * ((s2 + 2) % 4)) & 255, o2 = 0; o2 < 4; o2 += 1)
              c2 += 8 * s2 + 6 * o2 <= e3 ? t.charAt(h2 >>> 6 * (3 - o2) & 63) : i3.b64Pad;
          return c2;
        }(n3, e2, r2, i2);
      };
    case "BYTES":
      return function(t2) {
        return function(t3, n3, e3) {
          let r3, i3, s2 = "";
          const o2 = n3 / 8, h2 = -1 === e3 ? 3 : 0;
          for (r3 = 0; r3 < o2; r3 += 1)
            i3 = t3[r3 >>> 2] >>> 8 * (h2 + e3 * (r3 % 4)) & 255, s2 += String.fromCharCode(i3);
          return s2;
        }(t2, e2, r2);
      };
    case "ARRAYBUFFER":
      try {
        new ArrayBuffer(0);
      } catch (t2) {
        throw new Error("ARRAYBUFFER not supported by this environment");
      }
      return function(t2) {
        return function(t3, n3, e3) {
          let r3;
          const i3 = n3 / 8, s2 = new ArrayBuffer(i3), o2 = new Uint8Array(s2), h2 = -1 === e3 ? 3 : 0;
          for (r3 = 0; r3 < i3; r3 += 1)
            o2[r3] = t3[r3 >>> 2] >>> 8 * (h2 + e3 * (r3 % 4)) & 255;
          return s2;
        }(t2, e2, r2);
      };
    case "UINT8ARRAY":
      try {
        new Uint8Array(0);
      } catch (t2) {
        throw new Error("UINT8ARRAY not supported by this environment");
      }
      return function(t2) {
        return function(t3, n3, e3) {
          let r3;
          const i3 = n3 / 8, s2 = -1 === e3 ? 3 : 0, o2 = new Uint8Array(i3);
          for (r3 = 0; r3 < i3; r3 += 1)
            o2[r3] = t3[r3 >>> 2] >>> 8 * (s2 + e3 * (r3 % 4)) & 255;
          return o2;
        }(t2, e2, r2);
      };
    default:
      throw new Error("format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
  }
}
var i = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
var s = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
var o = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];
var h = "Chosen SHA variant is not supported";
function u(t2, n2) {
  let e2, r2;
  const i2 = t2.binLen >>> 3, s2 = n2.binLen >>> 3, o2 = i2 << 3, h2 = 4 - i2 << 3;
  if (i2 % 4 != 0) {
    for (e2 = 0; e2 < s2; e2 += 4)
      r2 = i2 + e2 >>> 2, t2.value[r2] |= n2.value[e2 >>> 2] << o2, t2.value.push(0), t2.value[r2 + 1] |= n2.value[e2 >>> 2] >>> h2;
    return (t2.value.length << 2) - 4 >= s2 + i2 && t2.value.pop(), { value: t2.value, binLen: t2.binLen + n2.binLen };
  }
  return { value: t2.value.concat(n2.value), binLen: t2.binLen + n2.binLen };
}
function w(t2) {
  const n2 = { outputUpper: false, b64Pad: "=", outputLen: -1 }, e2 = t2 || {}, r2 = "Output length must be a multiple of 8";
  if (n2.outputUpper = e2.outputUpper || false, e2.b64Pad && (n2.b64Pad = e2.b64Pad), e2.outputLen) {
    if (e2.outputLen % 8 != 0)
      throw new Error(r2);
    n2.outputLen = e2.outputLen;
  } else if (e2.shakeLen) {
    if (e2.shakeLen % 8 != 0)
      throw new Error(r2);
    n2.outputLen = e2.shakeLen;
  }
  if ("boolean" != typeof n2.outputUpper)
    throw new Error("Invalid outputUpper formatting option");
  if ("string" != typeof n2.b64Pad)
    throw new Error("Invalid b64Pad formatting option");
  return n2;
}
function c(t2, n2, r2, i2) {
  const s2 = t2 + " must include a value and format";
  if (!n2) {
    if (!i2)
      throw new Error(s2);
    return i2;
  }
  if (void 0 === n2.value || !n2.format)
    throw new Error(s2);
  return e(n2.format, n2.encoding || "UTF8", r2)(n2.value);
}
var f = class {
  constructor(t2, n2, e2) {
    const r2 = e2 || {};
    if (this.t = n2, this.i = r2.encoding || "UTF8", this.numRounds = r2.numRounds || 1, isNaN(this.numRounds) || this.numRounds !== parseInt(this.numRounds, 10) || 1 > this.numRounds)
      throw new Error("numRounds must a integer >= 1");
    this.s = t2, this.o = [], this.h = 0, this.u = false, this.l = 0, this.A = false, this.H = [], this.S = [];
  }
  update(t2) {
    let n2, e2 = 0;
    const r2 = this.p >>> 5, i2 = this.m(t2, this.o, this.h), s2 = i2.binLen, o2 = i2.value, h2 = s2 >>> 5;
    for (n2 = 0; n2 < h2; n2 += r2)
      e2 + this.p <= s2 && (this.C = this.R(o2.slice(n2, n2 + r2), this.C), e2 += this.p);
    this.l += e2, this.o = o2.slice(e2 >>> 5), this.h = s2 % this.p, this.u = true;
  }
  getHash(t2, n2) {
    let e2, i2, s2 = this.U;
    const o2 = w(n2);
    if (this.v) {
      if (-1 === o2.outputLen)
        throw new Error("Output length must be specified in options");
      s2 = o2.outputLen;
    }
    const h2 = r(t2, s2, this.K, o2);
    if (this.A && this.T)
      return h2(this.T(o2));
    for (i2 = this.F(this.o.slice(), this.h, this.l, this.g(this.C), s2), e2 = 1; e2 < this.numRounds; e2 += 1)
      this.v && s2 % 32 != 0 && (i2[i2.length - 1] &= 16777215 >>> 24 - s2 % 32), i2 = this.F(i2, s2, 0, this.B(this.s), s2);
    return h2(i2);
  }
  setHMACKey(t2, n2, r2) {
    if (!this.L)
      throw new Error("Variant does not support HMAC");
    if (this.u)
      throw new Error("Cannot set MAC key after calling update");
    const i2 = e(n2, (r2 || {}).encoding || "UTF8", this.K);
    this.M(i2(t2));
  }
  M(t2) {
    const n2 = this.p >>> 3, e2 = n2 / 4 - 1;
    let r2;
    if (1 !== this.numRounds)
      throw new Error("Cannot set numRounds with MAC");
    if (this.A)
      throw new Error("MAC key already set");
    for (n2 < t2.binLen / 8 && (t2.value = this.F(t2.value, t2.binLen, 0, this.B(this.s), this.U)); t2.value.length <= e2; )
      t2.value.push(0);
    for (r2 = 0; r2 <= e2; r2 += 1)
      this.H[r2] = 909522486 ^ t2.value[r2], this.S[r2] = 1549556828 ^ t2.value[r2];
    this.C = this.R(this.H, this.C), this.l = this.p, this.A = true;
  }
  getHMAC(t2, n2) {
    const e2 = w(n2);
    return r(t2, this.U, this.K, e2)(this.k());
  }
  k() {
    let t2;
    if (!this.A)
      throw new Error("Cannot call getHMAC without first setting MAC key");
    const n2 = this.F(this.o.slice(), this.h, this.l, this.g(this.C), this.U);
    return t2 = this.R(this.S, this.B(this.s)), t2 = this.F(n2, this.U, this.p, t2, this.U), t2;
  }
};
function a(t2, n2) {
  return t2 << n2 | t2 >>> 32 - n2;
}
function l(t2, n2) {
  return t2 >>> n2 | t2 << 32 - n2;
}
function A(t2, n2) {
  return t2 >>> n2;
}
function E(t2, n2, e2) {
  return t2 ^ n2 ^ e2;
}
function H(t2, n2, e2) {
  return t2 & n2 ^ ~t2 & e2;
}
function S(t2, n2, e2) {
  return t2 & n2 ^ t2 & e2 ^ n2 & e2;
}
function b(t2) {
  return l(t2, 2) ^ l(t2, 13) ^ l(t2, 22);
}
function p(t2, n2) {
  const e2 = (65535 & t2) + (65535 & n2);
  return (65535 & (t2 >>> 16) + (n2 >>> 16) + (e2 >>> 16)) << 16 | 65535 & e2;
}
function d(t2, n2, e2, r2) {
  const i2 = (65535 & t2) + (65535 & n2) + (65535 & e2) + (65535 & r2);
  return (65535 & (t2 >>> 16) + (n2 >>> 16) + (e2 >>> 16) + (r2 >>> 16) + (i2 >>> 16)) << 16 | 65535 & i2;
}
function m(t2, n2, e2, r2, i2) {
  const s2 = (65535 & t2) + (65535 & n2) + (65535 & e2) + (65535 & r2) + (65535 & i2);
  return (65535 & (t2 >>> 16) + (n2 >>> 16) + (e2 >>> 16) + (r2 >>> 16) + (i2 >>> 16) + (s2 >>> 16)) << 16 | 65535 & s2;
}
function C(t2) {
  return l(t2, 7) ^ l(t2, 18) ^ A(t2, 3);
}
function y(t2) {
  return l(t2, 6) ^ l(t2, 11) ^ l(t2, 25);
}
function R(t2) {
  return [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
}
function U(t2, n2) {
  let e2, r2, i2, s2, o2, h2, u2;
  const w2 = [];
  for (e2 = n2[0], r2 = n2[1], i2 = n2[2], s2 = n2[3], o2 = n2[4], u2 = 0; u2 < 80; u2 += 1)
    w2[u2] = u2 < 16 ? t2[u2] : a(w2[u2 - 3] ^ w2[u2 - 8] ^ w2[u2 - 14] ^ w2[u2 - 16], 1), h2 = u2 < 20 ? m(a(e2, 5), H(r2, i2, s2), o2, 1518500249, w2[u2]) : u2 < 40 ? m(a(e2, 5), E(r2, i2, s2), o2, 1859775393, w2[u2]) : u2 < 60 ? m(a(e2, 5), S(r2, i2, s2), o2, 2400959708, w2[u2]) : m(a(e2, 5), E(r2, i2, s2), o2, 3395469782, w2[u2]), o2 = s2, s2 = i2, i2 = a(r2, 30), r2 = e2, e2 = h2;
  return n2[0] = p(e2, n2[0]), n2[1] = p(r2, n2[1]), n2[2] = p(i2, n2[2]), n2[3] = p(s2, n2[3]), n2[4] = p(o2, n2[4]), n2;
}
function v(t2, n2, e2, r2) {
  let i2;
  const s2 = 15 + (n2 + 65 >>> 9 << 4), o2 = n2 + e2;
  for (; t2.length <= s2; )
    t2.push(0);
  for (t2[n2 >>> 5] |= 128 << 24 - n2 % 32, t2[s2] = 4294967295 & o2, t2[s2 - 1] = o2 / 4294967296 | 0, i2 = 0; i2 < t2.length; i2 += 16)
    r2 = U(t2.slice(i2, i2 + 16), r2);
  return r2;
}
var K = class extends f {
  constructor(t2, n2, r2) {
    if ("SHA-1" !== t2)
      throw new Error(h);
    super(t2, n2, r2);
    const i2 = r2 || {};
    this.L = true, this.T = this.k, this.K = -1, this.m = e(this.t, this.i, this.K), this.R = U, this.g = function(t3) {
      return t3.slice();
    }, this.B = R, this.F = v, this.C = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.p = 512, this.U = 160, this.v = false, i2.hmacKey && this.M(c("hmacKey", i2.hmacKey, this.K));
  }
};
function T(t2) {
  let n2;
  return n2 = "SHA-224" == t2 ? s.slice() : o.slice(), n2;
}
function F(t2, n2) {
  let e2, r2, s2, o2, h2, u2, w2, c2, f2, a2, E2;
  const R2 = [];
  for (e2 = n2[0], r2 = n2[1], s2 = n2[2], o2 = n2[3], h2 = n2[4], u2 = n2[5], w2 = n2[6], c2 = n2[7], E2 = 0; E2 < 64; E2 += 1)
    R2[E2] = E2 < 16 ? t2[E2] : d(l(U2 = R2[E2 - 2], 17) ^ l(U2, 19) ^ A(U2, 10), R2[E2 - 7], C(R2[E2 - 15]), R2[E2 - 16]), f2 = m(c2, y(h2), H(h2, u2, w2), i[E2], R2[E2]), a2 = p(b(e2), S(e2, r2, s2)), c2 = w2, w2 = u2, u2 = h2, h2 = p(o2, f2), o2 = s2, s2 = r2, r2 = e2, e2 = p(f2, a2);
  var U2;
  return n2[0] = p(e2, n2[0]), n2[1] = p(r2, n2[1]), n2[2] = p(s2, n2[2]), n2[3] = p(o2, n2[3]), n2[4] = p(h2, n2[4]), n2[5] = p(u2, n2[5]), n2[6] = p(w2, n2[6]), n2[7] = p(c2, n2[7]), n2;
}
var g = class extends f {
  constructor(t2, n2, r2) {
    if ("SHA-224" !== t2 && "SHA-256" !== t2)
      throw new Error(h);
    super(t2, n2, r2);
    const i2 = r2 || {};
    this.T = this.k, this.L = true, this.K = -1, this.m = e(this.t, this.i, this.K), this.R = F, this.g = function(t3) {
      return t3.slice();
    }, this.B = T, this.F = function(n3, e2, r3, i3) {
      return function(t3, n4, e3, r4, i4) {
        let s2, o2;
        const h2 = 15 + (n4 + 65 >>> 9 << 4), u2 = n4 + e3;
        for (; t3.length <= h2; )
          t3.push(0);
        for (t3[n4 >>> 5] |= 128 << 24 - n4 % 32, t3[h2] = 4294967295 & u2, t3[h2 - 1] = u2 / 4294967296 | 0, s2 = 0; s2 < t3.length; s2 += 16)
          r4 = F(t3.slice(s2, s2 + 16), r4);
        return o2 = "SHA-224" === i4 ? [r4[0], r4[1], r4[2], r4[3], r4[4], r4[5], r4[6]] : r4, o2;
      }(n3, e2, r3, i3, t2);
    }, this.C = T(t2), this.p = 512, this.U = "SHA-224" === t2 ? 224 : 256, this.v = false, i2.hmacKey && this.M(c("hmacKey", i2.hmacKey, this.K));
  }
};
var B = class {
  constructor(t2, n2) {
    this.Y = t2, this.N = n2;
  }
};
function L(t2, n2) {
  let e2;
  return n2 > 32 ? (e2 = 64 - n2, new B(t2.N << n2 | t2.Y >>> e2, t2.Y << n2 | t2.N >>> e2)) : 0 !== n2 ? (e2 = 32 - n2, new B(t2.Y << n2 | t2.N >>> e2, t2.N << n2 | t2.Y >>> e2)) : t2;
}
function M(t2, n2) {
  let e2;
  return n2 < 32 ? (e2 = 32 - n2, new B(t2.Y >>> n2 | t2.N << e2, t2.N >>> n2 | t2.Y << e2)) : (e2 = 64 - n2, new B(t2.N >>> n2 | t2.Y << e2, t2.Y >>> n2 | t2.N << e2));
}
function k(t2, n2) {
  return new B(t2.Y >>> n2, t2.N >>> n2 | t2.Y << 32 - n2);
}
function Y(t2, n2, e2) {
  return new B(t2.Y & n2.Y ^ t2.Y & e2.Y ^ n2.Y & e2.Y, t2.N & n2.N ^ t2.N & e2.N ^ n2.N & e2.N);
}
function N(t2) {
  const n2 = M(t2, 28), e2 = M(t2, 34), r2 = M(t2, 39);
  return new B(n2.Y ^ e2.Y ^ r2.Y, n2.N ^ e2.N ^ r2.N);
}
function I(t2, n2) {
  let e2, r2;
  e2 = (65535 & t2.N) + (65535 & n2.N), r2 = (t2.N >>> 16) + (n2.N >>> 16) + (e2 >>> 16);
  const i2 = (65535 & r2) << 16 | 65535 & e2;
  e2 = (65535 & t2.Y) + (65535 & n2.Y) + (r2 >>> 16), r2 = (t2.Y >>> 16) + (n2.Y >>> 16) + (e2 >>> 16);
  return new B((65535 & r2) << 16 | 65535 & e2, i2);
}
function X(t2, n2, e2, r2) {
  let i2, s2;
  i2 = (65535 & t2.N) + (65535 & n2.N) + (65535 & e2.N) + (65535 & r2.N), s2 = (t2.N >>> 16) + (n2.N >>> 16) + (e2.N >>> 16) + (r2.N >>> 16) + (i2 >>> 16);
  const o2 = (65535 & s2) << 16 | 65535 & i2;
  i2 = (65535 & t2.Y) + (65535 & n2.Y) + (65535 & e2.Y) + (65535 & r2.Y) + (s2 >>> 16), s2 = (t2.Y >>> 16) + (n2.Y >>> 16) + (e2.Y >>> 16) + (r2.Y >>> 16) + (i2 >>> 16);
  return new B((65535 & s2) << 16 | 65535 & i2, o2);
}
function z(t2, n2, e2, r2, i2) {
  let s2, o2;
  s2 = (65535 & t2.N) + (65535 & n2.N) + (65535 & e2.N) + (65535 & r2.N) + (65535 & i2.N), o2 = (t2.N >>> 16) + (n2.N >>> 16) + (e2.N >>> 16) + (r2.N >>> 16) + (i2.N >>> 16) + (s2 >>> 16);
  const h2 = (65535 & o2) << 16 | 65535 & s2;
  s2 = (65535 & t2.Y) + (65535 & n2.Y) + (65535 & e2.Y) + (65535 & r2.Y) + (65535 & i2.Y) + (o2 >>> 16), o2 = (t2.Y >>> 16) + (n2.Y >>> 16) + (e2.Y >>> 16) + (r2.Y >>> 16) + (i2.Y >>> 16) + (s2 >>> 16);
  return new B((65535 & o2) << 16 | 65535 & s2, h2);
}
function x(t2, n2) {
  return new B(t2.Y ^ n2.Y, t2.N ^ n2.N);
}
function _14(t2) {
  const n2 = M(t2, 19), e2 = M(t2, 61), r2 = k(t2, 6);
  return new B(n2.Y ^ e2.Y ^ r2.Y, n2.N ^ e2.N ^ r2.N);
}
function O(t2) {
  const n2 = M(t2, 1), e2 = M(t2, 8), r2 = k(t2, 7);
  return new B(n2.Y ^ e2.Y ^ r2.Y, n2.N ^ e2.N ^ r2.N);
}
function P(t2) {
  const n2 = M(t2, 14), e2 = M(t2, 18), r2 = M(t2, 41);
  return new B(n2.Y ^ e2.Y ^ r2.Y, n2.N ^ e2.N ^ r2.N);
}
var V = [new B(i[0], 3609767458), new B(i[1], 602891725), new B(i[2], 3964484399), new B(i[3], 2173295548), new B(i[4], 4081628472), new B(i[5], 3053834265), new B(i[6], 2937671579), new B(i[7], 3664609560), new B(i[8], 2734883394), new B(i[9], 1164996542), new B(i[10], 1323610764), new B(i[11], 3590304994), new B(i[12], 4068182383), new B(i[13], 991336113), new B(i[14], 633803317), new B(i[15], 3479774868), new B(i[16], 2666613458), new B(i[17], 944711139), new B(i[18], 2341262773), new B(i[19], 2007800933), new B(i[20], 1495990901), new B(i[21], 1856431235), new B(i[22], 3175218132), new B(i[23], 2198950837), new B(i[24], 3999719339), new B(i[25], 766784016), new B(i[26], 2566594879), new B(i[27], 3203337956), new B(i[28], 1034457026), new B(i[29], 2466948901), new B(i[30], 3758326383), new B(i[31], 168717936), new B(i[32], 1188179964), new B(i[33], 1546045734), new B(i[34], 1522805485), new B(i[35], 2643833823), new B(i[36], 2343527390), new B(i[37], 1014477480), new B(i[38], 1206759142), new B(i[39], 344077627), new B(i[40], 1290863460), new B(i[41], 3158454273), new B(i[42], 3505952657), new B(i[43], 106217008), new B(i[44], 3606008344), new B(i[45], 1432725776), new B(i[46], 1467031594), new B(i[47], 851169720), new B(i[48], 3100823752), new B(i[49], 1363258195), new B(i[50], 3750685593), new B(i[51], 3785050280), new B(i[52], 3318307427), new B(i[53], 3812723403), new B(i[54], 2003034995), new B(i[55], 3602036899), new B(i[56], 1575990012), new B(i[57], 1125592928), new B(i[58], 2716904306), new B(i[59], 442776044), new B(i[60], 593698344), new B(i[61], 3733110249), new B(i[62], 2999351573), new B(i[63], 3815920427), new B(3391569614, 3928383900), new B(3515267271, 566280711), new B(3940187606, 3454069534), new B(4118630271, 4000239992), new B(116418474, 1914138554), new B(174292421, 2731055270), new B(289380356, 3203993006), new B(460393269, 320620315), new B(685471733, 587496836), new B(852142971, 1086792851), new B(1017036298, 365543100), new B(1126000580, 2618297676), new B(1288033470, 3409855158), new B(1501505948, 4234509866), new B(1607167915, 987167468), new B(1816402316, 1246189591)];
function Z(t2) {
  return "SHA-384" === t2 ? [new B(3418070365, s[0]), new B(1654270250, s[1]), new B(2438529370, s[2]), new B(355462360, s[3]), new B(1731405415, s[4]), new B(41048885895, s[5]), new B(3675008525, s[6]), new B(1203062813, s[7])] : [new B(o[0], 4089235720), new B(o[1], 2227873595), new B(o[2], 4271175723), new B(o[3], 1595750129), new B(o[4], 2917565137), new B(o[5], 725511199), new B(o[6], 4215389547), new B(o[7], 327033209)];
}
function j(t2, n2) {
  let e2, r2, i2, s2, o2, h2, u2, w2, c2, f2, a2, l2;
  const A2 = [];
  for (e2 = n2[0], r2 = n2[1], i2 = n2[2], s2 = n2[3], o2 = n2[4], h2 = n2[5], u2 = n2[6], w2 = n2[7], a2 = 0; a2 < 80; a2 += 1)
    a2 < 16 ? (l2 = 2 * a2, A2[a2] = new B(t2[l2], t2[l2 + 1])) : A2[a2] = X(_14(A2[a2 - 2]), A2[a2 - 7], O(A2[a2 - 15]), A2[a2 - 16]), c2 = z(w2, P(o2), (H2 = h2, S2 = u2, new B((E2 = o2).Y & H2.Y ^ ~E2.Y & S2.Y, E2.N & H2.N ^ ~E2.N & S2.N)), V[a2], A2[a2]), f2 = I(N(e2), Y(e2, r2, i2)), w2 = u2, u2 = h2, h2 = o2, o2 = I(s2, c2), s2 = i2, i2 = r2, r2 = e2, e2 = I(c2, f2);
  var E2, H2, S2;
  return n2[0] = I(e2, n2[0]), n2[1] = I(r2, n2[1]), n2[2] = I(i2, n2[2]), n2[3] = I(s2, n2[3]), n2[4] = I(o2, n2[4]), n2[5] = I(h2, n2[5]), n2[6] = I(u2, n2[6]), n2[7] = I(w2, n2[7]), n2;
}
var q = class extends f {
  constructor(t2, n2, r2) {
    if ("SHA-384" !== t2 && "SHA-512" !== t2)
      throw new Error(h);
    super(t2, n2, r2);
    const i2 = r2 || {};
    this.T = this.k, this.L = true, this.K = -1, this.m = e(this.t, this.i, this.K), this.R = j, this.g = function(t3) {
      return t3.slice();
    }, this.B = Z, this.F = function(n3, e2, r3, i3) {
      return function(t3, n4, e3, r4, i4) {
        let s2, o2;
        const h2 = 31 + (n4 + 129 >>> 10 << 5), u2 = n4 + e3;
        for (; t3.length <= h2; )
          t3.push(0);
        for (t3[n4 >>> 5] |= 128 << 24 - n4 % 32, t3[h2] = 4294967295 & u2, t3[h2 - 1] = u2 / 4294967296 | 0, s2 = 0; s2 < t3.length; s2 += 32)
          r4 = j(t3.slice(s2, s2 + 32), r4);
        return o2 = "SHA-384" === i4 ? [(r4 = r4)[0].Y, r4[0].N, r4[1].Y, r4[1].N, r4[2].Y, r4[2].N, r4[3].Y, r4[3].N, r4[4].Y, r4[4].N, r4[5].Y, r4[5].N] : [r4[0].Y, r4[0].N, r4[1].Y, r4[1].N, r4[2].Y, r4[2].N, r4[3].Y, r4[3].N, r4[4].Y, r4[4].N, r4[5].Y, r4[5].N, r4[6].Y, r4[6].N, r4[7].Y, r4[7].N], o2;
      }(n3, e2, r3, i3, t2);
    }, this.C = Z(t2), this.p = 1024, this.U = "SHA-384" === t2 ? 384 : 512, this.v = false, i2.hmacKey && this.M(c("hmacKey", i2.hmacKey, this.K));
  }
};
var D = [new B(0, 1), new B(0, 32898), new B(2147483648, 32906), new B(2147483648, 2147516416), new B(0, 32907), new B(0, 2147483649), new B(2147483648, 2147516545), new B(2147483648, 32777), new B(0, 138), new B(0, 136), new B(0, 2147516425), new B(0, 2147483658), new B(0, 2147516555), new B(2147483648, 139), new B(2147483648, 32905), new B(2147483648, 32771), new B(2147483648, 32770), new B(2147483648, 128), new B(0, 32778), new B(2147483648, 2147483658), new B(2147483648, 2147516545), new B(2147483648, 32896), new B(0, 2147483649), new B(2147483648, 2147516424)];
var G = [[0, 36, 3, 41, 18], [1, 44, 10, 45, 2], [62, 6, 43, 15, 61], [28, 55, 25, 21, 56], [27, 20, 39, 8, 14]];
function J(t2) {
  let n2;
  const e2 = [];
  for (n2 = 0; n2 < 5; n2 += 1)
    e2[n2] = [new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0)];
  return e2;
}
function Q(t2) {
  let n2;
  const e2 = [];
  for (n2 = 0; n2 < 5; n2 += 1)
    e2[n2] = t2[n2].slice();
  return e2;
}
function W(t2, n2) {
  let e2, r2, i2, s2;
  const o2 = [], h2 = [];
  if (null !== t2)
    for (r2 = 0; r2 < t2.length; r2 += 2)
      n2[(r2 >>> 1) % 5][(r2 >>> 1) / 5 | 0] = x(n2[(r2 >>> 1) % 5][(r2 >>> 1) / 5 | 0], new B(t2[r2 + 1], t2[r2]));
  for (e2 = 0; e2 < 24; e2 += 1) {
    for (s2 = J(), r2 = 0; r2 < 5; r2 += 1)
      o2[r2] = (u2 = n2[r2][0], w2 = n2[r2][1], c2 = n2[r2][2], f2 = n2[r2][3], a2 = n2[r2][4], new B(u2.Y ^ w2.Y ^ c2.Y ^ f2.Y ^ a2.Y, u2.N ^ w2.N ^ c2.N ^ f2.N ^ a2.N));
    for (r2 = 0; r2 < 5; r2 += 1)
      h2[r2] = x(o2[(r2 + 4) % 5], L(o2[(r2 + 1) % 5], 1));
    for (r2 = 0; r2 < 5; r2 += 1)
      for (i2 = 0; i2 < 5; i2 += 1)
        n2[r2][i2] = x(n2[r2][i2], h2[r2]);
    for (r2 = 0; r2 < 5; r2 += 1)
      for (i2 = 0; i2 < 5; i2 += 1)
        s2[i2][(2 * r2 + 3 * i2) % 5] = L(n2[r2][i2], G[r2][i2]);
    for (r2 = 0; r2 < 5; r2 += 1)
      for (i2 = 0; i2 < 5; i2 += 1)
        n2[r2][i2] = x(s2[r2][i2], new B(~s2[(r2 + 1) % 5][i2].Y & s2[(r2 + 2) % 5][i2].Y, ~s2[(r2 + 1) % 5][i2].N & s2[(r2 + 2) % 5][i2].N));
    n2[0][0] = x(n2[0][0], D[e2]);
  }
  var u2, w2, c2, f2, a2;
  return n2;
}
function $(t2) {
  let n2, e2, r2 = 0;
  const i2 = [0, 0], s2 = [4294967295 & t2, t2 / 4294967296 & 2097151];
  for (n2 = 6; n2 >= 0; n2--)
    e2 = s2[n2 >> 2] >>> 8 * n2 & 255, 0 === e2 && 0 === r2 || (i2[r2 + 1 >> 2] |= e2 << 8 * (r2 + 1), r2 += 1);
  return r2 = 0 !== r2 ? r2 : 1, i2[0] |= r2, { value: r2 + 1 > 4 ? i2 : [i2[0]], binLen: 8 + 8 * r2 };
}
function tt(t2) {
  return u($(t2.binLen), t2);
}
function nt(t2, n2) {
  let e2, r2 = $(n2);
  r2 = u(r2, t2);
  const i2 = n2 >>> 2, s2 = (i2 - r2.value.length % i2) % i2;
  for (e2 = 0; e2 < s2; e2++)
    r2.value.push(0);
  return r2.value;
}
var et = class extends f {
  constructor(t2, n2, r2) {
    let i2 = 6, s2 = 0;
    super(t2, n2, r2);
    const o2 = r2 || {};
    if (1 !== this.numRounds) {
      if (o2.kmacKey || o2.hmacKey)
        throw new Error("Cannot set numRounds with MAC");
      if ("CSHAKE128" === this.s || "CSHAKE256" === this.s)
        throw new Error("Cannot set numRounds for CSHAKE variants");
    }
    switch (this.K = 1, this.m = e(this.t, this.i, this.K), this.R = W, this.g = Q, this.B = J, this.C = J(), this.v = false, t2) {
      case "SHA3-224":
        this.p = s2 = 1152, this.U = 224, this.L = true, this.T = this.k;
        break;
      case "SHA3-256":
        this.p = s2 = 1088, this.U = 256, this.L = true, this.T = this.k;
        break;
      case "SHA3-384":
        this.p = s2 = 832, this.U = 384, this.L = true, this.T = this.k;
        break;
      case "SHA3-512":
        this.p = s2 = 576, this.U = 512, this.L = true, this.T = this.k;
        break;
      case "SHAKE128":
        i2 = 31, this.p = s2 = 1344, this.U = -1, this.v = true, this.L = false, this.T = null;
        break;
      case "SHAKE256":
        i2 = 31, this.p = s2 = 1088, this.U = -1, this.v = true, this.L = false, this.T = null;
        break;
      case "KMAC128":
        i2 = 4, this.p = s2 = 1344, this.I(r2), this.U = -1, this.v = true, this.L = false, this.T = this.X;
        break;
      case "KMAC256":
        i2 = 4, this.p = s2 = 1088, this.I(r2), this.U = -1, this.v = true, this.L = false, this.T = this.X;
        break;
      case "CSHAKE128":
        this.p = s2 = 1344, i2 = this._(r2), this.U = -1, this.v = true, this.L = false, this.T = null;
        break;
      case "CSHAKE256":
        this.p = s2 = 1088, i2 = this._(r2), this.U = -1, this.v = true, this.L = false, this.T = null;
        break;
      default:
        throw new Error(h);
    }
    this.F = function(t3, n3, e2, r3, o3) {
      return function(t4, n4, e3, r4, i3, s3, o4) {
        let h2, u2, w2 = 0;
        const c2 = [], f2 = i3 >>> 5, a2 = n4 >>> 5;
        for (h2 = 0; h2 < a2 && n4 >= i3; h2 += f2)
          r4 = W(t4.slice(h2, h2 + f2), r4), n4 -= i3;
        for (t4 = t4.slice(h2), n4 %= i3; t4.length < f2; )
          t4.push(0);
        for (h2 = n4 >>> 3, t4[h2 >> 2] ^= s3 << h2 % 4 * 8, t4[f2 - 1] ^= 2147483648, r4 = W(t4, r4); 32 * c2.length < o4 && (u2 = r4[w2 % 5][w2 / 5 | 0], c2.push(u2.N), !(32 * c2.length >= o4)); )
          c2.push(u2.Y), w2 += 1, 0 == 64 * w2 % i3 && (W(null, r4), w2 = 0);
        return c2;
      }(t3, n3, 0, r3, s2, i2, o3);
    }, o2.hmacKey && this.M(c("hmacKey", o2.hmacKey, this.K));
  }
  _(t2, n2) {
    const e2 = function(t3) {
      const n3 = t3 || {};
      return { funcName: c("funcName", n3.funcName, 1, { value: [], binLen: 0 }), customization: c("Customization", n3.customization, 1, { value: [], binLen: 0 }) };
    }(t2 || {});
    n2 && (e2.funcName = n2);
    const r2 = u(tt(e2.funcName), tt(e2.customization));
    if (0 !== e2.customization.binLen || 0 !== e2.funcName.binLen) {
      const t3 = nt(r2, this.p >>> 3);
      for (let n3 = 0; n3 < t3.length; n3 += this.p >>> 5)
        this.C = this.R(t3.slice(n3, n3 + (this.p >>> 5)), this.C), this.l += this.p;
      return 4;
    }
    return 31;
  }
  I(t2) {
    const n2 = function(t3) {
      const n3 = t3 || {};
      return { kmacKey: c("kmacKey", n3.kmacKey, 1), funcName: { value: [1128353099], binLen: 32 }, customization: c("Customization", n3.customization, 1, { value: [], binLen: 0 }) };
    }(t2 || {});
    this._(t2, n2.funcName);
    const e2 = nt(tt(n2.kmacKey), this.p >>> 3);
    for (let t3 = 0; t3 < e2.length; t3 += this.p >>> 5)
      this.C = this.R(e2.slice(t3, t3 + (this.p >>> 5)), this.C), this.l += this.p;
    this.A = true;
  }
  X(t2) {
    const n2 = u({ value: this.o.slice(), binLen: this.h }, function(t3) {
      let n3, e2, r2 = 0;
      const i2 = [0, 0], s2 = [4294967295 & t3, t3 / 4294967296 & 2097151];
      for (n3 = 6; n3 >= 0; n3--)
        e2 = s2[n3 >> 2] >>> 8 * n3 & 255, 0 === e2 && 0 === r2 || (i2[r2 >> 2] |= e2 << 8 * r2, r2 += 1);
      return r2 = 0 !== r2 ? r2 : 1, i2[r2 >> 2] |= r2 << 8 * r2, { value: r2 + 1 > 4 ? i2 : [i2[0]], binLen: 8 + 8 * r2 };
    }(t2.outputLen));
    return this.F(n2.value, n2.binLen, this.l, this.g(this.C), t2.outputLen);
  }
};
var sha_default = class {
  constructor(t2, n2, e2) {
    if ("SHA-1" == t2)
      this.O = new K(t2, n2, e2);
    else if ("SHA-224" == t2 || "SHA-256" == t2)
      this.O = new g(t2, n2, e2);
    else if ("SHA-384" == t2 || "SHA-512" == t2)
      this.O = new q(t2, n2, e2);
    else {
      if ("SHA3-224" != t2 && "SHA3-256" != t2 && "SHA3-384" != t2 && "SHA3-512" != t2 && "SHAKE128" != t2 && "SHAKE256" != t2 && "CSHAKE128" != t2 && "CSHAKE256" != t2 && "KMAC128" != t2 && "KMAC256" != t2)
        throw new Error(h);
      this.O = new et(t2, n2, e2);
    }
  }
  update(t2) {
    this.O.update(t2);
  }
  getHash(t2, n2) {
    return this.O.getHash(t2, n2);
  }
  setHMACKey(t2, n2, e2) {
    this.O.setHMACKey(t2, n2, e2);
  }
  getHMAC(t2, n2) {
    return this.O.getHMAC(t2, n2);
  }
};

// ../../node_modules/@ton/crypto/dist/primitives/hmac_sha512.js
function $$cjs_default$$7(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global8 !== "undefined" && global8 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global8 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global8 !== "undefined" && global8 || typeof globalThis !== "undefined" && globalThis || {};
var exports7 = {};
var module7 = {
  get exports() {
    return exports7;
  },
  set exports(value) {
    exports7 = value;
  }
};
var __importDefault6 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports7, "__esModule", { value: true });
exports7.hmac_sha512 = exports7.hmac_sha512_fallback = void 0;
var jssha_1 = __importDefault6($$cjs_default$$7(typeof sha_exports !== "undefined" ? sha_exports : {}));
var crypto_primitives_1 = $$cjs_default$$7(typeof node_exports !== "undefined" ? node_exports : {});
async function hmac_sha512_fallback(key, data) {
  let keyBuffer = typeof key === "string" ? Buffer.from(key, "utf-8") : key;
  let dataBuffer = typeof data === "string" ? Buffer.from(data, "utf-8") : data;
  const shaObj = new jssha_1.default("SHA-512", "HEX", {
    hmacKey: { value: keyBuffer.toString("hex"), format: "HEX" }
  });
  shaObj.update(dataBuffer.toString("hex"));
  const hmac = shaObj.getHash("HEX");
  return Buffer.from(hmac, "hex");
}
exports7.hmac_sha512_fallback = hmac_sha512_fallback;
function hmac_sha5122(key, data) {
  return (0, crypto_primitives_1.hmac_sha512)(key, data);
}
exports7.hmac_sha512 = hmac_sha5122;
var __export07;
var __export13;
if (Object.isExtensible(module7.exports)) {
  __export07 = module7.exports["hmac_sha512"];
  __export13 = module7.exports["hmac_sha512_fallback"];
}

// ../../node_modules/@ton/crypto/dist/mnemonic/mnemonic.js
var mnemonic_exports = {};
__export(mnemonic_exports, {
  bytesToMnemonicIndexes: () => __export32,
  bytesToMnemonics: () => __export24,
  mnemonicFromRandomSeed: () => __export012,
  mnemonicIndexesToBytes: () => __export16,
  mnemonicNew: () => __export42,
  mnemonicToEntropy: () => __export10,
  mnemonicToHDSeed: () => __export6,
  mnemonicToPrivateKey: () => __export8,
  mnemonicToSeed: () => __export9,
  mnemonicToWalletKey: () => __export7,
  mnemonicValidate: () => __export52
});

// ../../node_modules/@ton/crypto/dist/mnemonic/wordlist.js
var wordlist_exports = {};
__export(wordlist_exports, {
  wordlist: () => __export08
});
var exports8 = {};
var module8 = {
  get exports() {
    return exports8;
  },
  set exports(value) {
    exports8 = value;
  }
};
Object.defineProperty(exports8, "__esModule", { value: true });
exports8.wordlist = void 0;
var EN = [
  "abandon",
  "ability",
  "able",
  "about",
  "above",
  "absent",
  "absorb",
  "abstract",
  "absurd",
  "abuse",
  "access",
  "accident",
  "account",
  "accuse",
  "achieve",
  "acid",
  "acoustic",
  "acquire",
  "across",
  "act",
  "action",
  "actor",
  "actress",
  "actual",
  "adapt",
  "add",
  "addict",
  "address",
  "adjust",
  "admit",
  "adult",
  "advance",
  "advice",
  "aerobic",
  "affair",
  "afford",
  "afraid",
  "again",
  "age",
  "agent",
  "agree",
  "ahead",
  "aim",
  "air",
  "airport",
  "aisle",
  "alarm",
  "album",
  "alcohol",
  "alert",
  "alien",
  "all",
  "alley",
  "allow",
  "almost",
  "alone",
  "alpha",
  "already",
  "also",
  "alter",
  "always",
  "amateur",
  "amazing",
  "among",
  "amount",
  "amused",
  "analyst",
  "anchor",
  "ancient",
  "anger",
  "angle",
  "angry",
  "animal",
  "ankle",
  "announce",
  "annual",
  "another",
  "answer",
  "antenna",
  "antique",
  "anxiety",
  "any",
  "apart",
  "apology",
  "appear",
  "apple",
  "approve",
  "april",
  "arch",
  "arctic",
  "area",
  "arena",
  "argue",
  "arm",
  "armed",
  "armor",
  "army",
  "around",
  "arrange",
  "arrest",
  "arrive",
  "arrow",
  "art",
  "artefact",
  "artist",
  "artwork",
  "ask",
  "aspect",
  "assault",
  "asset",
  "assist",
  "assume",
  "asthma",
  "athlete",
  "atom",
  "attack",
  "attend",
  "attitude",
  "attract",
  "auction",
  "audit",
  "august",
  "aunt",
  "author",
  "auto",
  "autumn",
  "average",
  "avocado",
  "avoid",
  "awake",
  "aware",
  "away",
  "awesome",
  "awful",
  "awkward",
  "axis",
  "baby",
  "bachelor",
  "bacon",
  "badge",
  "bag",
  "balance",
  "balcony",
  "ball",
  "bamboo",
  "banana",
  "banner",
  "bar",
  "barely",
  "bargain",
  "barrel",
  "base",
  "basic",
  "basket",
  "battle",
  "beach",
  "bean",
  "beauty",
  "because",
  "become",
  "beef",
  "before",
  "begin",
  "behave",
  "behind",
  "believe",
  "below",
  "belt",
  "bench",
  "benefit",
  "best",
  "betray",
  "better",
  "between",
  "beyond",
  "bicycle",
  "bid",
  "bike",
  "bind",
  "biology",
  "bird",
  "birth",
  "bitter",
  "black",
  "blade",
  "blame",
  "blanket",
  "blast",
  "bleak",
  "bless",
  "blind",
  "blood",
  "blossom",
  "blouse",
  "blue",
  "blur",
  "blush",
  "board",
  "boat",
  "body",
  "boil",
  "bomb",
  "bone",
  "bonus",
  "book",
  "boost",
  "border",
  "boring",
  "borrow",
  "boss",
  "bottom",
  "bounce",
  "box",
  "boy",
  "bracket",
  "brain",
  "brand",
  "brass",
  "brave",
  "bread",
  "breeze",
  "brick",
  "bridge",
  "brief",
  "bright",
  "bring",
  "brisk",
  "broccoli",
  "broken",
  "bronze",
  "broom",
  "brother",
  "brown",
  "brush",
  "bubble",
  "buddy",
  "budget",
  "buffalo",
  "build",
  "bulb",
  "bulk",
  "bullet",
  "bundle",
  "bunker",
  "burden",
  "burger",
  "burst",
  "bus",
  "business",
  "busy",
  "butter",
  "buyer",
  "buzz",
  "cabbage",
  "cabin",
  "cable",
  "cactus",
  "cage",
  "cake",
  "call",
  "calm",
  "camera",
  "camp",
  "can",
  "canal",
  "cancel",
  "candy",
  "cannon",
  "canoe",
  "canvas",
  "canyon",
  "capable",
  "capital",
  "captain",
  "car",
  "carbon",
  "card",
  "cargo",
  "carpet",
  "carry",
  "cart",
  "case",
  "cash",
  "casino",
  "castle",
  "casual",
  "cat",
  "catalog",
  "catch",
  "category",
  "cattle",
  "caught",
  "cause",
  "caution",
  "cave",
  "ceiling",
  "celery",
  "cement",
  "census",
  "century",
  "cereal",
  "certain",
  "chair",
  "chalk",
  "champion",
  "change",
  "chaos",
  "chapter",
  "charge",
  "chase",
  "chat",
  "cheap",
  "check",
  "cheese",
  "chef",
  "cherry",
  "chest",
  "chicken",
  "chief",
  "child",
  "chimney",
  "choice",
  "choose",
  "chronic",
  "chuckle",
  "chunk",
  "churn",
  "cigar",
  "cinnamon",
  "circle",
  "citizen",
  "city",
  "civil",
  "claim",
  "clap",
  "clarify",
  "claw",
  "clay",
  "clean",
  "clerk",
  "clever",
  "click",
  "client",
  "cliff",
  "climb",
  "clinic",
  "clip",
  "clock",
  "clog",
  "close",
  "cloth",
  "cloud",
  "clown",
  "club",
  "clump",
  "cluster",
  "clutch",
  "coach",
  "coast",
  "coconut",
  "code",
  "coffee",
  "coil",
  "coin",
  "collect",
  "color",
  "column",
  "combine",
  "come",
  "comfort",
  "comic",
  "common",
  "company",
  "concert",
  "conduct",
  "confirm",
  "congress",
  "connect",
  "consider",
  "control",
  "convince",
  "cook",
  "cool",
  "copper",
  "copy",
  "coral",
  "core",
  "corn",
  "correct",
  "cost",
  "cotton",
  "couch",
  "country",
  "couple",
  "course",
  "cousin",
  "cover",
  "coyote",
  "crack",
  "cradle",
  "craft",
  "cram",
  "crane",
  "crash",
  "crater",
  "crawl",
  "crazy",
  "cream",
  "credit",
  "creek",
  "crew",
  "cricket",
  "crime",
  "crisp",
  "critic",
  "crop",
  "cross",
  "crouch",
  "crowd",
  "crucial",
  "cruel",
  "cruise",
  "crumble",
  "crunch",
  "crush",
  "cry",
  "crystal",
  "cube",
  "culture",
  "cup",
  "cupboard",
  "curious",
  "current",
  "curtain",
  "curve",
  "cushion",
  "custom",
  "cute",
  "cycle",
  "dad",
  "damage",
  "damp",
  "dance",
  "danger",
  "daring",
  "dash",
  "daughter",
  "dawn",
  "day",
  "deal",
  "debate",
  "debris",
  "decade",
  "december",
  "decide",
  "decline",
  "decorate",
  "decrease",
  "deer",
  "defense",
  "define",
  "defy",
  "degree",
  "delay",
  "deliver",
  "demand",
  "demise",
  "denial",
  "dentist",
  "deny",
  "depart",
  "depend",
  "deposit",
  "depth",
  "deputy",
  "derive",
  "describe",
  "desert",
  "design",
  "desk",
  "despair",
  "destroy",
  "detail",
  "detect",
  "develop",
  "device",
  "devote",
  "diagram",
  "dial",
  "diamond",
  "diary",
  "dice",
  "diesel",
  "diet",
  "differ",
  "digital",
  "dignity",
  "dilemma",
  "dinner",
  "dinosaur",
  "direct",
  "dirt",
  "disagree",
  "discover",
  "disease",
  "dish",
  "dismiss",
  "disorder",
  "display",
  "distance",
  "divert",
  "divide",
  "divorce",
  "dizzy",
  "doctor",
  "document",
  "dog",
  "doll",
  "dolphin",
  "domain",
  "donate",
  "donkey",
  "donor",
  "door",
  "dose",
  "double",
  "dove",
  "draft",
  "dragon",
  "drama",
  "drastic",
  "draw",
  "dream",
  "dress",
  "drift",
  "drill",
  "drink",
  "drip",
  "drive",
  "drop",
  "drum",
  "dry",
  "duck",
  "dumb",
  "dune",
  "during",
  "dust",
  "dutch",
  "duty",
  "dwarf",
  "dynamic",
  "eager",
  "eagle",
  "early",
  "earn",
  "earth",
  "easily",
  "east",
  "easy",
  "echo",
  "ecology",
  "economy",
  "edge",
  "edit",
  "educate",
  "effort",
  "egg",
  "eight",
  "either",
  "elbow",
  "elder",
  "electric",
  "elegant",
  "element",
  "elephant",
  "elevator",
  "elite",
  "else",
  "embark",
  "embody",
  "embrace",
  "emerge",
  "emotion",
  "employ",
  "empower",
  "empty",
  "enable",
  "enact",
  "end",
  "endless",
  "endorse",
  "enemy",
  "energy",
  "enforce",
  "engage",
  "engine",
  "enhance",
  "enjoy",
  "enlist",
  "enough",
  "enrich",
  "enroll",
  "ensure",
  "enter",
  "entire",
  "entry",
  "envelope",
  "episode",
  "equal",
  "equip",
  "era",
  "erase",
  "erode",
  "erosion",
  "error",
  "erupt",
  "escape",
  "essay",
  "essence",
  "estate",
  "eternal",
  "ethics",
  "evidence",
  "evil",
  "evoke",
  "evolve",
  "exact",
  "example",
  "excess",
  "exchange",
  "excite",
  "exclude",
  "excuse",
  "execute",
  "exercise",
  "exhaust",
  "exhibit",
  "exile",
  "exist",
  "exit",
  "exotic",
  "expand",
  "expect",
  "expire",
  "explain",
  "expose",
  "express",
  "extend",
  "extra",
  "eye",
  "eyebrow",
  "fabric",
  "face",
  "faculty",
  "fade",
  "faint",
  "faith",
  "fall",
  "false",
  "fame",
  "family",
  "famous",
  "fan",
  "fancy",
  "fantasy",
  "farm",
  "fashion",
  "fat",
  "fatal",
  "father",
  "fatigue",
  "fault",
  "favorite",
  "feature",
  "february",
  "federal",
  "fee",
  "feed",
  "feel",
  "female",
  "fence",
  "festival",
  "fetch",
  "fever",
  "few",
  "fiber",
  "fiction",
  "field",
  "figure",
  "file",
  "film",
  "filter",
  "final",
  "find",
  "fine",
  "finger",
  "finish",
  "fire",
  "firm",
  "first",
  "fiscal",
  "fish",
  "fit",
  "fitness",
  "fix",
  "flag",
  "flame",
  "flash",
  "flat",
  "flavor",
  "flee",
  "flight",
  "flip",
  "float",
  "flock",
  "floor",
  "flower",
  "fluid",
  "flush",
  "fly",
  "foam",
  "focus",
  "fog",
  "foil",
  "fold",
  "follow",
  "food",
  "foot",
  "force",
  "forest",
  "forget",
  "fork",
  "fortune",
  "forum",
  "forward",
  "fossil",
  "foster",
  "found",
  "fox",
  "fragile",
  "frame",
  "frequent",
  "fresh",
  "friend",
  "fringe",
  "frog",
  "front",
  "frost",
  "frown",
  "frozen",
  "fruit",
  "fuel",
  "fun",
  "funny",
  "furnace",
  "fury",
  "future",
  "gadget",
  "gain",
  "galaxy",
  "gallery",
  "game",
  "gap",
  "garage",
  "garbage",
  "garden",
  "garlic",
  "garment",
  "gas",
  "gasp",
  "gate",
  "gather",
  "gauge",
  "gaze",
  "general",
  "genius",
  "genre",
  "gentle",
  "genuine",
  "gesture",
  "ghost",
  "giant",
  "gift",
  "giggle",
  "ginger",
  "giraffe",
  "girl",
  "give",
  "glad",
  "glance",
  "glare",
  "glass",
  "glide",
  "glimpse",
  "globe",
  "gloom",
  "glory",
  "glove",
  "glow",
  "glue",
  "goat",
  "goddess",
  "gold",
  "good",
  "goose",
  "gorilla",
  "gospel",
  "gossip",
  "govern",
  "gown",
  "grab",
  "grace",
  "grain",
  "grant",
  "grape",
  "grass",
  "gravity",
  "great",
  "green",
  "grid",
  "grief",
  "grit",
  "grocery",
  "group",
  "grow",
  "grunt",
  "guard",
  "guess",
  "guide",
  "guilt",
  "guitar",
  "gun",
  "gym",
  "habit",
  "hair",
  "half",
  "hammer",
  "hamster",
  "hand",
  "happy",
  "harbor",
  "hard",
  "harsh",
  "harvest",
  "hat",
  "have",
  "hawk",
  "hazard",
  "head",
  "health",
  "heart",
  "heavy",
  "hedgehog",
  "height",
  "hello",
  "helmet",
  "help",
  "hen",
  "hero",
  "hidden",
  "high",
  "hill",
  "hint",
  "hip",
  "hire",
  "history",
  "hobby",
  "hockey",
  "hold",
  "hole",
  "holiday",
  "hollow",
  "home",
  "honey",
  "hood",
  "hope",
  "horn",
  "horror",
  "horse",
  "hospital",
  "host",
  "hotel",
  "hour",
  "hover",
  "hub",
  "huge",
  "human",
  "humble",
  "humor",
  "hundred",
  "hungry",
  "hunt",
  "hurdle",
  "hurry",
  "hurt",
  "husband",
  "hybrid",
  "ice",
  "icon",
  "idea",
  "identify",
  "idle",
  "ignore",
  "ill",
  "illegal",
  "illness",
  "image",
  "imitate",
  "immense",
  "immune",
  "impact",
  "impose",
  "improve",
  "impulse",
  "inch",
  "include",
  "income",
  "increase",
  "index",
  "indicate",
  "indoor",
  "industry",
  "infant",
  "inflict",
  "inform",
  "inhale",
  "inherit",
  "initial",
  "inject",
  "injury",
  "inmate",
  "inner",
  "innocent",
  "input",
  "inquiry",
  "insane",
  "insect",
  "inside",
  "inspire",
  "install",
  "intact",
  "interest",
  "into",
  "invest",
  "invite",
  "involve",
  "iron",
  "island",
  "isolate",
  "issue",
  "item",
  "ivory",
  "jacket",
  "jaguar",
  "jar",
  "jazz",
  "jealous",
  "jeans",
  "jelly",
  "jewel",
  "job",
  "join",
  "joke",
  "journey",
  "joy",
  "judge",
  "juice",
  "jump",
  "jungle",
  "junior",
  "junk",
  "just",
  "kangaroo",
  "keen",
  "keep",
  "ketchup",
  "key",
  "kick",
  "kid",
  "kidney",
  "kind",
  "kingdom",
  "kiss",
  "kit",
  "kitchen",
  "kite",
  "kitten",
  "kiwi",
  "knee",
  "knife",
  "knock",
  "know",
  "lab",
  "label",
  "labor",
  "ladder",
  "lady",
  "lake",
  "lamp",
  "language",
  "laptop",
  "large",
  "later",
  "latin",
  "laugh",
  "laundry",
  "lava",
  "law",
  "lawn",
  "lawsuit",
  "layer",
  "lazy",
  "leader",
  "leaf",
  "learn",
  "leave",
  "lecture",
  "left",
  "leg",
  "legal",
  "legend",
  "leisure",
  "lemon",
  "lend",
  "length",
  "lens",
  "leopard",
  "lesson",
  "letter",
  "level",
  "liar",
  "liberty",
  "library",
  "license",
  "life",
  "lift",
  "light",
  "like",
  "limb",
  "limit",
  "link",
  "lion",
  "liquid",
  "list",
  "little",
  "live",
  "lizard",
  "load",
  "loan",
  "lobster",
  "local",
  "lock",
  "logic",
  "lonely",
  "long",
  "loop",
  "lottery",
  "loud",
  "lounge",
  "love",
  "loyal",
  "lucky",
  "luggage",
  "lumber",
  "lunar",
  "lunch",
  "luxury",
  "lyrics",
  "machine",
  "mad",
  "magic",
  "magnet",
  "maid",
  "mail",
  "main",
  "major",
  "make",
  "mammal",
  "man",
  "manage",
  "mandate",
  "mango",
  "mansion",
  "manual",
  "maple",
  "marble",
  "march",
  "margin",
  "marine",
  "market",
  "marriage",
  "mask",
  "mass",
  "master",
  "match",
  "material",
  "math",
  "matrix",
  "matter",
  "maximum",
  "maze",
  "meadow",
  "mean",
  "measure",
  "meat",
  "mechanic",
  "medal",
  "media",
  "melody",
  "melt",
  "member",
  "memory",
  "mention",
  "menu",
  "mercy",
  "merge",
  "merit",
  "merry",
  "mesh",
  "message",
  "metal",
  "method",
  "middle",
  "midnight",
  "milk",
  "million",
  "mimic",
  "mind",
  "minimum",
  "minor",
  "minute",
  "miracle",
  "mirror",
  "misery",
  "miss",
  "mistake",
  "mix",
  "mixed",
  "mixture",
  "mobile",
  "model",
  "modify",
  "mom",
  "moment",
  "monitor",
  "monkey",
  "monster",
  "month",
  "moon",
  "moral",
  "more",
  "morning",
  "mosquito",
  "mother",
  "motion",
  "motor",
  "mountain",
  "mouse",
  "move",
  "movie",
  "much",
  "muffin",
  "mule",
  "multiply",
  "muscle",
  "museum",
  "mushroom",
  "music",
  "must",
  "mutual",
  "myself",
  "mystery",
  "myth",
  "naive",
  "name",
  "napkin",
  "narrow",
  "nasty",
  "nation",
  "nature",
  "near",
  "neck",
  "need",
  "negative",
  "neglect",
  "neither",
  "nephew",
  "nerve",
  "nest",
  "net",
  "network",
  "neutral",
  "never",
  "news",
  "next",
  "nice",
  "night",
  "noble",
  "noise",
  "nominee",
  "noodle",
  "normal",
  "north",
  "nose",
  "notable",
  "note",
  "nothing",
  "notice",
  "novel",
  "now",
  "nuclear",
  "number",
  "nurse",
  "nut",
  "oak",
  "obey",
  "object",
  "oblige",
  "obscure",
  "observe",
  "obtain",
  "obvious",
  "occur",
  "ocean",
  "october",
  "odor",
  "off",
  "offer",
  "office",
  "often",
  "oil",
  "okay",
  "old",
  "olive",
  "olympic",
  "omit",
  "once",
  "one",
  "onion",
  "online",
  "only",
  "open",
  "opera",
  "opinion",
  "oppose",
  "option",
  "orange",
  "orbit",
  "orchard",
  "order",
  "ordinary",
  "organ",
  "orient",
  "original",
  "orphan",
  "ostrich",
  "other",
  "outdoor",
  "outer",
  "output",
  "outside",
  "oval",
  "oven",
  "over",
  "own",
  "owner",
  "oxygen",
  "oyster",
  "ozone",
  "pact",
  "paddle",
  "page",
  "pair",
  "palace",
  "palm",
  "panda",
  "panel",
  "panic",
  "panther",
  "paper",
  "parade",
  "parent",
  "park",
  "parrot",
  "party",
  "pass",
  "patch",
  "path",
  "patient",
  "patrol",
  "pattern",
  "pause",
  "pave",
  "payment",
  "peace",
  "peanut",
  "pear",
  "peasant",
  "pelican",
  "pen",
  "penalty",
  "pencil",
  "people",
  "pepper",
  "perfect",
  "permit",
  "person",
  "pet",
  "phone",
  "photo",
  "phrase",
  "physical",
  "piano",
  "picnic",
  "picture",
  "piece",
  "pig",
  "pigeon",
  "pill",
  "pilot",
  "pink",
  "pioneer",
  "pipe",
  "pistol",
  "pitch",
  "pizza",
  "place",
  "planet",
  "plastic",
  "plate",
  "play",
  "please",
  "pledge",
  "pluck",
  "plug",
  "plunge",
  "poem",
  "poet",
  "point",
  "polar",
  "pole",
  "police",
  "pond",
  "pony",
  "pool",
  "popular",
  "portion",
  "position",
  "possible",
  "post",
  "potato",
  "pottery",
  "poverty",
  "powder",
  "power",
  "practice",
  "praise",
  "predict",
  "prefer",
  "prepare",
  "present",
  "pretty",
  "prevent",
  "price",
  "pride",
  "primary",
  "print",
  "priority",
  "prison",
  "private",
  "prize",
  "problem",
  "process",
  "produce",
  "profit",
  "program",
  "project",
  "promote",
  "proof",
  "property",
  "prosper",
  "protect",
  "proud",
  "provide",
  "public",
  "pudding",
  "pull",
  "pulp",
  "pulse",
  "pumpkin",
  "punch",
  "pupil",
  "puppy",
  "purchase",
  "purity",
  "purpose",
  "purse",
  "push",
  "put",
  "puzzle",
  "pyramid",
  "quality",
  "quantum",
  "quarter",
  "question",
  "quick",
  "quit",
  "quiz",
  "quote",
  "rabbit",
  "raccoon",
  "race",
  "rack",
  "radar",
  "radio",
  "rail",
  "rain",
  "raise",
  "rally",
  "ramp",
  "ranch",
  "random",
  "range",
  "rapid",
  "rare",
  "rate",
  "rather",
  "raven",
  "raw",
  "razor",
  "ready",
  "real",
  "reason",
  "rebel",
  "rebuild",
  "recall",
  "receive",
  "recipe",
  "record",
  "recycle",
  "reduce",
  "reflect",
  "reform",
  "refuse",
  "region",
  "regret",
  "regular",
  "reject",
  "relax",
  "release",
  "relief",
  "rely",
  "remain",
  "remember",
  "remind",
  "remove",
  "render",
  "renew",
  "rent",
  "reopen",
  "repair",
  "repeat",
  "replace",
  "report",
  "require",
  "rescue",
  "resemble",
  "resist",
  "resource",
  "response",
  "result",
  "retire",
  "retreat",
  "return",
  "reunion",
  "reveal",
  "review",
  "reward",
  "rhythm",
  "rib",
  "ribbon",
  "rice",
  "rich",
  "ride",
  "ridge",
  "rifle",
  "right",
  "rigid",
  "ring",
  "riot",
  "ripple",
  "risk",
  "ritual",
  "rival",
  "river",
  "road",
  "roast",
  "robot",
  "robust",
  "rocket",
  "romance",
  "roof",
  "rookie",
  "room",
  "rose",
  "rotate",
  "rough",
  "round",
  "route",
  "royal",
  "rubber",
  "rude",
  "rug",
  "rule",
  "run",
  "runway",
  "rural",
  "sad",
  "saddle",
  "sadness",
  "safe",
  "sail",
  "salad",
  "salmon",
  "salon",
  "salt",
  "salute",
  "same",
  "sample",
  "sand",
  "satisfy",
  "satoshi",
  "sauce",
  "sausage",
  "save",
  "say",
  "scale",
  "scan",
  "scare",
  "scatter",
  "scene",
  "scheme",
  "school",
  "science",
  "scissors",
  "scorpion",
  "scout",
  "scrap",
  "screen",
  "script",
  "scrub",
  "sea",
  "search",
  "season",
  "seat",
  "second",
  "secret",
  "section",
  "security",
  "seed",
  "seek",
  "segment",
  "select",
  "sell",
  "seminar",
  "senior",
  "sense",
  "sentence",
  "series",
  "service",
  "session",
  "settle",
  "setup",
  "seven",
  "shadow",
  "shaft",
  "shallow",
  "share",
  "shed",
  "shell",
  "sheriff",
  "shield",
  "shift",
  "shine",
  "ship",
  "shiver",
  "shock",
  "shoe",
  "shoot",
  "shop",
  "short",
  "shoulder",
  "shove",
  "shrimp",
  "shrug",
  "shuffle",
  "shy",
  "sibling",
  "sick",
  "side",
  "siege",
  "sight",
  "sign",
  "silent",
  "silk",
  "silly",
  "silver",
  "similar",
  "simple",
  "since",
  "sing",
  "siren",
  "sister",
  "situate",
  "six",
  "size",
  "skate",
  "sketch",
  "ski",
  "skill",
  "skin",
  "skirt",
  "skull",
  "slab",
  "slam",
  "sleep",
  "slender",
  "slice",
  "slide",
  "slight",
  "slim",
  "slogan",
  "slot",
  "slow",
  "slush",
  "small",
  "smart",
  "smile",
  "smoke",
  "smooth",
  "snack",
  "snake",
  "snap",
  "sniff",
  "snow",
  "soap",
  "soccer",
  "social",
  "sock",
  "soda",
  "soft",
  "solar",
  "soldier",
  "solid",
  "solution",
  "solve",
  "someone",
  "song",
  "soon",
  "sorry",
  "sort",
  "soul",
  "sound",
  "soup",
  "source",
  "south",
  "space",
  "spare",
  "spatial",
  "spawn",
  "speak",
  "special",
  "speed",
  "spell",
  "spend",
  "sphere",
  "spice",
  "spider",
  "spike",
  "spin",
  "spirit",
  "split",
  "spoil",
  "sponsor",
  "spoon",
  "sport",
  "spot",
  "spray",
  "spread",
  "spring",
  "spy",
  "square",
  "squeeze",
  "squirrel",
  "stable",
  "stadium",
  "staff",
  "stage",
  "stairs",
  "stamp",
  "stand",
  "start",
  "state",
  "stay",
  "steak",
  "steel",
  "stem",
  "step",
  "stereo",
  "stick",
  "still",
  "sting",
  "stock",
  "stomach",
  "stone",
  "stool",
  "story",
  "stove",
  "strategy",
  "street",
  "strike",
  "strong",
  "struggle",
  "student",
  "stuff",
  "stumble",
  "style",
  "subject",
  "submit",
  "subway",
  "success",
  "such",
  "sudden",
  "suffer",
  "sugar",
  "suggest",
  "suit",
  "summer",
  "sun",
  "sunny",
  "sunset",
  "super",
  "supply",
  "supreme",
  "sure",
  "surface",
  "surge",
  "surprise",
  "surround",
  "survey",
  "suspect",
  "sustain",
  "swallow",
  "swamp",
  "swap",
  "swarm",
  "swear",
  "sweet",
  "swift",
  "swim",
  "swing",
  "switch",
  "sword",
  "symbol",
  "symptom",
  "syrup",
  "system",
  "table",
  "tackle",
  "tag",
  "tail",
  "talent",
  "talk",
  "tank",
  "tape",
  "target",
  "task",
  "taste",
  "tattoo",
  "taxi",
  "teach",
  "team",
  "tell",
  "ten",
  "tenant",
  "tennis",
  "tent",
  "term",
  "test",
  "text",
  "thank",
  "that",
  "theme",
  "then",
  "theory",
  "there",
  "they",
  "thing",
  "this",
  "thought",
  "three",
  "thrive",
  "throw",
  "thumb",
  "thunder",
  "ticket",
  "tide",
  "tiger",
  "tilt",
  "timber",
  "time",
  "tiny",
  "tip",
  "tired",
  "tissue",
  "title",
  "toast",
  "tobacco",
  "today",
  "toddler",
  "toe",
  "together",
  "toilet",
  "token",
  "tomato",
  "tomorrow",
  "tone",
  "tongue",
  "tonight",
  "tool",
  "tooth",
  "top",
  "topic",
  "topple",
  "torch",
  "tornado",
  "tortoise",
  "toss",
  "total",
  "tourist",
  "toward",
  "tower",
  "town",
  "toy",
  "track",
  "trade",
  "traffic",
  "tragic",
  "train",
  "transfer",
  "trap",
  "trash",
  "travel",
  "tray",
  "treat",
  "tree",
  "trend",
  "trial",
  "tribe",
  "trick",
  "trigger",
  "trim",
  "trip",
  "trophy",
  "trouble",
  "truck",
  "true",
  "truly",
  "trumpet",
  "trust",
  "truth",
  "try",
  "tube",
  "tuition",
  "tumble",
  "tuna",
  "tunnel",
  "turkey",
  "turn",
  "turtle",
  "twelve",
  "twenty",
  "twice",
  "twin",
  "twist",
  "two",
  "type",
  "typical",
  "ugly",
  "umbrella",
  "unable",
  "unaware",
  "uncle",
  "uncover",
  "under",
  "undo",
  "unfair",
  "unfold",
  "unhappy",
  "uniform",
  "unique",
  "unit",
  "universe",
  "unknown",
  "unlock",
  "until",
  "unusual",
  "unveil",
  "update",
  "upgrade",
  "uphold",
  "upon",
  "upper",
  "upset",
  "urban",
  "urge",
  "usage",
  "use",
  "used",
  "useful",
  "useless",
  "usual",
  "utility",
  "vacant",
  "vacuum",
  "vague",
  "valid",
  "valley",
  "valve",
  "van",
  "vanish",
  "vapor",
  "various",
  "vast",
  "vault",
  "vehicle",
  "velvet",
  "vendor",
  "venture",
  "venue",
  "verb",
  "verify",
  "version",
  "very",
  "vessel",
  "veteran",
  "viable",
  "vibrant",
  "vicious",
  "victory",
  "video",
  "view",
  "village",
  "vintage",
  "violin",
  "virtual",
  "virus",
  "visa",
  "visit",
  "visual",
  "vital",
  "vivid",
  "vocal",
  "voice",
  "void",
  "volcano",
  "volume",
  "vote",
  "voyage",
  "wage",
  "wagon",
  "wait",
  "walk",
  "wall",
  "walnut",
  "want",
  "warfare",
  "warm",
  "warrior",
  "wash",
  "wasp",
  "waste",
  "water",
  "wave",
  "way",
  "wealth",
  "weapon",
  "wear",
  "weasel",
  "weather",
  "web",
  "wedding",
  "weekend",
  "weird",
  "welcome",
  "west",
  "wet",
  "whale",
  "what",
  "wheat",
  "wheel",
  "when",
  "where",
  "whip",
  "whisper",
  "wide",
  "width",
  "wife",
  "wild",
  "will",
  "win",
  "window",
  "wine",
  "wing",
  "wink",
  "winner",
  "winter",
  "wire",
  "wisdom",
  "wise",
  "wish",
  "witness",
  "wolf",
  "woman",
  "wonder",
  "wood",
  "wool",
  "word",
  "work",
  "world",
  "worry",
  "worth",
  "wrap",
  "wreck",
  "wrestle",
  "wrist",
  "write",
  "wrong",
  "yard",
  "year",
  "yellow",
  "you",
  "young",
  "youth",
  "zebra",
  "zero",
  "zone",
  "zoo"
];
exports8.wordlist = EN;
var __export08;
if (Object.isExtensible(module8.exports)) {
  __export08 = module8.exports["wordlist"];
}

// ../../node_modules/@ton/crypto/dist/utils/binary.js
var binary_exports = {};
__export(binary_exports, {
  bitsToBytes: () => __export09,
  bytesToBits: () => __export14,
  lpad: () => __export22
});
var exports9 = {};
var module9 = {
  get exports() {
    return exports9;
  },
  set exports(value) {
    exports9 = value;
  }
};
Object.defineProperty(exports9, "__esModule", { value: true });
exports9.bitsToBytes = exports9.bytesToBits = exports9.lpad = void 0;
function lpad(str, padString, length) {
  while (str.length < length) {
    str = padString + str;
  }
  return str;
}
exports9.lpad = lpad;
function bytesToBits(bytes) {
  let res = "";
  for (let i2 = 0; i2 < bytes.length; i2++) {
    let x2 = bytes.at(i2);
    res += lpad(x2.toString(2), "0", 8);
  }
  return res;
}
exports9.bytesToBits = bytesToBits;
function bitsToBytes(src) {
  if (src.length % 8 !== 0) {
    throw Error("Uneven bits");
  }
  let res = [];
  while (src.length > 0) {
    res.push(parseInt(src.slice(0, 8), 2));
    src = src.slice(8);
  }
  return Buffer.from(res);
}
exports9.bitsToBytes = bitsToBytes;
var __export09;
var __export14;
var __export22;
if (Object.isExtensible(module9.exports)) {
  __export09 = module9.exports["bitsToBytes"];
  __export14 = module9.exports["bytesToBits"];
  __export22 = module9.exports["lpad"];
}

// ../../node_modules/@ton/crypto/dist/primitives/pbkdf2_sha512.js
var pbkdf2_sha512_exports2 = {};
__export(pbkdf2_sha512_exports2, {
  pbkdf2_sha512: () => __export010
});
function $$cjs_default$$8(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global9 !== "undefined" && global9 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global9 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global9 !== "undefined" && global9 || typeof globalThis !== "undefined" && globalThis || {};
var exports10 = {};
var module10 = {
  get exports() {
    return exports10;
  },
  set exports(value) {
    exports10 = value;
  }
};
Object.defineProperty(exports10, "__esModule", { value: true });
exports10.pbkdf2_sha512 = void 0;
var crypto_primitives_12 = $$cjs_default$$8(typeof node_exports !== "undefined" ? node_exports : {});
function pbkdf2_sha5122(key, salt, iterations, keyLen) {
  return (0, crypto_primitives_12.pbkdf2_sha512)(key, salt, iterations, keyLen);
}
exports10.pbkdf2_sha512 = pbkdf2_sha5122;
var __export010;
if (Object.isExtensible(module10.exports)) {
  __export010 = module10.exports["pbkdf2_sha512"];
}

// ../../node_modules/@ton/crypto/dist/primitives/getSecureRandom.js
var getSecureRandom_exports2 = {};
__export(getSecureRandom_exports2, {
  getSecureRandomBytes: () => __export23,
  getSecureRandomNumber: () => __export011,
  getSecureRandomWords: () => __export15
});
function $$cjs_default$$9(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global10 !== "undefined" && global10 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global10 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global10 !== "undefined" && global10 || typeof globalThis !== "undefined" && globalThis || {};
var exports11 = {};
var module11 = {
  get exports() {
    return exports11;
  },
  set exports(value) {
    exports11 = value;
  }
};
Object.defineProperty(exports11, "__esModule", { value: true });
exports11.getSecureRandomNumber = exports11.getSecureRandomWords = exports11.getSecureRandomBytes = void 0;
var crypto_primitives_13 = $$cjs_default$$9(typeof node_exports !== "undefined" ? node_exports : {});
async function getSecureRandomBytes2(size) {
  return (0, crypto_primitives_13.getSecureRandomBytes)(size);
}
exports11.getSecureRandomBytes = getSecureRandomBytes2;
async function getSecureRandomWords2(size) {
  return getSecureRandomWords2();
}
exports11.getSecureRandomWords = getSecureRandomWords2;
async function getSecureRandomNumber(min, max) {
  let range = max - min;
  var bitsNeeded = Math.ceil(Math.log2(range));
  if (bitsNeeded > 53) {
    throw new Error("Range is too large");
  }
  var bytesNeeded = Math.ceil(bitsNeeded / 8);
  var mask = Math.pow(2, bitsNeeded) - 1;
  while (true) {
    let res = await getSecureRandomBytes2(bitsNeeded);
    let power = (bytesNeeded - 1) * 8;
    let numberValue = 0;
    for (var i2 = 0; i2 < bytesNeeded; i2++) {
      numberValue += res[i2] * Math.pow(2, power);
      power -= 8;
    }
    numberValue = numberValue & mask;
    if (numberValue >= range) {
      continue;
    }
    return min + numberValue;
  }
}
exports11.getSecureRandomNumber = getSecureRandomNumber;
var __export011;
var __export15;
var __export23;
if (Object.isExtensible(module11.exports)) {
  __export011 = module11.exports["getSecureRandomNumber"];
  __export15 = module11.exports["getSecureRandomWords"];
  __export23 = module11.exports["getSecureRandomBytes"];
}

// ../../node_modules/tweetnacl/nacl-fast.js
var nacl_fast_exports = {};
__export(nacl_fast_exports, {
  default: () => nacl_fast_default
});
function $$cjs_default$$10(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global11 !== "undefined" && global11 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global11 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global11 !== "undefined" && global11 || typeof globalThis !== "undefined" && globalThis || {};
var exports12 = {};
var module12 = {
  get exports() {
    return exports12;
  },
  set exports(value) {
    exports12 = value;
  }
};
(function(nacl) {
  var gf = function(init) {
    var i2, r2 = new Float64Array(16);
    if (init)
      for (i2 = 0; i2 < init.length; i2++)
        r2[i2] = init[i2];
    return r2;
  };
  var randombytes = function() {
    throw new Error("no PRNG");
  };
  var _0 = new Uint8Array(16);
  var _92 = new Uint8Array(32);
  _92[0] = 9;
  var gf0 = gf(), gf1 = gf([1]), _121665 = gf([56129, 1]), D2 = gf([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), D22 = gf([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), X2 = gf([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), Y2 = gf([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), I2 = gf([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
  function ts64(x2, i2, h2, l2) {
    x2[i2] = h2 >> 24 & 255;
    x2[i2 + 1] = h2 >> 16 & 255;
    x2[i2 + 2] = h2 >> 8 & 255;
    x2[i2 + 3] = h2 & 255;
    x2[i2 + 4] = l2 >> 24 & 255;
    x2[i2 + 5] = l2 >> 16 & 255;
    x2[i2 + 6] = l2 >> 8 & 255;
    x2[i2 + 7] = l2 & 255;
  }
  function vn(x2, xi, y2, yi, n2) {
    var i2, d2 = 0;
    for (i2 = 0; i2 < n2; i2++)
      d2 |= x2[xi + i2] ^ y2[yi + i2];
    return (1 & d2 - 1 >>> 8) - 1;
  }
  function crypto_verify_16(x2, xi, y2, yi) {
    return vn(x2, xi, y2, yi, 16);
  }
  function crypto_verify_32(x2, xi, y2, yi) {
    return vn(x2, xi, y2, yi, 32);
  }
  function core_salsa20(o2, p2, k2, c2) {
    var j0 = c2[0] & 255 | (c2[1] & 255) << 8 | (c2[2] & 255) << 16 | (c2[3] & 255) << 24, j1 = k2[0] & 255 | (k2[1] & 255) << 8 | (k2[2] & 255) << 16 | (k2[3] & 255) << 24, j2 = k2[4] & 255 | (k2[5] & 255) << 8 | (k2[6] & 255) << 16 | (k2[7] & 255) << 24, j3 = k2[8] & 255 | (k2[9] & 255) << 8 | (k2[10] & 255) << 16 | (k2[11] & 255) << 24, j4 = k2[12] & 255 | (k2[13] & 255) << 8 | (k2[14] & 255) << 16 | (k2[15] & 255) << 24, j5 = c2[4] & 255 | (c2[5] & 255) << 8 | (c2[6] & 255) << 16 | (c2[7] & 255) << 24, j6 = p2[0] & 255 | (p2[1] & 255) << 8 | (p2[2] & 255) << 16 | (p2[3] & 255) << 24, j7 = p2[4] & 255 | (p2[5] & 255) << 8 | (p2[6] & 255) << 16 | (p2[7] & 255) << 24, j8 = p2[8] & 255 | (p2[9] & 255) << 8 | (p2[10] & 255) << 16 | (p2[11] & 255) << 24, j9 = p2[12] & 255 | (p2[13] & 255) << 8 | (p2[14] & 255) << 16 | (p2[15] & 255) << 24, j10 = c2[8] & 255 | (c2[9] & 255) << 8 | (c2[10] & 255) << 16 | (c2[11] & 255) << 24, j11 = k2[16] & 255 | (k2[17] & 255) << 8 | (k2[18] & 255) << 16 | (k2[19] & 255) << 24, j12 = k2[20] & 255 | (k2[21] & 255) << 8 | (k2[22] & 255) << 16 | (k2[23] & 255) << 24, j13 = k2[24] & 255 | (k2[25] & 255) << 8 | (k2[26] & 255) << 16 | (k2[27] & 255) << 24, j14 = k2[28] & 255 | (k2[29] & 255) << 8 | (k2[30] & 255) << 16 | (k2[31] & 255) << 24, j15 = c2[12] & 255 | (c2[13] & 255) << 8 | (c2[14] & 255) << 16 | (c2[15] & 255) << 24;
    var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u2;
    for (var i2 = 0; i2 < 20; i2 += 2) {
      u2 = x0 + x12 | 0;
      x4 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x4 + x0 | 0;
      x8 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x8 + x4 | 0;
      x12 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x12 + x8 | 0;
      x0 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x5 + x1 | 0;
      x9 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x9 + x5 | 0;
      x13 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x13 + x9 | 0;
      x1 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x1 + x13 | 0;
      x5 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x10 + x6 | 0;
      x14 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x14 + x10 | 0;
      x2 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x2 + x14 | 0;
      x6 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x6 + x2 | 0;
      x10 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x15 + x11 | 0;
      x3 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x3 + x15 | 0;
      x7 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x7 + x3 | 0;
      x11 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x11 + x7 | 0;
      x15 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x0 + x3 | 0;
      x1 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x1 + x0 | 0;
      x2 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x2 + x1 | 0;
      x3 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x3 + x2 | 0;
      x0 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x5 + x4 | 0;
      x6 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x6 + x5 | 0;
      x7 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x7 + x6 | 0;
      x4 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x4 + x7 | 0;
      x5 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x10 + x9 | 0;
      x11 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x11 + x10 | 0;
      x8 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x8 + x11 | 0;
      x9 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x9 + x8 | 0;
      x10 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x15 + x14 | 0;
      x12 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x12 + x15 | 0;
      x13 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x13 + x12 | 0;
      x14 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x14 + x13 | 0;
      x15 ^= u2 << 18 | u2 >>> 32 - 18;
    }
    x0 = x0 + j0 | 0;
    x1 = x1 + j1 | 0;
    x2 = x2 + j2 | 0;
    x3 = x3 + j3 | 0;
    x4 = x4 + j4 | 0;
    x5 = x5 + j5 | 0;
    x6 = x6 + j6 | 0;
    x7 = x7 + j7 | 0;
    x8 = x8 + j8 | 0;
    x9 = x9 + j9 | 0;
    x10 = x10 + j10 | 0;
    x11 = x11 + j11 | 0;
    x12 = x12 + j12 | 0;
    x13 = x13 + j13 | 0;
    x14 = x14 + j14 | 0;
    x15 = x15 + j15 | 0;
    o2[0] = x0 >>> 0 & 255;
    o2[1] = x0 >>> 8 & 255;
    o2[2] = x0 >>> 16 & 255;
    o2[3] = x0 >>> 24 & 255;
    o2[4] = x1 >>> 0 & 255;
    o2[5] = x1 >>> 8 & 255;
    o2[6] = x1 >>> 16 & 255;
    o2[7] = x1 >>> 24 & 255;
    o2[8] = x2 >>> 0 & 255;
    o2[9] = x2 >>> 8 & 255;
    o2[10] = x2 >>> 16 & 255;
    o2[11] = x2 >>> 24 & 255;
    o2[12] = x3 >>> 0 & 255;
    o2[13] = x3 >>> 8 & 255;
    o2[14] = x3 >>> 16 & 255;
    o2[15] = x3 >>> 24 & 255;
    o2[16] = x4 >>> 0 & 255;
    o2[17] = x4 >>> 8 & 255;
    o2[18] = x4 >>> 16 & 255;
    o2[19] = x4 >>> 24 & 255;
    o2[20] = x5 >>> 0 & 255;
    o2[21] = x5 >>> 8 & 255;
    o2[22] = x5 >>> 16 & 255;
    o2[23] = x5 >>> 24 & 255;
    o2[24] = x6 >>> 0 & 255;
    o2[25] = x6 >>> 8 & 255;
    o2[26] = x6 >>> 16 & 255;
    o2[27] = x6 >>> 24 & 255;
    o2[28] = x7 >>> 0 & 255;
    o2[29] = x7 >>> 8 & 255;
    o2[30] = x7 >>> 16 & 255;
    o2[31] = x7 >>> 24 & 255;
    o2[32] = x8 >>> 0 & 255;
    o2[33] = x8 >>> 8 & 255;
    o2[34] = x8 >>> 16 & 255;
    o2[35] = x8 >>> 24 & 255;
    o2[36] = x9 >>> 0 & 255;
    o2[37] = x9 >>> 8 & 255;
    o2[38] = x9 >>> 16 & 255;
    o2[39] = x9 >>> 24 & 255;
    o2[40] = x10 >>> 0 & 255;
    o2[41] = x10 >>> 8 & 255;
    o2[42] = x10 >>> 16 & 255;
    o2[43] = x10 >>> 24 & 255;
    o2[44] = x11 >>> 0 & 255;
    o2[45] = x11 >>> 8 & 255;
    o2[46] = x11 >>> 16 & 255;
    o2[47] = x11 >>> 24 & 255;
    o2[48] = x12 >>> 0 & 255;
    o2[49] = x12 >>> 8 & 255;
    o2[50] = x12 >>> 16 & 255;
    o2[51] = x12 >>> 24 & 255;
    o2[52] = x13 >>> 0 & 255;
    o2[53] = x13 >>> 8 & 255;
    o2[54] = x13 >>> 16 & 255;
    o2[55] = x13 >>> 24 & 255;
    o2[56] = x14 >>> 0 & 255;
    o2[57] = x14 >>> 8 & 255;
    o2[58] = x14 >>> 16 & 255;
    o2[59] = x14 >>> 24 & 255;
    o2[60] = x15 >>> 0 & 255;
    o2[61] = x15 >>> 8 & 255;
    o2[62] = x15 >>> 16 & 255;
    o2[63] = x15 >>> 24 & 255;
  }
  function core_hsalsa20(o2, p2, k2, c2) {
    var j0 = c2[0] & 255 | (c2[1] & 255) << 8 | (c2[2] & 255) << 16 | (c2[3] & 255) << 24, j1 = k2[0] & 255 | (k2[1] & 255) << 8 | (k2[2] & 255) << 16 | (k2[3] & 255) << 24, j2 = k2[4] & 255 | (k2[5] & 255) << 8 | (k2[6] & 255) << 16 | (k2[7] & 255) << 24, j3 = k2[8] & 255 | (k2[9] & 255) << 8 | (k2[10] & 255) << 16 | (k2[11] & 255) << 24, j4 = k2[12] & 255 | (k2[13] & 255) << 8 | (k2[14] & 255) << 16 | (k2[15] & 255) << 24, j5 = c2[4] & 255 | (c2[5] & 255) << 8 | (c2[6] & 255) << 16 | (c2[7] & 255) << 24, j6 = p2[0] & 255 | (p2[1] & 255) << 8 | (p2[2] & 255) << 16 | (p2[3] & 255) << 24, j7 = p2[4] & 255 | (p2[5] & 255) << 8 | (p2[6] & 255) << 16 | (p2[7] & 255) << 24, j8 = p2[8] & 255 | (p2[9] & 255) << 8 | (p2[10] & 255) << 16 | (p2[11] & 255) << 24, j9 = p2[12] & 255 | (p2[13] & 255) << 8 | (p2[14] & 255) << 16 | (p2[15] & 255) << 24, j10 = c2[8] & 255 | (c2[9] & 255) << 8 | (c2[10] & 255) << 16 | (c2[11] & 255) << 24, j11 = k2[16] & 255 | (k2[17] & 255) << 8 | (k2[18] & 255) << 16 | (k2[19] & 255) << 24, j12 = k2[20] & 255 | (k2[21] & 255) << 8 | (k2[22] & 255) << 16 | (k2[23] & 255) << 24, j13 = k2[24] & 255 | (k2[25] & 255) << 8 | (k2[26] & 255) << 16 | (k2[27] & 255) << 24, j14 = k2[28] & 255 | (k2[29] & 255) << 8 | (k2[30] & 255) << 16 | (k2[31] & 255) << 24, j15 = c2[12] & 255 | (c2[13] & 255) << 8 | (c2[14] & 255) << 16 | (c2[15] & 255) << 24;
    var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u2;
    for (var i2 = 0; i2 < 20; i2 += 2) {
      u2 = x0 + x12 | 0;
      x4 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x4 + x0 | 0;
      x8 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x8 + x4 | 0;
      x12 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x12 + x8 | 0;
      x0 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x5 + x1 | 0;
      x9 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x9 + x5 | 0;
      x13 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x13 + x9 | 0;
      x1 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x1 + x13 | 0;
      x5 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x10 + x6 | 0;
      x14 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x14 + x10 | 0;
      x2 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x2 + x14 | 0;
      x6 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x6 + x2 | 0;
      x10 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x15 + x11 | 0;
      x3 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x3 + x15 | 0;
      x7 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x7 + x3 | 0;
      x11 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x11 + x7 | 0;
      x15 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x0 + x3 | 0;
      x1 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x1 + x0 | 0;
      x2 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x2 + x1 | 0;
      x3 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x3 + x2 | 0;
      x0 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x5 + x4 | 0;
      x6 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x6 + x5 | 0;
      x7 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x7 + x6 | 0;
      x4 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x4 + x7 | 0;
      x5 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x10 + x9 | 0;
      x11 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x11 + x10 | 0;
      x8 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x8 + x11 | 0;
      x9 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x9 + x8 | 0;
      x10 ^= u2 << 18 | u2 >>> 32 - 18;
      u2 = x15 + x14 | 0;
      x12 ^= u2 << 7 | u2 >>> 32 - 7;
      u2 = x12 + x15 | 0;
      x13 ^= u2 << 9 | u2 >>> 32 - 9;
      u2 = x13 + x12 | 0;
      x14 ^= u2 << 13 | u2 >>> 32 - 13;
      u2 = x14 + x13 | 0;
      x15 ^= u2 << 18 | u2 >>> 32 - 18;
    }
    o2[0] = x0 >>> 0 & 255;
    o2[1] = x0 >>> 8 & 255;
    o2[2] = x0 >>> 16 & 255;
    o2[3] = x0 >>> 24 & 255;
    o2[4] = x5 >>> 0 & 255;
    o2[5] = x5 >>> 8 & 255;
    o2[6] = x5 >>> 16 & 255;
    o2[7] = x5 >>> 24 & 255;
    o2[8] = x10 >>> 0 & 255;
    o2[9] = x10 >>> 8 & 255;
    o2[10] = x10 >>> 16 & 255;
    o2[11] = x10 >>> 24 & 255;
    o2[12] = x15 >>> 0 & 255;
    o2[13] = x15 >>> 8 & 255;
    o2[14] = x15 >>> 16 & 255;
    o2[15] = x15 >>> 24 & 255;
    o2[16] = x6 >>> 0 & 255;
    o2[17] = x6 >>> 8 & 255;
    o2[18] = x6 >>> 16 & 255;
    o2[19] = x6 >>> 24 & 255;
    o2[20] = x7 >>> 0 & 255;
    o2[21] = x7 >>> 8 & 255;
    o2[22] = x7 >>> 16 & 255;
    o2[23] = x7 >>> 24 & 255;
    o2[24] = x8 >>> 0 & 255;
    o2[25] = x8 >>> 8 & 255;
    o2[26] = x8 >>> 16 & 255;
    o2[27] = x8 >>> 24 & 255;
    o2[28] = x9 >>> 0 & 255;
    o2[29] = x9 >>> 8 & 255;
    o2[30] = x9 >>> 16 & 255;
    o2[31] = x9 >>> 24 & 255;
  }
  function crypto_core_salsa20(out, inp, k2, c2) {
    core_salsa20(out, inp, k2, c2);
  }
  function crypto_core_hsalsa20(out, inp, k2, c2) {
    core_hsalsa20(out, inp, k2, c2);
  }
  var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
  function crypto_stream_salsa20_xor(c2, cpos, m2, mpos, b2, n2, k2) {
    var z2 = new Uint8Array(16), x2 = new Uint8Array(64);
    var u2, i2;
    for (i2 = 0; i2 < 16; i2++)
      z2[i2] = 0;
    for (i2 = 0; i2 < 8; i2++)
      z2[i2] = n2[i2];
    while (b2 >= 64) {
      crypto_core_salsa20(x2, z2, k2, sigma);
      for (i2 = 0; i2 < 64; i2++)
        c2[cpos + i2] = m2[mpos + i2] ^ x2[i2];
      u2 = 1;
      for (i2 = 8; i2 < 16; i2++) {
        u2 = u2 + (z2[i2] & 255) | 0;
        z2[i2] = u2 & 255;
        u2 >>>= 8;
      }
      b2 -= 64;
      cpos += 64;
      mpos += 64;
    }
    if (b2 > 0) {
      crypto_core_salsa20(x2, z2, k2, sigma);
      for (i2 = 0; i2 < b2; i2++)
        c2[cpos + i2] = m2[mpos + i2] ^ x2[i2];
    }
    return 0;
  }
  function crypto_stream_salsa20(c2, cpos, b2, n2, k2) {
    var z2 = new Uint8Array(16), x2 = new Uint8Array(64);
    var u2, i2;
    for (i2 = 0; i2 < 16; i2++)
      z2[i2] = 0;
    for (i2 = 0; i2 < 8; i2++)
      z2[i2] = n2[i2];
    while (b2 >= 64) {
      crypto_core_salsa20(x2, z2, k2, sigma);
      for (i2 = 0; i2 < 64; i2++)
        c2[cpos + i2] = x2[i2];
      u2 = 1;
      for (i2 = 8; i2 < 16; i2++) {
        u2 = u2 + (z2[i2] & 255) | 0;
        z2[i2] = u2 & 255;
        u2 >>>= 8;
      }
      b2 -= 64;
      cpos += 64;
    }
    if (b2 > 0) {
      crypto_core_salsa20(x2, z2, k2, sigma);
      for (i2 = 0; i2 < b2; i2++)
        c2[cpos + i2] = x2[i2];
    }
    return 0;
  }
  function crypto_stream(c2, cpos, d2, n2, k2) {
    var s2 = new Uint8Array(32);
    crypto_core_hsalsa20(s2, n2, k2, sigma);
    var sn = new Uint8Array(8);
    for (var i2 = 0; i2 < 8; i2++)
      sn[i2] = n2[i2 + 16];
    return crypto_stream_salsa20(c2, cpos, d2, sn, s2);
  }
  function crypto_stream_xor(c2, cpos, m2, mpos, d2, n2, k2) {
    var s2 = new Uint8Array(32);
    crypto_core_hsalsa20(s2, n2, k2, sigma);
    var sn = new Uint8Array(8);
    for (var i2 = 0; i2 < 8; i2++)
      sn[i2] = n2[i2 + 16];
    return crypto_stream_salsa20_xor(c2, cpos, m2, mpos, d2, sn, s2);
  }
  var poly1305 = function(key) {
    this.buffer = new Uint8Array(16);
    this.r = new Uint16Array(10);
    this.h = new Uint16Array(10);
    this.pad = new Uint16Array(8);
    this.leftover = 0;
    this.fin = 0;
    var t0, t1, t2, t3, t4, t5, t6, t7;
    t0 = key[0] & 255 | (key[1] & 255) << 8;
    this.r[0] = t0 & 8191;
    t1 = key[2] & 255 | (key[3] & 255) << 8;
    this.r[1] = (t0 >>> 13 | t1 << 3) & 8191;
    t2 = key[4] & 255 | (key[5] & 255) << 8;
    this.r[2] = (t1 >>> 10 | t2 << 6) & 7939;
    t3 = key[6] & 255 | (key[7] & 255) << 8;
    this.r[3] = (t2 >>> 7 | t3 << 9) & 8191;
    t4 = key[8] & 255 | (key[9] & 255) << 8;
    this.r[4] = (t3 >>> 4 | t4 << 12) & 255;
    this.r[5] = t4 >>> 1 & 8190;
    t5 = key[10] & 255 | (key[11] & 255) << 8;
    this.r[6] = (t4 >>> 14 | t5 << 2) & 8191;
    t6 = key[12] & 255 | (key[13] & 255) << 8;
    this.r[7] = (t5 >>> 11 | t6 << 5) & 8065;
    t7 = key[14] & 255 | (key[15] & 255) << 8;
    this.r[8] = (t6 >>> 8 | t7 << 8) & 8191;
    this.r[9] = t7 >>> 5 & 127;
    this.pad[0] = key[16] & 255 | (key[17] & 255) << 8;
    this.pad[1] = key[18] & 255 | (key[19] & 255) << 8;
    this.pad[2] = key[20] & 255 | (key[21] & 255) << 8;
    this.pad[3] = key[22] & 255 | (key[23] & 255) << 8;
    this.pad[4] = key[24] & 255 | (key[25] & 255) << 8;
    this.pad[5] = key[26] & 255 | (key[27] & 255) << 8;
    this.pad[6] = key[28] & 255 | (key[29] & 255) << 8;
    this.pad[7] = key[30] & 255 | (key[31] & 255) << 8;
  };
  poly1305.prototype.blocks = function(m2, mpos, bytes) {
    var hibit = this.fin ? 0 : 1 << 11;
    var t0, t1, t2, t3, t4, t5, t6, t7, c2;
    var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;
    var h0 = this.h[0], h1 = this.h[1], h2 = this.h[2], h3 = this.h[3], h4 = this.h[4], h5 = this.h[5], h6 = this.h[6], h7 = this.h[7], h8 = this.h[8], h9 = this.h[9];
    var r0 = this.r[0], r1 = this.r[1], r2 = this.r[2], r3 = this.r[3], r4 = this.r[4], r5 = this.r[5], r6 = this.r[6], r7 = this.r[7], r8 = this.r[8], r9 = this.r[9];
    while (bytes >= 16) {
      t0 = m2[mpos + 0] & 255 | (m2[mpos + 1] & 255) << 8;
      h0 += t0 & 8191;
      t1 = m2[mpos + 2] & 255 | (m2[mpos + 3] & 255) << 8;
      h1 += (t0 >>> 13 | t1 << 3) & 8191;
      t2 = m2[mpos + 4] & 255 | (m2[mpos + 5] & 255) << 8;
      h2 += (t1 >>> 10 | t2 << 6) & 8191;
      t3 = m2[mpos + 6] & 255 | (m2[mpos + 7] & 255) << 8;
      h3 += (t2 >>> 7 | t3 << 9) & 8191;
      t4 = m2[mpos + 8] & 255 | (m2[mpos + 9] & 255) << 8;
      h4 += (t3 >>> 4 | t4 << 12) & 8191;
      h5 += t4 >>> 1 & 8191;
      t5 = m2[mpos + 10] & 255 | (m2[mpos + 11] & 255) << 8;
      h6 += (t4 >>> 14 | t5 << 2) & 8191;
      t6 = m2[mpos + 12] & 255 | (m2[mpos + 13] & 255) << 8;
      h7 += (t5 >>> 11 | t6 << 5) & 8191;
      t7 = m2[mpos + 14] & 255 | (m2[mpos + 15] & 255) << 8;
      h8 += (t6 >>> 8 | t7 << 8) & 8191;
      h9 += t7 >>> 5 | hibit;
      c2 = 0;
      d0 = c2;
      d0 += h0 * r0;
      d0 += h1 * (5 * r9);
      d0 += h2 * (5 * r8);
      d0 += h3 * (5 * r7);
      d0 += h4 * (5 * r6);
      c2 = d0 >>> 13;
      d0 &= 8191;
      d0 += h5 * (5 * r5);
      d0 += h6 * (5 * r4);
      d0 += h7 * (5 * r3);
      d0 += h8 * (5 * r2);
      d0 += h9 * (5 * r1);
      c2 += d0 >>> 13;
      d0 &= 8191;
      d1 = c2;
      d1 += h0 * r1;
      d1 += h1 * r0;
      d1 += h2 * (5 * r9);
      d1 += h3 * (5 * r8);
      d1 += h4 * (5 * r7);
      c2 = d1 >>> 13;
      d1 &= 8191;
      d1 += h5 * (5 * r6);
      d1 += h6 * (5 * r5);
      d1 += h7 * (5 * r4);
      d1 += h8 * (5 * r3);
      d1 += h9 * (5 * r2);
      c2 += d1 >>> 13;
      d1 &= 8191;
      d2 = c2;
      d2 += h0 * r2;
      d2 += h1 * r1;
      d2 += h2 * r0;
      d2 += h3 * (5 * r9);
      d2 += h4 * (5 * r8);
      c2 = d2 >>> 13;
      d2 &= 8191;
      d2 += h5 * (5 * r7);
      d2 += h6 * (5 * r6);
      d2 += h7 * (5 * r5);
      d2 += h8 * (5 * r4);
      d2 += h9 * (5 * r3);
      c2 += d2 >>> 13;
      d2 &= 8191;
      d3 = c2;
      d3 += h0 * r3;
      d3 += h1 * r2;
      d3 += h2 * r1;
      d3 += h3 * r0;
      d3 += h4 * (5 * r9);
      c2 = d3 >>> 13;
      d3 &= 8191;
      d3 += h5 * (5 * r8);
      d3 += h6 * (5 * r7);
      d3 += h7 * (5 * r6);
      d3 += h8 * (5 * r5);
      d3 += h9 * (5 * r4);
      c2 += d3 >>> 13;
      d3 &= 8191;
      d4 = c2;
      d4 += h0 * r4;
      d4 += h1 * r3;
      d4 += h2 * r2;
      d4 += h3 * r1;
      d4 += h4 * r0;
      c2 = d4 >>> 13;
      d4 &= 8191;
      d4 += h5 * (5 * r9);
      d4 += h6 * (5 * r8);
      d4 += h7 * (5 * r7);
      d4 += h8 * (5 * r6);
      d4 += h9 * (5 * r5);
      c2 += d4 >>> 13;
      d4 &= 8191;
      d5 = c2;
      d5 += h0 * r5;
      d5 += h1 * r4;
      d5 += h2 * r3;
      d5 += h3 * r2;
      d5 += h4 * r1;
      c2 = d5 >>> 13;
      d5 &= 8191;
      d5 += h5 * r0;
      d5 += h6 * (5 * r9);
      d5 += h7 * (5 * r8);
      d5 += h8 * (5 * r7);
      d5 += h9 * (5 * r6);
      c2 += d5 >>> 13;
      d5 &= 8191;
      d6 = c2;
      d6 += h0 * r6;
      d6 += h1 * r5;
      d6 += h2 * r4;
      d6 += h3 * r3;
      d6 += h4 * r2;
      c2 = d6 >>> 13;
      d6 &= 8191;
      d6 += h5 * r1;
      d6 += h6 * r0;
      d6 += h7 * (5 * r9);
      d6 += h8 * (5 * r8);
      d6 += h9 * (5 * r7);
      c2 += d6 >>> 13;
      d6 &= 8191;
      d7 = c2;
      d7 += h0 * r7;
      d7 += h1 * r6;
      d7 += h2 * r5;
      d7 += h3 * r4;
      d7 += h4 * r3;
      c2 = d7 >>> 13;
      d7 &= 8191;
      d7 += h5 * r2;
      d7 += h6 * r1;
      d7 += h7 * r0;
      d7 += h8 * (5 * r9);
      d7 += h9 * (5 * r8);
      c2 += d7 >>> 13;
      d7 &= 8191;
      d8 = c2;
      d8 += h0 * r8;
      d8 += h1 * r7;
      d8 += h2 * r6;
      d8 += h3 * r5;
      d8 += h4 * r4;
      c2 = d8 >>> 13;
      d8 &= 8191;
      d8 += h5 * r3;
      d8 += h6 * r2;
      d8 += h7 * r1;
      d8 += h8 * r0;
      d8 += h9 * (5 * r9);
      c2 += d8 >>> 13;
      d8 &= 8191;
      d9 = c2;
      d9 += h0 * r9;
      d9 += h1 * r8;
      d9 += h2 * r7;
      d9 += h3 * r6;
      d9 += h4 * r5;
      c2 = d9 >>> 13;
      d9 &= 8191;
      d9 += h5 * r4;
      d9 += h6 * r3;
      d9 += h7 * r2;
      d9 += h8 * r1;
      d9 += h9 * r0;
      c2 += d9 >>> 13;
      d9 &= 8191;
      c2 = (c2 << 2) + c2 | 0;
      c2 = c2 + d0 | 0;
      d0 = c2 & 8191;
      c2 = c2 >>> 13;
      d1 += c2;
      h0 = d0;
      h1 = d1;
      h2 = d2;
      h3 = d3;
      h4 = d4;
      h5 = d5;
      h6 = d6;
      h7 = d7;
      h8 = d8;
      h9 = d9;
      mpos += 16;
      bytes -= 16;
    }
    this.h[0] = h0;
    this.h[1] = h1;
    this.h[2] = h2;
    this.h[3] = h3;
    this.h[4] = h4;
    this.h[5] = h5;
    this.h[6] = h6;
    this.h[7] = h7;
    this.h[8] = h8;
    this.h[9] = h9;
  };
  poly1305.prototype.finish = function(mac, macpos) {
    var g2 = new Uint16Array(10);
    var c2, mask, f2, i2;
    if (this.leftover) {
      i2 = this.leftover;
      this.buffer[i2++] = 1;
      for (; i2 < 16; i2++)
        this.buffer[i2] = 0;
      this.fin = 1;
      this.blocks(this.buffer, 0, 16);
    }
    c2 = this.h[1] >>> 13;
    this.h[1] &= 8191;
    for (i2 = 2; i2 < 10; i2++) {
      this.h[i2] += c2;
      c2 = this.h[i2] >>> 13;
      this.h[i2] &= 8191;
    }
    this.h[0] += c2 * 5;
    c2 = this.h[0] >>> 13;
    this.h[0] &= 8191;
    this.h[1] += c2;
    c2 = this.h[1] >>> 13;
    this.h[1] &= 8191;
    this.h[2] += c2;
    g2[0] = this.h[0] + 5;
    c2 = g2[0] >>> 13;
    g2[0] &= 8191;
    for (i2 = 1; i2 < 10; i2++) {
      g2[i2] = this.h[i2] + c2;
      c2 = g2[i2] >>> 13;
      g2[i2] &= 8191;
    }
    g2[9] -= 1 << 13;
    mask = (c2 ^ 1) - 1;
    for (i2 = 0; i2 < 10; i2++)
      g2[i2] &= mask;
    mask = ~mask;
    for (i2 = 0; i2 < 10; i2++)
      this.h[i2] = this.h[i2] & mask | g2[i2];
    this.h[0] = (this.h[0] | this.h[1] << 13) & 65535;
    this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 65535;
    this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 65535;
    this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 65535;
    this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 65535;
    this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 65535;
    this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 65535;
    this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 65535;
    f2 = this.h[0] + this.pad[0];
    this.h[0] = f2 & 65535;
    for (i2 = 1; i2 < 8; i2++) {
      f2 = (this.h[i2] + this.pad[i2] | 0) + (f2 >>> 16) | 0;
      this.h[i2] = f2 & 65535;
    }
    mac[macpos + 0] = this.h[0] >>> 0 & 255;
    mac[macpos + 1] = this.h[0] >>> 8 & 255;
    mac[macpos + 2] = this.h[1] >>> 0 & 255;
    mac[macpos + 3] = this.h[1] >>> 8 & 255;
    mac[macpos + 4] = this.h[2] >>> 0 & 255;
    mac[macpos + 5] = this.h[2] >>> 8 & 255;
    mac[macpos + 6] = this.h[3] >>> 0 & 255;
    mac[macpos + 7] = this.h[3] >>> 8 & 255;
    mac[macpos + 8] = this.h[4] >>> 0 & 255;
    mac[macpos + 9] = this.h[4] >>> 8 & 255;
    mac[macpos + 10] = this.h[5] >>> 0 & 255;
    mac[macpos + 11] = this.h[5] >>> 8 & 255;
    mac[macpos + 12] = this.h[6] >>> 0 & 255;
    mac[macpos + 13] = this.h[6] >>> 8 & 255;
    mac[macpos + 14] = this.h[7] >>> 0 & 255;
    mac[macpos + 15] = this.h[7] >>> 8 & 255;
  };
  poly1305.prototype.update = function(m2, mpos, bytes) {
    var i2, want;
    if (this.leftover) {
      want = 16 - this.leftover;
      if (want > bytes)
        want = bytes;
      for (i2 = 0; i2 < want; i2++)
        this.buffer[this.leftover + i2] = m2[mpos + i2];
      bytes -= want;
      mpos += want;
      this.leftover += want;
      if (this.leftover < 16)
        return;
      this.blocks(this.buffer, 0, 16);
      this.leftover = 0;
    }
    if (bytes >= 16) {
      want = bytes - bytes % 16;
      this.blocks(m2, mpos, want);
      mpos += want;
      bytes -= want;
    }
    if (bytes) {
      for (i2 = 0; i2 < bytes; i2++)
        this.buffer[this.leftover + i2] = m2[mpos + i2];
      this.leftover += bytes;
    }
  };
  function crypto_onetimeauth(out, outpos, m2, mpos, n2, k2) {
    var s2 = new poly1305(k2);
    s2.update(m2, mpos, n2);
    s2.finish(out, outpos);
    return 0;
  }
  function crypto_onetimeauth_verify(h2, hpos, m2, mpos, n2, k2) {
    var x2 = new Uint8Array(16);
    crypto_onetimeauth(x2, 0, m2, mpos, n2, k2);
    return crypto_verify_16(h2, hpos, x2, 0);
  }
  function crypto_secretbox(c2, m2, d2, n2, k2) {
    var i2;
    if (d2 < 32)
      return -1;
    crypto_stream_xor(c2, 0, m2, 0, d2, n2, k2);
    crypto_onetimeauth(c2, 16, c2, 32, d2 - 32, c2);
    for (i2 = 0; i2 < 16; i2++)
      c2[i2] = 0;
    return 0;
  }
  function crypto_secretbox_open(m2, c2, d2, n2, k2) {
    var i2;
    var x2 = new Uint8Array(32);
    if (d2 < 32)
      return -1;
    crypto_stream(x2, 0, 32, n2, k2);
    if (crypto_onetimeauth_verify(c2, 16, c2, 32, d2 - 32, x2) !== 0)
      return -1;
    crypto_stream_xor(m2, 0, c2, 0, d2, n2, k2);
    for (i2 = 0; i2 < 32; i2++)
      m2[i2] = 0;
    return 0;
  }
  function set25519(r2, a2) {
    var i2;
    for (i2 = 0; i2 < 16; i2++)
      r2[i2] = a2[i2] | 0;
  }
  function car25519(o2) {
    var i2, v2, c2 = 1;
    for (i2 = 0; i2 < 16; i2++) {
      v2 = o2[i2] + c2 + 65535;
      c2 = Math.floor(v2 / 65536);
      o2[i2] = v2 - c2 * 65536;
    }
    o2[0] += c2 - 1 + 37 * (c2 - 1);
  }
  function sel25519(p2, q2, b2) {
    var t2, c2 = ~(b2 - 1);
    for (var i2 = 0; i2 < 16; i2++) {
      t2 = c2 & (p2[i2] ^ q2[i2]);
      p2[i2] ^= t2;
      q2[i2] ^= t2;
    }
  }
  function pack25519(o2, n2) {
    var i2, j2, b2;
    var m2 = gf(), t2 = gf();
    for (i2 = 0; i2 < 16; i2++)
      t2[i2] = n2[i2];
    car25519(t2);
    car25519(t2);
    car25519(t2);
    for (j2 = 0; j2 < 2; j2++) {
      m2[0] = t2[0] - 65517;
      for (i2 = 1; i2 < 15; i2++) {
        m2[i2] = t2[i2] - 65535 - (m2[i2 - 1] >> 16 & 1);
        m2[i2 - 1] &= 65535;
      }
      m2[15] = t2[15] - 32767 - (m2[14] >> 16 & 1);
      b2 = m2[15] >> 16 & 1;
      m2[14] &= 65535;
      sel25519(t2, m2, 1 - b2);
    }
    for (i2 = 0; i2 < 16; i2++) {
      o2[2 * i2] = t2[i2] & 255;
      o2[2 * i2 + 1] = t2[i2] >> 8;
    }
  }
  function neq25519(a2, b2) {
    var c2 = new Uint8Array(32), d2 = new Uint8Array(32);
    pack25519(c2, a2);
    pack25519(d2, b2);
    return crypto_verify_32(c2, 0, d2, 0);
  }
  function par25519(a2) {
    var d2 = new Uint8Array(32);
    pack25519(d2, a2);
    return d2[0] & 1;
  }
  function unpack25519(o2, n2) {
    var i2;
    for (i2 = 0; i2 < 16; i2++)
      o2[i2] = n2[2 * i2] + (n2[2 * i2 + 1] << 8);
    o2[15] &= 32767;
  }
  function A2(o2, a2, b2) {
    for (var i2 = 0; i2 < 16; i2++)
      o2[i2] = a2[i2] + b2[i2];
  }
  function Z2(o2, a2, b2) {
    for (var i2 = 0; i2 < 16; i2++)
      o2[i2] = a2[i2] - b2[i2];
  }
  function M2(o2, a2, b2) {
    var v2, c2, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b2[0], b1 = b2[1], b22 = b2[2], b3 = b2[3], b4 = b2[4], b5 = b2[5], b6 = b2[6], b7 = b2[7], b8 = b2[8], b9 = b2[9], b10 = b2[10], b11 = b2[11], b12 = b2[12], b13 = b2[13], b14 = b2[14], b15 = b2[15];
    v2 = a2[0];
    t0 += v2 * b0;
    t1 += v2 * b1;
    t2 += v2 * b22;
    t3 += v2 * b3;
    t4 += v2 * b4;
    t5 += v2 * b5;
    t6 += v2 * b6;
    t7 += v2 * b7;
    t8 += v2 * b8;
    t9 += v2 * b9;
    t10 += v2 * b10;
    t11 += v2 * b11;
    t12 += v2 * b12;
    t13 += v2 * b13;
    t14 += v2 * b14;
    t15 += v2 * b15;
    v2 = a2[1];
    t1 += v2 * b0;
    t2 += v2 * b1;
    t3 += v2 * b22;
    t4 += v2 * b3;
    t5 += v2 * b4;
    t6 += v2 * b5;
    t7 += v2 * b6;
    t8 += v2 * b7;
    t9 += v2 * b8;
    t10 += v2 * b9;
    t11 += v2 * b10;
    t12 += v2 * b11;
    t13 += v2 * b12;
    t14 += v2 * b13;
    t15 += v2 * b14;
    t16 += v2 * b15;
    v2 = a2[2];
    t2 += v2 * b0;
    t3 += v2 * b1;
    t4 += v2 * b22;
    t5 += v2 * b3;
    t6 += v2 * b4;
    t7 += v2 * b5;
    t8 += v2 * b6;
    t9 += v2 * b7;
    t10 += v2 * b8;
    t11 += v2 * b9;
    t12 += v2 * b10;
    t13 += v2 * b11;
    t14 += v2 * b12;
    t15 += v2 * b13;
    t16 += v2 * b14;
    t17 += v2 * b15;
    v2 = a2[3];
    t3 += v2 * b0;
    t4 += v2 * b1;
    t5 += v2 * b22;
    t6 += v2 * b3;
    t7 += v2 * b4;
    t8 += v2 * b5;
    t9 += v2 * b6;
    t10 += v2 * b7;
    t11 += v2 * b8;
    t12 += v2 * b9;
    t13 += v2 * b10;
    t14 += v2 * b11;
    t15 += v2 * b12;
    t16 += v2 * b13;
    t17 += v2 * b14;
    t18 += v2 * b15;
    v2 = a2[4];
    t4 += v2 * b0;
    t5 += v2 * b1;
    t6 += v2 * b22;
    t7 += v2 * b3;
    t8 += v2 * b4;
    t9 += v2 * b5;
    t10 += v2 * b6;
    t11 += v2 * b7;
    t12 += v2 * b8;
    t13 += v2 * b9;
    t14 += v2 * b10;
    t15 += v2 * b11;
    t16 += v2 * b12;
    t17 += v2 * b13;
    t18 += v2 * b14;
    t19 += v2 * b15;
    v2 = a2[5];
    t5 += v2 * b0;
    t6 += v2 * b1;
    t7 += v2 * b22;
    t8 += v2 * b3;
    t9 += v2 * b4;
    t10 += v2 * b5;
    t11 += v2 * b6;
    t12 += v2 * b7;
    t13 += v2 * b8;
    t14 += v2 * b9;
    t15 += v2 * b10;
    t16 += v2 * b11;
    t17 += v2 * b12;
    t18 += v2 * b13;
    t19 += v2 * b14;
    t20 += v2 * b15;
    v2 = a2[6];
    t6 += v2 * b0;
    t7 += v2 * b1;
    t8 += v2 * b22;
    t9 += v2 * b3;
    t10 += v2 * b4;
    t11 += v2 * b5;
    t12 += v2 * b6;
    t13 += v2 * b7;
    t14 += v2 * b8;
    t15 += v2 * b9;
    t16 += v2 * b10;
    t17 += v2 * b11;
    t18 += v2 * b12;
    t19 += v2 * b13;
    t20 += v2 * b14;
    t21 += v2 * b15;
    v2 = a2[7];
    t7 += v2 * b0;
    t8 += v2 * b1;
    t9 += v2 * b22;
    t10 += v2 * b3;
    t11 += v2 * b4;
    t12 += v2 * b5;
    t13 += v2 * b6;
    t14 += v2 * b7;
    t15 += v2 * b8;
    t16 += v2 * b9;
    t17 += v2 * b10;
    t18 += v2 * b11;
    t19 += v2 * b12;
    t20 += v2 * b13;
    t21 += v2 * b14;
    t22 += v2 * b15;
    v2 = a2[8];
    t8 += v2 * b0;
    t9 += v2 * b1;
    t10 += v2 * b22;
    t11 += v2 * b3;
    t12 += v2 * b4;
    t13 += v2 * b5;
    t14 += v2 * b6;
    t15 += v2 * b7;
    t16 += v2 * b8;
    t17 += v2 * b9;
    t18 += v2 * b10;
    t19 += v2 * b11;
    t20 += v2 * b12;
    t21 += v2 * b13;
    t22 += v2 * b14;
    t23 += v2 * b15;
    v2 = a2[9];
    t9 += v2 * b0;
    t10 += v2 * b1;
    t11 += v2 * b22;
    t12 += v2 * b3;
    t13 += v2 * b4;
    t14 += v2 * b5;
    t15 += v2 * b6;
    t16 += v2 * b7;
    t17 += v2 * b8;
    t18 += v2 * b9;
    t19 += v2 * b10;
    t20 += v2 * b11;
    t21 += v2 * b12;
    t22 += v2 * b13;
    t23 += v2 * b14;
    t24 += v2 * b15;
    v2 = a2[10];
    t10 += v2 * b0;
    t11 += v2 * b1;
    t12 += v2 * b22;
    t13 += v2 * b3;
    t14 += v2 * b4;
    t15 += v2 * b5;
    t16 += v2 * b6;
    t17 += v2 * b7;
    t18 += v2 * b8;
    t19 += v2 * b9;
    t20 += v2 * b10;
    t21 += v2 * b11;
    t22 += v2 * b12;
    t23 += v2 * b13;
    t24 += v2 * b14;
    t25 += v2 * b15;
    v2 = a2[11];
    t11 += v2 * b0;
    t12 += v2 * b1;
    t13 += v2 * b22;
    t14 += v2 * b3;
    t15 += v2 * b4;
    t16 += v2 * b5;
    t17 += v2 * b6;
    t18 += v2 * b7;
    t19 += v2 * b8;
    t20 += v2 * b9;
    t21 += v2 * b10;
    t22 += v2 * b11;
    t23 += v2 * b12;
    t24 += v2 * b13;
    t25 += v2 * b14;
    t26 += v2 * b15;
    v2 = a2[12];
    t12 += v2 * b0;
    t13 += v2 * b1;
    t14 += v2 * b22;
    t15 += v2 * b3;
    t16 += v2 * b4;
    t17 += v2 * b5;
    t18 += v2 * b6;
    t19 += v2 * b7;
    t20 += v2 * b8;
    t21 += v2 * b9;
    t22 += v2 * b10;
    t23 += v2 * b11;
    t24 += v2 * b12;
    t25 += v2 * b13;
    t26 += v2 * b14;
    t27 += v2 * b15;
    v2 = a2[13];
    t13 += v2 * b0;
    t14 += v2 * b1;
    t15 += v2 * b22;
    t16 += v2 * b3;
    t17 += v2 * b4;
    t18 += v2 * b5;
    t19 += v2 * b6;
    t20 += v2 * b7;
    t21 += v2 * b8;
    t22 += v2 * b9;
    t23 += v2 * b10;
    t24 += v2 * b11;
    t25 += v2 * b12;
    t26 += v2 * b13;
    t27 += v2 * b14;
    t28 += v2 * b15;
    v2 = a2[14];
    t14 += v2 * b0;
    t15 += v2 * b1;
    t16 += v2 * b22;
    t17 += v2 * b3;
    t18 += v2 * b4;
    t19 += v2 * b5;
    t20 += v2 * b6;
    t21 += v2 * b7;
    t22 += v2 * b8;
    t23 += v2 * b9;
    t24 += v2 * b10;
    t25 += v2 * b11;
    t26 += v2 * b12;
    t27 += v2 * b13;
    t28 += v2 * b14;
    t29 += v2 * b15;
    v2 = a2[15];
    t15 += v2 * b0;
    t16 += v2 * b1;
    t17 += v2 * b22;
    t18 += v2 * b3;
    t19 += v2 * b4;
    t20 += v2 * b5;
    t21 += v2 * b6;
    t22 += v2 * b7;
    t23 += v2 * b8;
    t24 += v2 * b9;
    t25 += v2 * b10;
    t26 += v2 * b11;
    t27 += v2 * b12;
    t28 += v2 * b13;
    t29 += v2 * b14;
    t30 += v2 * b15;
    t0 += 38 * t16;
    t1 += 38 * t17;
    t2 += 38 * t18;
    t3 += 38 * t19;
    t4 += 38 * t20;
    t5 += 38 * t21;
    t6 += 38 * t22;
    t7 += 38 * t23;
    t8 += 38 * t24;
    t9 += 38 * t25;
    t10 += 38 * t26;
    t11 += 38 * t27;
    t12 += 38 * t28;
    t13 += 38 * t29;
    t14 += 38 * t30;
    c2 = 1;
    v2 = t0 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t0 = v2 - c2 * 65536;
    v2 = t1 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t1 = v2 - c2 * 65536;
    v2 = t2 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t2 = v2 - c2 * 65536;
    v2 = t3 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t3 = v2 - c2 * 65536;
    v2 = t4 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t4 = v2 - c2 * 65536;
    v2 = t5 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t5 = v2 - c2 * 65536;
    v2 = t6 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t6 = v2 - c2 * 65536;
    v2 = t7 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t7 = v2 - c2 * 65536;
    v2 = t8 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t8 = v2 - c2 * 65536;
    v2 = t9 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t9 = v2 - c2 * 65536;
    v2 = t10 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t10 = v2 - c2 * 65536;
    v2 = t11 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t11 = v2 - c2 * 65536;
    v2 = t12 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t12 = v2 - c2 * 65536;
    v2 = t13 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t13 = v2 - c2 * 65536;
    v2 = t14 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t14 = v2 - c2 * 65536;
    v2 = t15 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t15 = v2 - c2 * 65536;
    t0 += c2 - 1 + 37 * (c2 - 1);
    c2 = 1;
    v2 = t0 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t0 = v2 - c2 * 65536;
    v2 = t1 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t1 = v2 - c2 * 65536;
    v2 = t2 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t2 = v2 - c2 * 65536;
    v2 = t3 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t3 = v2 - c2 * 65536;
    v2 = t4 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t4 = v2 - c2 * 65536;
    v2 = t5 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t5 = v2 - c2 * 65536;
    v2 = t6 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t6 = v2 - c2 * 65536;
    v2 = t7 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t7 = v2 - c2 * 65536;
    v2 = t8 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t8 = v2 - c2 * 65536;
    v2 = t9 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t9 = v2 - c2 * 65536;
    v2 = t10 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t10 = v2 - c2 * 65536;
    v2 = t11 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t11 = v2 - c2 * 65536;
    v2 = t12 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t12 = v2 - c2 * 65536;
    v2 = t13 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t13 = v2 - c2 * 65536;
    v2 = t14 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t14 = v2 - c2 * 65536;
    v2 = t15 + c2 + 65535;
    c2 = Math.floor(v2 / 65536);
    t15 = v2 - c2 * 65536;
    t0 += c2 - 1 + 37 * (c2 - 1);
    o2[0] = t0;
    o2[1] = t1;
    o2[2] = t2;
    o2[3] = t3;
    o2[4] = t4;
    o2[5] = t5;
    o2[6] = t6;
    o2[7] = t7;
    o2[8] = t8;
    o2[9] = t9;
    o2[10] = t10;
    o2[11] = t11;
    o2[12] = t12;
    o2[13] = t13;
    o2[14] = t14;
    o2[15] = t15;
  }
  function S2(o2, a2) {
    M2(o2, a2, a2);
  }
  function inv25519(o2, i2) {
    var c2 = gf();
    var a2;
    for (a2 = 0; a2 < 16; a2++)
      c2[a2] = i2[a2];
    for (a2 = 253; a2 >= 0; a2--) {
      S2(c2, c2);
      if (a2 !== 2 && a2 !== 4)
        M2(c2, c2, i2);
    }
    for (a2 = 0; a2 < 16; a2++)
      o2[a2] = c2[a2];
  }
  function pow2523(o2, i2) {
    var c2 = gf();
    var a2;
    for (a2 = 0; a2 < 16; a2++)
      c2[a2] = i2[a2];
    for (a2 = 250; a2 >= 0; a2--) {
      S2(c2, c2);
      if (a2 !== 1)
        M2(c2, c2, i2);
    }
    for (a2 = 0; a2 < 16; a2++)
      o2[a2] = c2[a2];
  }
  function crypto_scalarmult(q2, n2, p2) {
    var z2 = new Uint8Array(32);
    var x2 = new Float64Array(80), r2, i2;
    var a2 = gf(), b2 = gf(), c2 = gf(), d2 = gf(), e2 = gf(), f2 = gf();
    for (i2 = 0; i2 < 31; i2++)
      z2[i2] = n2[i2];
    z2[31] = n2[31] & 127 | 64;
    z2[0] &= 248;
    unpack25519(x2, p2);
    for (i2 = 0; i2 < 16; i2++) {
      b2[i2] = x2[i2];
      d2[i2] = a2[i2] = c2[i2] = 0;
    }
    a2[0] = d2[0] = 1;
    for (i2 = 254; i2 >= 0; --i2) {
      r2 = z2[i2 >>> 3] >>> (i2 & 7) & 1;
      sel25519(a2, b2, r2);
      sel25519(c2, d2, r2);
      A2(e2, a2, c2);
      Z2(a2, a2, c2);
      A2(c2, b2, d2);
      Z2(b2, b2, d2);
      S2(d2, e2);
      S2(f2, a2);
      M2(a2, c2, a2);
      M2(c2, b2, e2);
      A2(e2, a2, c2);
      Z2(a2, a2, c2);
      S2(b2, a2);
      Z2(c2, d2, f2);
      M2(a2, c2, _121665);
      A2(a2, a2, d2);
      M2(c2, c2, a2);
      M2(a2, d2, f2);
      M2(d2, b2, x2);
      S2(b2, e2);
      sel25519(a2, b2, r2);
      sel25519(c2, d2, r2);
    }
    for (i2 = 0; i2 < 16; i2++) {
      x2[i2 + 16] = a2[i2];
      x2[i2 + 32] = c2[i2];
      x2[i2 + 48] = b2[i2];
      x2[i2 + 64] = d2[i2];
    }
    var x32 = x2.subarray(32);
    var x16 = x2.subarray(16);
    inv25519(x32, x32);
    M2(x16, x16, x32);
    pack25519(q2, x16);
    return 0;
  }
  function crypto_scalarmult_base(q2, n2) {
    return crypto_scalarmult(q2, n2, _92);
  }
  function crypto_box_keypair(y2, x2) {
    randombytes(x2, 32);
    return crypto_scalarmult_base(y2, x2);
  }
  function crypto_box_beforenm(k2, y2, x2) {
    var s2 = new Uint8Array(32);
    crypto_scalarmult(s2, x2, y2);
    return crypto_core_hsalsa20(k2, _0, s2, sigma);
  }
  var crypto_box_afternm = crypto_secretbox;
  var crypto_box_open_afternm = crypto_secretbox_open;
  function crypto_box(c2, m2, d2, n2, y2, x2) {
    var k2 = new Uint8Array(32);
    crypto_box_beforenm(k2, y2, x2);
    return crypto_box_afternm(c2, m2, d2, n2, k2);
  }
  function crypto_box_open(m2, c2, d2, n2, y2, x2) {
    var k2 = new Uint8Array(32);
    crypto_box_beforenm(k2, y2, x2);
    return crypto_box_open_afternm(m2, c2, d2, n2, k2);
  }
  var K2 = [
    1116352408,
    3609767458,
    1899447441,
    602891725,
    3049323471,
    3964484399,
    3921009573,
    2173295548,
    961987163,
    4081628472,
    1508970993,
    3053834265,
    2453635748,
    2937671579,
    2870763221,
    3664609560,
    3624381080,
    2734883394,
    310598401,
    1164996542,
    607225278,
    1323610764,
    1426881987,
    3590304994,
    1925078388,
    4068182383,
    2162078206,
    991336113,
    2614888103,
    633803317,
    3248222580,
    3479774868,
    3835390401,
    2666613458,
    4022224774,
    944711139,
    264347078,
    2341262773,
    604807628,
    2007800933,
    770255983,
    1495990901,
    1249150122,
    1856431235,
    1555081692,
    3175218132,
    1996064986,
    2198950837,
    2554220882,
    3999719339,
    2821834349,
    766784016,
    2952996808,
    2566594879,
    3210313671,
    3203337956,
    3336571891,
    1034457026,
    3584528711,
    2466948901,
    113926993,
    3758326383,
    338241895,
    168717936,
    666307205,
    1188179964,
    773529912,
    1546045734,
    1294757372,
    1522805485,
    1396182291,
    2643833823,
    1695183700,
    2343527390,
    1986661051,
    1014477480,
    2177026350,
    1206759142,
    2456956037,
    344077627,
    2730485921,
    1290863460,
    2820302411,
    3158454273,
    3259730800,
    3505952657,
    3345764771,
    106217008,
    3516065817,
    3606008344,
    3600352804,
    1432725776,
    4094571909,
    1467031594,
    275423344,
    851169720,
    430227734,
    3100823752,
    506948616,
    1363258195,
    659060556,
    3750685593,
    883997877,
    3785050280,
    958139571,
    3318307427,
    1322822218,
    3812723403,
    1537002063,
    2003034995,
    1747873779,
    3602036899,
    1955562222,
    1575990012,
    2024104815,
    1125592928,
    2227730452,
    2716904306,
    2361852424,
    442776044,
    2428436474,
    593698344,
    2756734187,
    3733110249,
    3204031479,
    2999351573,
    3329325298,
    3815920427,
    3391569614,
    3928383900,
    3515267271,
    566280711,
    3940187606,
    3454069534,
    4118630271,
    4000239992,
    116418474,
    1914138554,
    174292421,
    2731055270,
    289380356,
    3203993006,
    460393269,
    320620315,
    685471733,
    587496836,
    852142971,
    1086792851,
    1017036298,
    365543100,
    1126000580,
    2618297676,
    1288033470,
    3409855158,
    1501505948,
    4234509866,
    1607167915,
    987167468,
    1816402316,
    1246189591
  ];
  function crypto_hashblocks_hl(hh, hl, m2, n2) {
    var wh = new Int32Array(16), wl = new Int32Array(16), bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7, bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7, th, tl, i2, j2, h2, l2, a2, b2, c2, d2;
    var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
    var pos = 0;
    while (n2 >= 128) {
      for (i2 = 0; i2 < 16; i2++) {
        j2 = 8 * i2 + pos;
        wh[i2] = m2[j2 + 0] << 24 | m2[j2 + 1] << 16 | m2[j2 + 2] << 8 | m2[j2 + 3];
        wl[i2] = m2[j2 + 4] << 24 | m2[j2 + 5] << 16 | m2[j2 + 6] << 8 | m2[j2 + 7];
      }
      for (i2 = 0; i2 < 80; i2++) {
        bh0 = ah0;
        bh1 = ah1;
        bh2 = ah2;
        bh3 = ah3;
        bh4 = ah4;
        bh5 = ah5;
        bh6 = ah6;
        bh7 = ah7;
        bl0 = al0;
        bl1 = al1;
        bl2 = al2;
        bl3 = al3;
        bl4 = al4;
        bl5 = al5;
        bl6 = al6;
        bl7 = al7;
        h2 = ah7;
        l2 = al7;
        a2 = l2 & 65535;
        b2 = l2 >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
        l2 = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
        a2 += l2 & 65535;
        b2 += l2 >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        h2 = ah4 & ah5 ^ ~ah4 & ah6;
        l2 = al4 & al5 ^ ~al4 & al6;
        a2 += l2 & 65535;
        b2 += l2 >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        h2 = K2[i2 * 2];
        l2 = K2[i2 * 2 + 1];
        a2 += l2 & 65535;
        b2 += l2 >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        h2 = wh[i2 % 16];
        l2 = wl[i2 % 16];
        a2 += l2 & 65535;
        b2 += l2 >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b2 += a2 >>> 16;
        c2 += b2 >>> 16;
        d2 += c2 >>> 16;
        th = c2 & 65535 | d2 << 16;
        tl = a2 & 65535 | b2 << 16;
        h2 = th;
        l2 = tl;
        a2 = l2 & 65535;
        b2 = l2 >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
        l2 = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
        a2 += l2 & 65535;
        b2 += l2 >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        h2 = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
        l2 = al0 & al1 ^ al0 & al2 ^ al1 & al2;
        a2 += l2 & 65535;
        b2 += l2 >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b2 += a2 >>> 16;
        c2 += b2 >>> 16;
        d2 += c2 >>> 16;
        bh7 = c2 & 65535 | d2 << 16;
        bl7 = a2 & 65535 | b2 << 16;
        h2 = bh3;
        l2 = bl3;
        a2 = l2 & 65535;
        b2 = l2 >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = th;
        l2 = tl;
        a2 += l2 & 65535;
        b2 += l2 >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b2 += a2 >>> 16;
        c2 += b2 >>> 16;
        d2 += c2 >>> 16;
        bh3 = c2 & 65535 | d2 << 16;
        bl3 = a2 & 65535 | b2 << 16;
        ah1 = bh0;
        ah2 = bh1;
        ah3 = bh2;
        ah4 = bh3;
        ah5 = bh4;
        ah6 = bh5;
        ah7 = bh6;
        ah0 = bh7;
        al1 = bl0;
        al2 = bl1;
        al3 = bl2;
        al4 = bl3;
        al5 = bl4;
        al6 = bl5;
        al7 = bl6;
        al0 = bl7;
        if (i2 % 16 === 15) {
          for (j2 = 0; j2 < 16; j2++) {
            h2 = wh[j2];
            l2 = wl[j2];
            a2 = l2 & 65535;
            b2 = l2 >>> 16;
            c2 = h2 & 65535;
            d2 = h2 >>> 16;
            h2 = wh[(j2 + 9) % 16];
            l2 = wl[(j2 + 9) % 16];
            a2 += l2 & 65535;
            b2 += l2 >>> 16;
            c2 += h2 & 65535;
            d2 += h2 >>> 16;
            th = wh[(j2 + 1) % 16];
            tl = wl[(j2 + 1) % 16];
            h2 = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;
            l2 = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);
            a2 += l2 & 65535;
            b2 += l2 >>> 16;
            c2 += h2 & 65535;
            d2 += h2 >>> 16;
            th = wh[(j2 + 14) % 16];
            tl = wl[(j2 + 14) % 16];
            h2 = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;
            l2 = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);
            a2 += l2 & 65535;
            b2 += l2 >>> 16;
            c2 += h2 & 65535;
            d2 += h2 >>> 16;
            b2 += a2 >>> 16;
            c2 += b2 >>> 16;
            d2 += c2 >>> 16;
            wh[j2] = c2 & 65535 | d2 << 16;
            wl[j2] = a2 & 65535 | b2 << 16;
          }
        }
      }
      h2 = ah0;
      l2 = al0;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[0];
      l2 = hl[0];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[0] = ah0 = c2 & 65535 | d2 << 16;
      hl[0] = al0 = a2 & 65535 | b2 << 16;
      h2 = ah1;
      l2 = al1;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[1];
      l2 = hl[1];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[1] = ah1 = c2 & 65535 | d2 << 16;
      hl[1] = al1 = a2 & 65535 | b2 << 16;
      h2 = ah2;
      l2 = al2;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[2];
      l2 = hl[2];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[2] = ah2 = c2 & 65535 | d2 << 16;
      hl[2] = al2 = a2 & 65535 | b2 << 16;
      h2 = ah3;
      l2 = al3;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[3];
      l2 = hl[3];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[3] = ah3 = c2 & 65535 | d2 << 16;
      hl[3] = al3 = a2 & 65535 | b2 << 16;
      h2 = ah4;
      l2 = al4;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[4];
      l2 = hl[4];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[4] = ah4 = c2 & 65535 | d2 << 16;
      hl[4] = al4 = a2 & 65535 | b2 << 16;
      h2 = ah5;
      l2 = al5;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[5];
      l2 = hl[5];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[5] = ah5 = c2 & 65535 | d2 << 16;
      hl[5] = al5 = a2 & 65535 | b2 << 16;
      h2 = ah6;
      l2 = al6;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[6];
      l2 = hl[6];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[6] = ah6 = c2 & 65535 | d2 << 16;
      hl[6] = al6 = a2 & 65535 | b2 << 16;
      h2 = ah7;
      l2 = al7;
      a2 = l2 & 65535;
      b2 = l2 >>> 16;
      c2 = h2 & 65535;
      d2 = h2 >>> 16;
      h2 = hh[7];
      l2 = hl[7];
      a2 += l2 & 65535;
      b2 += l2 >>> 16;
      c2 += h2 & 65535;
      d2 += h2 >>> 16;
      b2 += a2 >>> 16;
      c2 += b2 >>> 16;
      d2 += c2 >>> 16;
      hh[7] = ah7 = c2 & 65535 | d2 << 16;
      hl[7] = al7 = a2 & 65535 | b2 << 16;
      pos += 128;
      n2 -= 128;
    }
    return n2;
  }
  function crypto_hash(out, m2, n2) {
    var hh = new Int32Array(8), hl = new Int32Array(8), x2 = new Uint8Array(256), i2, b2 = n2;
    hh[0] = 1779033703;
    hh[1] = 3144134277;
    hh[2] = 1013904242;
    hh[3] = 2773480762;
    hh[4] = 1359893119;
    hh[5] = 2600822924;
    hh[6] = 528734635;
    hh[7] = 1541459225;
    hl[0] = 4089235720;
    hl[1] = 2227873595;
    hl[2] = 4271175723;
    hl[3] = 1595750129;
    hl[4] = 2917565137;
    hl[5] = 725511199;
    hl[6] = 4215389547;
    hl[7] = 327033209;
    crypto_hashblocks_hl(hh, hl, m2, n2);
    n2 %= 128;
    for (i2 = 0; i2 < n2; i2++)
      x2[i2] = m2[b2 - n2 + i2];
    x2[n2] = 128;
    n2 = 256 - 128 * (n2 < 112 ? 1 : 0);
    x2[n2 - 9] = 0;
    ts64(x2, n2 - 8, b2 / 536870912 | 0, b2 << 3);
    crypto_hashblocks_hl(hh, hl, x2, n2);
    for (i2 = 0; i2 < 8; i2++)
      ts64(out, 8 * i2, hh[i2], hl[i2]);
    return 0;
  }
  function add(p2, q2) {
    var a2 = gf(), b2 = gf(), c2 = gf(), d2 = gf(), e2 = gf(), f2 = gf(), g2 = gf(), h2 = gf(), t2 = gf();
    Z2(a2, p2[1], p2[0]);
    Z2(t2, q2[1], q2[0]);
    M2(a2, a2, t2);
    A2(b2, p2[0], p2[1]);
    A2(t2, q2[0], q2[1]);
    M2(b2, b2, t2);
    M2(c2, p2[3], q2[3]);
    M2(c2, c2, D22);
    M2(d2, p2[2], q2[2]);
    A2(d2, d2, d2);
    Z2(e2, b2, a2);
    Z2(f2, d2, c2);
    A2(g2, d2, c2);
    A2(h2, b2, a2);
    M2(p2[0], e2, f2);
    M2(p2[1], h2, g2);
    M2(p2[2], g2, f2);
    M2(p2[3], e2, h2);
  }
  function cswap(p2, q2, b2) {
    var i2;
    for (i2 = 0; i2 < 4; i2++) {
      sel25519(p2[i2], q2[i2], b2);
    }
  }
  function pack(r2, p2) {
    var tx = gf(), ty = gf(), zi = gf();
    inv25519(zi, p2[2]);
    M2(tx, p2[0], zi);
    M2(ty, p2[1], zi);
    pack25519(r2, ty);
    r2[31] ^= par25519(tx) << 7;
  }
  function scalarmult(p2, q2, s2) {
    var b2, i2;
    set25519(p2[0], gf0);
    set25519(p2[1], gf1);
    set25519(p2[2], gf1);
    set25519(p2[3], gf0);
    for (i2 = 255; i2 >= 0; --i2) {
      b2 = s2[i2 / 8 | 0] >> (i2 & 7) & 1;
      cswap(p2, q2, b2);
      add(q2, p2);
      add(p2, p2);
      cswap(p2, q2, b2);
    }
  }
  function scalarbase(p2, s2) {
    var q2 = [gf(), gf(), gf(), gf()];
    set25519(q2[0], X2);
    set25519(q2[1], Y2);
    set25519(q2[2], gf1);
    M2(q2[3], X2, Y2);
    scalarmult(p2, q2, s2);
  }
  function crypto_sign_keypair(pk, sk, seeded) {
    var d2 = new Uint8Array(64);
    var p2 = [gf(), gf(), gf(), gf()];
    var i2;
    if (!seeded)
      randombytes(sk, 32);
    crypto_hash(d2, sk, 32);
    d2[0] &= 248;
    d2[31] &= 127;
    d2[31] |= 64;
    scalarbase(p2, d2);
    pack(pk, p2);
    for (i2 = 0; i2 < 32; i2++)
      sk[i2 + 32] = pk[i2];
    return 0;
  }
  var L2 = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);
  function modL(r2, x2) {
    var carry, i2, j2, k2;
    for (i2 = 63; i2 >= 32; --i2) {
      carry = 0;
      for (j2 = i2 - 32, k2 = i2 - 12; j2 < k2; ++j2) {
        x2[j2] += carry - 16 * x2[i2] * L2[j2 - (i2 - 32)];
        carry = Math.floor((x2[j2] + 128) / 256);
        x2[j2] -= carry * 256;
      }
      x2[j2] += carry;
      x2[i2] = 0;
    }
    carry = 0;
    for (j2 = 0; j2 < 32; j2++) {
      x2[j2] += carry - (x2[31] >> 4) * L2[j2];
      carry = x2[j2] >> 8;
      x2[j2] &= 255;
    }
    for (j2 = 0; j2 < 32; j2++)
      x2[j2] -= carry * L2[j2];
    for (i2 = 0; i2 < 32; i2++) {
      x2[i2 + 1] += x2[i2] >> 8;
      r2[i2] = x2[i2] & 255;
    }
  }
  function reduce(r2) {
    var x2 = new Float64Array(64), i2;
    for (i2 = 0; i2 < 64; i2++)
      x2[i2] = r2[i2];
    for (i2 = 0; i2 < 64; i2++)
      r2[i2] = 0;
    modL(r2, x2);
  }
  function crypto_sign(sm, m2, n2, sk) {
    var d2 = new Uint8Array(64), h2 = new Uint8Array(64), r2 = new Uint8Array(64);
    var i2, j2, x2 = new Float64Array(64);
    var p2 = [gf(), gf(), gf(), gf()];
    crypto_hash(d2, sk, 32);
    d2[0] &= 248;
    d2[31] &= 127;
    d2[31] |= 64;
    var smlen = n2 + 64;
    for (i2 = 0; i2 < n2; i2++)
      sm[64 + i2] = m2[i2];
    for (i2 = 0; i2 < 32; i2++)
      sm[32 + i2] = d2[32 + i2];
    crypto_hash(r2, sm.subarray(32), n2 + 32);
    reduce(r2);
    scalarbase(p2, r2);
    pack(sm, p2);
    for (i2 = 32; i2 < 64; i2++)
      sm[i2] = sk[i2];
    crypto_hash(h2, sm, n2 + 64);
    reduce(h2);
    for (i2 = 0; i2 < 64; i2++)
      x2[i2] = 0;
    for (i2 = 0; i2 < 32; i2++)
      x2[i2] = r2[i2];
    for (i2 = 0; i2 < 32; i2++) {
      for (j2 = 0; j2 < 32; j2++) {
        x2[i2 + j2] += h2[i2] * d2[j2];
      }
    }
    modL(sm.subarray(32), x2);
    return smlen;
  }
  function unpackneg(r2, p2) {
    var t2 = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();
    set25519(r2[2], gf1);
    unpack25519(r2[1], p2);
    S2(num, r2[1]);
    M2(den, num, D2);
    Z2(num, num, r2[2]);
    A2(den, r2[2], den);
    S2(den2, den);
    S2(den4, den2);
    M2(den6, den4, den2);
    M2(t2, den6, num);
    M2(t2, t2, den);
    pow2523(t2, t2);
    M2(t2, t2, num);
    M2(t2, t2, den);
    M2(t2, t2, den);
    M2(r2[0], t2, den);
    S2(chk, r2[0]);
    M2(chk, chk, den);
    if (neq25519(chk, num))
      M2(r2[0], r2[0], I2);
    S2(chk, r2[0]);
    M2(chk, chk, den);
    if (neq25519(chk, num))
      return -1;
    if (par25519(r2[0]) === p2[31] >> 7)
      Z2(r2[0], gf0, r2[0]);
    M2(r2[3], r2[0], r2[1]);
    return 0;
  }
  function crypto_sign_open(m2, sm, n2, pk) {
    var i2;
    var t2 = new Uint8Array(32), h2 = new Uint8Array(64);
    var p2 = [gf(), gf(), gf(), gf()], q2 = [gf(), gf(), gf(), gf()];
    if (n2 < 64)
      return -1;
    if (unpackneg(q2, pk))
      return -1;
    for (i2 = 0; i2 < n2; i2++)
      m2[i2] = sm[i2];
    for (i2 = 0; i2 < 32; i2++)
      m2[i2 + 32] = pk[i2];
    crypto_hash(h2, m2, n2);
    reduce(h2);
    scalarmult(p2, q2, h2);
    scalarbase(q2, sm.subarray(32));
    add(p2, q2);
    pack(t2, p2);
    n2 -= 64;
    if (crypto_verify_32(sm, 0, t2, 0)) {
      for (i2 = 0; i2 < n2; i2++)
        m2[i2] = 0;
      return -1;
    }
    for (i2 = 0; i2 < n2; i2++)
      m2[i2] = sm[i2 + 64];
    return n2;
  }
  var crypto_secretbox_KEYBYTES = 32, crypto_secretbox_NONCEBYTES = 24, crypto_secretbox_ZEROBYTES = 32, crypto_secretbox_BOXZEROBYTES = 16, crypto_scalarmult_BYTES = 32, crypto_scalarmult_SCALARBYTES = 32, crypto_box_PUBLICKEYBYTES = 32, crypto_box_SECRETKEYBYTES = 32, crypto_box_BEFORENMBYTES = 32, crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES, crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES, crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES, crypto_sign_BYTES = 64, crypto_sign_PUBLICKEYBYTES = 32, crypto_sign_SECRETKEYBYTES = 64, crypto_sign_SEEDBYTES = 32, crypto_hash_BYTES = 64;
  nacl.lowlevel = {
    crypto_core_hsalsa20,
    crypto_stream_xor,
    crypto_stream,
    crypto_stream_salsa20_xor,
    crypto_stream_salsa20,
    crypto_onetimeauth,
    crypto_onetimeauth_verify,
    crypto_verify_16,
    crypto_verify_32,
    crypto_secretbox,
    crypto_secretbox_open,
    crypto_scalarmult,
    crypto_scalarmult_base,
    crypto_box_beforenm,
    crypto_box_afternm,
    crypto_box,
    crypto_box_open,
    crypto_box_keypair,
    crypto_hash,
    crypto_sign,
    crypto_sign_keypair,
    crypto_sign_open,
    crypto_secretbox_KEYBYTES,
    crypto_secretbox_NONCEBYTES,
    crypto_secretbox_ZEROBYTES,
    crypto_secretbox_BOXZEROBYTES,
    crypto_scalarmult_BYTES,
    crypto_scalarmult_SCALARBYTES,
    crypto_box_PUBLICKEYBYTES,
    crypto_box_SECRETKEYBYTES,
    crypto_box_BEFORENMBYTES,
    crypto_box_NONCEBYTES,
    crypto_box_ZEROBYTES,
    crypto_box_BOXZEROBYTES,
    crypto_sign_BYTES,
    crypto_sign_PUBLICKEYBYTES,
    crypto_sign_SECRETKEYBYTES,
    crypto_sign_SEEDBYTES,
    crypto_hash_BYTES,
    gf,
    D: D2,
    L: L2,
    pack25519,
    unpack25519,
    M: M2,
    A: A2,
    S: S2,
    Z: Z2,
    pow2523,
    add,
    set25519,
    modL,
    scalarmult,
    scalarbase
  };
  function checkLengths(k2, n2) {
    if (k2.length !== crypto_secretbox_KEYBYTES)
      throw new Error("bad key size");
    if (n2.length !== crypto_secretbox_NONCEBYTES)
      throw new Error("bad nonce size");
  }
  function checkBoxLengths(pk, sk) {
    if (pk.length !== crypto_box_PUBLICKEYBYTES)
      throw new Error("bad public key size");
    if (sk.length !== crypto_box_SECRETKEYBYTES)
      throw new Error("bad secret key size");
  }
  function checkArrayTypes() {
    for (var i2 = 0; i2 < arguments.length; i2++) {
      if (!(arguments[i2] instanceof Uint8Array))
        throw new TypeError("unexpected type, use Uint8Array");
    }
  }
  function cleanup(arr) {
    for (var i2 = 0; i2 < arr.length; i2++)
      arr[i2] = 0;
  }
  nacl.randomBytes = function(n2) {
    var b2 = new Uint8Array(n2);
    randombytes(b2, n2);
    return b2;
  };
  nacl.secretbox = function(msg, nonce, key) {
    checkArrayTypes(msg, nonce, key);
    checkLengths(key, nonce);
    var m2 = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
    var c2 = new Uint8Array(m2.length);
    for (var i2 = 0; i2 < msg.length; i2++)
      m2[i2 + crypto_secretbox_ZEROBYTES] = msg[i2];
    crypto_secretbox(c2, m2, m2.length, nonce, key);
    return c2.subarray(crypto_secretbox_BOXZEROBYTES);
  };
  nacl.secretbox.open = function(box2, nonce, key) {
    checkArrayTypes(box2, nonce, key);
    checkLengths(key, nonce);
    var c2 = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box2.length);
    var m2 = new Uint8Array(c2.length);
    for (var i2 = 0; i2 < box2.length; i2++)
      c2[i2 + crypto_secretbox_BOXZEROBYTES] = box2[i2];
    if (c2.length < 32)
      return null;
    if (crypto_secretbox_open(m2, c2, c2.length, nonce, key) !== 0)
      return null;
    return m2.subarray(crypto_secretbox_ZEROBYTES);
  };
  nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
  nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
  nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;
  nacl.scalarMult = function(n2, p2) {
    checkArrayTypes(n2, p2);
    if (n2.length !== crypto_scalarmult_SCALARBYTES)
      throw new Error("bad n size");
    if (p2.length !== crypto_scalarmult_BYTES)
      throw new Error("bad p size");
    var q2 = new Uint8Array(crypto_scalarmult_BYTES);
    crypto_scalarmult(q2, n2, p2);
    return q2;
  };
  nacl.scalarMult.base = function(n2) {
    checkArrayTypes(n2);
    if (n2.length !== crypto_scalarmult_SCALARBYTES)
      throw new Error("bad n size");
    var q2 = new Uint8Array(crypto_scalarmult_BYTES);
    crypto_scalarmult_base(q2, n2);
    return q2;
  };
  nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
  nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;
  nacl.box = function(msg, nonce, publicKey, secretKey) {
    var k2 = nacl.box.before(publicKey, secretKey);
    return nacl.secretbox(msg, nonce, k2);
  };
  nacl.box.before = function(publicKey, secretKey) {
    checkArrayTypes(publicKey, secretKey);
    checkBoxLengths(publicKey, secretKey);
    var k2 = new Uint8Array(crypto_box_BEFORENMBYTES);
    crypto_box_beforenm(k2, publicKey, secretKey);
    return k2;
  };
  nacl.box.after = nacl.secretbox;
  nacl.box.open = function(msg, nonce, publicKey, secretKey) {
    var k2 = nacl.box.before(publicKey, secretKey);
    return nacl.secretbox.open(msg, nonce, k2);
  };
  nacl.box.open.after = nacl.secretbox.open;
  nacl.box.keyPair = function() {
    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
    var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
    crypto_box_keypair(pk, sk);
    return { publicKey: pk, secretKey: sk };
  };
  nacl.box.keyPair.fromSecretKey = function(secretKey) {
    checkArrayTypes(secretKey);
    if (secretKey.length !== crypto_box_SECRETKEYBYTES)
      throw new Error("bad secret key size");
    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
    crypto_scalarmult_base(pk, secretKey);
    return { publicKey: pk, secretKey: new Uint8Array(secretKey) };
  };
  nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
  nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
  nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
  nacl.box.nonceLength = crypto_box_NONCEBYTES;
  nacl.box.overheadLength = nacl.secretbox.overheadLength;
  nacl.sign = function(msg, secretKey) {
    checkArrayTypes(msg, secretKey);
    if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
      throw new Error("bad secret key size");
    var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);
    crypto_sign(signedMsg, msg, msg.length, secretKey);
    return signedMsg;
  };
  nacl.sign.open = function(signedMsg, publicKey) {
    checkArrayTypes(signedMsg, publicKey);
    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
      throw new Error("bad public key size");
    var tmp = new Uint8Array(signedMsg.length);
    var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
    if (mlen < 0)
      return null;
    var m2 = new Uint8Array(mlen);
    for (var i2 = 0; i2 < m2.length; i2++)
      m2[i2] = tmp[i2];
    return m2;
  };
  nacl.sign.detached = function(msg, secretKey) {
    var signedMsg = nacl.sign(msg, secretKey);
    var sig = new Uint8Array(crypto_sign_BYTES);
    for (var i2 = 0; i2 < sig.length; i2++)
      sig[i2] = signedMsg[i2];
    return sig;
  };
  nacl.sign.detached.verify = function(msg, sig, publicKey) {
    checkArrayTypes(msg, sig, publicKey);
    if (sig.length !== crypto_sign_BYTES)
      throw new Error("bad signature size");
    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
      throw new Error("bad public key size");
    var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
    var m2 = new Uint8Array(crypto_sign_BYTES + msg.length);
    var i2;
    for (i2 = 0; i2 < crypto_sign_BYTES; i2++)
      sm[i2] = sig[i2];
    for (i2 = 0; i2 < msg.length; i2++)
      sm[i2 + crypto_sign_BYTES] = msg[i2];
    return crypto_sign_open(m2, sm, sm.length, publicKey) >= 0;
  };
  nacl.sign.keyPair = function() {
    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
    crypto_sign_keypair(pk, sk);
    return { publicKey: pk, secretKey: sk };
  };
  nacl.sign.keyPair.fromSecretKey = function(secretKey) {
    checkArrayTypes(secretKey);
    if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
      throw new Error("bad secret key size");
    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
    for (var i2 = 0; i2 < pk.length; i2++)
      pk[i2] = secretKey[32 + i2];
    return { publicKey: pk, secretKey: new Uint8Array(secretKey) };
  };
  nacl.sign.keyPair.fromSeed = function(seed) {
    checkArrayTypes(seed);
    if (seed.length !== crypto_sign_SEEDBYTES)
      throw new Error("bad seed size");
    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
    for (var i2 = 0; i2 < 32; i2++)
      sk[i2] = seed[i2];
    crypto_sign_keypair(pk, sk, true);
    return { publicKey: pk, secretKey: sk };
  };
  nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
  nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
  nacl.sign.seedLength = crypto_sign_SEEDBYTES;
  nacl.sign.signatureLength = crypto_sign_BYTES;
  nacl.hash = function(msg) {
    checkArrayTypes(msg);
    var h2 = new Uint8Array(crypto_hash_BYTES);
    crypto_hash(h2, msg, msg.length);
    return h2;
  };
  nacl.hash.hashLength = crypto_hash_BYTES;
  nacl.verify = function(x2, y2) {
    checkArrayTypes(x2, y2);
    if (x2.length === 0 || y2.length === 0)
      return false;
    if (x2.length !== y2.length)
      return false;
    return vn(x2, 0, y2, 0, x2.length) === 0 ? true : false;
  };
  nacl.setPRNG = function(fn) {
    randombytes = fn;
  };
  (function() {
    var crypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
    if (crypto && crypto.getRandomValues) {
      var QUOTA = 65536;
      nacl.setPRNG(function(x2, n2) {
        var i2, v2 = new Uint8Array(n2);
        for (i2 = 0; i2 < n2; i2 += QUOTA) {
          crypto.getRandomValues(v2.subarray(i2, i2 + Math.min(n2 - i2, QUOTA)));
        }
        for (i2 = 0; i2 < n2; i2++)
          x2[i2] = v2[i2];
        cleanup(v2);
      });
    } else if (typeof __require !== "undefined") {
      crypto = $$cjs_default$$10(typeof $cjs$crypto__namespace !== "undefined" ? $cjs$crypto__namespace : {});
      if (crypto && crypto.randomBytes) {
        nacl.setPRNG(function(x2, n2) {
          var i2, v2 = crypto.randomBytes(n2);
          for (i2 = 0; i2 < n2; i2++)
            x2[i2] = v2[i2];
          cleanup(v2);
        });
      }
    }
  })();
})(typeof module12 !== "undefined" && module12.exports ? module12.exports : self.nacl = self.nacl || {});
var nacl_fast_default = module12.exports;

// ../../node_modules/@ton/crypto/dist/mnemonic/mnemonic.js
function $$cjs_default$$11(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global12 !== "undefined" && global12 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global12 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global12 !== "undefined" && global12 || typeof globalThis !== "undefined" && globalThis || {};
var exports13 = {};
var module13 = {
  get exports() {
    return exports13;
  },
  set exports(value) {
    exports13 = value;
  }
};
var __importDefault7 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports13, "__esModule", { value: true });
exports13.mnemonicFromRandomSeed = exports13.mnemonicIndexesToBytes = exports13.bytesToMnemonics = exports13.bytesToMnemonicIndexes = exports13.mnemonicNew = exports13.mnemonicValidate = exports13.mnemonicToHDSeed = exports13.mnemonicToWalletKey = exports13.mnemonicToPrivateKey = exports13.mnemonicToSeed = exports13.mnemonicToEntropy = void 0;
var tweetnacl_1 = __importDefault7($$cjs_default$$11(typeof nacl_fast_exports !== "undefined" ? nacl_fast_exports : {}));
var getSecureRandom_12 = $$cjs_default$$11(typeof getSecureRandom_exports2 !== "undefined" ? getSecureRandom_exports2 : {});
var hmac_sha512_12 = $$cjs_default$$11(typeof hmac_sha512_exports2 !== "undefined" ? hmac_sha512_exports2 : {});
var pbkdf2_sha512_12 = $$cjs_default$$11(typeof pbkdf2_sha512_exports2 !== "undefined" ? pbkdf2_sha512_exports2 : {});
var binary_1 = $$cjs_default$$11(typeof binary_exports !== "undefined" ? binary_exports : {});
var wordlist_1 = $$cjs_default$$11(typeof wordlist_exports !== "undefined" ? wordlist_exports : {});
var PBKDF_ITERATIONS = 1e5;
async function isPasswordNeeded(mnemonicArray) {
  const passlessEntropy = await mnemonicToEntropy(mnemonicArray);
  return await isPasswordSeed(passlessEntropy) && !await isBasicSeed(passlessEntropy);
}
function normalizeMnemonic(src) {
  return src.map((v2) => v2.toLowerCase().trim());
}
async function isBasicSeed(entropy) {
  const seed = await (0, pbkdf2_sha512_12.pbkdf2_sha512)(entropy, "TON seed version", Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), 64);
  return seed[0] == 0;
}
async function isPasswordSeed(entropy) {
  const seed = await (0, pbkdf2_sha512_12.pbkdf2_sha512)(entropy, "TON fast seed version", 1, 64);
  return seed[0] == 1;
}
async function mnemonicToEntropy(mnemonicArray, password) {
  return await (0, hmac_sha512_12.hmac_sha512)(mnemonicArray.join(" "), password && password.length > 0 ? password : "");
}
exports13.mnemonicToEntropy = mnemonicToEntropy;
async function mnemonicToSeed(mnemonicArray, seed, password) {
  const entropy = await mnemonicToEntropy(mnemonicArray, password);
  return await (0, pbkdf2_sha512_12.pbkdf2_sha512)(entropy, seed, PBKDF_ITERATIONS, 64);
}
exports13.mnemonicToSeed = mnemonicToSeed;
async function mnemonicToPrivateKey(mnemonicArray, password) {
  mnemonicArray = normalizeMnemonic(mnemonicArray);
  const seed = await mnemonicToSeed(mnemonicArray, "TON default seed", password);
  let keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seed.slice(0, 32));
  return {
    publicKey: Buffer.from(keyPair.publicKey),
    secretKey: Buffer.from(keyPair.secretKey)
  };
}
exports13.mnemonicToPrivateKey = mnemonicToPrivateKey;
async function mnemonicToWalletKey(mnemonicArray, password) {
  let seedPk = await mnemonicToPrivateKey(mnemonicArray, password);
  let seedSecret = seedPk.secretKey.slice(0, 32);
  const keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seedSecret);
  return {
    publicKey: Buffer.from(keyPair.publicKey),
    secretKey: Buffer.from(keyPair.secretKey)
  };
}
exports13.mnemonicToWalletKey = mnemonicToWalletKey;
async function mnemonicToHDSeed(mnemonicArray, password) {
  mnemonicArray = normalizeMnemonic(mnemonicArray);
  return await mnemonicToSeed(mnemonicArray, "TON HD Keys seed", password);
}
exports13.mnemonicToHDSeed = mnemonicToHDSeed;
async function mnemonicValidate(mnemonicArray, password) {
  mnemonicArray = normalizeMnemonic(mnemonicArray);
  for (let word of mnemonicArray) {
    if (wordlist_1.wordlist.indexOf(word) < 0) {
      return false;
    }
  }
  if (password && password.length > 0) {
    if (!await isPasswordNeeded(mnemonicArray)) {
      return false;
    }
  }
  return await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password));
}
exports13.mnemonicValidate = mnemonicValidate;
async function mnemonicNew(wordsCount = 24, password) {
  let mnemonicArray = [];
  while (true) {
    mnemonicArray = [];
    for (let i2 = 0; i2 < wordsCount; i2++) {
      let ind = await (0, getSecureRandom_12.getSecureRandomNumber)(0, wordlist_1.wordlist.length);
      mnemonicArray.push(wordlist_1.wordlist[ind]);
    }
    if (password && password.length > 0) {
      if (!await isPasswordNeeded(mnemonicArray)) {
        continue;
      }
    }
    if (!await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password))) {
      continue;
    }
    break;
  }
  return mnemonicArray;
}
exports13.mnemonicNew = mnemonicNew;
function bytesToMnemonicIndexes(src, wordsCount) {
  let bits = (0, binary_1.bytesToBits)(src);
  let indexes = [];
  for (let i2 = 0; i2 < wordsCount; i2++) {
    let sl = bits.slice(i2 * 11, i2 * 11 + 11);
    indexes.push(parseInt(sl, 2));
  }
  return indexes;
}
exports13.bytesToMnemonicIndexes = bytesToMnemonicIndexes;
function bytesToMnemonics(src, wordsCount) {
  let mnemonics = bytesToMnemonicIndexes(src, wordsCount);
  let res = [];
  for (let m2 of mnemonics) {
    res.push(wordlist_1.wordlist[m2]);
  }
  return res;
}
exports13.bytesToMnemonics = bytesToMnemonics;
function mnemonicIndexesToBytes(src) {
  let res = "";
  for (let s2 of src) {
    if (!Number.isSafeInteger(s2)) {
      throw Error("Invalid input");
    }
    if (s2 < 0 || s2 >= 2028) {
      throw Error("Invalid input");
    }
    res += (0, binary_1.lpad)(s2.toString(2), "0", 11);
  }
  while (res.length % 8 !== 0) {
    res = res + "0";
  }
  return (0, binary_1.bitsToBytes)(res);
}
exports13.mnemonicIndexesToBytes = mnemonicIndexesToBytes;
async function mnemonicFromRandomSeed(seed, wordsCount = 24, password) {
  const bytesLength = Math.ceil(wordsCount * 11 / 8);
  let currentSeed = seed;
  while (true) {
    let entropy = await (0, pbkdf2_sha512_12.pbkdf2_sha512)(currentSeed, "TON mnemonic seed", Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), bytesLength);
    let mnemonics = bytesToMnemonics(entropy, wordsCount);
    if (await mnemonicValidate(mnemonics, password)) {
      return mnemonics;
    }
    currentSeed = entropy;
  }
}
exports13.mnemonicFromRandomSeed = mnemonicFromRandomSeed;
var __export012;
var __export16;
var __export24;
var __export32;
var __export42;
var __export52;
var __export6;
var __export7;
var __export8;
var __export9;
var __export10;
if (Object.isExtensible(module13.exports)) {
  __export012 = module13.exports["mnemonicFromRandomSeed"];
  __export16 = module13.exports["mnemonicIndexesToBytes"];
  __export24 = module13.exports["bytesToMnemonics"];
  __export32 = module13.exports["bytesToMnemonicIndexes"];
  __export42 = module13.exports["mnemonicNew"];
  __export52 = module13.exports["mnemonicValidate"];
  __export6 = module13.exports["mnemonicToHDSeed"];
  __export7 = module13.exports["mnemonicToWalletKey"];
  __export8 = module13.exports["mnemonicToPrivateKey"];
  __export9 = module13.exports["mnemonicToSeed"];
  __export10 = module13.exports["mnemonicToEntropy"];
}

// ../../node_modules/@ton/crypto/dist/hd/mnemonics.js
function $$cjs_default$$12(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global13 !== "undefined" && global13 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global13 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global13 !== "undefined" && global13 || typeof globalThis !== "undefined" && globalThis || {};
var exports14 = {};
var module14 = {
  get exports() {
    return exports14;
  },
  set exports(value) {
    exports14 = value;
  }
};
Object.defineProperty(exports14, "__esModule", { value: true });
exports14.deriveMnemonicsPath = exports14.deriveMnemonicHardenedKey = exports14.getMnemonicsMasterKeyFromSeed = void 0;
var mnemonic_1 = $$cjs_default$$12(typeof mnemonic_exports !== "undefined" ? mnemonic_exports : {});
var hmac_sha512_13 = $$cjs_default$$12(typeof hmac_sha512_exports2 !== "undefined" ? hmac_sha512_exports2 : {});
var HARDENED_OFFSET = 2147483648;
var MNEMONICS_SEED = "TON Mnemonics HD seed";
async function getMnemonicsMasterKeyFromSeed(seed) {
  const I2 = await (0, hmac_sha512_13.hmac_sha512)(MNEMONICS_SEED, seed);
  const IL = I2.slice(0, 32);
  const IR = I2.slice(32);
  return {
    key: IL,
    chainCode: IR
  };
}
exports14.getMnemonicsMasterKeyFromSeed = getMnemonicsMasterKeyFromSeed;
async function deriveMnemonicHardenedKey(parent, index) {
  if (index >= HARDENED_OFFSET) {
    throw Error("Key index must be less than offset");
  }
  const indexBuffer = Buffer.alloc(4);
  indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);
  const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);
  const I2 = await (0, hmac_sha512_13.hmac_sha512)(parent.chainCode, data);
  const IL = I2.slice(0, 32);
  const IR = I2.slice(32);
  return {
    key: IL,
    chainCode: IR
  };
}
exports14.deriveMnemonicHardenedKey = deriveMnemonicHardenedKey;
async function deriveMnemonicsPath(seed, path, wordsCount = 24, password) {
  let state = await getMnemonicsMasterKeyFromSeed(seed);
  let remaining = [...path];
  while (remaining.length > 0) {
    let index = remaining[0];
    remaining = remaining.slice(1);
    state = await deriveMnemonicHardenedKey(state, index);
  }
  return await (0, mnemonic_1.mnemonicFromRandomSeed)(state.key, wordsCount, password);
}
exports14.deriveMnemonicsPath = deriveMnemonicsPath;
var __export013;
var __export17;
var __export25;
if (Object.isExtensible(module14.exports)) {
  __export013 = module14.exports["deriveMnemonicsPath"];
  __export17 = module14.exports["deriveMnemonicHardenedKey"];
  __export25 = module14.exports["getMnemonicsMasterKeyFromSeed"];
}

// ../../node_modules/@ton/crypto/dist/hd/symmetric.js
var symmetric_exports = {};
__export(symmetric_exports, {
  deriveSymmetricHardenedKey: () => __export18,
  deriveSymmetricPath: () => __export014,
  getSymmetricMasterKeyFromSeed: () => __export26
});
function $$cjs_default$$13(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global14 !== "undefined" && global14 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global14 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global14 !== "undefined" && global14 || typeof globalThis !== "undefined" && globalThis || {};
var exports15 = {};
var module15 = {
  get exports() {
    return exports15;
  },
  set exports(value) {
    exports15 = value;
  }
};
Object.defineProperty(exports15, "__esModule", { value: true });
exports15.deriveSymmetricPath = exports15.deriveSymmetricHardenedKey = exports15.getSymmetricMasterKeyFromSeed = void 0;
var hmac_sha512_14 = $$cjs_default$$13(typeof hmac_sha512_exports2 !== "undefined" ? hmac_sha512_exports2 : {});
var SYMMETRIC_SEED = "Symmetric key seed";
async function getSymmetricMasterKeyFromSeed(seed) {
  const I2 = await (0, hmac_sha512_14.hmac_sha512)(SYMMETRIC_SEED, seed);
  const IL = I2.slice(32);
  const IR = I2.slice(0, 32);
  return {
    key: IL,
    chainCode: IR
  };
}
exports15.getSymmetricMasterKeyFromSeed = getSymmetricMasterKeyFromSeed;
async function deriveSymmetricHardenedKey(parent, offset) {
  const data = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(offset)]);
  const I2 = await (0, hmac_sha512_14.hmac_sha512)(parent.chainCode, data);
  const IL = I2.slice(32);
  const IR = I2.slice(0, 32);
  return {
    key: IL,
    chainCode: IR
  };
}
exports15.deriveSymmetricHardenedKey = deriveSymmetricHardenedKey;
async function deriveSymmetricPath(seed, path) {
  let state = await getSymmetricMasterKeyFromSeed(seed);
  let remaining = [...path];
  while (remaining.length > 0) {
    let index = remaining[0];
    remaining = remaining.slice(1);
    state = await deriveSymmetricHardenedKey(state, index);
  }
  return state.key;
}
exports15.deriveSymmetricPath = deriveSymmetricPath;
var __export014;
var __export18;
var __export26;
if (Object.isExtensible(module15.exports)) {
  __export014 = module15.exports["deriveSymmetricPath"];
  __export18 = module15.exports["deriveSymmetricHardenedKey"];
  __export26 = module15.exports["getSymmetricMasterKeyFromSeed"];
}

// ../../node_modules/@ton/crypto/dist/hd/ed25519.js
var ed25519_exports = {};
__export(ed25519_exports, {
  deriveED25519HardenedKey: () => __export19,
  deriveEd25519Path: () => __export015,
  getED25519MasterKeyFromSeed: () => __export27
});
function $$cjs_default$$14(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global15 !== "undefined" && global15 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global15 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global15 !== "undefined" && global15 || typeof globalThis !== "undefined" && globalThis || {};
var exports16 = {};
var module16 = {
  get exports() {
    return exports16;
  },
  set exports(value) {
    exports16 = value;
  }
};
Object.defineProperty(exports16, "__esModule", { value: true });
exports16.deriveEd25519Path = exports16.deriveED25519HardenedKey = exports16.getED25519MasterKeyFromSeed = void 0;
var hmac_sha512_15 = $$cjs_default$$14(typeof hmac_sha512_exports2 !== "undefined" ? hmac_sha512_exports2 : {});
var ED25519_CURVE = "ed25519 seed";
var HARDENED_OFFSET2 = 2147483648;
async function getED25519MasterKeyFromSeed(seed) {
  const I2 = await (0, hmac_sha512_15.hmac_sha512)(ED25519_CURVE, seed);
  const IL = I2.slice(0, 32);
  const IR = I2.slice(32);
  return {
    key: IL,
    chainCode: IR
  };
}
exports16.getED25519MasterKeyFromSeed = getED25519MasterKeyFromSeed;
async function deriveED25519HardenedKey(parent, index) {
  if (index >= HARDENED_OFFSET2) {
    throw Error("Key index must be less than offset");
  }
  const indexBuffer = Buffer.alloc(4);
  indexBuffer.writeUInt32BE(index + HARDENED_OFFSET2, 0);
  const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);
  const I2 = await (0, hmac_sha512_15.hmac_sha512)(parent.chainCode, data);
  const IL = I2.slice(0, 32);
  const IR = I2.slice(32);
  return {
    key: IL,
    chainCode: IR
  };
}
exports16.deriveED25519HardenedKey = deriveED25519HardenedKey;
async function deriveEd25519Path(seed, path) {
  let state = await getED25519MasterKeyFromSeed(seed);
  let remaining = [...path];
  while (remaining.length > 0) {
    let index = remaining[0];
    remaining = remaining.slice(1);
    state = await deriveED25519HardenedKey(state, index);
  }
  return state.key;
}
exports16.deriveEd25519Path = deriveEd25519Path;
var __export015;
var __export19;
var __export27;
if (Object.isExtensible(module16.exports)) {
  __export015 = module16.exports["deriveEd25519Path"];
  __export19 = module16.exports["deriveED25519HardenedKey"];
  __export27 = module16.exports["getED25519MasterKeyFromSeed"];
}

// ../../node_modules/@ton/crypto/dist/primitives/nacl.js
var nacl_exports = {};
__export(nacl_exports, {
  keyPairFromSecretKey: () => __export53,
  keyPairFromSeed: () => __export43,
  openBox: () => __export016,
  sealBox: () => __export110,
  sign: () => __export33,
  signVerify: () => __export28
});
function $$cjs_default$$15(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global16 !== "undefined" && global16 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global16 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global16 !== "undefined" && global16 || typeof globalThis !== "undefined" && globalThis || {};
var exports17 = {};
var module17 = {
  get exports() {
    return exports17;
  },
  set exports(value) {
    exports17 = value;
  }
};
var __importDefault8 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports17, "__esModule", { value: true });
exports17.openBox = exports17.sealBox = exports17.signVerify = exports17.sign = exports17.keyPairFromSeed = exports17.keyPairFromSecretKey = void 0;
var tweetnacl_12 = __importDefault8($$cjs_default$$15(typeof nacl_fast_exports !== "undefined" ? nacl_fast_exports : {}));
function keyPairFromSecretKey(secretKey) {
  let res = tweetnacl_12.default.sign.keyPair.fromSecretKey(new Uint8Array(secretKey));
  return {
    publicKey: Buffer.from(res.publicKey),
    secretKey: Buffer.from(res.secretKey)
  };
}
exports17.keyPairFromSecretKey = keyPairFromSecretKey;
function keyPairFromSeed(secretKey) {
  let res = tweetnacl_12.default.sign.keyPair.fromSeed(new Uint8Array(secretKey));
  return {
    publicKey: Buffer.from(res.publicKey),
    secretKey: Buffer.from(res.secretKey)
  };
}
exports17.keyPairFromSeed = keyPairFromSeed;
function sign(data, secretKey) {
  return Buffer.from(tweetnacl_12.default.sign.detached(new Uint8Array(data), new Uint8Array(secretKey)));
}
exports17.sign = sign;
function signVerify(data, signature, publicKey) {
  return tweetnacl_12.default.sign.detached.verify(new Uint8Array(data), new Uint8Array(signature), new Uint8Array(publicKey));
}
exports17.signVerify = signVerify;
function sealBox(data, nonce, key) {
  return Buffer.from(tweetnacl_12.default.secretbox(data, nonce, key));
}
exports17.sealBox = sealBox;
function openBox(data, nonce, key) {
  let res = tweetnacl_12.default.secretbox.open(data, nonce, key);
  if (!res) {
    return null;
  }
  return Buffer.from(res);
}
exports17.openBox = openBox;
var __export016;
var __export110;
var __export28;
var __export33;
var __export43;
var __export53;
if (Object.isExtensible(module17.exports)) {
  __export016 = module17.exports["openBox"];
  __export110 = module17.exports["sealBox"];
  __export28 = module17.exports["signVerify"];
  __export33 = module17.exports["sign"];
  __export43 = module17.exports["keyPairFromSeed"];
  __export53 = module17.exports["keyPairFromSecretKey"];
}

// ../../node_modules/@ton/crypto/dist/passwords/newSecurePassphrase.js
var newSecurePassphrase_exports = {};
__export(newSecurePassphrase_exports, {
  newSecurePassphrase: () => __export017
});
function $$cjs_default$$16(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global17 !== "undefined" && global17 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global17 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global17 !== "undefined" && global17 || typeof globalThis !== "undefined" && globalThis || {};
var exports18 = {};
var module18 = {
  get exports() {
    return exports18;
  },
  set exports(value) {
    exports18 = value;
  }
};
Object.defineProperty(exports18, "__esModule", { value: true });
exports18.newSecurePassphrase = void 0;
var __1 = $$cjs_default$$16(typeof dist_exports !== "undefined" ? dist_exports : {});
async function newSecurePassphrase(size = 6) {
  return (await (0, __1.newSecureWords)(size)).join("-");
}
exports18.newSecurePassphrase = newSecurePassphrase;
var __export017;
if (Object.isExtensible(module18.exports)) {
  __export017 = module18.exports["newSecurePassphrase"];
}

// ../../node_modules/@ton/crypto/dist/passwords/newSecureWords.js
var newSecureWords_exports = {};
__export(newSecureWords_exports, {
  newSecureWords: () => __export019
});

// ../../node_modules/@ton/crypto/dist/passwords/wordlist.js
var wordlist_exports2 = {};
__export(wordlist_exports2, {
  wordlist: () => __export018
});
var exports19 = {};
var module19 = {
  get exports() {
    return exports19;
  },
  set exports(value) {
    exports19 = value;
  }
};
Object.defineProperty(exports19, "__esModule", { value: true });
exports19.wordlist = void 0;
exports19.wordlist = [
  "abacus",
  "abdomen",
  "abdominal",
  "abide",
  "abiding",
  "ability",
  "ablaze",
  "able",
  "abnormal",
  "abrasion",
  "abrasive",
  "abreast",
  "abridge",
  "abroad",
  "abruptly",
  "absence",
  "absentee",
  "absently",
  "absinthe",
  "absolute",
  "absolve",
  "abstain",
  "abstract",
  "absurd",
  "accent",
  "acclaim",
  "acclimate",
  "accompany",
  "account",
  "accuracy",
  "accurate",
  "accustom",
  "acetone",
  "achiness",
  "aching",
  "acid",
  "acorn",
  "acquaint",
  "acquire",
  "acre",
  "acrobat",
  "acronym",
  "acting",
  "action",
  "activate",
  "activator",
  "active",
  "activism",
  "activist",
  "activity",
  "actress",
  "acts",
  "acutely",
  "acuteness",
  "aeration",
  "aerobics",
  "aerosol",
  "aerospace",
  "afar",
  "affair",
  "affected",
  "affecting",
  "affection",
  "affidavit",
  "affiliate",
  "affirm",
  "affix",
  "afflicted",
  "affluent",
  "afford",
  "affront",
  "aflame",
  "afloat",
  "aflutter",
  "afoot",
  "afraid",
  "afterglow",
  "afterlife",
  "aftermath",
  "aftermost",
  "afternoon",
  "aged",
  "ageless",
  "agency",
  "agenda",
  "agent",
  "aggregate",
  "aghast",
  "agile",
  "agility",
  "aging",
  "agnostic",
  "agonize",
  "agonizing",
  "agony",
  "agreeable",
  "agreeably",
  "agreed",
  "agreeing",
  "agreement",
  "aground",
  "ahead",
  "ahoy",
  "aide",
  "aids",
  "aim",
  "ajar",
  "alabaster",
  "alarm",
  "albatross",
  "album",
  "alfalfa",
  "algebra",
  "algorithm",
  "alias",
  "alibi",
  "alienable",
  "alienate",
  "aliens",
  "alike",
  "alive",
  "alkaline",
  "alkalize",
  "almanac",
  "almighty",
  "almost",
  "aloe",
  "aloft",
  "aloha",
  "alone",
  "alongside",
  "aloof",
  "alphabet",
  "alright",
  "although",
  "altitude",
  "alto",
  "aluminum",
  "alumni",
  "always",
  "amaretto",
  "amaze",
  "amazingly",
  "amber",
  "ambiance",
  "ambiguity",
  "ambiguous",
  "ambition",
  "ambitious",
  "ambulance",
  "ambush",
  "amendable",
  "amendment",
  "amends",
  "amenity",
  "amiable",
  "amicably",
  "amid",
  "amigo",
  "amino",
  "amiss",
  "ammonia",
  "ammonium",
  "amnesty",
  "amniotic",
  "among",
  "amount",
  "amperage",
  "ample",
  "amplifier",
  "amplify",
  "amply",
  "amuck",
  "amulet",
  "amusable",
  "amused",
  "amusement",
  "amuser",
  "amusing",
  "anaconda",
  "anaerobic",
  "anagram",
  "anatomist",
  "anatomy",
  "anchor",
  "anchovy",
  "ancient",
  "android",
  "anemia",
  "anemic",
  "aneurism",
  "anew",
  "angelfish",
  "angelic",
  "anger",
  "angled",
  "angler",
  "angles",
  "angling",
  "angrily",
  "angriness",
  "anguished",
  "angular",
  "animal",
  "animate",
  "animating",
  "animation",
  "animator",
  "anime",
  "animosity",
  "ankle",
  "annex",
  "annotate",
  "announcer",
  "annoying",
  "annually",
  "annuity",
  "anointer",
  "another",
  "answering",
  "antacid",
  "antarctic",
  "anteater",
  "antelope",
  "antennae",
  "anthem",
  "anthill",
  "anthology",
  "antibody",
  "antics",
  "antidote",
  "antihero",
  "antiquely",
  "antiques",
  "antiquity",
  "antirust",
  "antitoxic",
  "antitrust",
  "antiviral",
  "antivirus",
  "antler",
  "antonym",
  "antsy",
  "anvil",
  "anybody",
  "anyhow",
  "anymore",
  "anyone",
  "anyplace",
  "anything",
  "anytime",
  "anyway",
  "anywhere",
  "aorta",
  "apache",
  "apostle",
  "appealing",
  "appear",
  "appease",
  "appeasing",
  "appendage",
  "appendix",
  "appetite",
  "appetizer",
  "applaud",
  "applause",
  "apple",
  "appliance",
  "applicant",
  "applied",
  "apply",
  "appointee",
  "appraisal",
  "appraiser",
  "apprehend",
  "approach",
  "approval",
  "approve",
  "apricot",
  "april",
  "apron",
  "aptitude",
  "aptly",
  "aqua",
  "aqueduct",
  "arbitrary",
  "arbitrate",
  "ardently",
  "area",
  "arena",
  "arguable",
  "arguably",
  "argue",
  "arise",
  "armadillo",
  "armband",
  "armchair",
  "armed",
  "armful",
  "armhole",
  "arming",
  "armless",
  "armoire",
  "armored",
  "armory",
  "armrest",
  "army",
  "aroma",
  "arose",
  "around",
  "arousal",
  "arrange",
  "array",
  "arrest",
  "arrival",
  "arrive",
  "arrogance",
  "arrogant",
  "arson",
  "art",
  "ascend",
  "ascension",
  "ascent",
  "ascertain",
  "ashamed",
  "ashen",
  "ashes",
  "ashy",
  "aside",
  "askew",
  "asleep",
  "asparagus",
  "aspect",
  "aspirate",
  "aspire",
  "aspirin",
  "astonish",
  "astound",
  "astride",
  "astrology",
  "astronaut",
  "astronomy",
  "astute",
  "atlantic",
  "atlas",
  "atom",
  "atonable",
  "atop",
  "atrium",
  "atrocious",
  "atrophy",
  "attach",
  "attain",
  "attempt",
  "attendant",
  "attendee",
  "attention",
  "attentive",
  "attest",
  "attic",
  "attire",
  "attitude",
  "attractor",
  "attribute",
  "atypical",
  "auction",
  "audacious",
  "audacity",
  "audible",
  "audibly",
  "audience",
  "audio",
  "audition",
  "augmented",
  "august",
  "authentic",
  "author",
  "autism",
  "autistic",
  "autograph",
  "automaker",
  "automated",
  "automatic",
  "autopilot",
  "available",
  "avalanche",
  "avatar",
  "avenge",
  "avenging",
  "avenue",
  "average",
  "aversion",
  "avert",
  "aviation",
  "aviator",
  "avid",
  "avoid",
  "await",
  "awaken",
  "award",
  "aware",
  "awhile",
  "awkward",
  "awning",
  "awoke",
  "awry",
  "axis",
  "babble",
  "babbling",
  "babied",
  "baboon",
  "backache",
  "backboard",
  "backboned",
  "backdrop",
  "backed",
  "backer",
  "backfield",
  "backfire",
  "backhand",
  "backing",
  "backlands",
  "backlash",
  "backless",
  "backlight",
  "backlit",
  "backlog",
  "backpack",
  "backpedal",
  "backrest",
  "backroom",
  "backshift",
  "backside",
  "backslid",
  "backspace",
  "backspin",
  "backstab",
  "backstage",
  "backtalk",
  "backtrack",
  "backup",
  "backward",
  "backwash",
  "backwater",
  "backyard",
  "bacon",
  "bacteria",
  "bacterium",
  "badass",
  "badge",
  "badland",
  "badly",
  "badness",
  "baffle",
  "baffling",
  "bagel",
  "bagful",
  "baggage",
  "bagged",
  "baggie",
  "bagginess",
  "bagging",
  "baggy",
  "bagpipe",
  "baguette",
  "baked",
  "bakery",
  "bakeshop",
  "baking",
  "balance",
  "balancing",
  "balcony",
  "balmy",
  "balsamic",
  "bamboo",
  "banana",
  "banish",
  "banister",
  "banjo",
  "bankable",
  "bankbook",
  "banked",
  "banker",
  "banking",
  "banknote",
  "bankroll",
  "banner",
  "bannister",
  "banshee",
  "banter",
  "barbecue",
  "barbed",
  "barbell",
  "barber",
  "barcode",
  "barge",
  "bargraph",
  "barista",
  "baritone",
  "barley",
  "barmaid",
  "barman",
  "barn",
  "barometer",
  "barrack",
  "barracuda",
  "barrel",
  "barrette",
  "barricade",
  "barrier",
  "barstool",
  "bartender",
  "barterer",
  "bash",
  "basically",
  "basics",
  "basil",
  "basin",
  "basis",
  "basket",
  "batboy",
  "batch",
  "bath",
  "baton",
  "bats",
  "battalion",
  "battered",
  "battering",
  "battery",
  "batting",
  "battle",
  "bauble",
  "bazooka",
  "blabber",
  "bladder",
  "blade",
  "blah",
  "blame",
  "blaming",
  "blanching",
  "blandness",
  "blank",
  "blaspheme",
  "blasphemy",
  "blast",
  "blatancy",
  "blatantly",
  "blazer",
  "blazing",
  "bleach",
  "bleak",
  "bleep",
  "blemish",
  "blend",
  "bless",
  "blighted",
  "blimp",
  "bling",
  "blinked",
  "blinker",
  "blinking",
  "blinks",
  "blip",
  "blissful",
  "blitz",
  "blizzard",
  "bloated",
  "bloating",
  "blob",
  "blog",
  "bloomers",
  "blooming",
  "blooper",
  "blot",
  "blouse",
  "blubber",
  "bluff",
  "bluish",
  "blunderer",
  "blunt",
  "blurb",
  "blurred",
  "blurry",
  "blurt",
  "blush",
  "blustery",
  "boaster",
  "boastful",
  "boasting",
  "boat",
  "bobbed",
  "bobbing",
  "bobble",
  "bobcat",
  "bobsled",
  "bobtail",
  "bodacious",
  "body",
  "bogged",
  "boggle",
  "bogus",
  "boil",
  "bok",
  "bolster",
  "bolt",
  "bonanza",
  "bonded",
  "bonding",
  "bondless",
  "boned",
  "bonehead",
  "boneless",
  "bonelike",
  "boney",
  "bonfire",
  "bonnet",
  "bonsai",
  "bonus",
  "bony",
  "boogeyman",
  "boogieman",
  "book",
  "boondocks",
  "booted",
  "booth",
  "bootie",
  "booting",
  "bootlace",
  "bootleg",
  "boots",
  "boozy",
  "borax",
  "boring",
  "borough",
  "borrower",
  "borrowing",
  "boss",
  "botanical",
  "botanist",
  "botany",
  "botch",
  "both",
  "bottle",
  "bottling",
  "bottom",
  "bounce",
  "bouncing",
  "bouncy",
  "bounding",
  "boundless",
  "bountiful",
  "bovine",
  "boxcar",
  "boxer",
  "boxing",
  "boxlike",
  "boxy",
  "breach",
  "breath",
  "breeches",
  "breeching",
  "breeder",
  "breeding",
  "breeze",
  "breezy",
  "brethren",
  "brewery",
  "brewing",
  "briar",
  "bribe",
  "brick",
  "bride",
  "bridged",
  "brigade",
  "bright",
  "brilliant",
  "brim",
  "bring",
  "brink",
  "brisket",
  "briskly",
  "briskness",
  "bristle",
  "brittle",
  "broadband",
  "broadcast",
  "broaden",
  "broadly",
  "broadness",
  "broadside",
  "broadways",
  "broiler",
  "broiling",
  "broken",
  "broker",
  "bronchial",
  "bronco",
  "bronze",
  "bronzing",
  "brook",
  "broom",
  "brought",
  "browbeat",
  "brownnose",
  "browse",
  "browsing",
  "bruising",
  "brunch",
  "brunette",
  "brunt",
  "brush",
  "brussels",
  "brute",
  "brutishly",
  "bubble",
  "bubbling",
  "bubbly",
  "buccaneer",
  "bucked",
  "bucket",
  "buckle",
  "buckshot",
  "buckskin",
  "bucktooth",
  "buckwheat",
  "buddhism",
  "buddhist",
  "budding",
  "buddy",
  "budget",
  "buffalo",
  "buffed",
  "buffer",
  "buffing",
  "buffoon",
  "buggy",
  "bulb",
  "bulge",
  "bulginess",
  "bulgur",
  "bulk",
  "bulldog",
  "bulldozer",
  "bullfight",
  "bullfrog",
  "bullhorn",
  "bullion",
  "bullish",
  "bullpen",
  "bullring",
  "bullseye",
  "bullwhip",
  "bully",
  "bunch",
  "bundle",
  "bungee",
  "bunion",
  "bunkbed",
  "bunkhouse",
  "bunkmate",
  "bunny",
  "bunt",
  "busboy",
  "bush",
  "busily",
  "busload",
  "bust",
  "busybody",
  "buzz",
  "cabana",
  "cabbage",
  "cabbie",
  "cabdriver",
  "cable",
  "caboose",
  "cache",
  "cackle",
  "cacti",
  "cactus",
  "caddie",
  "caddy",
  "cadet",
  "cadillac",
  "cadmium",
  "cage",
  "cahoots",
  "cake",
  "calamari",
  "calamity",
  "calcium",
  "calculate",
  "calculus",
  "caliber",
  "calibrate",
  "calm",
  "caloric",
  "calorie",
  "calzone",
  "camcorder",
  "cameo",
  "camera",
  "camisole",
  "camper",
  "campfire",
  "camping",
  "campsite",
  "campus",
  "canal",
  "canary",
  "cancel",
  "candied",
  "candle",
  "candy",
  "cane",
  "canine",
  "canister",
  "cannabis",
  "canned",
  "canning",
  "cannon",
  "cannot",
  "canola",
  "canon",
  "canopener",
  "canopy",
  "canteen",
  "canyon",
  "capable",
  "capably",
  "capacity",
  "cape",
  "capillary",
  "capital",
  "capitol",
  "capped",
  "capricorn",
  "capsize",
  "capsule",
  "caption",
  "captivate",
  "captive",
  "captivity",
  "capture",
  "caramel",
  "carat",
  "caravan",
  "carbon",
  "cardboard",
  "carded",
  "cardiac",
  "cardigan",
  "cardinal",
  "cardstock",
  "carefully",
  "caregiver",
  "careless",
  "caress",
  "caretaker",
  "cargo",
  "caring",
  "carless",
  "carload",
  "carmaker",
  "carnage",
  "carnation",
  "carnival",
  "carnivore",
  "carol",
  "carpenter",
  "carpentry",
  "carpool",
  "carport",
  "carried",
  "carrot",
  "carrousel",
  "carry",
  "cartel",
  "cartload",
  "carton",
  "cartoon",
  "cartridge",
  "cartwheel",
  "carve",
  "carving",
  "carwash",
  "cascade",
  "case",
  "cash",
  "casing",
  "casino",
  "casket",
  "cassette",
  "casually",
  "casualty",
  "catacomb",
  "catalog",
  "catalyst",
  "catalyze",
  "catapult",
  "cataract",
  "catatonic",
  "catcall",
  "catchable",
  "catcher",
  "catching",
  "catchy",
  "caterer",
  "catering",
  "catfight",
  "catfish",
  "cathedral",
  "cathouse",
  "catlike",
  "catnap",
  "catnip",
  "catsup",
  "cattail",
  "cattishly",
  "cattle",
  "catty",
  "catwalk",
  "caucasian",
  "caucus",
  "causal",
  "causation",
  "cause",
  "causing",
  "cauterize",
  "caution",
  "cautious",
  "cavalier",
  "cavalry",
  "caviar",
  "cavity",
  "cedar",
  "celery",
  "celestial",
  "celibacy",
  "celibate",
  "celtic",
  "cement",
  "census",
  "ceramics",
  "ceremony",
  "certainly",
  "certainty",
  "certified",
  "certify",
  "cesarean",
  "cesspool",
  "chafe",
  "chaffing",
  "chain",
  "chair",
  "chalice",
  "challenge",
  "chamber",
  "chamomile",
  "champion",
  "chance",
  "change",
  "channel",
  "chant",
  "chaos",
  "chaperone",
  "chaplain",
  "chapped",
  "chaps",
  "chapter",
  "character",
  "charbroil",
  "charcoal",
  "charger",
  "charging",
  "chariot",
  "charity",
  "charm",
  "charred",
  "charter",
  "charting",
  "chase",
  "chasing",
  "chaste",
  "chastise",
  "chastity",
  "chatroom",
  "chatter",
  "chatting",
  "chatty",
  "cheating",
  "cheddar",
  "cheek",
  "cheer",
  "cheese",
  "cheesy",
  "chef",
  "chemicals",
  "chemist",
  "chemo",
  "cherisher",
  "cherub",
  "chess",
  "chest",
  "chevron",
  "chevy",
  "chewable",
  "chewer",
  "chewing",
  "chewy",
  "chief",
  "chihuahua",
  "childcare",
  "childhood",
  "childish",
  "childless",
  "childlike",
  "chili",
  "chill",
  "chimp",
  "chip",
  "chirping",
  "chirpy",
  "chitchat",
  "chivalry",
  "chive",
  "chloride",
  "chlorine",
  "choice",
  "chokehold",
  "choking",
  "chomp",
  "chooser",
  "choosing",
  "choosy",
  "chop",
  "chosen",
  "chowder",
  "chowtime",
  "chrome",
  "chubby",
  "chuck",
  "chug",
  "chummy",
  "chump",
  "chunk",
  "churn",
  "chute",
  "cider",
  "cilantro",
  "cinch",
  "cinema",
  "cinnamon",
  "circle",
  "circling",
  "circular",
  "circulate",
  "circus",
  "citable",
  "citadel",
  "citation",
  "citizen",
  "citric",
  "citrus",
  "city",
  "civic",
  "civil",
  "clad",
  "claim",
  "clambake",
  "clammy",
  "clamor",
  "clamp",
  "clamshell",
  "clang",
  "clanking",
  "clapped",
  "clapper",
  "clapping",
  "clarify",
  "clarinet",
  "clarity",
  "clash",
  "clasp",
  "class",
  "clatter",
  "clause",
  "clavicle",
  "claw",
  "clay",
  "clean",
  "clear",
  "cleat",
  "cleaver",
  "cleft",
  "clench",
  "clergyman",
  "clerical",
  "clerk",
  "clever",
  "clicker",
  "client",
  "climate",
  "climatic",
  "cling",
  "clinic",
  "clinking",
  "clip",
  "clique",
  "cloak",
  "clobber",
  "clock",
  "clone",
  "cloning",
  "closable",
  "closure",
  "clothes",
  "clothing",
  "cloud",
  "clover",
  "clubbed",
  "clubbing",
  "clubhouse",
  "clump",
  "clumsily",
  "clumsy",
  "clunky",
  "clustered",
  "clutch",
  "clutter",
  "coach",
  "coagulant",
  "coastal",
  "coaster",
  "coasting",
  "coastland",
  "coastline",
  "coat",
  "coauthor",
  "cobalt",
  "cobbler",
  "cobweb",
  "cocoa",
  "coconut",
  "cod",
  "coeditor",
  "coerce",
  "coexist",
  "coffee",
  "cofounder",
  "cognition",
  "cognitive",
  "cogwheel",
  "coherence",
  "coherent",
  "cohesive",
  "coil",
  "coke",
  "cola",
  "cold",
  "coleslaw",
  "coliseum",
  "collage",
  "collapse",
  "collar",
  "collected",
  "collector",
  "collide",
  "collie",
  "collision",
  "colonial",
  "colonist",
  "colonize",
  "colony",
  "colossal",
  "colt",
  "coma",
  "come",
  "comfort",
  "comfy",
  "comic",
  "coming",
  "comma",
  "commence",
  "commend",
  "comment",
  "commerce",
  "commode",
  "commodity",
  "commodore",
  "common",
  "commotion",
  "commute",
  "commuting",
  "compacted",
  "compacter",
  "compactly",
  "compactor",
  "companion",
  "company",
  "compare",
  "compel",
  "compile",
  "comply",
  "component",
  "composed",
  "composer",
  "composite",
  "compost",
  "composure",
  "compound",
  "compress",
  "comprised",
  "computer",
  "computing",
  "comrade",
  "concave",
  "conceal",
  "conceded",
  "concept",
  "concerned",
  "concert",
  "conch",
  "concierge",
  "concise",
  "conclude",
  "concrete",
  "concur",
  "condense",
  "condiment",
  "condition",
  "condone",
  "conducive",
  "conductor",
  "conduit",
  "cone",
  "confess",
  "confetti",
  "confidant",
  "confident",
  "confider",
  "confiding",
  "configure",
  "confined",
  "confining",
  "confirm",
  "conflict",
  "conform",
  "confound",
  "confront",
  "confused",
  "confusing",
  "confusion",
  "congenial",
  "congested",
  "congrats",
  "congress",
  "conical",
  "conjoined",
  "conjure",
  "conjuror",
  "connected",
  "connector",
  "consensus",
  "consent",
  "console",
  "consoling",
  "consonant",
  "constable",
  "constant",
  "constrain",
  "constrict",
  "construct",
  "consult",
  "consumer",
  "consuming",
  "contact",
  "container",
  "contempt",
  "contend",
  "contented",
  "contently",
  "contents",
  "contest",
  "context",
  "contort",
  "contour",
  "contrite",
  "control",
  "contusion",
  "convene",
  "convent",
  "copartner",
  "cope",
  "copied",
  "copier",
  "copilot",
  "coping",
  "copious",
  "copper",
  "copy",
  "coral",
  "cork",
  "cornball",
  "cornbread",
  "corncob",
  "cornea",
  "corned",
  "corner",
  "cornfield",
  "cornflake",
  "cornhusk",
  "cornmeal",
  "cornstalk",
  "corny",
  "coronary",
  "coroner",
  "corporal",
  "corporate",
  "corral",
  "correct",
  "corridor",
  "corrode",
  "corroding",
  "corrosive",
  "corsage",
  "corset",
  "cortex",
  "cosigner",
  "cosmetics",
  "cosmic",
  "cosmos",
  "cosponsor",
  "cost",
  "cottage",
  "cotton",
  "couch",
  "cough",
  "could",
  "countable",
  "countdown",
  "counting",
  "countless",
  "country",
  "county",
  "courier",
  "covenant",
  "cover",
  "coveted",
  "coveting",
  "coyness",
  "cozily",
  "coziness",
  "cozy",
  "crabbing",
  "crabgrass",
  "crablike",
  "crabmeat",
  "cradle",
  "cradling",
  "crafter",
  "craftily",
  "craftsman",
  "craftwork",
  "crafty",
  "cramp",
  "cranberry",
  "crane",
  "cranial",
  "cranium",
  "crank",
  "crate",
  "crave",
  "craving",
  "crawfish",
  "crawlers",
  "crawling",
  "crayfish",
  "crayon",
  "crazed",
  "crazily",
  "craziness",
  "crazy",
  "creamed",
  "creamer",
  "creamlike",
  "crease",
  "creasing",
  "creatable",
  "create",
  "creation",
  "creative",
  "creature",
  "credible",
  "credibly",
  "credit",
  "creed",
  "creme",
  "creole",
  "crepe",
  "crept",
  "crescent",
  "crested",
  "cresting",
  "crestless",
  "crevice",
  "crewless",
  "crewman",
  "crewmate",
  "crib",
  "cricket",
  "cried",
  "crier",
  "crimp",
  "crimson",
  "cringe",
  "cringing",
  "crinkle",
  "crinkly",
  "crisped",
  "crisping",
  "crisply",
  "crispness",
  "crispy",
  "criteria",
  "critter",
  "croak",
  "crock",
  "crook",
  "croon",
  "crop",
  "cross",
  "crouch",
  "crouton",
  "crowbar",
  "crowd",
  "crown",
  "crucial",
  "crudely",
  "crudeness",
  "cruelly",
  "cruelness",
  "cruelty",
  "crumb",
  "crummiest",
  "crummy",
  "crumpet",
  "crumpled",
  "cruncher",
  "crunching",
  "crunchy",
  "crusader",
  "crushable",
  "crushed",
  "crusher",
  "crushing",
  "crust",
  "crux",
  "crying",
  "cryptic",
  "crystal",
  "cubbyhole",
  "cube",
  "cubical",
  "cubicle",
  "cucumber",
  "cuddle",
  "cuddly",
  "cufflink",
  "culinary",
  "culminate",
  "culpable",
  "culprit",
  "cultivate",
  "cultural",
  "culture",
  "cupbearer",
  "cupcake",
  "cupid",
  "cupped",
  "cupping",
  "curable",
  "curator",
  "curdle",
  "cure",
  "curfew",
  "curing",
  "curled",
  "curler",
  "curliness",
  "curling",
  "curly",
  "curry",
  "curse",
  "cursive",
  "cursor",
  "curtain",
  "curtly",
  "curtsy",
  "curvature",
  "curve",
  "curvy",
  "cushy",
  "cusp",
  "cussed",
  "custard",
  "custodian",
  "custody",
  "customary",
  "customer",
  "customize",
  "customs",
  "cut",
  "cycle",
  "cyclic",
  "cycling",
  "cyclist",
  "cylinder",
  "cymbal",
  "cytoplasm",
  "cytoplast",
  "dab",
  "dad",
  "daffodil",
  "dagger",
  "daily",
  "daintily",
  "dainty",
  "dairy",
  "daisy",
  "dallying",
  "dance",
  "dancing",
  "dandelion",
  "dander",
  "dandruff",
  "dandy",
  "danger",
  "dangle",
  "dangling",
  "daredevil",
  "dares",
  "daringly",
  "darkened",
  "darkening",
  "darkish",
  "darkness",
  "darkroom",
  "darling",
  "darn",
  "dart",
  "darwinism",
  "dash",
  "dastardly",
  "data",
  "datebook",
  "dating",
  "daughter",
  "daunting",
  "dawdler",
  "dawn",
  "daybed",
  "daybreak",
  "daycare",
  "daydream",
  "daylight",
  "daylong",
  "dayroom",
  "daytime",
  "dazzler",
  "dazzling",
  "deacon",
  "deafening",
  "deafness",
  "dealer",
  "dealing",
  "dealmaker",
  "dealt",
  "dean",
  "debatable",
  "debate",
  "debating",
  "debit",
  "debrief",
  "debtless",
  "debtor",
  "debug",
  "debunk",
  "decade",
  "decaf",
  "decal",
  "decathlon",
  "decay",
  "deceased",
  "deceit",
  "deceiver",
  "deceiving",
  "december",
  "decency",
  "decent",
  "deception",
  "deceptive",
  "decibel",
  "decidable",
  "decimal",
  "decimeter",
  "decipher",
  "deck",
  "declared",
  "decline",
  "decode",
  "decompose",
  "decorated",
  "decorator",
  "decoy",
  "decrease",
  "decree",
  "dedicate",
  "dedicator",
  "deduce",
  "deduct",
  "deed",
  "deem",
  "deepen",
  "deeply",
  "deepness",
  "deface",
  "defacing",
  "defame",
  "default",
  "defeat",
  "defection",
  "defective",
  "defendant",
  "defender",
  "defense",
  "defensive",
  "deferral",
  "deferred",
  "defiance",
  "defiant",
  "defile",
  "defiling",
  "define",
  "definite",
  "deflate",
  "deflation",
  "deflator",
  "deflected",
  "deflector",
  "defog",
  "deforest",
  "defraud",
  "defrost",
  "deftly",
  "defuse",
  "defy",
  "degraded",
  "degrading",
  "degrease",
  "degree",
  "dehydrate",
  "deity",
  "dejected",
  "delay",
  "delegate",
  "delegator",
  "delete",
  "deletion",
  "delicacy",
  "delicate",
  "delicious",
  "delighted",
  "delirious",
  "delirium",
  "deliverer",
  "delivery",
  "delouse",
  "delta",
  "deluge",
  "delusion",
  "deluxe",
  "demanding",
  "demeaning",
  "demeanor",
  "demise",
  "democracy",
  "democrat",
  "demote",
  "demotion",
  "demystify",
  "denatured",
  "deniable",
  "denial",
  "denim",
  "denote",
  "dense",
  "density",
  "dental",
  "dentist",
  "denture",
  "deny",
  "deodorant",
  "deodorize",
  "departed",
  "departure",
  "depict",
  "deplete",
  "depletion",
  "deplored",
  "deploy",
  "deport",
  "depose",
  "depraved",
  "depravity",
  "deprecate",
  "depress",
  "deprive",
  "depth",
  "deputize",
  "deputy",
  "derail",
  "deranged",
  "derby",
  "derived",
  "desecrate",
  "deserve",
  "deserving",
  "designate",
  "designed",
  "designer",
  "designing",
  "deskbound",
  "desktop",
  "deskwork",
  "desolate",
  "despair",
  "despise",
  "despite",
  "destiny",
  "destitute",
  "destruct",
  "detached",
  "detail",
  "detection",
  "detective",
  "detector",
  "detention",
  "detergent",
  "detest",
  "detonate",
  "detonator",
  "detoxify",
  "detract",
  "deuce",
  "devalue",
  "deviancy",
  "deviant",
  "deviate",
  "deviation",
  "deviator",
  "device",
  "devious",
  "devotedly",
  "devotee",
  "devotion",
  "devourer",
  "devouring",
  "devoutly",
  "dexterity",
  "dexterous",
  "diabetes",
  "diabetic",
  "diabolic",
  "diagnoses",
  "diagnosis",
  "diagram",
  "dial",
  "diameter",
  "diaper",
  "diaphragm",
  "diary",
  "dice",
  "dicing",
  "dictate",
  "dictation",
  "dictator",
  "difficult",
  "diffused",
  "diffuser",
  "diffusion",
  "diffusive",
  "dig",
  "dilation",
  "diligence",
  "diligent",
  "dill",
  "dilute",
  "dime",
  "diminish",
  "dimly",
  "dimmed",
  "dimmer",
  "dimness",
  "dimple",
  "diner",
  "dingbat",
  "dinghy",
  "dinginess",
  "dingo",
  "dingy",
  "dining",
  "dinner",
  "diocese",
  "dioxide",
  "diploma",
  "dipped",
  "dipper",
  "dipping",
  "directed",
  "direction",
  "directive",
  "directly",
  "directory",
  "direness",
  "dirtiness",
  "disabled",
  "disagree",
  "disallow",
  "disarm",
  "disarray",
  "disaster",
  "disband",
  "disbelief",
  "disburse",
  "discard",
  "discern",
  "discharge",
  "disclose",
  "discolor",
  "discount",
  "discourse",
  "discover",
  "discuss",
  "disdain",
  "disengage",
  "disfigure",
  "disgrace",
  "dish",
  "disinfect",
  "disjoin",
  "disk",
  "dislike",
  "disliking",
  "dislocate",
  "dislodge",
  "disloyal",
  "dismantle",
  "dismay",
  "dismiss",
  "dismount",
  "disobey",
  "disorder",
  "disown",
  "disparate",
  "disparity",
  "dispatch",
  "dispense",
  "dispersal",
  "dispersed",
  "disperser",
  "displace",
  "display",
  "displease",
  "disposal",
  "dispose",
  "disprove",
  "dispute",
  "disregard",
  "disrupt",
  "dissuade",
  "distance",
  "distant",
  "distaste",
  "distill",
  "distinct",
  "distort",
  "distract",
  "distress",
  "district",
  "distrust",
  "ditch",
  "ditto",
  "ditzy",
  "dividable",
  "divided",
  "dividend",
  "dividers",
  "dividing",
  "divinely",
  "diving",
  "divinity",
  "divisible",
  "divisibly",
  "division",
  "divisive",
  "divorcee",
  "dizziness",
  "dizzy",
  "doable",
  "docile",
  "dock",
  "doctrine",
  "document",
  "dodge",
  "dodgy",
  "doily",
  "doing",
  "dole",
  "dollar",
  "dollhouse",
  "dollop",
  "dolly",
  "dolphin",
  "domain",
  "domelike",
  "domestic",
  "dominion",
  "dominoes",
  "donated",
  "donation",
  "donator",
  "donor",
  "donut",
  "doodle",
  "doorbell",
  "doorframe",
  "doorknob",
  "doorman",
  "doormat",
  "doornail",
  "doorpost",
  "doorstep",
  "doorstop",
  "doorway",
  "doozy",
  "dork",
  "dormitory",
  "dorsal",
  "dosage",
  "dose",
  "dotted",
  "doubling",
  "douche",
  "dove",
  "down",
  "dowry",
  "doze",
  "drab",
  "dragging",
  "dragonfly",
  "dragonish",
  "dragster",
  "drainable",
  "drainage",
  "drained",
  "drainer",
  "drainpipe",
  "dramatic",
  "dramatize",
  "drank",
  "drapery",
  "drastic",
  "draw",
  "dreaded",
  "dreadful",
  "dreadlock",
  "dreamboat",
  "dreamily",
  "dreamland",
  "dreamless",
  "dreamlike",
  "dreamt",
  "dreamy",
  "drearily",
  "dreary",
  "drench",
  "dress",
  "drew",
  "dribble",
  "dried",
  "drier",
  "drift",
  "driller",
  "drilling",
  "drinkable",
  "drinking",
  "dripping",
  "drippy",
  "drivable",
  "driven",
  "driver",
  "driveway",
  "driving",
  "drizzle",
  "drizzly",
  "drone",
  "drool",
  "droop",
  "drop-down",
  "dropbox",
  "dropkick",
  "droplet",
  "dropout",
  "dropper",
  "drove",
  "drown",
  "drowsily",
  "drudge",
  "drum",
  "dry",
  "dubbed",
  "dubiously",
  "duchess",
  "duckbill",
  "ducking",
  "duckling",
  "ducktail",
  "ducky",
  "duct",
  "dude",
  "duffel",
  "dugout",
  "duh",
  "duke",
  "duller",
  "dullness",
  "duly",
  "dumping",
  "dumpling",
  "dumpster",
  "duo",
  "dupe",
  "duplex",
  "duplicate",
  "duplicity",
  "durable",
  "durably",
  "duration",
  "duress",
  "during",
  "dusk",
  "dust",
  "dutiful",
  "duty",
  "duvet",
  "dwarf",
  "dweeb",
  "dwelled",
  "dweller",
  "dwelling",
  "dwindle",
  "dwindling",
  "dynamic",
  "dynamite",
  "dynasty",
  "dyslexia",
  "dyslexic",
  "each",
  "eagle",
  "earache",
  "eardrum",
  "earflap",
  "earful",
  "earlobe",
  "early",
  "earmark",
  "earmuff",
  "earphone",
  "earpiece",
  "earplugs",
  "earring",
  "earshot",
  "earthen",
  "earthlike",
  "earthling",
  "earthly",
  "earthworm",
  "earthy",
  "earwig",
  "easeful",
  "easel",
  "easiest",
  "easily",
  "easiness",
  "easing",
  "eastbound",
  "eastcoast",
  "easter",
  "eastward",
  "eatable",
  "eaten",
  "eatery",
  "eating",
  "eats",
  "ebay",
  "ebony",
  "ebook",
  "ecard",
  "eccentric",
  "echo",
  "eclair",
  "eclipse",
  "ecologist",
  "ecology",
  "economic",
  "economist",
  "economy",
  "ecosphere",
  "ecosystem",
  "edge",
  "edginess",
  "edging",
  "edgy",
  "edition",
  "editor",
  "educated",
  "education",
  "educator",
  "eel",
  "effective",
  "effects",
  "efficient",
  "effort",
  "eggbeater",
  "egging",
  "eggnog",
  "eggplant",
  "eggshell",
  "egomaniac",
  "egotism",
  "egotistic",
  "either",
  "eject",
  "elaborate",
  "elastic",
  "elated",
  "elbow",
  "eldercare",
  "elderly",
  "eldest",
  "electable",
  "election",
  "elective",
  "elephant",
  "elevate",
  "elevating",
  "elevation",
  "elevator",
  "eleven",
  "elf",
  "eligible",
  "eligibly",
  "eliminate",
  "elite",
  "elitism",
  "elixir",
  "elk",
  "ellipse",
  "elliptic",
  "elm",
  "elongated",
  "elope",
  "eloquence",
  "eloquent",
  "elsewhere",
  "elude",
  "elusive",
  "elves",
  "email",
  "embargo",
  "embark",
  "embassy",
  "embattled",
  "embellish",
  "ember",
  "embezzle",
  "emblaze",
  "emblem",
  "embody",
  "embolism",
  "emboss",
  "embroider",
  "emcee",
  "emerald",
  "emergency",
  "emission",
  "emit",
  "emote",
  "emoticon",
  "emotion",
  "empathic",
  "empathy",
  "emperor",
  "emphases",
  "emphasis",
  "emphasize",
  "emphatic",
  "empirical",
  "employed",
  "employee",
  "employer",
  "emporium",
  "empower",
  "emptier",
  "emptiness",
  "empty",
  "emu",
  "enable",
  "enactment",
  "enamel",
  "enchanted",
  "enchilada",
  "encircle",
  "enclose",
  "enclosure",
  "encode",
  "encore",
  "encounter",
  "encourage",
  "encroach",
  "encrust",
  "encrypt",
  "endanger",
  "endeared",
  "endearing",
  "ended",
  "ending",
  "endless",
  "endnote",
  "endocrine",
  "endorphin",
  "endorse",
  "endowment",
  "endpoint",
  "endurable",
  "endurance",
  "enduring",
  "energetic",
  "energize",
  "energy",
  "enforced",
  "enforcer",
  "engaged",
  "engaging",
  "engine",
  "engorge",
  "engraved",
  "engraver",
  "engraving",
  "engross",
  "engulf",
  "enhance",
  "enigmatic",
  "enjoyable",
  "enjoyably",
  "enjoyer",
  "enjoying",
  "enjoyment",
  "enlarged",
  "enlarging",
  "enlighten",
  "enlisted",
  "enquirer",
  "enrage",
  "enrich",
  "enroll",
  "enslave",
  "ensnare",
  "ensure",
  "entail",
  "entangled",
  "entering",
  "entertain",
  "enticing",
  "entire",
  "entitle",
  "entity",
  "entomb",
  "entourage",
  "entrap",
  "entree",
  "entrench",
  "entrust",
  "entryway",
  "entwine",
  "enunciate",
  "envelope",
  "enviable",
  "enviably",
  "envious",
  "envision",
  "envoy",
  "envy",
  "enzyme",
  "epic",
  "epidemic",
  "epidermal",
  "epidermis",
  "epidural",
  "epilepsy",
  "epileptic",
  "epilogue",
  "epiphany",
  "episode",
  "equal",
  "equate",
  "equation",
  "equator",
  "equinox",
  "equipment",
  "equity",
  "equivocal",
  "eradicate",
  "erasable",
  "erased",
  "eraser",
  "erasure",
  "ergonomic",
  "errand",
  "errant",
  "erratic",
  "error",
  "erupt",
  "escalate",
  "escalator",
  "escapable",
  "escapade",
  "escapist",
  "escargot",
  "eskimo",
  "esophagus",
  "espionage",
  "espresso",
  "esquire",
  "essay",
  "essence",
  "essential",
  "establish",
  "estate",
  "esteemed",
  "estimate",
  "estimator",
  "estranged",
  "estrogen",
  "etching",
  "eternal",
  "eternity",
  "ethanol",
  "ether",
  "ethically",
  "ethics",
  "euphemism",
  "evacuate",
  "evacuee",
  "evade",
  "evaluate",
  "evaluator",
  "evaporate",
  "evasion",
  "evasive",
  "even",
  "everglade",
  "evergreen",
  "everybody",
  "everyday",
  "everyone",
  "evict",
  "evidence",
  "evident",
  "evil",
  "evoke",
  "evolution",
  "evolve",
  "exact",
  "exalted",
  "example",
  "excavate",
  "excavator",
  "exceeding",
  "exception",
  "excess",
  "exchange",
  "excitable",
  "exciting",
  "exclaim",
  "exclude",
  "excluding",
  "exclusion",
  "exclusive",
  "excretion",
  "excretory",
  "excursion",
  "excusable",
  "excusably",
  "excuse",
  "exemplary",
  "exemplify",
  "exemption",
  "exerciser",
  "exert",
  "exes",
  "exfoliate",
  "exhale",
  "exhaust",
  "exhume",
  "exile",
  "existing",
  "exit",
  "exodus",
  "exonerate",
  "exorcism",
  "exorcist",
  "expand",
  "expanse",
  "expansion",
  "expansive",
  "expectant",
  "expedited",
  "expediter",
  "expel",
  "expend",
  "expenses",
  "expensive",
  "expert",
  "expire",
  "expiring",
  "explain",
  "expletive",
  "explicit",
  "explode",
  "exploit",
  "explore",
  "exploring",
  "exponent",
  "exporter",
  "exposable",
  "expose",
  "exposure",
  "express",
  "expulsion",
  "exquisite",
  "extended",
  "extending",
  "extent",
  "extenuate",
  "exterior",
  "external",
  "extinct",
  "extortion",
  "extradite",
  "extras",
  "extrovert",
  "extrude",
  "extruding",
  "exuberant",
  "fable",
  "fabric",
  "fabulous",
  "facebook",
  "facecloth",
  "facedown",
  "faceless",
  "facelift",
  "faceplate",
  "faceted",
  "facial",
  "facility",
  "facing",
  "facsimile",
  "faction",
  "factoid",
  "factor",
  "factsheet",
  "factual",
  "faculty",
  "fade",
  "fading",
  "failing",
  "falcon",
  "fall",
  "false",
  "falsify",
  "fame",
  "familiar",
  "family",
  "famine",
  "famished",
  "fanatic",
  "fancied",
  "fanciness",
  "fancy",
  "fanfare",
  "fang",
  "fanning",
  "fantasize",
  "fantastic",
  "fantasy",
  "fascism",
  "fastball",
  "faster",
  "fasting",
  "fastness",
  "faucet",
  "favorable",
  "favorably",
  "favored",
  "favoring",
  "favorite",
  "fax",
  "feast",
  "federal",
  "fedora",
  "feeble",
  "feed",
  "feel",
  "feisty",
  "feline",
  "felt-tip",
  "feminine",
  "feminism",
  "feminist",
  "feminize",
  "femur",
  "fence",
  "fencing",
  "fender",
  "ferment",
  "fernlike",
  "ferocious",
  "ferocity",
  "ferret",
  "ferris",
  "ferry",
  "fervor",
  "fester",
  "festival",
  "festive",
  "festivity",
  "fetal",
  "fetch",
  "fever",
  "fiber",
  "fiction",
  "fiddle",
  "fiddling",
  "fidelity",
  "fidgeting",
  "fidgety",
  "fifteen",
  "fifth",
  "fiftieth",
  "fifty",
  "figment",
  "figure",
  "figurine",
  "filing",
  "filled",
  "filler",
  "filling",
  "film",
  "filter",
  "filth",
  "filtrate",
  "finale",
  "finalist",
  "finalize",
  "finally",
  "finance",
  "financial",
  "finch",
  "fineness",
  "finer",
  "finicky",
  "finished",
  "finisher",
  "finishing",
  "finite",
  "finless",
  "finlike",
  "fiscally",
  "fit",
  "five",
  "flaccid",
  "flagman",
  "flagpole",
  "flagship",
  "flagstick",
  "flagstone",
  "flail",
  "flakily",
  "flaky",
  "flame",
  "flammable",
  "flanked",
  "flanking",
  "flannels",
  "flap",
  "flaring",
  "flashback",
  "flashbulb",
  "flashcard",
  "flashily",
  "flashing",
  "flashy",
  "flask",
  "flatbed",
  "flatfoot",
  "flatly",
  "flatness",
  "flatten",
  "flattered",
  "flatterer",
  "flattery",
  "flattop",
  "flatware",
  "flatworm",
  "flavored",
  "flavorful",
  "flavoring",
  "flaxseed",
  "fled",
  "fleshed",
  "fleshy",
  "flick",
  "flier",
  "flight",
  "flinch",
  "fling",
  "flint",
  "flip",
  "flirt",
  "float",
  "flock",
  "flogging",
  "flop",
  "floral",
  "florist",
  "floss",
  "flounder",
  "flyable",
  "flyaway",
  "flyer",
  "flying",
  "flyover",
  "flypaper",
  "foam",
  "foe",
  "fog",
  "foil",
  "folic",
  "folk",
  "follicle",
  "follow",
  "fondling",
  "fondly",
  "fondness",
  "fondue",
  "font",
  "food",
  "fool",
  "footage",
  "football",
  "footbath",
  "footboard",
  "footer",
  "footgear",
  "foothill",
  "foothold",
  "footing",
  "footless",
  "footman",
  "footnote",
  "footpad",
  "footpath",
  "footprint",
  "footrest",
  "footsie",
  "footsore",
  "footwear",
  "footwork",
  "fossil",
  "foster",
  "founder",
  "founding",
  "fountain",
  "fox",
  "foyer",
  "fraction",
  "fracture",
  "fragile",
  "fragility",
  "fragment",
  "fragrance",
  "fragrant",
  "frail",
  "frame",
  "framing",
  "frantic",
  "fraternal",
  "frayed",
  "fraying",
  "frays",
  "freckled",
  "freckles",
  "freebase",
  "freebee",
  "freebie",
  "freedom",
  "freefall",
  "freehand",
  "freeing",
  "freeload",
  "freely",
  "freemason",
  "freeness",
  "freestyle",
  "freeware",
  "freeway",
  "freewill",
  "freezable",
  "freezing",
  "freight",
  "french",
  "frenzied",
  "frenzy",
  "frequency",
  "frequent",
  "fresh",
  "fretful",
  "fretted",
  "friction",
  "friday",
  "fridge",
  "fried",
  "friend",
  "frighten",
  "frightful",
  "frigidity",
  "frigidly",
  "frill",
  "fringe",
  "frisbee",
  "frisk",
  "fritter",
  "frivolous",
  "frolic",
  "from",
  "front",
  "frostbite",
  "frosted",
  "frostily",
  "frosting",
  "frostlike",
  "frosty",
  "froth",
  "frown",
  "frozen",
  "fructose",
  "frugality",
  "frugally",
  "fruit",
  "frustrate",
  "frying",
  "gab",
  "gaffe",
  "gag",
  "gainfully",
  "gaining",
  "gains",
  "gala",
  "gallantly",
  "galleria",
  "gallery",
  "galley",
  "gallon",
  "gallows",
  "gallstone",
  "galore",
  "galvanize",
  "gambling",
  "game",
  "gaming",
  "gamma",
  "gander",
  "gangly",
  "gangrene",
  "gangway",
  "gap",
  "garage",
  "garbage",
  "garden",
  "gargle",
  "garland",
  "garlic",
  "garment",
  "garnet",
  "garnish",
  "garter",
  "gas",
  "gatherer",
  "gathering",
  "gating",
  "gauging",
  "gauntlet",
  "gauze",
  "gave",
  "gawk",
  "gazing",
  "gear",
  "gecko",
  "geek",
  "geiger",
  "gem",
  "gender",
  "generic",
  "generous",
  "genetics",
  "genre",
  "gentile",
  "gentleman",
  "gently",
  "gents",
  "geography",
  "geologic",
  "geologist",
  "geology",
  "geometric",
  "geometry",
  "geranium",
  "gerbil",
  "geriatric",
  "germicide",
  "germinate",
  "germless",
  "germproof",
  "gestate",
  "gestation",
  "gesture",
  "getaway",
  "getting",
  "getup",
  "giant",
  "gibberish",
  "giblet",
  "giddily",
  "giddiness",
  "giddy",
  "gift",
  "gigabyte",
  "gigahertz",
  "gigantic",
  "giggle",
  "giggling",
  "giggly",
  "gigolo",
  "gilled",
  "gills",
  "gimmick",
  "girdle",
  "giveaway",
  "given",
  "giver",
  "giving",
  "gizmo",
  "gizzard",
  "glacial",
  "glacier",
  "glade",
  "gladiator",
  "gladly",
  "glamorous",
  "glamour",
  "glance",
  "glancing",
  "glandular",
  "glare",
  "glaring",
  "glass",
  "glaucoma",
  "glazing",
  "gleaming",
  "gleeful",
  "glider",
  "gliding",
  "glimmer",
  "glimpse",
  "glisten",
  "glitch",
  "glitter",
  "glitzy",
  "gloater",
  "gloating",
  "gloomily",
  "gloomy",
  "glorified",
  "glorifier",
  "glorify",
  "glorious",
  "glory",
  "gloss",
  "glove",
  "glowing",
  "glowworm",
  "glucose",
  "glue",
  "gluten",
  "glutinous",
  "glutton",
  "gnarly",
  "gnat",
  "goal",
  "goatskin",
  "goes",
  "goggles",
  "going",
  "goldfish",
  "goldmine",
  "goldsmith",
  "golf",
  "goliath",
  "gonad",
  "gondola",
  "gone",
  "gong",
  "good",
  "gooey",
  "goofball",
  "goofiness",
  "goofy",
  "google",
  "goon",
  "gopher",
  "gore",
  "gorged",
  "gorgeous",
  "gory",
  "gosling",
  "gossip",
  "gothic",
  "gotten",
  "gout",
  "gown",
  "grab",
  "graceful",
  "graceless",
  "gracious",
  "gradation",
  "graded",
  "grader",
  "gradient",
  "grading",
  "gradually",
  "graduate",
  "graffiti",
  "grafted",
  "grafting",
  "grain",
  "granddad",
  "grandkid",
  "grandly",
  "grandma",
  "grandpa",
  "grandson",
  "granite",
  "granny",
  "granola",
  "grant",
  "granular",
  "grape",
  "graph",
  "grapple",
  "grappling",
  "grasp",
  "grass",
  "gratified",
  "gratify",
  "grating",
  "gratitude",
  "gratuity",
  "gravel",
  "graveness",
  "graves",
  "graveyard",
  "gravitate",
  "gravity",
  "gravy",
  "gray",
  "grazing",
  "greasily",
  "greedily",
  "greedless",
  "greedy",
  "green",
  "greeter",
  "greeting",
  "grew",
  "greyhound",
  "grid",
  "grief",
  "grievance",
  "grieving",
  "grievous",
  "grill",
  "grimace",
  "grimacing",
  "grime",
  "griminess",
  "grimy",
  "grinch",
  "grinning",
  "grip",
  "gristle",
  "grit",
  "groggily",
  "groggy",
  "groin",
  "groom",
  "groove",
  "grooving",
  "groovy",
  "grope",
  "ground",
  "grouped",
  "grout",
  "grove",
  "grower",
  "growing",
  "growl",
  "grub",
  "grudge",
  "grudging",
  "grueling",
  "gruffly",
  "grumble",
  "grumbling",
  "grumbly",
  "grumpily",
  "grunge",
  "grunt",
  "guacamole",
  "guidable",
  "guidance",
  "guide",
  "guiding",
  "guileless",
  "guise",
  "gulf",
  "gullible",
  "gully",
  "gulp",
  "gumball",
  "gumdrop",
  "gumminess",
  "gumming",
  "gummy",
  "gurgle",
  "gurgling",
  "guru",
  "gush",
  "gusto",
  "gusty",
  "gutless",
  "guts",
  "gutter",
  "guy",
  "guzzler",
  "gyration",
  "habitable",
  "habitant",
  "habitat",
  "habitual",
  "hacked",
  "hacker",
  "hacking",
  "hacksaw",
  "had",
  "haggler",
  "haiku",
  "half",
  "halogen",
  "halt",
  "halved",
  "halves",
  "hamburger",
  "hamlet",
  "hammock",
  "hamper",
  "hamster",
  "hamstring",
  "handbag",
  "handball",
  "handbook",
  "handbrake",
  "handcart",
  "handclap",
  "handclasp",
  "handcraft",
  "handcuff",
  "handed",
  "handful",
  "handgrip",
  "handgun",
  "handheld",
  "handiness",
  "handiwork",
  "handlebar",
  "handled",
  "handler",
  "handling",
  "handmade",
  "handoff",
  "handpick",
  "handprint",
  "handrail",
  "handsaw",
  "handset",
  "handsfree",
  "handshake",
  "handstand",
  "handwash",
  "handwork",
  "handwoven",
  "handwrite",
  "handyman",
  "hangnail",
  "hangout",
  "hangover",
  "hangup",
  "hankering",
  "hankie",
  "hanky",
  "haphazard",
  "happening",
  "happier",
  "happiest",
  "happily",
  "happiness",
  "happy",
  "harbor",
  "hardcopy",
  "hardcore",
  "hardcover",
  "harddisk",
  "hardened",
  "hardener",
  "hardening",
  "hardhat",
  "hardhead",
  "hardiness",
  "hardly",
  "hardness",
  "hardship",
  "hardware",
  "hardwired",
  "hardwood",
  "hardy",
  "harmful",
  "harmless",
  "harmonica",
  "harmonics",
  "harmonize",
  "harmony",
  "harness",
  "harpist",
  "harsh",
  "harvest",
  "hash",
  "hassle",
  "haste",
  "hastily",
  "hastiness",
  "hasty",
  "hatbox",
  "hatchback",
  "hatchery",
  "hatchet",
  "hatching",
  "hatchling",
  "hate",
  "hatless",
  "hatred",
  "haunt",
  "haven",
  "hazard",
  "hazelnut",
  "hazily",
  "haziness",
  "hazing",
  "hazy",
  "headache",
  "headband",
  "headboard",
  "headcount",
  "headdress",
  "headed",
  "header",
  "headfirst",
  "headgear",
  "heading",
  "headlamp",
  "headless",
  "headlock",
  "headphone",
  "headpiece",
  "headrest",
  "headroom",
  "headscarf",
  "headset",
  "headsman",
  "headstand",
  "headstone",
  "headway",
  "headwear",
  "heap",
  "heat",
  "heave",
  "heavily",
  "heaviness",
  "heaving",
  "hedge",
  "hedging",
  "heftiness",
  "hefty",
  "helium",
  "helmet",
  "helper",
  "helpful",
  "helping",
  "helpless",
  "helpline",
  "hemlock",
  "hemstitch",
  "hence",
  "henchman",
  "henna",
  "herald",
  "herbal",
  "herbicide",
  "herbs",
  "heritage",
  "hermit",
  "heroics",
  "heroism",
  "herring",
  "herself",
  "hertz",
  "hesitancy",
  "hesitant",
  "hesitate",
  "hexagon",
  "hexagram",
  "hubcap",
  "huddle",
  "huddling",
  "huff",
  "hug",
  "hula",
  "hulk",
  "hull",
  "human",
  "humble",
  "humbling",
  "humbly",
  "humid",
  "humiliate",
  "humility",
  "humming",
  "hummus",
  "humongous",
  "humorist",
  "humorless",
  "humorous",
  "humpback",
  "humped",
  "humvee",
  "hunchback",
  "hundredth",
  "hunger",
  "hungrily",
  "hungry",
  "hunk",
  "hunter",
  "hunting",
  "huntress",
  "huntsman",
  "hurdle",
  "hurled",
  "hurler",
  "hurling",
  "hurray",
  "hurricane",
  "hurried",
  "hurry",
  "hurt",
  "husband",
  "hush",
  "husked",
  "huskiness",
  "hut",
  "hybrid",
  "hydrant",
  "hydrated",
  "hydration",
  "hydrogen",
  "hydroxide",
  "hyperlink",
  "hypertext",
  "hyphen",
  "hypnoses",
  "hypnosis",
  "hypnotic",
  "hypnotism",
  "hypnotist",
  "hypnotize",
  "hypocrisy",
  "hypocrite",
  "ibuprofen",
  "ice",
  "iciness",
  "icing",
  "icky",
  "icon",
  "icy",
  "idealism",
  "idealist",
  "idealize",
  "ideally",
  "idealness",
  "identical",
  "identify",
  "identity",
  "ideology",
  "idiocy",
  "idiom",
  "idly",
  "igloo",
  "ignition",
  "ignore",
  "iguana",
  "illicitly",
  "illusion",
  "illusive",
  "image",
  "imaginary",
  "imagines",
  "imaging",
  "imbecile",
  "imitate",
  "imitation",
  "immature",
  "immerse",
  "immersion",
  "imminent",
  "immobile",
  "immodest",
  "immorally",
  "immortal",
  "immovable",
  "immovably",
  "immunity",
  "immunize",
  "impaired",
  "impale",
  "impart",
  "impatient",
  "impeach",
  "impeding",
  "impending",
  "imperfect",
  "imperial",
  "impish",
  "implant",
  "implement",
  "implicate",
  "implicit",
  "implode",
  "implosion",
  "implosive",
  "imply",
  "impolite",
  "important",
  "importer",
  "impose",
  "imposing",
  "impotence",
  "impotency",
  "impotent",
  "impound",
  "imprecise",
  "imprint",
  "imprison",
  "impromptu",
  "improper",
  "improve",
  "improving",
  "improvise",
  "imprudent",
  "impulse",
  "impulsive",
  "impure",
  "impurity",
  "iodine",
  "iodize",
  "ion",
  "ipad",
  "iphone",
  "ipod",
  "irate",
  "irk",
  "iron",
  "irregular",
  "irrigate",
  "irritable",
  "irritably",
  "irritant",
  "irritate",
  "islamic",
  "islamist",
  "isolated",
  "isolating",
  "isolation",
  "isotope",
  "issue",
  "issuing",
  "italicize",
  "italics",
  "item",
  "itinerary",
  "itunes",
  "ivory",
  "ivy",
  "jab",
  "jackal",
  "jacket",
  "jackknife",
  "jackpot",
  "jailbird",
  "jailbreak",
  "jailer",
  "jailhouse",
  "jalapeno",
  "jam",
  "janitor",
  "january",
  "jargon",
  "jarring",
  "jasmine",
  "jaundice",
  "jaunt",
  "java",
  "jawed",
  "jawless",
  "jawline",
  "jaws",
  "jaybird",
  "jaywalker",
  "jazz",
  "jeep",
  "jeeringly",
  "jellied",
  "jelly",
  "jersey",
  "jester",
  "jet",
  "jiffy",
  "jigsaw",
  "jimmy",
  "jingle",
  "jingling",
  "jinx",
  "jitters",
  "jittery",
  "job",
  "jockey",
  "jockstrap",
  "jogger",
  "jogging",
  "john",
  "joining",
  "jokester",
  "jokingly",
  "jolliness",
  "jolly",
  "jolt",
  "jot",
  "jovial",
  "joyfully",
  "joylessly",
  "joyous",
  "joyride",
  "joystick",
  "jubilance",
  "jubilant",
  "judge",
  "judgingly",
  "judicial",
  "judiciary",
  "judo",
  "juggle",
  "juggling",
  "jugular",
  "juice",
  "juiciness",
  "juicy",
  "jujitsu",
  "jukebox",
  "july",
  "jumble",
  "jumbo",
  "jump",
  "junction",
  "juncture",
  "june",
  "junior",
  "juniper",
  "junkie",
  "junkman",
  "junkyard",
  "jurist",
  "juror",
  "jury",
  "justice",
  "justifier",
  "justify",
  "justly",
  "justness",
  "juvenile",
  "kabob",
  "kangaroo",
  "karaoke",
  "karate",
  "karma",
  "kebab",
  "keenly",
  "keenness",
  "keep",
  "keg",
  "kelp",
  "kennel",
  "kept",
  "kerchief",
  "kerosene",
  "kettle",
  "kick",
  "kiln",
  "kilobyte",
  "kilogram",
  "kilometer",
  "kilowatt",
  "kilt",
  "kimono",
  "kindle",
  "kindling",
  "kindly",
  "kindness",
  "kindred",
  "kinetic",
  "kinfolk",
  "king",
  "kinship",
  "kinsman",
  "kinswoman",
  "kissable",
  "kisser",
  "kissing",
  "kitchen",
  "kite",
  "kitten",
  "kitty",
  "kiwi",
  "kleenex",
  "knapsack",
  "knee",
  "knelt",
  "knickers",
  "knoll",
  "koala",
  "kooky",
  "kosher",
  "krypton",
  "kudos",
  "kung",
  "labored",
  "laborer",
  "laboring",
  "laborious",
  "labrador",
  "ladder",
  "ladies",
  "ladle",
  "ladybug",
  "ladylike",
  "lagged",
  "lagging",
  "lagoon",
  "lair",
  "lake",
  "lance",
  "landed",
  "landfall",
  "landfill",
  "landing",
  "landlady",
  "landless",
  "landline",
  "landlord",
  "landmark",
  "landmass",
  "landmine",
  "landowner",
  "landscape",
  "landside",
  "landslide",
  "language",
  "lankiness",
  "lanky",
  "lantern",
  "lapdog",
  "lapel",
  "lapped",
  "lapping",
  "laptop",
  "lard",
  "large",
  "lark",
  "lash",
  "lasso",
  "last",
  "latch",
  "late",
  "lather",
  "latitude",
  "latrine",
  "latter",
  "latticed",
  "launch",
  "launder",
  "laundry",
  "laurel",
  "lavender",
  "lavish",
  "laxative",
  "lazily",
  "laziness",
  "lazy",
  "lecturer",
  "left",
  "legacy",
  "legal",
  "legend",
  "legged",
  "leggings",
  "legible",
  "legibly",
  "legislate",
  "lego",
  "legroom",
  "legume",
  "legwarmer",
  "legwork",
  "lemon",
  "lend",
  "length",
  "lens",
  "lent",
  "leotard",
  "lesser",
  "letdown",
  "lethargic",
  "lethargy",
  "letter",
  "lettuce",
  "level",
  "leverage",
  "levers",
  "levitate",
  "levitator",
  "liability",
  "liable",
  "liberty",
  "librarian",
  "library",
  "licking",
  "licorice",
  "lid",
  "life",
  "lifter",
  "lifting",
  "liftoff",
  "ligament",
  "likely",
  "likeness",
  "likewise",
  "liking",
  "lilac",
  "lilly",
  "lily",
  "limb",
  "limeade",
  "limelight",
  "limes",
  "limit",
  "limping",
  "limpness",
  "line",
  "lingo",
  "linguini",
  "linguist",
  "lining",
  "linked",
  "linoleum",
  "linseed",
  "lint",
  "lion",
  "lip",
  "liquefy",
  "liqueur",
  "liquid",
  "lisp",
  "list",
  "litigate",
  "litigator",
  "litmus",
  "litter",
  "little",
  "livable",
  "lived",
  "lively",
  "liver",
  "livestock",
  "lividly",
  "living",
  "lizard",
  "lubricant",
  "lubricate",
  "lucid",
  "luckily",
  "luckiness",
  "luckless",
  "lucrative",
  "ludicrous",
  "lugged",
  "lukewarm",
  "lullaby",
  "lumber",
  "luminance",
  "luminous",
  "lumpiness",
  "lumping",
  "lumpish",
  "lunacy",
  "lunar",
  "lunchbox",
  "luncheon",
  "lunchroom",
  "lunchtime",
  "lung",
  "lurch",
  "lure",
  "luridness",
  "lurk",
  "lushly",
  "lushness",
  "luster",
  "lustfully",
  "lustily",
  "lustiness",
  "lustrous",
  "lusty",
  "luxurious",
  "luxury",
  "lying",
  "lyrically",
  "lyricism",
  "lyricist",
  "lyrics",
  "macarena",
  "macaroni",
  "macaw",
  "mace",
  "machine",
  "machinist",
  "magazine",
  "magenta",
  "maggot",
  "magical",
  "magician",
  "magma",
  "magnesium",
  "magnetic",
  "magnetism",
  "magnetize",
  "magnifier",
  "magnify",
  "magnitude",
  "magnolia",
  "mahogany",
  "maimed",
  "majestic",
  "majesty",
  "majorette",
  "majority",
  "makeover",
  "maker",
  "makeshift",
  "making",
  "malformed",
  "malt",
  "mama",
  "mammal",
  "mammary",
  "mammogram",
  "manager",
  "managing",
  "manatee",
  "mandarin",
  "mandate",
  "mandatory",
  "mandolin",
  "manger",
  "mangle",
  "mango",
  "mangy",
  "manhandle",
  "manhole",
  "manhood",
  "manhunt",
  "manicotti",
  "manicure",
  "manifesto",
  "manila",
  "mankind",
  "manlike",
  "manliness",
  "manly",
  "manmade",
  "manned",
  "mannish",
  "manor",
  "manpower",
  "mantis",
  "mantra",
  "manual",
  "many",
  "map",
  "marathon",
  "marauding",
  "marbled",
  "marbles",
  "marbling",
  "march",
  "mardi",
  "margarine",
  "margarita",
  "margin",
  "marigold",
  "marina",
  "marine",
  "marital",
  "maritime",
  "marlin",
  "marmalade",
  "maroon",
  "married",
  "marrow",
  "marry",
  "marshland",
  "marshy",
  "marsupial",
  "marvelous",
  "marxism",
  "mascot",
  "masculine",
  "mashed",
  "mashing",
  "massager",
  "masses",
  "massive",
  "mastiff",
  "matador",
  "matchbook",
  "matchbox",
  "matcher",
  "matching",
  "matchless",
  "material",
  "maternal",
  "maternity",
  "math",
  "mating",
  "matriarch",
  "matrimony",
  "matrix",
  "matron",
  "matted",
  "matter",
  "maturely",
  "maturing",
  "maturity",
  "mauve",
  "maverick",
  "maximize",
  "maximum",
  "maybe",
  "mayday",
  "mayflower",
  "moaner",
  "moaning",
  "mobile",
  "mobility",
  "mobilize",
  "mobster",
  "mocha",
  "mocker",
  "mockup",
  "modified",
  "modify",
  "modular",
  "modulator",
  "module",
  "moisten",
  "moistness",
  "moisture",
  "molar",
  "molasses",
  "mold",
  "molecular",
  "molecule",
  "molehill",
  "mollusk",
  "mom",
  "monastery",
  "monday",
  "monetary",
  "monetize",
  "moneybags",
  "moneyless",
  "moneywise",
  "mongoose",
  "mongrel",
  "monitor",
  "monkhood",
  "monogamy",
  "monogram",
  "monologue",
  "monopoly",
  "monorail",
  "monotone",
  "monotype",
  "monoxide",
  "monsieur",
  "monsoon",
  "monstrous",
  "monthly",
  "monument",
  "moocher",
  "moodiness",
  "moody",
  "mooing",
  "moonbeam",
  "mooned",
  "moonlight",
  "moonlike",
  "moonlit",
  "moonrise",
  "moonscape",
  "moonshine",
  "moonstone",
  "moonwalk",
  "mop",
  "morale",
  "morality",
  "morally",
  "morbidity",
  "morbidly",
  "morphine",
  "morphing",
  "morse",
  "mortality",
  "mortally",
  "mortician",
  "mortified",
  "mortify",
  "mortuary",
  "mosaic",
  "mossy",
  "most",
  "mothball",
  "mothproof",
  "motion",
  "motivate",
  "motivator",
  "motive",
  "motocross",
  "motor",
  "motto",
  "mountable",
  "mountain",
  "mounted",
  "mounting",
  "mourner",
  "mournful",
  "mouse",
  "mousiness",
  "moustache",
  "mousy",
  "mouth",
  "movable",
  "move",
  "movie",
  "moving",
  "mower",
  "mowing",
  "much",
  "muck",
  "mud",
  "mug",
  "mulberry",
  "mulch",
  "mule",
  "mulled",
  "mullets",
  "multiple",
  "multiply",
  "multitask",
  "multitude",
  "mumble",
  "mumbling",
  "mumbo",
  "mummified",
  "mummify",
  "mummy",
  "mumps",
  "munchkin",
  "mundane",
  "municipal",
  "muppet",
  "mural",
  "murkiness",
  "murky",
  "murmuring",
  "muscular",
  "museum",
  "mushily",
  "mushiness",
  "mushroom",
  "mushy",
  "music",
  "musket",
  "muskiness",
  "musky",
  "mustang",
  "mustard",
  "muster",
  "mustiness",
  "musty",
  "mutable",
  "mutate",
  "mutation",
  "mute",
  "mutilated",
  "mutilator",
  "mutiny",
  "mutt",
  "mutual",
  "muzzle",
  "myself",
  "myspace",
  "mystified",
  "mystify",
  "myth",
  "nacho",
  "nag",
  "nail",
  "name",
  "naming",
  "nanny",
  "nanometer",
  "nape",
  "napkin",
  "napped",
  "napping",
  "nappy",
  "narrow",
  "nastily",
  "nastiness",
  "national",
  "native",
  "nativity",
  "natural",
  "nature",
  "naturist",
  "nautical",
  "navigate",
  "navigator",
  "navy",
  "nearby",
  "nearest",
  "nearly",
  "nearness",
  "neatly",
  "neatness",
  "nebula",
  "nebulizer",
  "nectar",
  "negate",
  "negation",
  "negative",
  "neglector",
  "negligee",
  "negligent",
  "negotiate",
  "nemeses",
  "nemesis",
  "neon",
  "nephew",
  "nerd",
  "nervous",
  "nervy",
  "nest",
  "net",
  "neurology",
  "neuron",
  "neurosis",
  "neurotic",
  "neuter",
  "neutron",
  "never",
  "next",
  "nibble",
  "nickname",
  "nicotine",
  "niece",
  "nifty",
  "nimble",
  "nimbly",
  "nineteen",
  "ninetieth",
  "ninja",
  "nintendo",
  "ninth",
  "nuclear",
  "nuclei",
  "nucleus",
  "nugget",
  "nullify",
  "number",
  "numbing",
  "numbly",
  "numbness",
  "numeral",
  "numerate",
  "numerator",
  "numeric",
  "numerous",
  "nuptials",
  "nursery",
  "nursing",
  "nurture",
  "nutcase",
  "nutlike",
  "nutmeg",
  "nutrient",
  "nutshell",
  "nuttiness",
  "nutty",
  "nuzzle",
  "nylon",
  "oaf",
  "oak",
  "oasis",
  "oat",
  "obedience",
  "obedient",
  "obituary",
  "object",
  "obligate",
  "obliged",
  "oblivion",
  "oblivious",
  "oblong",
  "obnoxious",
  "oboe",
  "obscure",
  "obscurity",
  "observant",
  "observer",
  "observing",
  "obsessed",
  "obsession",
  "obsessive",
  "obsolete",
  "obstacle",
  "obstinate",
  "obstruct",
  "obtain",
  "obtrusive",
  "obtuse",
  "obvious",
  "occultist",
  "occupancy",
  "occupant",
  "occupier",
  "occupy",
  "ocean",
  "ocelot",
  "octagon",
  "octane",
  "october",
  "octopus",
  "ogle",
  "oil",
  "oink",
  "ointment",
  "okay",
  "old",
  "olive",
  "olympics",
  "omega",
  "omen",
  "ominous",
  "omission",
  "omit",
  "omnivore",
  "onboard",
  "oncoming",
  "ongoing",
  "onion",
  "online",
  "onlooker",
  "only",
  "onscreen",
  "onset",
  "onshore",
  "onslaught",
  "onstage",
  "onto",
  "onward",
  "onyx",
  "oops",
  "ooze",
  "oozy",
  "opacity",
  "opal",
  "open",
  "operable",
  "operate",
  "operating",
  "operation",
  "operative",
  "operator",
  "opium",
  "opossum",
  "opponent",
  "oppose",
  "opposing",
  "opposite",
  "oppressed",
  "oppressor",
  "opt",
  "opulently",
  "osmosis",
  "other",
  "otter",
  "ouch",
  "ought",
  "ounce",
  "outage",
  "outback",
  "outbid",
  "outboard",
  "outbound",
  "outbreak",
  "outburst",
  "outcast",
  "outclass",
  "outcome",
  "outdated",
  "outdoors",
  "outer",
  "outfield",
  "outfit",
  "outflank",
  "outgoing",
  "outgrow",
  "outhouse",
  "outing",
  "outlast",
  "outlet",
  "outline",
  "outlook",
  "outlying",
  "outmatch",
  "outmost",
  "outnumber",
  "outplayed",
  "outpost",
  "outpour",
  "output",
  "outrage",
  "outrank",
  "outreach",
  "outright",
  "outscore",
  "outsell",
  "outshine",
  "outshoot",
  "outsider",
  "outskirts",
  "outsmart",
  "outsource",
  "outspoken",
  "outtakes",
  "outthink",
  "outward",
  "outweigh",
  "outwit",
  "oval",
  "ovary",
  "oven",
  "overact",
  "overall",
  "overarch",
  "overbid",
  "overbill",
  "overbite",
  "overblown",
  "overboard",
  "overbook",
  "overbuilt",
  "overcast",
  "overcoat",
  "overcome",
  "overcook",
  "overcrowd",
  "overdraft",
  "overdrawn",
  "overdress",
  "overdrive",
  "overdue",
  "overeager",
  "overeater",
  "overexert",
  "overfed",
  "overfeed",
  "overfill",
  "overflow",
  "overfull",
  "overgrown",
  "overhand",
  "overhang",
  "overhaul",
  "overhead",
  "overhear",
  "overheat",
  "overhung",
  "overjoyed",
  "overkill",
  "overlabor",
  "overlaid",
  "overlap",
  "overlay",
  "overload",
  "overlook",
  "overlord",
  "overlying",
  "overnight",
  "overpass",
  "overpay",
  "overplant",
  "overplay",
  "overpower",
  "overprice",
  "overrate",
  "overreach",
  "overreact",
  "override",
  "overripe",
  "overrule",
  "overrun",
  "overshoot",
  "overshot",
  "oversight",
  "oversized",
  "oversleep",
  "oversold",
  "overspend",
  "overstate",
  "overstay",
  "overstep",
  "overstock",
  "overstuff",
  "oversweet",
  "overtake",
  "overthrow",
  "overtime",
  "overtly",
  "overtone",
  "overture",
  "overturn",
  "overuse",
  "overvalue",
  "overview",
  "overwrite",
  "owl",
  "oxford",
  "oxidant",
  "oxidation",
  "oxidize",
  "oxidizing",
  "oxygen",
  "oxymoron",
  "oyster",
  "ozone",
  "paced",
  "pacemaker",
  "pacific",
  "pacifier",
  "pacifism",
  "pacifist",
  "pacify",
  "padded",
  "padding",
  "paddle",
  "paddling",
  "padlock",
  "pagan",
  "pager",
  "paging",
  "pajamas",
  "palace",
  "palatable",
  "palm",
  "palpable",
  "palpitate",
  "paltry",
  "pampered",
  "pamperer",
  "pampers",
  "pamphlet",
  "panama",
  "pancake",
  "pancreas",
  "panda",
  "pandemic",
  "pang",
  "panhandle",
  "panic",
  "panning",
  "panorama",
  "panoramic",
  "panther",
  "pantomime",
  "pantry",
  "pants",
  "pantyhose",
  "paparazzi",
  "papaya",
  "paper",
  "paprika",
  "papyrus",
  "parabola",
  "parachute",
  "parade",
  "paradox",
  "paragraph",
  "parakeet",
  "paralegal",
  "paralyses",
  "paralysis",
  "paralyze",
  "paramedic",
  "parameter",
  "paramount",
  "parasail",
  "parasite",
  "parasitic",
  "parcel",
  "parched",
  "parchment",
  "pardon",
  "parish",
  "parka",
  "parking",
  "parkway",
  "parlor",
  "parmesan",
  "parole",
  "parrot",
  "parsley",
  "parsnip",
  "partake",
  "parted",
  "parting",
  "partition",
  "partly",
  "partner",
  "partridge",
  "party",
  "passable",
  "passably",
  "passage",
  "passcode",
  "passenger",
  "passerby",
  "passing",
  "passion",
  "passive",
  "passivism",
  "passover",
  "passport",
  "password",
  "pasta",
  "pasted",
  "pastel",
  "pastime",
  "pastor",
  "pastrami",
  "pasture",
  "pasty",
  "patchwork",
  "patchy",
  "paternal",
  "paternity",
  "path",
  "patience",
  "patient",
  "patio",
  "patriarch",
  "patriot",
  "patrol",
  "patronage",
  "patronize",
  "pauper",
  "pavement",
  "paver",
  "pavestone",
  "pavilion",
  "paving",
  "pawing",
  "payable",
  "payback",
  "paycheck",
  "payday",
  "payee",
  "payer",
  "paying",
  "payment",
  "payphone",
  "payroll",
  "pebble",
  "pebbly",
  "pecan",
  "pectin",
  "peculiar",
  "peddling",
  "pediatric",
  "pedicure",
  "pedigree",
  "pedometer",
  "pegboard",
  "pelican",
  "pellet",
  "pelt",
  "pelvis",
  "penalize",
  "penalty",
  "pencil",
  "pendant",
  "pending",
  "penholder",
  "penknife",
  "pennant",
  "penniless",
  "penny",
  "penpal",
  "pension",
  "pentagon",
  "pentagram",
  "pep",
  "perceive",
  "percent",
  "perch",
  "percolate",
  "perennial",
  "perfected",
  "perfectly",
  "perfume",
  "periscope",
  "perish",
  "perjurer",
  "perjury",
  "perkiness",
  "perky",
  "perm",
  "peroxide",
  "perpetual",
  "perplexed",
  "persecute",
  "persevere",
  "persuaded",
  "persuader",
  "pesky",
  "peso",
  "pessimism",
  "pessimist",
  "pester",
  "pesticide",
  "petal",
  "petite",
  "petition",
  "petri",
  "petroleum",
  "petted",
  "petticoat",
  "pettiness",
  "petty",
  "petunia",
  "phantom",
  "phobia",
  "phoenix",
  "phonebook",
  "phoney",
  "phonics",
  "phoniness",
  "phony",
  "phosphate",
  "photo",
  "phrase",
  "phrasing",
  "placard",
  "placate",
  "placidly",
  "plank",
  "planner",
  "plant",
  "plasma",
  "plaster",
  "plastic",
  "plated",
  "platform",
  "plating",
  "platinum",
  "platonic",
  "platter",
  "platypus",
  "plausible",
  "plausibly",
  "playable",
  "playback",
  "player",
  "playful",
  "playgroup",
  "playhouse",
  "playing",
  "playlist",
  "playmaker",
  "playmate",
  "playoff",
  "playpen",
  "playroom",
  "playset",
  "plaything",
  "playtime",
  "plaza",
  "pleading",
  "pleat",
  "pledge",
  "plentiful",
  "plenty",
  "plethora",
  "plexiglas",
  "pliable",
  "plod",
  "plop",
  "plot",
  "plow",
  "ploy",
  "pluck",
  "plug",
  "plunder",
  "plunging",
  "plural",
  "plus",
  "plutonium",
  "plywood",
  "poach",
  "pod",
  "poem",
  "poet",
  "pogo",
  "pointed",
  "pointer",
  "pointing",
  "pointless",
  "pointy",
  "poise",
  "poison",
  "poker",
  "poking",
  "polar",
  "police",
  "policy",
  "polio",
  "polish",
  "politely",
  "polka",
  "polo",
  "polyester",
  "polygon",
  "polygraph",
  "polymer",
  "poncho",
  "pond",
  "pony",
  "popcorn",
  "pope",
  "poplar",
  "popper",
  "poppy",
  "popsicle",
  "populace",
  "popular",
  "populate",
  "porcupine",
  "pork",
  "porous",
  "porridge",
  "portable",
  "portal",
  "portfolio",
  "porthole",
  "portion",
  "portly",
  "portside",
  "poser",
  "posh",
  "posing",
  "possible",
  "possibly",
  "possum",
  "postage",
  "postal",
  "postbox",
  "postcard",
  "posted",
  "poster",
  "posting",
  "postnasal",
  "posture",
  "postwar",
  "pouch",
  "pounce",
  "pouncing",
  "pound",
  "pouring",
  "pout",
  "powdered",
  "powdering",
  "powdery",
  "power",
  "powwow",
  "pox",
  "praising",
  "prance",
  "prancing",
  "pranker",
  "prankish",
  "prankster",
  "prayer",
  "praying",
  "preacher",
  "preaching",
  "preachy",
  "preamble",
  "precinct",
  "precise",
  "precision",
  "precook",
  "precut",
  "predator",
  "predefine",
  "predict",
  "preface",
  "prefix",
  "preflight",
  "preformed",
  "pregame",
  "pregnancy",
  "pregnant",
  "preheated",
  "prelaunch",
  "prelaw",
  "prelude",
  "premiere",
  "premises",
  "premium",
  "prenatal",
  "preoccupy",
  "preorder",
  "prepaid",
  "prepay",
  "preplan",
  "preppy",
  "preschool",
  "prescribe",
  "preseason",
  "preset",
  "preshow",
  "president",
  "presoak",
  "press",
  "presume",
  "presuming",
  "preteen",
  "pretended",
  "pretender",
  "pretense",
  "pretext",
  "pretty",
  "pretzel",
  "prevail",
  "prevalent",
  "prevent",
  "preview",
  "previous",
  "prewar",
  "prewashed",
  "prideful",
  "pried",
  "primal",
  "primarily",
  "primary",
  "primate",
  "primer",
  "primp",
  "princess",
  "print",
  "prior",
  "prism",
  "prison",
  "prissy",
  "pristine",
  "privacy",
  "private",
  "privatize",
  "prize",
  "proactive",
  "probable",
  "probably",
  "probation",
  "probe",
  "probing",
  "probiotic",
  "problem",
  "procedure",
  "process",
  "proclaim",
  "procreate",
  "procurer",
  "prodigal",
  "prodigy",
  "produce",
  "product",
  "profane",
  "profanity",
  "professed",
  "professor",
  "profile",
  "profound",
  "profusely",
  "progeny",
  "prognosis",
  "program",
  "progress",
  "projector",
  "prologue",
  "prolonged",
  "promenade",
  "prominent",
  "promoter",
  "promotion",
  "prompter",
  "promptly",
  "prone",
  "prong",
  "pronounce",
  "pronto",
  "proofing",
  "proofread",
  "proofs",
  "propeller",
  "properly",
  "property",
  "proponent",
  "proposal",
  "propose",
  "props",
  "prorate",
  "protector",
  "protegee",
  "proton",
  "prototype",
  "protozoan",
  "protract",
  "protrude",
  "proud",
  "provable",
  "proved",
  "proven",
  "provided",
  "provider",
  "providing",
  "province",
  "proving",
  "provoke",
  "provoking",
  "provolone",
  "prowess",
  "prowler",
  "prowling",
  "proximity",
  "proxy",
  "prozac",
  "prude",
  "prudishly",
  "prune",
  "pruning",
  "pry",
  "psychic",
  "public",
  "publisher",
  "pucker",
  "pueblo",
  "pug",
  "pull",
  "pulmonary",
  "pulp",
  "pulsate",
  "pulse",
  "pulverize",
  "puma",
  "pumice",
  "pummel",
  "punch",
  "punctual",
  "punctuate",
  "punctured",
  "pungent",
  "punisher",
  "punk",
  "pupil",
  "puppet",
  "puppy",
  "purchase",
  "pureblood",
  "purebred",
  "purely",
  "pureness",
  "purgatory",
  "purge",
  "purging",
  "purifier",
  "purify",
  "purist",
  "puritan",
  "purity",
  "purple",
  "purplish",
  "purposely",
  "purr",
  "purse",
  "pursuable",
  "pursuant",
  "pursuit",
  "purveyor",
  "pushcart",
  "pushchair",
  "pusher",
  "pushiness",
  "pushing",
  "pushover",
  "pushpin",
  "pushup",
  "pushy",
  "putdown",
  "putt",
  "puzzle",
  "puzzling",
  "pyramid",
  "pyromania",
  "python",
  "quack",
  "quadrant",
  "quail",
  "quaintly",
  "quake",
  "quaking",
  "qualified",
  "qualifier",
  "qualify",
  "quality",
  "qualm",
  "quantum",
  "quarrel",
  "quarry",
  "quartered",
  "quarterly",
  "quarters",
  "quartet",
  "quench",
  "query",
  "quicken",
  "quickly",
  "quickness",
  "quicksand",
  "quickstep",
  "quiet",
  "quill",
  "quilt",
  "quintet",
  "quintuple",
  "quirk",
  "quit",
  "quiver",
  "quizzical",
  "quotable",
  "quotation",
  "quote",
  "rabid",
  "race",
  "racing",
  "racism",
  "rack",
  "racoon",
  "radar",
  "radial",
  "radiance",
  "radiantly",
  "radiated",
  "radiation",
  "radiator",
  "radio",
  "radish",
  "raffle",
  "raft",
  "rage",
  "ragged",
  "raging",
  "ragweed",
  "raider",
  "railcar",
  "railing",
  "railroad",
  "railway",
  "raisin",
  "rake",
  "raking",
  "rally",
  "ramble",
  "rambling",
  "ramp",
  "ramrod",
  "ranch",
  "rancidity",
  "random",
  "ranged",
  "ranger",
  "ranging",
  "ranked",
  "ranking",
  "ransack",
  "ranting",
  "rants",
  "rare",
  "rarity",
  "rascal",
  "rash",
  "rasping",
  "ravage",
  "raven",
  "ravine",
  "raving",
  "ravioli",
  "ravishing",
  "reabsorb",
  "reach",
  "reacquire",
  "reaction",
  "reactive",
  "reactor",
  "reaffirm",
  "ream",
  "reanalyze",
  "reappear",
  "reapply",
  "reappoint",
  "reapprove",
  "rearrange",
  "rearview",
  "reason",
  "reassign",
  "reassure",
  "reattach",
  "reawake",
  "rebalance",
  "rebate",
  "rebel",
  "rebirth",
  "reboot",
  "reborn",
  "rebound",
  "rebuff",
  "rebuild",
  "rebuilt",
  "reburial",
  "rebuttal",
  "recall",
  "recant",
  "recapture",
  "recast",
  "recede",
  "recent",
  "recess",
  "recharger",
  "recipient",
  "recital",
  "recite",
  "reckless",
  "reclaim",
  "recliner",
  "reclining",
  "recluse",
  "reclusive",
  "recognize",
  "recoil",
  "recollect",
  "recolor",
  "reconcile",
  "reconfirm",
  "reconvene",
  "recopy",
  "record",
  "recount",
  "recoup",
  "recovery",
  "recreate",
  "rectal",
  "rectangle",
  "rectified",
  "rectify",
  "recycled",
  "recycler",
  "recycling",
  "reemerge",
  "reenact",
  "reenter",
  "reentry",
  "reexamine",
  "referable",
  "referee",
  "reference",
  "refill",
  "refinance",
  "refined",
  "refinery",
  "refining",
  "refinish",
  "reflected",
  "reflector",
  "reflex",
  "reflux",
  "refocus",
  "refold",
  "reforest",
  "reformat",
  "reformed",
  "reformer",
  "reformist",
  "refract",
  "refrain",
  "refreeze",
  "refresh",
  "refried",
  "refueling",
  "refund",
  "refurbish",
  "refurnish",
  "refusal",
  "refuse",
  "refusing",
  "refutable",
  "refute",
  "regain",
  "regalia",
  "regally",
  "reggae",
  "regime",
  "region",
  "register",
  "registrar",
  "registry",
  "regress",
  "regretful",
  "regroup",
  "regular",
  "regulate",
  "regulator",
  "rehab",
  "reheat",
  "rehire",
  "rehydrate",
  "reimburse",
  "reissue",
  "reiterate",
  "rejoice",
  "rejoicing",
  "rejoin",
  "rekindle",
  "relapse",
  "relapsing",
  "relatable",
  "related",
  "relation",
  "relative",
  "relax",
  "relay",
  "relearn",
  "release",
  "relenting",
  "reliable",
  "reliably",
  "reliance",
  "reliant",
  "relic",
  "relieve",
  "relieving",
  "relight",
  "relish",
  "relive",
  "reload",
  "relocate",
  "relock",
  "reluctant",
  "rely",
  "remake",
  "remark",
  "remarry",
  "rematch",
  "remedial",
  "remedy",
  "remember",
  "reminder",
  "remindful",
  "remission",
  "remix",
  "remnant",
  "remodeler",
  "remold",
  "remorse",
  "remote",
  "removable",
  "removal",
  "removed",
  "remover",
  "removing",
  "rename",
  "renderer",
  "rendering",
  "rendition",
  "renegade",
  "renewable",
  "renewably",
  "renewal",
  "renewed",
  "renounce",
  "renovate",
  "renovator",
  "rentable",
  "rental",
  "rented",
  "renter",
  "reoccupy",
  "reoccur",
  "reopen",
  "reorder",
  "repackage",
  "repacking",
  "repaint",
  "repair",
  "repave",
  "repaying",
  "repayment",
  "repeal",
  "repeated",
  "repeater",
  "repent",
  "rephrase",
  "replace",
  "replay",
  "replica",
  "reply",
  "reporter",
  "repose",
  "repossess",
  "repost",
  "repressed",
  "reprimand",
  "reprint",
  "reprise",
  "reproach",
  "reprocess",
  "reproduce",
  "reprogram",
  "reps",
  "reptile",
  "reptilian",
  "repugnant",
  "repulsion",
  "repulsive",
  "repurpose",
  "reputable",
  "reputably",
  "request",
  "require",
  "requisite",
  "reroute",
  "rerun",
  "resale",
  "resample",
  "rescuer",
  "reseal",
  "research",
  "reselect",
  "reseller",
  "resemble",
  "resend",
  "resent",
  "reset",
  "reshape",
  "reshoot",
  "reshuffle",
  "residence",
  "residency",
  "resident",
  "residual",
  "residue",
  "resigned",
  "resilient",
  "resistant",
  "resisting",
  "resize",
  "resolute",
  "resolved",
  "resonant",
  "resonate",
  "resort",
  "resource",
  "respect",
  "resubmit",
  "result",
  "resume",
  "resupply",
  "resurface",
  "resurrect",
  "retail",
  "retainer",
  "retaining",
  "retake",
  "retaliate",
  "retention",
  "rethink",
  "retinal",
  "retired",
  "retiree",
  "retiring",
  "retold",
  "retool",
  "retorted",
  "retouch",
  "retrace",
  "retract",
  "retrain",
  "retread",
  "retreat",
  "retrial",
  "retrieval",
  "retriever",
  "retry",
  "return",
  "retying",
  "retype",
  "reunion",
  "reunite",
  "reusable",
  "reuse",
  "reveal",
  "reveler",
  "revenge",
  "revenue",
  "reverb",
  "revered",
  "reverence",
  "reverend",
  "reversal",
  "reverse",
  "reversing",
  "reversion",
  "revert",
  "revisable",
  "revise",
  "revision",
  "revisit",
  "revivable",
  "revival",
  "reviver",
  "reviving",
  "revocable",
  "revoke",
  "revolt",
  "revolver",
  "revolving",
  "reward",
  "rewash",
  "rewind",
  "rewire",
  "reword",
  "rework",
  "rewrap",
  "rewrite",
  "rhyme",
  "ribbon",
  "ribcage",
  "rice",
  "riches",
  "richly",
  "richness",
  "rickety",
  "ricotta",
  "riddance",
  "ridden",
  "ride",
  "riding",
  "rifling",
  "rift",
  "rigging",
  "rigid",
  "rigor",
  "rimless",
  "rimmed",
  "rind",
  "rink",
  "rinse",
  "rinsing",
  "riot",
  "ripcord",
  "ripeness",
  "ripening",
  "ripping",
  "ripple",
  "rippling",
  "riptide",
  "rise",
  "rising",
  "risk",
  "risotto",
  "ritalin",
  "ritzy",
  "rival",
  "riverbank",
  "riverbed",
  "riverboat",
  "riverside",
  "riveter",
  "riveting",
  "roamer",
  "roaming",
  "roast",
  "robbing",
  "robe",
  "robin",
  "robotics",
  "robust",
  "rockband",
  "rocker",
  "rocket",
  "rockfish",
  "rockiness",
  "rocking",
  "rocklike",
  "rockslide",
  "rockstar",
  "rocky",
  "rogue",
  "roman",
  "romp",
  "rope",
  "roping",
  "roster",
  "rosy",
  "rotten",
  "rotting",
  "rotunda",
  "roulette",
  "rounding",
  "roundish",
  "roundness",
  "roundup",
  "roundworm",
  "routine",
  "routing",
  "rover",
  "roving",
  "royal",
  "rubbed",
  "rubber",
  "rubbing",
  "rubble",
  "rubdown",
  "ruby",
  "ruckus",
  "rudder",
  "rug",
  "ruined",
  "rule",
  "rumble",
  "rumbling",
  "rummage",
  "rumor",
  "runaround",
  "rundown",
  "runner",
  "running",
  "runny",
  "runt",
  "runway",
  "rupture",
  "rural",
  "ruse",
  "rush",
  "rust",
  "rut",
  "sabbath",
  "sabotage",
  "sacrament",
  "sacred",
  "sacrifice",
  "sadden",
  "saddlebag",
  "saddled",
  "saddling",
  "sadly",
  "sadness",
  "safari",
  "safeguard",
  "safehouse",
  "safely",
  "safeness",
  "saffron",
  "saga",
  "sage",
  "sagging",
  "saggy",
  "said",
  "saint",
  "sake",
  "salad",
  "salami",
  "salaried",
  "salary",
  "saline",
  "salon",
  "saloon",
  "salsa",
  "salt",
  "salutary",
  "salute",
  "salvage",
  "salvaging",
  "salvation",
  "same",
  "sample",
  "sampling",
  "sanction",
  "sanctity",
  "sanctuary",
  "sandal",
  "sandbag",
  "sandbank",
  "sandbar",
  "sandblast",
  "sandbox",
  "sanded",
  "sandfish",
  "sanding",
  "sandlot",
  "sandpaper",
  "sandpit",
  "sandstone",
  "sandstorm",
  "sandworm",
  "sandy",
  "sanitary",
  "sanitizer",
  "sank",
  "santa",
  "sapling",
  "sappiness",
  "sappy",
  "sarcasm",
  "sarcastic",
  "sardine",
  "sash",
  "sasquatch",
  "sassy",
  "satchel",
  "satiable",
  "satin",
  "satirical",
  "satisfied",
  "satisfy",
  "saturate",
  "saturday",
  "sauciness",
  "saucy",
  "sauna",
  "savage",
  "savanna",
  "saved",
  "savings",
  "savior",
  "savor",
  "saxophone",
  "say",
  "scabbed",
  "scabby",
  "scalded",
  "scalding",
  "scale",
  "scaling",
  "scallion",
  "scallop",
  "scalping",
  "scam",
  "scandal",
  "scanner",
  "scanning",
  "scant",
  "scapegoat",
  "scarce",
  "scarcity",
  "scarecrow",
  "scared",
  "scarf",
  "scarily",
  "scariness",
  "scarring",
  "scary",
  "scavenger",
  "scenic",
  "schedule",
  "schematic",
  "scheme",
  "scheming",
  "schilling",
  "schnapps",
  "scholar",
  "science",
  "scientist",
  "scion",
  "scoff",
  "scolding",
  "scone",
  "scoop",
  "scooter",
  "scope",
  "scorch",
  "scorebook",
  "scorecard",
  "scored",
  "scoreless",
  "scorer",
  "scoring",
  "scorn",
  "scorpion",
  "scotch",
  "scoundrel",
  "scoured",
  "scouring",
  "scouting",
  "scouts",
  "scowling",
  "scrabble",
  "scraggly",
  "scrambled",
  "scrambler",
  "scrap",
  "scratch",
  "scrawny",
  "screen",
  "scribble",
  "scribe",
  "scribing",
  "scrimmage",
  "script",
  "scroll",
  "scrooge",
  "scrounger",
  "scrubbed",
  "scrubber",
  "scruffy",
  "scrunch",
  "scrutiny",
  "scuba",
  "scuff",
  "sculptor",
  "sculpture",
  "scurvy",
  "scuttle",
  "secluded",
  "secluding",
  "seclusion",
  "second",
  "secrecy",
  "secret",
  "sectional",
  "sector",
  "secular",
  "securely",
  "security",
  "sedan",
  "sedate",
  "sedation",
  "sedative",
  "sediment",
  "seduce",
  "seducing",
  "segment",
  "seismic",
  "seizing",
  "seldom",
  "selected",
  "selection",
  "selective",
  "selector",
  "self",
  "seltzer",
  "semantic",
  "semester",
  "semicolon",
  "semifinal",
  "seminar",
  "semisoft",
  "semisweet",
  "senate",
  "senator",
  "send",
  "senior",
  "senorita",
  "sensation",
  "sensitive",
  "sensitize",
  "sensually",
  "sensuous",
  "sepia",
  "september",
  "septic",
  "septum",
  "sequel",
  "sequence",
  "sequester",
  "series",
  "sermon",
  "serotonin",
  "serpent",
  "serrated",
  "serve",
  "service",
  "serving",
  "sesame",
  "sessions",
  "setback",
  "setting",
  "settle",
  "settling",
  "setup",
  "sevenfold",
  "seventeen",
  "seventh",
  "seventy",
  "severity",
  "shabby",
  "shack",
  "shaded",
  "shadily",
  "shadiness",
  "shading",
  "shadow",
  "shady",
  "shaft",
  "shakable",
  "shakily",
  "shakiness",
  "shaking",
  "shaky",
  "shale",
  "shallot",
  "shallow",
  "shame",
  "shampoo",
  "shamrock",
  "shank",
  "shanty",
  "shape",
  "shaping",
  "share",
  "sharpener",
  "sharper",
  "sharpie",
  "sharply",
  "sharpness",
  "shawl",
  "sheath",
  "shed",
  "sheep",
  "sheet",
  "shelf",
  "shell",
  "shelter",
  "shelve",
  "shelving",
  "sherry",
  "shield",
  "shifter",
  "shifting",
  "shiftless",
  "shifty",
  "shimmer",
  "shimmy",
  "shindig",
  "shine",
  "shingle",
  "shininess",
  "shining",
  "shiny",
  "ship",
  "shirt",
  "shivering",
  "shock",
  "shone",
  "shoplift",
  "shopper",
  "shopping",
  "shoptalk",
  "shore",
  "shortage",
  "shortcake",
  "shortcut",
  "shorten",
  "shorter",
  "shorthand",
  "shortlist",
  "shortly",
  "shortness",
  "shorts",
  "shortwave",
  "shorty",
  "shout",
  "shove",
  "showbiz",
  "showcase",
  "showdown",
  "shower",
  "showgirl",
  "showing",
  "showman",
  "shown",
  "showoff",
  "showpiece",
  "showplace",
  "showroom",
  "showy",
  "shrank",
  "shrapnel",
  "shredder",
  "shredding",
  "shrewdly",
  "shriek",
  "shrill",
  "shrimp",
  "shrine",
  "shrink",
  "shrivel",
  "shrouded",
  "shrubbery",
  "shrubs",
  "shrug",
  "shrunk",
  "shucking",
  "shudder",
  "shuffle",
  "shuffling",
  "shun",
  "shush",
  "shut",
  "shy",
  "siamese",
  "siberian",
  "sibling",
  "siding",
  "sierra",
  "siesta",
  "sift",
  "sighing",
  "silenced",
  "silencer",
  "silent",
  "silica",
  "silicon",
  "silk",
  "silliness",
  "silly",
  "silo",
  "silt",
  "silver",
  "similarly",
  "simile",
  "simmering",
  "simple",
  "simplify",
  "simply",
  "sincere",
  "sincerity",
  "singer",
  "singing",
  "single",
  "singular",
  "sinister",
  "sinless",
  "sinner",
  "sinuous",
  "sip",
  "siren",
  "sister",
  "sitcom",
  "sitter",
  "sitting",
  "situated",
  "situation",
  "sixfold",
  "sixteen",
  "sixth",
  "sixties",
  "sixtieth",
  "sixtyfold",
  "sizable",
  "sizably",
  "size",
  "sizing",
  "sizzle",
  "sizzling",
  "skater",
  "skating",
  "skedaddle",
  "skeletal",
  "skeleton",
  "skeptic",
  "sketch",
  "skewed",
  "skewer",
  "skid",
  "skied",
  "skier",
  "skies",
  "skiing",
  "skilled",
  "skillet",
  "skillful",
  "skimmed",
  "skimmer",
  "skimming",
  "skimpily",
  "skincare",
  "skinhead",
  "skinless",
  "skinning",
  "skinny",
  "skintight",
  "skipper",
  "skipping",
  "skirmish",
  "skirt",
  "skittle",
  "skydiver",
  "skylight",
  "skyline",
  "skype",
  "skyrocket",
  "skyward",
  "slab",
  "slacked",
  "slacker",
  "slacking",
  "slackness",
  "slacks",
  "slain",
  "slam",
  "slander",
  "slang",
  "slapping",
  "slapstick",
  "slashed",
  "slashing",
  "slate",
  "slather",
  "slaw",
  "sled",
  "sleek",
  "sleep",
  "sleet",
  "sleeve",
  "slept",
  "sliceable",
  "sliced",
  "slicer",
  "slicing",
  "slick",
  "slider",
  "slideshow",
  "sliding",
  "slighted",
  "slighting",
  "slightly",
  "slimness",
  "slimy",
  "slinging",
  "slingshot",
  "slinky",
  "slip",
  "slit",
  "sliver",
  "slobbery",
  "slogan",
  "sloped",
  "sloping",
  "sloppily",
  "sloppy",
  "slot",
  "slouching",
  "slouchy",
  "sludge",
  "slug",
  "slum",
  "slurp",
  "slush",
  "sly",
  "small",
  "smartly",
  "smartness",
  "smasher",
  "smashing",
  "smashup",
  "smell",
  "smelting",
  "smile",
  "smilingly",
  "smirk",
  "smite",
  "smith",
  "smitten",
  "smock",
  "smog",
  "smoked",
  "smokeless",
  "smokiness",
  "smoking",
  "smoky",
  "smolder",
  "smooth",
  "smother",
  "smudge",
  "smudgy",
  "smuggler",
  "smuggling",
  "smugly",
  "smugness",
  "snack",
  "snagged",
  "snaking",
  "snap",
  "snare",
  "snarl",
  "snazzy",
  "sneak",
  "sneer",
  "sneeze",
  "sneezing",
  "snide",
  "sniff",
  "snippet",
  "snipping",
  "snitch",
  "snooper",
  "snooze",
  "snore",
  "snoring",
  "snorkel",
  "snort",
  "snout",
  "snowbird",
  "snowboard",
  "snowbound",
  "snowcap",
  "snowdrift",
  "snowdrop",
  "snowfall",
  "snowfield",
  "snowflake",
  "snowiness",
  "snowless",
  "snowman",
  "snowplow",
  "snowshoe",
  "snowstorm",
  "snowsuit",
  "snowy",
  "snub",
  "snuff",
  "snuggle",
  "snugly",
  "snugness",
  "speak",
  "spearfish",
  "spearhead",
  "spearman",
  "spearmint",
  "species",
  "specimen",
  "specked",
  "speckled",
  "specks",
  "spectacle",
  "spectator",
  "spectrum",
  "speculate",
  "speech",
  "speed",
  "spellbind",
  "speller",
  "spelling",
  "spendable",
  "spender",
  "spending",
  "spent",
  "spew",
  "sphere",
  "spherical",
  "sphinx",
  "spider",
  "spied",
  "spiffy",
  "spill",
  "spilt",
  "spinach",
  "spinal",
  "spindle",
  "spinner",
  "spinning",
  "spinout",
  "spinster",
  "spiny",
  "spiral",
  "spirited",
  "spiritism",
  "spirits",
  "spiritual",
  "splashed",
  "splashing",
  "splashy",
  "splatter",
  "spleen",
  "splendid",
  "splendor",
  "splice",
  "splicing",
  "splinter",
  "splotchy",
  "splurge",
  "spoilage",
  "spoiled",
  "spoiler",
  "spoiling",
  "spoils",
  "spoken",
  "spokesman",
  "sponge",
  "spongy",
  "sponsor",
  "spoof",
  "spookily",
  "spooky",
  "spool",
  "spoon",
  "spore",
  "sporting",
  "sports",
  "sporty",
  "spotless",
  "spotlight",
  "spotted",
  "spotter",
  "spotting",
  "spotty",
  "spousal",
  "spouse",
  "spout",
  "sprain",
  "sprang",
  "sprawl",
  "spray",
  "spree",
  "sprig",
  "spring",
  "sprinkled",
  "sprinkler",
  "sprint",
  "sprite",
  "sprout",
  "spruce",
  "sprung",
  "spry",
  "spud",
  "spur",
  "sputter",
  "spyglass",
  "squabble",
  "squad",
  "squall",
  "squander",
  "squash",
  "squatted",
  "squatter",
  "squatting",
  "squeak",
  "squealer",
  "squealing",
  "squeamish",
  "squeegee",
  "squeeze",
  "squeezing",
  "squid",
  "squiggle",
  "squiggly",
  "squint",
  "squire",
  "squirt",
  "squishier",
  "squishy",
  "stability",
  "stabilize",
  "stable",
  "stack",
  "stadium",
  "staff",
  "stage",
  "staging",
  "stagnant",
  "stagnate",
  "stainable",
  "stained",
  "staining",
  "stainless",
  "stalemate",
  "staleness",
  "stalling",
  "stallion",
  "stamina",
  "stammer",
  "stamp",
  "stand",
  "stank",
  "staple",
  "stapling",
  "starboard",
  "starch",
  "stardom",
  "stardust",
  "starfish",
  "stargazer",
  "staring",
  "stark",
  "starless",
  "starlet",
  "starlight",
  "starlit",
  "starring",
  "starry",
  "starship",
  "starter",
  "starting",
  "startle",
  "startling",
  "startup",
  "starved",
  "starving",
  "stash",
  "state",
  "static",
  "statistic",
  "statue",
  "stature",
  "status",
  "statute",
  "statutory",
  "staunch",
  "stays",
  "steadfast",
  "steadier",
  "steadily",
  "steadying",
  "steam",
  "steed",
  "steep",
  "steerable",
  "steering",
  "steersman",
  "stegosaur",
  "stellar",
  "stem",
  "stench",
  "stencil",
  "step",
  "stereo",
  "sterile",
  "sterility",
  "sterilize",
  "sterling",
  "sternness",
  "sternum",
  "stew",
  "stick",
  "stiffen",
  "stiffly",
  "stiffness",
  "stifle",
  "stifling",
  "stillness",
  "stilt",
  "stimulant",
  "stimulate",
  "stimuli",
  "stimulus",
  "stinger",
  "stingily",
  "stinging",
  "stingray",
  "stingy",
  "stinking",
  "stinky",
  "stipend",
  "stipulate",
  "stir",
  "stitch",
  "stock",
  "stoic",
  "stoke",
  "stole",
  "stomp",
  "stonewall",
  "stoneware",
  "stonework",
  "stoning",
  "stony",
  "stood",
  "stooge",
  "stool",
  "stoop",
  "stoplight",
  "stoppable",
  "stoppage",
  "stopped",
  "stopper",
  "stopping",
  "stopwatch",
  "storable",
  "storage",
  "storeroom",
  "storewide",
  "storm",
  "stout",
  "stove",
  "stowaway",
  "stowing",
  "straddle",
  "straggler",
  "strained",
  "strainer",
  "straining",
  "strangely",
  "stranger",
  "strangle",
  "strategic",
  "strategy",
  "stratus",
  "straw",
  "stray",
  "streak",
  "stream",
  "street",
  "strength",
  "strenuous",
  "strep",
  "stress",
  "stretch",
  "strewn",
  "stricken",
  "strict",
  "stride",
  "strife",
  "strike",
  "striking",
  "strive",
  "striving",
  "strobe",
  "strode",
  "stroller",
  "strongbox",
  "strongly",
  "strongman",
  "struck",
  "structure",
  "strudel",
  "struggle",
  "strum",
  "strung",
  "strut",
  "stubbed",
  "stubble",
  "stubbly",
  "stubborn",
  "stucco",
  "stuck",
  "student",
  "studied",
  "studio",
  "study",
  "stuffed",
  "stuffing",
  "stuffy",
  "stumble",
  "stumbling",
  "stump",
  "stung",
  "stunned",
  "stunner",
  "stunning",
  "stunt",
  "stupor",
  "sturdily",
  "sturdy",
  "styling",
  "stylishly",
  "stylist",
  "stylized",
  "stylus",
  "suave",
  "subarctic",
  "subatomic",
  "subdivide",
  "subdued",
  "subduing",
  "subfloor",
  "subgroup",
  "subheader",
  "subject",
  "sublease",
  "sublet",
  "sublevel",
  "sublime",
  "submarine",
  "submerge",
  "submersed",
  "submitter",
  "subpanel",
  "subpar",
  "subplot",
  "subprime",
  "subscribe",
  "subscript",
  "subsector",
  "subside",
  "subsiding",
  "subsidize",
  "subsidy",
  "subsoil",
  "subsonic",
  "substance",
  "subsystem",
  "subtext",
  "subtitle",
  "subtly",
  "subtotal",
  "subtract",
  "subtype",
  "suburb",
  "subway",
  "subwoofer",
  "subzero",
  "succulent",
  "such",
  "suction",
  "sudden",
  "sudoku",
  "suds",
  "sufferer",
  "suffering",
  "suffice",
  "suffix",
  "suffocate",
  "suffrage",
  "sugar",
  "suggest",
  "suing",
  "suitable",
  "suitably",
  "suitcase",
  "suitor",
  "sulfate",
  "sulfide",
  "sulfite",
  "sulfur",
  "sulk",
  "sullen",
  "sulphate",
  "sulphuric",
  "sultry",
  "superbowl",
  "superglue",
  "superhero",
  "superior",
  "superjet",
  "superman",
  "supermom",
  "supernova",
  "supervise",
  "supper",
  "supplier",
  "supply",
  "support",
  "supremacy",
  "supreme",
  "surcharge",
  "surely",
  "sureness",
  "surface",
  "surfacing",
  "surfboard",
  "surfer",
  "surgery",
  "surgical",
  "surging",
  "surname",
  "surpass",
  "surplus",
  "surprise",
  "surreal",
  "surrender",
  "surrogate",
  "surround",
  "survey",
  "survival",
  "survive",
  "surviving",
  "survivor",
  "sushi",
  "suspect",
  "suspend",
  "suspense",
  "sustained",
  "sustainer",
  "swab",
  "swaddling",
  "swagger",
  "swampland",
  "swan",
  "swapping",
  "swarm",
  "sway",
  "swear",
  "sweat",
  "sweep",
  "swell",
  "swept",
  "swerve",
  "swifter",
  "swiftly",
  "swiftness",
  "swimmable",
  "swimmer",
  "swimming",
  "swimsuit",
  "swimwear",
  "swinger",
  "swinging",
  "swipe",
  "swirl",
  "switch",
  "swivel",
  "swizzle",
  "swooned",
  "swoop",
  "swoosh",
  "swore",
  "sworn",
  "swung",
  "sycamore",
  "sympathy",
  "symphonic",
  "symphony",
  "symptom",
  "synapse",
  "syndrome",
  "synergy",
  "synopses",
  "synopsis",
  "synthesis",
  "synthetic",
  "syrup",
  "system",
  "t-shirt",
  "tabasco",
  "tabby",
  "tableful",
  "tables",
  "tablet",
  "tableware",
  "tabloid",
  "tackiness",
  "tacking",
  "tackle",
  "tackling",
  "tacky",
  "taco",
  "tactful",
  "tactical",
  "tactics",
  "tactile",
  "tactless",
  "tadpole",
  "taekwondo",
  "tag",
  "tainted",
  "take",
  "taking",
  "talcum",
  "talisman",
  "tall",
  "talon",
  "tamale",
  "tameness",
  "tamer",
  "tamper",
  "tank",
  "tanned",
  "tannery",
  "tanning",
  "tantrum",
  "tapeless",
  "tapered",
  "tapering",
  "tapestry",
  "tapioca",
  "tapping",
  "taps",
  "tarantula",
  "target",
  "tarmac",
  "tarnish",
  "tarot",
  "tartar",
  "tartly",
  "tartness",
  "task",
  "tassel",
  "taste",
  "tastiness",
  "tasting",
  "tasty",
  "tattered",
  "tattle",
  "tattling",
  "tattoo",
  "taunt",
  "tavern",
  "thank",
  "that",
  "thaw",
  "theater",
  "theatrics",
  "thee",
  "theft",
  "theme",
  "theology",
  "theorize",
  "thermal",
  "thermos",
  "thesaurus",
  "these",
  "thesis",
  "thespian",
  "thicken",
  "thicket",
  "thickness",
  "thieving",
  "thievish",
  "thigh",
  "thimble",
  "thing",
  "think",
  "thinly",
  "thinner",
  "thinness",
  "thinning",
  "thirstily",
  "thirsting",
  "thirsty",
  "thirteen",
  "thirty",
  "thong",
  "thorn",
  "those",
  "thousand",
  "thrash",
  "thread",
  "threaten",
  "threefold",
  "thrift",
  "thrill",
  "thrive",
  "thriving",
  "throat",
  "throbbing",
  "throng",
  "throttle",
  "throwaway",
  "throwback",
  "thrower",
  "throwing",
  "thud",
  "thumb",
  "thumping",
  "thursday",
  "thus",
  "thwarting",
  "thyself",
  "tiara",
  "tibia",
  "tidal",
  "tidbit",
  "tidiness",
  "tidings",
  "tidy",
  "tiger",
  "tighten",
  "tightly",
  "tightness",
  "tightrope",
  "tightwad",
  "tigress",
  "tile",
  "tiling",
  "till",
  "tilt",
  "timid",
  "timing",
  "timothy",
  "tinderbox",
  "tinfoil",
  "tingle",
  "tingling",
  "tingly",
  "tinker",
  "tinkling",
  "tinsel",
  "tinsmith",
  "tint",
  "tinwork",
  "tiny",
  "tipoff",
  "tipped",
  "tipper",
  "tipping",
  "tiptoeing",
  "tiptop",
  "tiring",
  "tissue",
  "trace",
  "tracing",
  "track",
  "traction",
  "tractor",
  "trade",
  "trading",
  "tradition",
  "traffic",
  "tragedy",
  "trailing",
  "trailside",
  "train",
  "traitor",
  "trance",
  "tranquil",
  "transfer",
  "transform",
  "translate",
  "transpire",
  "transport",
  "transpose",
  "trapdoor",
  "trapeze",
  "trapezoid",
  "trapped",
  "trapper",
  "trapping",
  "traps",
  "trash",
  "travel",
  "traverse",
  "travesty",
  "tray",
  "treachery",
  "treading",
  "treadmill",
  "treason",
  "treat",
  "treble",
  "tree",
  "trekker",
  "tremble",
  "trembling",
  "tremor",
  "trench",
  "trend",
  "trespass",
  "triage",
  "trial",
  "triangle",
  "tribesman",
  "tribunal",
  "tribune",
  "tributary",
  "tribute",
  "triceps",
  "trickery",
  "trickily",
  "tricking",
  "trickle",
  "trickster",
  "tricky",
  "tricolor",
  "tricycle",
  "trident",
  "tried",
  "trifle",
  "trifocals",
  "trillion",
  "trilogy",
  "trimester",
  "trimmer",
  "trimming",
  "trimness",
  "trinity",
  "trio",
  "tripod",
  "tripping",
  "triumph",
  "trivial",
  "trodden",
  "trolling",
  "trombone",
  "trophy",
  "tropical",
  "tropics",
  "trouble",
  "troubling",
  "trough",
  "trousers",
  "trout",
  "trowel",
  "truce",
  "truck",
  "truffle",
  "trump",
  "trunks",
  "trustable",
  "trustee",
  "trustful",
  "trusting",
  "trustless",
  "truth",
  "try",
  "tubby",
  "tubeless",
  "tubular",
  "tucking",
  "tuesday",
  "tug",
  "tuition",
  "tulip",
  "tumble",
  "tumbling",
  "tummy",
  "turban",
  "turbine",
  "turbofan",
  "turbojet",
  "turbulent",
  "turf",
  "turkey",
  "turmoil",
  "turret",
  "turtle",
  "tusk",
  "tutor",
  "tutu",
  "tux",
  "tweak",
  "tweed",
  "tweet",
  "tweezers",
  "twelve",
  "twentieth",
  "twenty",
  "twerp",
  "twice",
  "twiddle",
  "twiddling",
  "twig",
  "twilight",
  "twine",
  "twins",
  "twirl",
  "twistable",
  "twisted",
  "twister",
  "twisting",
  "twisty",
  "twitch",
  "twitter",
  "tycoon",
  "tying",
  "tyke",
  "udder",
  "ultimate",
  "ultimatum",
  "ultra",
  "umbilical",
  "umbrella",
  "umpire",
  "unabashed",
  "unable",
  "unadorned",
  "unadvised",
  "unafraid",
  "unaired",
  "unaligned",
  "unaltered",
  "unarmored",
  "unashamed",
  "unaudited",
  "unawake",
  "unaware",
  "unbaked",
  "unbalance",
  "unbeaten",
  "unbend",
  "unbent",
  "unbiased",
  "unbitten",
  "unblended",
  "unblessed",
  "unblock",
  "unbolted",
  "unbounded",
  "unboxed",
  "unbraided",
  "unbridle",
  "unbroken",
  "unbuckled",
  "unbundle",
  "unburned",
  "unbutton",
  "uncanny",
  "uncapped",
  "uncaring",
  "uncertain",
  "unchain",
  "unchanged",
  "uncharted",
  "uncheck",
  "uncivil",
  "unclad",
  "unclaimed",
  "unclamped",
  "unclasp",
  "uncle",
  "unclip",
  "uncloak",
  "unclog",
  "unclothed",
  "uncoated",
  "uncoiled",
  "uncolored",
  "uncombed",
  "uncommon",
  "uncooked",
  "uncork",
  "uncorrupt",
  "uncounted",
  "uncouple",
  "uncouth",
  "uncover",
  "uncross",
  "uncrown",
  "uncrushed",
  "uncured",
  "uncurious",
  "uncurled",
  "uncut",
  "undamaged",
  "undated",
  "undaunted",
  "undead",
  "undecided",
  "undefined",
  "underage",
  "underarm",
  "undercoat",
  "undercook",
  "undercut",
  "underdog",
  "underdone",
  "underfed",
  "underfeed",
  "underfoot",
  "undergo",
  "undergrad",
  "underhand",
  "underline",
  "underling",
  "undermine",
  "undermost",
  "underpaid",
  "underpass",
  "underpay",
  "underrate",
  "undertake",
  "undertone",
  "undertook",
  "undertow",
  "underuse",
  "underwear",
  "underwent",
  "underwire",
  "undesired",
  "undiluted",
  "undivided",
  "undocked",
  "undoing",
  "undone",
  "undrafted",
  "undress",
  "undrilled",
  "undusted",
  "undying",
  "unearned",
  "unearth",
  "unease",
  "uneasily",
  "uneasy",
  "uneatable",
  "uneaten",
  "unedited",
  "unelected",
  "unending",
  "unengaged",
  "unenvied",
  "unequal",
  "unethical",
  "uneven",
  "unexpired",
  "unexposed",
  "unfailing",
  "unfair",
  "unfasten",
  "unfazed",
  "unfeeling",
  "unfiled",
  "unfilled",
  "unfitted",
  "unfitting",
  "unfixable",
  "unfixed",
  "unflawed",
  "unfocused",
  "unfold",
  "unfounded",
  "unframed",
  "unfreeze",
  "unfrosted",
  "unfrozen",
  "unfunded",
  "unglazed",
  "ungloved",
  "unglue",
  "ungodly",
  "ungraded",
  "ungreased",
  "unguarded",
  "unguided",
  "unhappily",
  "unhappy",
  "unharmed",
  "unhealthy",
  "unheard",
  "unhearing",
  "unheated",
  "unhelpful",
  "unhidden",
  "unhinge",
  "unhitched",
  "unholy",
  "unhook",
  "unicorn",
  "unicycle",
  "unified",
  "unifier",
  "uniformed",
  "uniformly",
  "unify",
  "unimpeded",
  "uninjured",
  "uninstall",
  "uninsured",
  "uninvited",
  "union",
  "uniquely",
  "unisexual",
  "unison",
  "unissued",
  "unit",
  "universal",
  "universe",
  "unjustly",
  "unkempt",
  "unkind",
  "unknotted",
  "unknowing",
  "unknown",
  "unlaced",
  "unlatch",
  "unlawful",
  "unleaded",
  "unlearned",
  "unleash",
  "unless",
  "unleveled",
  "unlighted",
  "unlikable",
  "unlimited",
  "unlined",
  "unlinked",
  "unlisted",
  "unlit",
  "unlivable",
  "unloaded",
  "unloader",
  "unlocked",
  "unlocking",
  "unlovable",
  "unloved",
  "unlovely",
  "unloving",
  "unluckily",
  "unlucky",
  "unmade",
  "unmanaged",
  "unmanned",
  "unmapped",
  "unmarked",
  "unmasked",
  "unmasking",
  "unmatched",
  "unmindful",
  "unmixable",
  "unmixed",
  "unmolded",
  "unmoral",
  "unmovable",
  "unmoved",
  "unmoving",
  "unnamable",
  "unnamed",
  "unnatural",
  "unneeded",
  "unnerve",
  "unnerving",
  "unnoticed",
  "unopened",
  "unopposed",
  "unpack",
  "unpadded",
  "unpaid",
  "unpainted",
  "unpaired",
  "unpaved",
  "unpeeled",
  "unpicked",
  "unpiloted",
  "unpinned",
  "unplanned",
  "unplanted",
  "unpleased",
  "unpledged",
  "unplowed",
  "unplug",
  "unpopular",
  "unproven",
  "unquote",
  "unranked",
  "unrated",
  "unraveled",
  "unreached",
  "unread",
  "unreal",
  "unreeling",
  "unrefined",
  "unrelated",
  "unrented",
  "unrest",
  "unretired",
  "unrevised",
  "unrigged",
  "unripe",
  "unrivaled",
  "unroasted",
  "unrobed",
  "unroll",
  "unruffled",
  "unruly",
  "unrushed",
  "unsaddle",
  "unsafe",
  "unsaid",
  "unsalted",
  "unsaved",
  "unsavory",
  "unscathed",
  "unscented",
  "unscrew",
  "unsealed",
  "unseated",
  "unsecured",
  "unseeing",
  "unseemly",
  "unseen",
  "unselect",
  "unselfish",
  "unsent",
  "unsettled",
  "unshackle",
  "unshaken",
  "unshaved",
  "unshaven",
  "unsheathe",
  "unshipped",
  "unsightly",
  "unsigned",
  "unskilled",
  "unsliced",
  "unsmooth",
  "unsnap",
  "unsocial",
  "unsoiled",
  "unsold",
  "unsolved",
  "unsorted",
  "unspoiled",
  "unspoken",
  "unstable",
  "unstaffed",
  "unstamped",
  "unsteady",
  "unsterile",
  "unstirred",
  "unstitch",
  "unstopped",
  "unstuck",
  "unstuffed",
  "unstylish",
  "unsubtle",
  "unsubtly",
  "unsuited",
  "unsure",
  "unsworn",
  "untagged",
  "untainted",
  "untaken",
  "untamed",
  "untangled",
  "untapped",
  "untaxed",
  "unthawed",
  "unthread",
  "untidy",
  "untie",
  "until",
  "untimed",
  "untimely",
  "untitled",
  "untoasted",
  "untold",
  "untouched",
  "untracked",
  "untrained",
  "untreated",
  "untried",
  "untrimmed",
  "untrue",
  "untruth",
  "unturned",
  "untwist",
  "untying",
  "unusable",
  "unused",
  "unusual",
  "unvalued",
  "unvaried",
  "unvarying",
  "unveiled",
  "unveiling",
  "unvented",
  "unviable",
  "unvisited",
  "unvocal",
  "unwanted",
  "unwarlike",
  "unwary",
  "unwashed",
  "unwatched",
  "unweave",
  "unwed",
  "unwelcome",
  "unwell",
  "unwieldy",
  "unwilling",
  "unwind",
  "unwired",
  "unwitting",
  "unwomanly",
  "unworldly",
  "unworn",
  "unworried",
  "unworthy",
  "unwound",
  "unwoven",
  "unwrapped",
  "unwritten",
  "unzip",
  "upbeat",
  "upchuck",
  "upcoming",
  "upcountry",
  "update",
  "upfront",
  "upgrade",
  "upheaval",
  "upheld",
  "uphill",
  "uphold",
  "uplifted",
  "uplifting",
  "upload",
  "upon",
  "upper",
  "upright",
  "uprising",
  "upriver",
  "uproar",
  "uproot",
  "upscale",
  "upside",
  "upstage",
  "upstairs",
  "upstart",
  "upstate",
  "upstream",
  "upstroke",
  "upswing",
  "uptake",
  "uptight",
  "uptown",
  "upturned",
  "upward",
  "upwind",
  "uranium",
  "urban",
  "urchin",
  "urethane",
  "urgency",
  "urgent",
  "urging",
  "urologist",
  "urology",
  "usable",
  "usage",
  "useable",
  "used",
  "uselessly",
  "user",
  "usher",
  "usual",
  "utensil",
  "utility",
  "utilize",
  "utmost",
  "utopia",
  "utter",
  "vacancy",
  "vacant",
  "vacate",
  "vacation",
  "vagabond",
  "vagrancy",
  "vagrantly",
  "vaguely",
  "vagueness",
  "valiant",
  "valid",
  "valium",
  "valley",
  "valuables",
  "value",
  "vanilla",
  "vanish",
  "vanity",
  "vanquish",
  "vantage",
  "vaporizer",
  "variable",
  "variably",
  "varied",
  "variety",
  "various",
  "varmint",
  "varnish",
  "varsity",
  "varying",
  "vascular",
  "vaseline",
  "vastly",
  "vastness",
  "veal",
  "vegan",
  "veggie",
  "vehicular",
  "velcro",
  "velocity",
  "velvet",
  "vendetta",
  "vending",
  "vendor",
  "veneering",
  "vengeful",
  "venomous",
  "ventricle",
  "venture",
  "venue",
  "venus",
  "verbalize",
  "verbally",
  "verbose",
  "verdict",
  "verify",
  "verse",
  "version",
  "versus",
  "vertebrae",
  "vertical",
  "vertigo",
  "very",
  "vessel",
  "vest",
  "veteran",
  "veto",
  "vexingly",
  "viability",
  "viable",
  "vibes",
  "vice",
  "vicinity",
  "victory",
  "video",
  "viewable",
  "viewer",
  "viewing",
  "viewless",
  "viewpoint",
  "vigorous",
  "village",
  "villain",
  "vindicate",
  "vineyard",
  "vintage",
  "violate",
  "violation",
  "violator",
  "violet",
  "violin",
  "viper",
  "viral",
  "virtual",
  "virtuous",
  "virus",
  "visa",
  "viscosity",
  "viscous",
  "viselike",
  "visible",
  "visibly",
  "vision",
  "visiting",
  "visitor",
  "visor",
  "vista",
  "vitality",
  "vitalize",
  "vitally",
  "vitamins",
  "vivacious",
  "vividly",
  "vividness",
  "vixen",
  "vocalist",
  "vocalize",
  "vocally",
  "vocation",
  "voice",
  "voicing",
  "void",
  "volatile",
  "volley",
  "voltage",
  "volumes",
  "voter",
  "voting",
  "voucher",
  "vowed",
  "vowel",
  "voyage",
  "wackiness",
  "wad",
  "wafer",
  "waffle",
  "waged",
  "wager",
  "wages",
  "waggle",
  "wagon",
  "wake",
  "waking",
  "walk",
  "walmart",
  "walnut",
  "walrus",
  "waltz",
  "wand",
  "wannabe",
  "wanted",
  "wanting",
  "wasabi",
  "washable",
  "washbasin",
  "washboard",
  "washbowl",
  "washcloth",
  "washday",
  "washed",
  "washer",
  "washhouse",
  "washing",
  "washout",
  "washroom",
  "washstand",
  "washtub",
  "wasp",
  "wasting",
  "watch",
  "water",
  "waviness",
  "waving",
  "wavy",
  "whacking",
  "whacky",
  "wham",
  "wharf",
  "wheat",
  "whenever",
  "whiff",
  "whimsical",
  "whinny",
  "whiny",
  "whisking",
  "whoever",
  "whole",
  "whomever",
  "whoopee",
  "whooping",
  "whoops",
  "why",
  "wick",
  "widely",
  "widen",
  "widget",
  "widow",
  "width",
  "wieldable",
  "wielder",
  "wife",
  "wifi",
  "wikipedia",
  "wildcard",
  "wildcat",
  "wilder",
  "wildfire",
  "wildfowl",
  "wildland",
  "wildlife",
  "wildly",
  "wildness",
  "willed",
  "willfully",
  "willing",
  "willow",
  "willpower",
  "wilt",
  "wimp",
  "wince",
  "wincing",
  "wind",
  "wing",
  "winking",
  "winner",
  "winnings",
  "winter",
  "wipe",
  "wired",
  "wireless",
  "wiring",
  "wiry",
  "wisdom",
  "wise",
  "wish",
  "wisplike",
  "wispy",
  "wistful",
  "wizard",
  "wobble",
  "wobbling",
  "wobbly",
  "wok",
  "wolf",
  "wolverine",
  "womanhood",
  "womankind",
  "womanless",
  "womanlike",
  "womanly",
  "womb",
  "woof",
  "wooing",
  "wool",
  "woozy",
  "word",
  "work",
  "worried",
  "worrier",
  "worrisome",
  "worry",
  "worsening",
  "worshiper",
  "worst",
  "wound",
  "woven",
  "wow",
  "wrangle",
  "wrath",
  "wreath",
  "wreckage",
  "wrecker",
  "wrecking",
  "wrench",
  "wriggle",
  "wriggly",
  "wrinkle",
  "wrinkly",
  "wrist",
  "writing",
  "written",
  "wrongdoer",
  "wronged",
  "wrongful",
  "wrongly",
  "wrongness",
  "wrought",
  "xbox",
  "xerox",
  "yahoo",
  "yam",
  "yanking",
  "yapping",
  "yard",
  "yarn",
  "yeah",
  "yearbook",
  "yearling",
  "yearly",
  "yearning",
  "yeast",
  "yelling",
  "yelp",
  "yen",
  "yesterday",
  "yiddish",
  "yield",
  "yin",
  "yippee",
  "yo-yo",
  "yodel",
  "yoga",
  "yogurt",
  "yonder",
  "yoyo",
  "yummy",
  "zap",
  "zealous",
  "zebra",
  "zen",
  "zeppelin",
  "zero",
  "zestfully",
  "zesty",
  "zigzagged",
  "zipfile",
  "zipping",
  "zippy",
  "zips",
  "zit",
  "zodiac",
  "zombie",
  "zone",
  "zoning",
  "zookeeper",
  "zoologist",
  "zoology",
  "zoom"
];
var __export018;
if (Object.isExtensible(module19.exports)) {
  __export018 = module19.exports["wordlist"];
}

// ../../node_modules/@ton/crypto/dist/passwords/newSecureWords.js
function $$cjs_default$$17(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global18 !== "undefined" && global18 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global18 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global18 !== "undefined" && global18 || typeof globalThis !== "undefined" && globalThis || {};
var exports20 = {};
var module20 = {
  get exports() {
    return exports20;
  },
  set exports(value) {
    exports20 = value;
  }
};
Object.defineProperty(exports20, "__esModule", { value: true });
exports20.newSecureWords = void 0;
var getSecureRandom_13 = $$cjs_default$$17(typeof getSecureRandom_exports2 !== "undefined" ? getSecureRandom_exports2 : {});
var wordlist_12 = $$cjs_default$$17(typeof wordlist_exports2 !== "undefined" ? wordlist_exports2 : {});
async function newSecureWords(size = 6) {
  let words = [];
  for (let i2 = 0; i2 < size; i2++) {
    words.push(wordlist_12.wordlist[await (0, getSecureRandom_13.getSecureRandomNumber)(0, wordlist_12.wordlist.length)]);
  }
  return words;
}
exports20.newSecureWords = newSecureWords;
var __export019;
if (Object.isExtensible(module20.exports)) {
  __export019 = module20.exports["newSecureWords"];
}

// ../../node_modules/@ton/crypto/dist/primitives/sha512.js
var sha512_exports2 = {};
__export(sha512_exports2, {
  sha512: () => __export020,
  sha512_fallback: () => __export111,
  sha512_sync: () => __export29
});
function $$cjs_default$$18(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global19 !== "undefined" && global19 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global19 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global19 !== "undefined" && global19 || typeof globalThis !== "undefined" && globalThis || {};
var exports21 = {};
var module21 = {
  get exports() {
    return exports21;
  },
  set exports(value) {
    exports21 = value;
  }
};
var __importDefault9 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports21, "__esModule", { value: true });
exports21.sha512 = exports21.sha512_fallback = exports21.sha512_sync = void 0;
var jssha_12 = __importDefault9($$cjs_default$$18(typeof sha_exports !== "undefined" ? sha_exports : {}));
var crypto_primitives_14 = $$cjs_default$$18(typeof node_exports !== "undefined" ? node_exports : {});
function sha512_sync(source) {
  let src;
  if (typeof source === "string") {
    src = Buffer.from(source, "utf-8").toString("hex");
  } else {
    src = source.toString("hex");
  }
  let hasher = new jssha_12.default("SHA-512", "HEX");
  hasher.update(src);
  let res = hasher.getHash("HEX");
  return Buffer.from(res, "hex");
}
exports21.sha512_sync = sha512_sync;
async function sha512_fallback(source) {
  return sha512_sync(source);
}
exports21.sha512_fallback = sha512_fallback;
async function sha5122(source) {
  return (0, crypto_primitives_14.sha512)(source);
}
exports21.sha512 = sha5122;
var __export020;
var __export111;
var __export29;
if (Object.isExtensible(module21.exports)) {
  __export020 = module21.exports["sha512"];
  __export111 = module21.exports["sha512_fallback"];
  __export29 = module21.exports["sha512_sync"];
}

// ../../node_modules/@ton/crypto/dist/primitives/sha256.js
var sha256_exports2 = {};
__export(sha256_exports2, {
  sha256: () => __export021,
  sha256_fallback: () => __export112,
  sha256_sync: () => __export210
});
function $$cjs_default$$19(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global20 !== "undefined" && global20 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global20 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global20 !== "undefined" && global20 || typeof globalThis !== "undefined" && globalThis || {};
var exports22 = {};
var module22 = {
  get exports() {
    return exports22;
  },
  set exports(value) {
    exports22 = value;
  }
};
var __importDefault10 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports22, "__esModule", { value: true });
exports22.sha256 = exports22.sha256_fallback = exports22.sha256_sync = void 0;
var jssha_13 = __importDefault10($$cjs_default$$19(typeof sha_exports !== "undefined" ? sha_exports : {}));
var crypto_primitives_15 = $$cjs_default$$19(typeof node_exports !== "undefined" ? node_exports : {});
function sha256_sync(source) {
  let src;
  if (typeof source === "string") {
    src = Buffer.from(source, "utf-8").toString("hex");
  } else {
    src = source.toString("hex");
  }
  let hasher = new jssha_13.default("SHA-256", "HEX");
  hasher.update(src);
  let res = hasher.getHash("HEX");
  return Buffer.from(res, "hex");
}
exports22.sha256_sync = sha256_sync;
async function sha256_fallback(source) {
  return sha256_sync(source);
}
exports22.sha256_fallback = sha256_fallback;
function sha2562(source) {
  return (0, crypto_primitives_15.sha256)(source);
}
exports22.sha256 = sha2562;
var __export021;
var __export112;
var __export210;
if (Object.isExtensible(module22.exports)) {
  __export021 = module22.exports["sha256"];
  __export112 = module22.exports["sha256_fallback"];
  __export210 = module22.exports["sha256_sync"];
}

// ../../node_modules/@ton/crypto/dist/index.js
function $$cjs_default$$20(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global21 !== "undefined" && global21 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global21 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global21 !== "undefined" && global21 || typeof globalThis !== "undefined" && globalThis || {};
var exports23 = {};
var module23 = {
  get exports() {
    return exports23;
  },
  set exports(value) {
    exports23 = value;
  }
};
Object.defineProperty(exports23, "__esModule", { value: true });
exports23.getMnemonicsMasterKeyFromSeed = exports23.deriveMnemonicHardenedKey = exports23.deriveMnemonicsPath = exports23.deriveSymmetricPath = exports23.deriveSymmetricHardenedKey = exports23.getSymmetricMasterKeyFromSeed = exports23.deriveEd25519Path = exports23.deriveED25519HardenedKey = exports23.getED25519MasterKeyFromSeed = exports23.signVerify = exports23.sign = exports23.keyPairFromSecretKey = exports23.keyPairFromSeed = exports23.openBox = exports23.sealBox = exports23.mnemonicWordList = exports23.mnemonicToHDSeed = exports23.mnemonicToSeed = exports23.mnemonicToWalletKey = exports23.mnemonicToPrivateKey = exports23.mnemonicValidate = exports23.mnemonicNew = exports23.newSecurePassphrase = exports23.newSecureWords = exports23.getSecureRandomNumber = exports23.getSecureRandomWords = exports23.getSecureRandomBytes = exports23.hmac_sha512 = exports23.pbkdf2_sha512 = exports23.sha512_sync = exports23.sha512 = exports23.sha256_sync = exports23.sha256 = void 0;
var sha256_12 = $$cjs_default$$20(typeof sha256_exports2 !== "undefined" ? sha256_exports2 : {});
Object.defineProperty(exports23, "sha256", { enumerable: true, get: function() {
  return sha256_12.sha256;
} });
Object.defineProperty(exports23, "sha256_sync", { enumerable: true, get: function() {
  return sha256_12.sha256_sync;
} });
var sha512_12 = $$cjs_default$$20(typeof sha512_exports2 !== "undefined" ? sha512_exports2 : {});
Object.defineProperty(exports23, "sha512", { enumerable: true, get: function() {
  return sha512_12.sha512;
} });
Object.defineProperty(exports23, "sha512_sync", { enumerable: true, get: function() {
  return sha512_12.sha512_sync;
} });
var pbkdf2_sha512_13 = $$cjs_default$$20(typeof pbkdf2_sha512_exports2 !== "undefined" ? pbkdf2_sha512_exports2 : {});
Object.defineProperty(exports23, "pbkdf2_sha512", { enumerable: true, get: function() {
  return pbkdf2_sha512_13.pbkdf2_sha512;
} });
var hmac_sha512_16 = $$cjs_default$$20(typeof hmac_sha512_exports2 !== "undefined" ? hmac_sha512_exports2 : {});
Object.defineProperty(exports23, "hmac_sha512", { enumerable: true, get: function() {
  return hmac_sha512_16.hmac_sha512;
} });
var getSecureRandom_14 = $$cjs_default$$20(typeof getSecureRandom_exports2 !== "undefined" ? getSecureRandom_exports2 : {});
Object.defineProperty(exports23, "getSecureRandomBytes", { enumerable: true, get: function() {
  return getSecureRandom_14.getSecureRandomBytes;
} });
Object.defineProperty(exports23, "getSecureRandomWords", { enumerable: true, get: function() {
  return getSecureRandom_14.getSecureRandomWords;
} });
Object.defineProperty(exports23, "getSecureRandomNumber", { enumerable: true, get: function() {
  return getSecureRandom_14.getSecureRandomNumber;
} });
var newSecureWords_1 = $$cjs_default$$20(typeof newSecureWords_exports !== "undefined" ? newSecureWords_exports : {});
Object.defineProperty(exports23, "newSecureWords", { enumerable: true, get: function() {
  return newSecureWords_1.newSecureWords;
} });
var newSecurePassphrase_1 = $$cjs_default$$20(typeof newSecurePassphrase_exports !== "undefined" ? newSecurePassphrase_exports : {});
Object.defineProperty(exports23, "newSecurePassphrase", { enumerable: true, get: function() {
  return newSecurePassphrase_1.newSecurePassphrase;
} });
var mnemonic_12 = $$cjs_default$$20(typeof mnemonic_exports !== "undefined" ? mnemonic_exports : {});
Object.defineProperty(exports23, "mnemonicNew", { enumerable: true, get: function() {
  return mnemonic_12.mnemonicNew;
} });
Object.defineProperty(exports23, "mnemonicValidate", { enumerable: true, get: function() {
  return mnemonic_12.mnemonicValidate;
} });
Object.defineProperty(exports23, "mnemonicToPrivateKey", { enumerable: true, get: function() {
  return mnemonic_12.mnemonicToPrivateKey;
} });
Object.defineProperty(exports23, "mnemonicToWalletKey", { enumerable: true, get: function() {
  return mnemonic_12.mnemonicToWalletKey;
} });
Object.defineProperty(exports23, "mnemonicToSeed", { enumerable: true, get: function() {
  return mnemonic_12.mnemonicToSeed;
} });
Object.defineProperty(exports23, "mnemonicToHDSeed", { enumerable: true, get: function() {
  return mnemonic_12.mnemonicToHDSeed;
} });
var wordlist_13 = $$cjs_default$$20(typeof wordlist_exports !== "undefined" ? wordlist_exports : {});
Object.defineProperty(exports23, "mnemonicWordList", { enumerable: true, get: function() {
  return wordlist_13.wordlist;
} });
var nacl_1 = $$cjs_default$$20(typeof nacl_exports !== "undefined" ? nacl_exports : {});
Object.defineProperty(exports23, "sealBox", { enumerable: true, get: function() {
  return nacl_1.sealBox;
} });
Object.defineProperty(exports23, "openBox", { enumerable: true, get: function() {
  return nacl_1.openBox;
} });
var nacl_2 = $$cjs_default$$20(typeof nacl_exports !== "undefined" ? nacl_exports : {});
Object.defineProperty(exports23, "keyPairFromSeed", { enumerable: true, get: function() {
  return nacl_2.keyPairFromSeed;
} });
Object.defineProperty(exports23, "keyPairFromSecretKey", { enumerable: true, get: function() {
  return nacl_2.keyPairFromSecretKey;
} });
Object.defineProperty(exports23, "sign", { enumerable: true, get: function() {
  return nacl_2.sign;
} });
Object.defineProperty(exports23, "signVerify", { enumerable: true, get: function() {
  return nacl_2.signVerify;
} });
var ed25519_1 = $$cjs_default$$20(typeof ed25519_exports !== "undefined" ? ed25519_exports : {});
Object.defineProperty(exports23, "getED25519MasterKeyFromSeed", { enumerable: true, get: function() {
  return ed25519_1.getED25519MasterKeyFromSeed;
} });
Object.defineProperty(exports23, "deriveED25519HardenedKey", { enumerable: true, get: function() {
  return ed25519_1.deriveED25519HardenedKey;
} });
Object.defineProperty(exports23, "deriveEd25519Path", { enumerable: true, get: function() {
  return ed25519_1.deriveEd25519Path;
} });
var symmetric_1 = $$cjs_default$$20(typeof symmetric_exports !== "undefined" ? symmetric_exports : {});
Object.defineProperty(exports23, "getSymmetricMasterKeyFromSeed", { enumerable: true, get: function() {
  return symmetric_1.getSymmetricMasterKeyFromSeed;
} });
Object.defineProperty(exports23, "deriveSymmetricHardenedKey", { enumerable: true, get: function() {
  return symmetric_1.deriveSymmetricHardenedKey;
} });
Object.defineProperty(exports23, "deriveSymmetricPath", { enumerable: true, get: function() {
  return symmetric_1.deriveSymmetricPath;
} });
var mnemonics_1 = $$cjs_default$$20(typeof mnemonics_exports !== "undefined" ? mnemonics_exports : {});
Object.defineProperty(exports23, "deriveMnemonicsPath", { enumerable: true, get: function() {
  return mnemonics_1.deriveMnemonicsPath;
} });
Object.defineProperty(exports23, "deriveMnemonicHardenedKey", { enumerable: true, get: function() {
  return mnemonics_1.deriveMnemonicHardenedKey;
} });
Object.defineProperty(exports23, "getMnemonicsMasterKeyFromSeed", { enumerable: true, get: function() {
  return mnemonics_1.getMnemonicsMasterKeyFromSeed;
} });
var __export022;
var __export113;
var __export211;
var __export34;
var __export44;
var __export54;
var __export62;
var __export72;
var __export82;
var __export92;
var __export102;
var __export11;
var __export122;
var __export132;
var __export142;
var __export152;
var __export162;
var __export172;
var __export182;
var __export192;
var __export20;
var __export21;
var __export222;
var __export232;
var __export242;
var __export252;
var __export262;
var __export272;
var __export282;
var __export292;
var __export30;
var __export31;
var __export322;
if (Object.isExtensible(module23.exports)) {
  __export022 = module23.exports["getMnemonicsMasterKeyFromSeed"];
  __export113 = module23.exports["deriveMnemonicHardenedKey"];
  __export211 = module23.exports["deriveMnemonicsPath"];
  __export34 = module23.exports["deriveSymmetricPath"];
  __export44 = module23.exports["deriveSymmetricHardenedKey"];
  __export54 = module23.exports["getSymmetricMasterKeyFromSeed"];
  __export62 = module23.exports["deriveEd25519Path"];
  __export72 = module23.exports["deriveED25519HardenedKey"];
  __export82 = module23.exports["getED25519MasterKeyFromSeed"];
  __export92 = module23.exports["signVerify"];
  __export102 = module23.exports["sign"];
  __export11 = module23.exports["keyPairFromSecretKey"];
  __export122 = module23.exports["keyPairFromSeed"];
  __export132 = module23.exports["openBox"];
  __export142 = module23.exports["sealBox"];
  __export152 = module23.exports["mnemonicWordList"];
  __export162 = module23.exports["mnemonicToHDSeed"];
  __export172 = module23.exports["mnemonicToSeed"];
  __export182 = module23.exports["mnemonicToWalletKey"];
  __export192 = module23.exports["mnemonicToPrivateKey"];
  __export20 = module23.exports["mnemonicValidate"];
  __export21 = module23.exports["mnemonicNew"];
  __export222 = module23.exports["newSecurePassphrase"];
  __export232 = module23.exports["newSecureWords"];
  __export242 = module23.exports["getSecureRandomNumber"];
  __export252 = module23.exports["getSecureRandomWords"];
  __export262 = module23.exports["getSecureRandomBytes"];
  __export272 = module23.exports["hmac_sha512"];
  __export282 = module23.exports["pbkdf2_sha512"];
  __export292 = module23.exports["sha512_sync"];
  __export30 = module23.exports["sha512"];
  __export31 = module23.exports["sha256_sync"];
  __export322 = module23.exports["sha256"];
}

// ../../node_modules/@ton/core/dist/crypto/safeSign.js
function $$cjs_default$$21(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global22 !== "undefined" && global22 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global22 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global22 !== "undefined" && global22 || typeof globalThis !== "undefined" && globalThis || {};
var exports24 = {};
var module24 = {
  get exports() {
    return exports24;
  },
  set exports(value) {
    exports24 = value;
  }
};
Object.defineProperty(exports24, "__esModule", { value: true });
exports24.safeSignVerify = exports24.safeSign = void 0;
var crypto_16 = $$cjs_default$$21(typeof dist_exports !== "undefined" ? dist_exports : {});
var MIN_SEED_LENGTH = 8;
var MAX_SEED_LENGTH = 64;
function createSafeSignHash(cell, seed) {
  let seedData = Buffer.from(seed);
  if (seedData.length > MAX_SEED_LENGTH) {
    throw Error("Seed can	 be longer than 64 bytes");
  }
  if (seedData.length < MIN_SEED_LENGTH) {
    throw Error("Seed must be at least 8 bytes");
  }
  return (0, crypto_16.sha256_sync)(Buffer.concat([Buffer.from([255, 255]), seedData, cell.hash()]));
}
function safeSign(cell, secretKey, seed = "ton-safe-sign-magic") {
  return (0, crypto_16.sign)(createSafeSignHash(cell, seed), secretKey);
}
exports24.safeSign = safeSign;
function safeSignVerify(cell, signature, publicKey, seed = "ton-safe-sign-magic") {
  return (0, crypto_16.signVerify)(createSafeSignHash(cell, seed), signature, publicKey);
}
exports24.safeSignVerify = safeSignVerify;
var __export023;
var __export114;
if (Object.isExtensible(module24.exports)) {
  __export023 = module24.exports["safeSignVerify"];
  __export114 = module24.exports["safeSign"];
}

// ../../node_modules/@ton/core/dist/utils/getMethodId.js
var getMethodId_exports = {};
__export(getMethodId_exports, {
  getMethodId: () => __export024
});
var exports25 = {};
var module25 = {
  get exports() {
    return exports25;
  },
  set exports(value) {
    exports25 = value;
  }
};
Object.defineProperty(exports25, "__esModule", { value: true });
exports25.getMethodId = void 0;
var TABLE = new Int16Array([
  0,
  4129,
  8258,
  12387,
  16516,
  20645,
  24774,
  28903,
  33032,
  37161,
  41290,
  45419,
  49548,
  53677,
  57806,
  61935,
  4657,
  528,
  12915,
  8786,
  21173,
  17044,
  29431,
  25302,
  37689,
  33560,
  45947,
  41818,
  54205,
  50076,
  62463,
  58334,
  9314,
  13379,
  1056,
  5121,
  25830,
  29895,
  17572,
  21637,
  42346,
  46411,
  34088,
  38153,
  58862,
  62927,
  50604,
  54669,
  13907,
  9842,
  5649,
  1584,
  30423,
  26358,
  22165,
  18100,
  46939,
  42874,
  38681,
  34616,
  63455,
  59390,
  55197,
  51132,
  18628,
  22757,
  26758,
  30887,
  2112,
  6241,
  10242,
  14371,
  51660,
  55789,
  59790,
  63919,
  35144,
  39273,
  43274,
  47403,
  23285,
  19156,
  31415,
  27286,
  6769,
  2640,
  14899,
  10770,
  56317,
  52188,
  64447,
  60318,
  39801,
  35672,
  47931,
  43802,
  27814,
  31879,
  19684,
  23749,
  11298,
  15363,
  3168,
  7233,
  60846,
  64911,
  52716,
  56781,
  44330,
  48395,
  36200,
  40265,
  32407,
  28342,
  24277,
  20212,
  15891,
  11826,
  7761,
  3696,
  65439,
  61374,
  57309,
  53244,
  48923,
  44858,
  40793,
  36728,
  37256,
  33193,
  45514,
  41451,
  53516,
  49453,
  61774,
  57711,
  4224,
  161,
  12482,
  8419,
  20484,
  16421,
  28742,
  24679,
  33721,
  37784,
  41979,
  46042,
  49981,
  54044,
  58239,
  62302,
  689,
  4752,
  8947,
  13010,
  16949,
  21012,
  25207,
  29270,
  46570,
  42443,
  38312,
  34185,
  62830,
  58703,
  54572,
  50445,
  13538,
  9411,
  5280,
  1153,
  29798,
  25671,
  21540,
  17413,
  42971,
  47098,
  34713,
  38840,
  59231,
  63358,
  50973,
  55100,
  9939,
  14066,
  1681,
  5808,
  26199,
  30326,
  17941,
  22068,
  55628,
  51565,
  63758,
  59695,
  39368,
  35305,
  47498,
  43435,
  22596,
  18533,
  30726,
  26663,
  6336,
  2273,
  14466,
  10403,
  52093,
  56156,
  60223,
  64286,
  35833,
  39896,
  43963,
  48026,
  19061,
  23124,
  27191,
  31254,
  2801,
  6864,
  10931,
  14994,
  64814,
  60687,
  56684,
  52557,
  48554,
  44427,
  40424,
  36297,
  31782,
  27655,
  23652,
  19525,
  15522,
  11395,
  7392,
  3265,
  61215,
  65342,
  53085,
  57212,
  44955,
  49082,
  36825,
  40952,
  28183,
  32310,
  20053,
  24180,
  11923,
  16050,
  3793,
  7920
]);
function crc16(data) {
  if (!(data instanceof Buffer)) {
    data = Buffer.from(data);
  }
  let crc = 0;
  for (let index = 0; index < data.length; index++) {
    const byte = data[index];
    crc = (TABLE[(crc >> 8 ^ byte) & 255] ^ crc << 8) & 65535;
  }
  return crc;
}
function getMethodId(name) {
  return crc16(name) & 65535 | 65536;
}
exports25.getMethodId = getMethodId;
var __export024;
if (Object.isExtensible(module25.exports)) {
  __export024 = module25.exports["getMethodId"];
}

// ../../node_modules/@ton/core/dist/utils/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32Decode: () => __export025,
  base32Encode: () => __export115
});
var exports26 = {};
var module26 = {
  get exports() {
    return exports26;
  },
  set exports(value) {
    exports26 = value;
  }
};
Object.defineProperty(exports26, "__esModule", { value: true });
exports26.base32Decode = exports26.base32Encode = void 0;
var alphabet = "abcdefghijklmnopqrstuvwxyz234567";
function base32Encode(buffer) {
  const length = buffer.byteLength;
  let bits = 0;
  let value = 0;
  let output = "";
  for (let i2 = 0; i2 < length; i2++) {
    value = value << 8 | buffer[i2];
    bits += 8;
    while (bits >= 5) {
      output += alphabet[value >>> bits - 5 & 31];
      bits -= 5;
    }
  }
  if (bits > 0) {
    output += alphabet[value << 5 - bits & 31];
  }
  return output;
}
exports26.base32Encode = base32Encode;
function readChar(alphabet2, char) {
  const idx = alphabet2.indexOf(char);
  if (idx === -1) {
    throw new Error("Invalid character found: " + char);
  }
  return idx;
}
function base32Decode(input) {
  let cleanedInput;
  cleanedInput = input.toLowerCase();
  const { length } = cleanedInput;
  let bits = 0;
  let value = 0;
  let index = 0;
  const output = Buffer.alloc(length * 5 / 8 | 0);
  for (let i2 = 0; i2 < length; i2++) {
    value = value << 5 | readChar(alphabet, cleanedInput[i2]);
    bits += 5;
    if (bits >= 8) {
      output[index++] = value >>> bits - 8 & 255;
      bits -= 8;
    }
  }
  return output;
}
exports26.base32Decode = base32Decode;
var __export025;
var __export115;
if (Object.isExtensible(module26.exports)) {
  __export025 = module26.exports["base32Decode"];
  __export115 = module26.exports["base32Encode"];
}

// ../../node_modules/@ton/core/dist/utils/crc32c.js
var crc32c_exports = {};
__export(crc32c_exports, {
  crc32c: () => __export026
});
var exports27 = {};
var module27 = {
  get exports() {
    return exports27;
  },
  set exports(value) {
    exports27 = value;
  }
};
Object.defineProperty(exports27, "__esModule", { value: true });
exports27.crc32c = void 0;
var POLY = 2197175160;
function crc32c(source) {
  let crc = 0 ^ 4294967295;
  for (let n2 = 0; n2 < source.length; n2++) {
    crc ^= source[n2];
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
    crc = crc & 1 ? crc >>> 1 ^ POLY : crc >>> 1;
  }
  crc = crc ^ 4294967295;
  let res = Buffer.alloc(4);
  res.writeInt32LE(crc);
  return res;
}
exports27.crc32c = crc32c;
var __export026;
if (Object.isExtensible(module27.exports)) {
  __export026 = module27.exports["crc32c"];
}

// ../../node_modules/@ton/core/dist/utils/crc16.js
var crc16_exports = {};
__export(crc16_exports, {
  crc16: () => __export027
});
var exports28 = {};
var module28 = {
  get exports() {
    return exports28;
  },
  set exports(value) {
    exports28 = value;
  }
};
Object.defineProperty(exports28, "__esModule", { value: true });
exports28.crc16 = void 0;
function crc162(data) {
  const poly = 4129;
  let reg = 0;
  const message = Buffer.alloc(data.length + 2);
  message.set(data);
  for (let byte of message) {
    let mask = 128;
    while (mask > 0) {
      reg <<= 1;
      if (byte & mask) {
        reg += 1;
      }
      mask >>= 1;
      if (reg > 65535) {
        reg &= 65535;
        reg ^= poly;
      }
    }
  }
  return Buffer.from([Math.floor(reg / 256), reg % 256]);
}
exports28.crc16 = crc162;
var __export027;
if (Object.isExtensible(module28.exports)) {
  __export027 = module28.exports["crc16"];
}

// ../../node_modules/@ton/core/dist/utils/convert.js
var convert_exports = {};
__export(convert_exports, {
  fromNano: () => __export028,
  toNano: () => __export116
});
var exports29 = {};
var module29 = {
  get exports() {
    return exports29;
  },
  set exports(value) {
    exports29 = value;
  }
};
Object.defineProperty(exports29, "__esModule", { value: true });
exports29.fromNano = exports29.toNano = void 0;
function toNano(src) {
  if (typeof src === "bigint") {
    return src * 1000000000n;
  } else {
    if (typeof src === "number") {
      if (!Number.isFinite(src)) {
        throw Error("Invalid number");
      }
      if (Math.log10(src) <= 6) {
        src = src.toLocaleString("en", { minimumFractionDigits: 9, useGrouping: false });
      } else if (src - Math.trunc(src) === 0) {
        src = src.toLocaleString("en", { maximumFractionDigits: 0, useGrouping: false });
      } else {
        throw Error("Not enough precision for a number value. Use string value instead");
      }
    }
    let neg = false;
    while (src.startsWith("-")) {
      neg = !neg;
      src = src.slice(1);
    }
    if (src === ".") {
      throw Error("Invalid number");
    }
    let parts = src.split(".");
    if (parts.length > 2) {
      throw Error("Invalid number");
    }
    let whole = parts[0];
    let frac = parts[1];
    if (!whole) {
      whole = "0";
    }
    if (!frac) {
      frac = "0";
    }
    if (frac.length > 9) {
      throw Error("Invalid number");
    }
    while (frac.length < 9) {
      frac += "0";
    }
    let r2 = BigInt(whole) * 1000000000n + BigInt(frac);
    if (neg) {
      r2 = -r2;
    }
    return r2;
  }
}
exports29.toNano = toNano;
function fromNano(src) {
  let v2 = BigInt(src);
  let neg = false;
  if (v2 < 0) {
    neg = true;
    v2 = -v2;
  }
  let frac = v2 % 1000000000n;
  let facStr = frac.toString();
  while (facStr.length < 9) {
    facStr = "0" + facStr;
  }
  facStr = facStr.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  let whole = v2 / 1000000000n;
  let wholeStr = whole.toString();
  let value = `${wholeStr}${facStr === "0" ? "" : `.${facStr}`}`;
  if (neg) {
    value = "-" + value;
  }
  return value;
}
exports29.fromNano = fromNano;
var __export028;
var __export116;
if (Object.isExtensible(module29.exports)) {
  __export028 = module29.exports["fromNano"];
  __export116 = module29.exports["toNano"];
}

// ../../node_modules/@ton/core/dist/contract/ComputeError.js
var ComputeError_exports = {};
__export(ComputeError_exports, {
  ComputeError: () => __export029
});
var exports30 = {};
var module30 = {
  get exports() {
    return exports30;
  },
  set exports(value) {
    exports30 = value;
  }
};
Object.defineProperty(exports30, "__esModule", { value: true });
exports30.ComputeError = void 0;
var ComputeError = class extends Error {
  constructor(message, exitCode, opts) {
    super(message);
    this.exitCode = exitCode;
    this.debugLogs = opts && opts.debugLogs ? opts.debugLogs : null;
    this.logs = opts && opts.logs ? opts.logs : null;
    Object.setPrototypeOf(this, ComputeError.prototype);
  }
};
exports30.ComputeError = ComputeError;
var __export029;
if (Object.isExtensible(module30.exports)) {
  __export029 = module30.exports["ComputeError"];
}

// ../../node_modules/@ton/core/dist/contract/openContract.js
var openContract_exports = {};
__export(openContract_exports, {
  openContract: () => __export060
});

// ../../node_modules/@ton/core/dist/boc/Cell.js
var Cell_exports = {};
__export(Cell_exports, {
  Cell: () => __export059
});

// ../../node_modules/@ton/core/dist/boc/Builder.js
var Builder_exports = {};
__export(Builder_exports, {
  Builder: () => __export036,
  beginCell: () => __export120
});

// ../../node_modules/@ton/core/dist/boc/utils/strings.js
var strings_exports = {};
__export(strings_exports, {
  readString: () => __export212,
  stringToCell: () => __export117,
  writeString: () => __export030
});
function $$cjs_default$$22(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global23 !== "undefined" && global23 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global23 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global23 !== "undefined" && global23 || typeof globalThis !== "undefined" && globalThis || {};
var exports31 = {};
var module31 = {
  get exports() {
    return exports31;
  },
  set exports(value) {
    exports31 = value;
  }
};
Object.defineProperty(exports31, "__esModule", { value: true });
exports31.writeString = exports31.stringToCell = exports31.readString = void 0;
var Builder_1 = $$cjs_default$$22(typeof Builder_exports !== "undefined" ? Builder_exports : {});
function readBuffer(slice) {
  if (slice.remainingBits % 8 !== 0) {
    throw new Error(`Invalid string length: ${slice.remainingBits}`);
  }
  if (slice.remainingRefs !== 0 && slice.remainingRefs !== 1) {
    throw new Error(`invalid number of refs: ${slice.remainingRefs}`);
  }
  let res;
  if (slice.remainingBits === 0) {
    res = Buffer.alloc(0);
  } else {
    res = slice.loadBuffer(slice.remainingBits / 8);
  }
  if (slice.remainingRefs === 1) {
    res = Buffer.concat([res, readBuffer(slice.loadRef().beginParse())]);
  }
  return res;
}
function readString(slice) {
  return readBuffer(slice).toString();
}
exports31.readString = readString;
function writeBuffer(src, builder) {
  if (src.length > 0) {
    let bytes = Math.floor(builder.availableBits / 8);
    if (src.length > bytes) {
      let a2 = src.subarray(0, bytes);
      let t2 = src.subarray(bytes);
      builder = builder.storeBuffer(a2);
      let bb = (0, Builder_1.beginCell)();
      writeBuffer(t2, bb);
      builder = builder.storeRef(bb.endCell());
    } else {
      builder = builder.storeBuffer(src);
    }
  }
}
function stringToCell(src) {
  let builder = (0, Builder_1.beginCell)();
  writeBuffer(Buffer.from(src), builder);
  return builder.endCell();
}
exports31.stringToCell = stringToCell;
function writeString(src, builder) {
  writeBuffer(Buffer.from(src), builder);
}
exports31.writeString = writeString;
var __export030;
var __export117;
var __export212;
if (Object.isExtensible(module31.exports)) {
  __export030 = module31.exports["writeString"];
  __export117 = module31.exports["stringToCell"];
  __export212 = module31.exports["readString"];
}

// ../../node_modules/@ton/core/dist/boc/BitBuilder.js
var BitBuilder_exports = {};
__export(BitBuilder_exports, {
  BitBuilder: () => __export035
});

// ../../node_modules/@ton/core/dist/boc/BitString.js
var BitString_exports = {};
__export(BitString_exports, {
  BitString: () => __export032
});

// ../../node_modules/symbol.inspect/index.js
var symbol_exports = {};
__export(symbol_exports, {
  default: () => symbol_default
});
var exports32 = {};
var module32 = {
  get exports() {
    return exports32;
  },
  set exports(value) {
    exports32 = value;
  }
};
var SymbolInspect = Symbol.for("nodejs.util.inspect.custom");
module32.exports = SymbolInspect;
var symbol_default = module32.exports;

// ../../node_modules/@ton/core/dist/boc/utils/paddedBits.js
var paddedBits_exports = {};
__export(paddedBits_exports, {
  bitsToPaddedBuffer: () => __export118,
  paddedBufferToBits: () => __export031
});
function $$cjs_default$$23(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global24 !== "undefined" && global24 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global24 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global24 !== "undefined" && global24 || typeof globalThis !== "undefined" && globalThis || {};
var exports33 = {};
var module33 = {
  get exports() {
    return exports33;
  },
  set exports(value) {
    exports33 = value;
  }
};
Object.defineProperty(exports33, "__esModule", { value: true });
exports33.paddedBufferToBits = exports33.bitsToPaddedBuffer = void 0;
var BitBuilder_1 = $$cjs_default$$23(typeof BitBuilder_exports !== "undefined" ? BitBuilder_exports : {});
var BitString_1 = $$cjs_default$$23(typeof BitString_exports !== "undefined" ? BitString_exports : {});
function bitsToPaddedBuffer(bits) {
  let builder = new BitBuilder_1.BitBuilder(Math.ceil(bits.length / 8) * 8);
  builder.writeBits(bits);
  let padding = Math.ceil(bits.length / 8) * 8 - bits.length;
  for (let i2 = 0; i2 < padding; i2++) {
    if (i2 === 0) {
      builder.writeBit(1);
    } else {
      builder.writeBit(0);
    }
  }
  return builder.buffer();
}
exports33.bitsToPaddedBuffer = bitsToPaddedBuffer;
function paddedBufferToBits(buff) {
  let bitLen = 0;
  for (let i2 = buff.length - 1; i2 >= 0; i2--) {
    if (buff[i2] !== 0) {
      const testByte = buff[i2];
      let bitPos = testByte & -testByte;
      if ((bitPos & 1) == 0) {
        bitPos = Math.log2(bitPos) + 1;
      }
      if (i2 > 0) {
        bitLen = i2 << 3;
      }
      bitLen += 8 - bitPos;
      break;
    }
  }
  return new BitString_1.BitString(buff, 0, bitLen);
}
exports33.paddedBufferToBits = paddedBufferToBits;
var __export031;
var __export118;
if (Object.isExtensible(module33.exports)) {
  __export031 = module33.exports["paddedBufferToBits"];
  __export118 = module33.exports["bitsToPaddedBuffer"];
}

// ../../node_modules/@ton/core/dist/boc/BitString.js
function $$cjs_default$$24(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global25 !== "undefined" && global25 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global25 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global25 !== "undefined" && global25 || typeof globalThis !== "undefined" && globalThis || {};
var exports34 = {};
var module34 = {
  get exports() {
    return exports34;
  },
  set exports(value) {
    exports34 = value;
  }
};
var __importDefault11 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports34, "__esModule", { value: true });
exports34.BitString = void 0;
var paddedBits_1 = $$cjs_default$$24(typeof paddedBits_exports !== "undefined" ? paddedBits_exports : {});
var symbol_inspect_1 = __importDefault11($$cjs_default$$24(typeof symbol_exports !== "undefined" ? symbol_exports : {}));
var BitString = class {
  /**
   * Checks if supplied object is BitString
   * @param src is unknow object
   * @returns true if object is BitString and false otherwise
   **/
  static isBitString(src) {
    return src instanceof BitString;
  }
  /**
   * Constructing BitString from a buffer
   * @param data data that contains the bitstring data. NOTE: We are expecting this buffer to be NOT modified
   * @param offset offset in bits from the start of the buffer
   * @param length length of the bitstring in bits
   */
  constructor(data, offset, length) {
    this[_a] = () => this.toString();
    if (length < 0) {
      throw new Error(`Length ${length} is out of bounds`);
    }
    this._length = length;
    this._data = data;
    this._offset = offset;
  }
  /**
   * Returns the length of the bitstring
   */
  get length() {
    return this._length;
  }
  /**
   * Returns the bit at the specified index
   * @param index index of the bit
   * @throws Error if index is out of bounds
   * @returns true if the bit is set, false otherwise
   */
  at(index) {
    if (index >= this._length) {
      throw new Error(`Index ${index} > ${this._length} is out of bounds`);
    }
    if (index < 0) {
      throw new Error(`Index ${index} < 0 is out of bounds`);
    }
    let byteIndex = this._offset + index >> 3;
    let bitIndex = 7 - (this._offset + index) % 8;
    return (this._data[byteIndex] & 1 << bitIndex) !== 0;
  }
  /**
   * Get a subscring of the bitstring
   * @param offset
   * @param length
   * @returns
   */
  substring(offset, length) {
    if (offset > this._length) {
      throw new Error(`Offset(${offset}) > ${this._length} is out of bounds`);
    }
    if (offset < 0) {
      throw new Error(`Offset(${offset}) < 0 is out of bounds`);
    }
    if (length === 0) {
      return BitString.EMPTY;
    }
    if (offset + length > this._length) {
      throw new Error(`Offset ${offset} + Length ${length} > ${this._length} is out of bounds`);
    }
    return new BitString(this._data, this._offset + offset, length);
  }
  /**
   * Try to get a buffer from the bitstring without allocations
   * @param offset offset in bits
   * @param length length in bits
   * @returns buffer if the bitstring is aligned to bytes, null otherwise
   */
  subbuffer(offset, length) {
    if (offset > this._length) {
      throw new Error(`Offset ${offset} is out of bounds`);
    }
    if (offset < 0) {
      throw new Error(`Offset ${offset} is out of bounds`);
    }
    if (offset + length > this._length) {
      throw new Error(`Offset + Lenght = ${offset + length} is out of bounds`);
    }
    if (length % 8 !== 0) {
      return null;
    }
    if ((this._offset + offset) % 8 !== 0) {
      return null;
    }
    let start = this._offset + offset >> 3;
    let end = start + (length >> 3);
    return this._data.subarray(start, end);
  }
  /**
   * Checks for equality
   * @param b other bitstring
   * @returns true if the bitstrings are equal, false otherwise
   */
  equals(b2) {
    if (this._length !== b2._length) {
      return false;
    }
    for (let i2 = 0; i2 < this._length; i2++) {
      if (this.at(i2) !== b2.at(i2)) {
        return false;
      }
    }
    return true;
  }
  /**
   * Format to canonical string
   * @returns formatted bits as a string
   */
  toString() {
    const padded = (0, paddedBits_1.bitsToPaddedBuffer)(this);
    if (this._length % 4 === 0) {
      const s2 = padded.subarray(0, Math.ceil(this._length / 8)).toString("hex").toUpperCase();
      if (this._length % 8 === 0) {
        return s2;
      } else {
        return s2.substring(0, s2.length - 1);
      }
    } else {
      const hex2 = padded.toString("hex").toUpperCase();
      if (this._length % 8 <= 4) {
        return hex2.substring(0, hex2.length - 1) + "_";
      } else {
        return hex2 + "_";
      }
    }
  }
};
exports34.BitString = BitString;
_a = symbol_inspect_1.default;
BitString.EMPTY = new BitString(Buffer.alloc(0), 0, 0);
var __export032;
if (Object.isExtensible(module34.exports)) {
  __export032 = module34.exports["BitString"];
}

// ../../node_modules/@ton/core/dist/address/ExternalAddress.js
var ExternalAddress_exports = {};
__export(ExternalAddress_exports, {
  ExternalAddress: () => __export033
});
function $$cjs_default$$25(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global26 !== "undefined" && global26 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global26 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global26 !== "undefined" && global26 || typeof globalThis !== "undefined" && globalThis || {};
var exports35 = {};
var module35 = {
  get exports() {
    return exports35;
  },
  set exports(value) {
    exports35 = value;
  }
};
var __importDefault12 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
var _a2;
Object.defineProperty(exports35, "__esModule", { value: true });
exports35.ExternalAddress = void 0;
var symbol_inspect_12 = __importDefault12($$cjs_default$$25(typeof symbol_exports !== "undefined" ? symbol_exports : {}));
var ExternalAddress = class {
  static isAddress(src) {
    return src instanceof ExternalAddress;
  }
  constructor(value, bits) {
    this[_a2] = () => this.toString();
    this.value = value;
    this.bits = bits;
  }
  toString() {
    return `External<${this.bits}:${this.value}>`;
  }
};
exports35.ExternalAddress = ExternalAddress;
_a2 = symbol_inspect_12.default;
var __export033;
if (Object.isExtensible(module35.exports)) {
  __export033 = module35.exports["ExternalAddress"];
}

// ../../node_modules/@ton/core/dist/address/Address.js
var Address_exports = {};
__export(Address_exports, {
  Address: () => __export119,
  address: () => __export034
});
function $$cjs_default$$26(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global27 !== "undefined" && global27 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global27 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global27 !== "undefined" && global27 || typeof globalThis !== "undefined" && globalThis || {};
var exports36 = {};
var module36 = {
  get exports() {
    return exports36;
  },
  set exports(value) {
    exports36 = value;
  }
};
var __importDefault13 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
var _a3;
Object.defineProperty(exports36, "__esModule", { value: true });
exports36.address = exports36.Address = void 0;
var symbol_inspect_13 = __importDefault13($$cjs_default$$26(typeof symbol_exports !== "undefined" ? symbol_exports : {}));
var crc16_1 = $$cjs_default$$26(typeof crc16_exports !== "undefined" ? crc16_exports : {});
var bounceable_tag = 17;
var non_bounceable_tag = 81;
var test_flag = 128;
function parseFriendlyAddress(src) {
  if (typeof src === "string" && !Address.isFriendly(src)) {
    throw new Error("Unknown address type");
  }
  const data = Buffer.isBuffer(src) ? src : Buffer.from(src, "base64");
  if (data.length !== 36) {
    throw new Error("Unknown address type: byte length is not equal to 36");
  }
  const addr = data.subarray(0, 34);
  const crc = data.subarray(34, 36);
  const calcedCrc = (0, crc16_1.crc16)(addr);
  if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {
    throw new Error("Invalid checksum: " + src);
  }
  let tag = addr[0];
  let isTestOnly = false;
  let isBounceable = false;
  if (tag & test_flag) {
    isTestOnly = true;
    tag = tag ^ test_flag;
  }
  if (tag !== bounceable_tag && tag !== non_bounceable_tag)
    throw "Unknown address tag";
  isBounceable = tag === bounceable_tag;
  let workchain = null;
  if (addr[1] === 255) {
    workchain = -1;
  } else {
    workchain = addr[1];
  }
  const hashPart = addr.subarray(2, 34);
  return { isTestOnly, isBounceable, workchain, hashPart };
}
var Address = class {
  static isAddress(src) {
    return src instanceof Address;
  }
  static isFriendly(source) {
    if (source.length !== 48) {
      return false;
    }
    if (!/[A-Za-z0-9+/_-]+/.test(source)) {
      return false;
    }
    return true;
  }
  static isRaw(source) {
    if (source.indexOf(":") === -1) {
      return false;
    }
    let [wc, hash] = source.split(":");
    if (!Number.isInteger(parseFloat(wc))) {
      return false;
    }
    if (!/[a-f0-9]+/.test(hash.toLowerCase())) {
      return false;
    }
    if (hash.length !== 64) {
      return false;
    }
    return true;
  }
  static normalize(source) {
    if (typeof source === "string") {
      return Address.parse(source).toString();
    } else {
      return source.toString();
    }
  }
  static parse(source) {
    if (Address.isFriendly(source)) {
      return this.parseFriendly(source).address;
    } else if (Address.isRaw(source)) {
      return this.parseRaw(source);
    } else {
      throw new Error("Unknown address type: " + source);
    }
  }
  static parseRaw(source) {
    let workChain = parseInt(source.split(":")[0]);
    let hash = Buffer.from(source.split(":")[1], "hex");
    return new Address(workChain, hash);
  }
  static parseFriendly(source) {
    if (Buffer.isBuffer(source)) {
      let r2 = parseFriendlyAddress(source);
      return {
        isBounceable: r2.isBounceable,
        isTestOnly: r2.isTestOnly,
        address: new Address(r2.workchain, r2.hashPart)
      };
    } else {
      let addr = source.replace(/\-/g, "+").replace(/_/g, "/");
      let r2 = parseFriendlyAddress(addr);
      return {
        isBounceable: r2.isBounceable,
        isTestOnly: r2.isTestOnly,
        address: new Address(r2.workchain, r2.hashPart)
      };
    }
  }
  constructor(workChain, hash) {
    this.toRawString = () => {
      return this.workChain + ":" + this.hash.toString("hex");
    };
    this.toRaw = () => {
      const addressWithChecksum = Buffer.alloc(36);
      addressWithChecksum.set(this.hash);
      addressWithChecksum.set([this.workChain, this.workChain, this.workChain, this.workChain], 32);
      return addressWithChecksum;
    };
    this.toStringBuffer = (args) => {
      let testOnly = args && args.testOnly !== void 0 ? args.testOnly : false;
      let bounceable = args && args.bounceable !== void 0 ? args.bounceable : true;
      let tag = bounceable ? bounceable_tag : non_bounceable_tag;
      if (testOnly) {
        tag |= test_flag;
      }
      const addr = Buffer.alloc(34);
      addr[0] = tag;
      addr[1] = this.workChain;
      addr.set(this.hash, 2);
      const addressWithChecksum = Buffer.alloc(36);
      addressWithChecksum.set(addr);
      addressWithChecksum.set((0, crc16_1.crc16)(addr), 34);
      return addressWithChecksum;
    };
    this.toString = (args) => {
      let urlSafe = args && args.urlSafe !== void 0 ? args.urlSafe : true;
      let buffer = this.toStringBuffer(args);
      if (urlSafe) {
        return buffer.toString("base64").replace(/\+/g, "-").replace(/\//g, "_");
      } else {
        return buffer.toString("base64");
      }
    };
    this[_a3] = () => this.toString();
    if (hash.length !== 32) {
      throw new Error("Invalid address hash length: " + hash.length);
    }
    this.workChain = workChain;
    this.hash = hash;
    Object.freeze(this);
  }
  equals(src) {
    if (src.workChain !== this.workChain) {
      return false;
    }
    return src.hash.equals(this.hash);
  }
};
exports36.Address = Address;
_a3 = symbol_inspect_13.default;
function address(src) {
  return Address.parse(src);
}
exports36.address = address;
var __export034;
var __export119;
if (Object.isExtensible(module36.exports)) {
  __export034 = module36.exports["address"];
  __export119 = module36.exports["Address"];
}

// ../../node_modules/@ton/core/dist/boc/BitBuilder.js
function $$cjs_default$$27(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global28 !== "undefined" && global28 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global28 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global28 !== "undefined" && global28 || typeof globalThis !== "undefined" && globalThis || {};
var exports37 = {};
var module37 = {
  get exports() {
    return exports37;
  },
  set exports(value) {
    exports37 = value;
  }
};
Object.defineProperty(exports37, "__esModule", { value: true });
exports37.BitBuilder = void 0;
var Address_1 = $$cjs_default$$27(typeof Address_exports !== "undefined" ? Address_exports : {});
var ExternalAddress_1 = $$cjs_default$$27(typeof ExternalAddress_exports !== "undefined" ? ExternalAddress_exports : {});
var BitString_12 = $$cjs_default$$27(typeof BitString_exports !== "undefined" ? BitString_exports : {});
var BitBuilder = class {
  constructor(size = 1023) {
    this._buffer = Buffer.alloc(Math.ceil(size / 8));
    this._length = 0;
  }
  /**
   * Current number of bits written
   */
  get length() {
    return this._length;
  }
  /**
   * Write a single bit
   * @param value bit to write, true or positive number for 1, false or zero or negative for 0
   */
  writeBit(value) {
    let n2 = this._length;
    if (n2 > this._buffer.length * 8) {
      throw new Error("BitBuilder overflow");
    }
    if (typeof value === "boolean" && value === true || typeof value === "number" && value > 0) {
      this._buffer[n2 / 8 | 0] |= 1 << 7 - n2 % 8;
    }
    this._length++;
  }
  /**
   * Copy bits from BitString
   * @param src source bits
   */
  writeBits(src) {
    for (let i2 = 0; i2 < src.length; i2++) {
      this.writeBit(src.at(i2));
    }
  }
  /**
   * Write bits from buffer
   * @param src source buffer
   */
  writeBuffer(src) {
    if (this._length % 8 === 0) {
      if (this._length + src.length * 8 > this._buffer.length * 8) {
        throw new Error("BitBuilder overflow");
      }
      src.copy(this._buffer, this._length / 8);
      this._length += src.length * 8;
    } else {
      for (let i2 = 0; i2 < src.length; i2++) {
        this.writeUint(src[i2], 8);
      }
    }
  }
  /**
   * Write uint value
   * @param value value as bigint or number
   * @param bits number of bits to write
   */
  writeUint(value, bits) {
    if (bits < 0 || !Number.isSafeInteger(bits)) {
      throw Error(`invalid bit length. Got ${bits}`);
    }
    const v2 = BigInt(value);
    if (bits === 0) {
      if (v2 !== 0n) {
        throw Error(`value is not zero for ${bits} bits. Got ${value}`);
      } else {
        return;
      }
    }
    const vBits = 1n << BigInt(bits);
    if (v2 < 0 || v2 >= vBits) {
      throw Error(`bitLength is too small for a value ${value}. Got ${bits}`);
    }
    if (this._length + bits > this._buffer.length * 8) {
      throw new Error("BitBuilder overflow");
    }
    const tillByte = 8 - this._length % 8;
    if (tillByte > 0) {
      const bidx = Math.floor(this._length / 8);
      if (bits < tillByte) {
        const wb = Number(v2);
        this._buffer[bidx] |= wb << tillByte - bits;
        this._length += bits;
      } else {
        const wb = Number(v2 >> BigInt(bits - tillByte));
        this._buffer[bidx] |= wb;
        this._length += tillByte;
      }
    }
    bits -= tillByte;
    while (bits > 0) {
      if (bits >= 8) {
        this._buffer[this._length / 8] = Number(v2 >> BigInt(bits - 8) & 0xffn);
        this._length += 8;
        bits -= 8;
      } else {
        this._buffer[this._length / 8] = Number(v2 << BigInt(8 - bits) & 0xffn);
        this._length += bits;
        bits = 0;
      }
    }
  }
  /**
   * Write int value
   * @param value value as bigint or number
   * @param bits number of bits to write
   */
  writeInt(value, bits) {
    let v2 = BigInt(value);
    if (bits < 0 || !Number.isSafeInteger(bits)) {
      throw Error(`invalid bit length. Got ${bits}`);
    }
    if (bits === 0) {
      if (value !== 0n) {
        throw Error(`value is not zero for ${bits} bits. Got ${value}`);
      } else {
        return;
      }
    }
    if (bits === 1) {
      if (value !== -1n && value !== 0n) {
        throw Error(`value is not zero or -1 for ${bits} bits. Got ${value}`);
      } else {
        this.writeBit(value === -1n);
        return;
      }
    }
    let vBits = 1n << BigInt(bits) - 1n;
    if (v2 < -vBits || v2 >= vBits) {
      throw Error(`value is out of range for ${bits} bits. Got ${value}`);
    }
    if (v2 < 0) {
      this.writeBit(true);
      v2 = vBits + v2;
    } else {
      this.writeBit(false);
    }
    this.writeUint(v2, bits - 1);
  }
  /**
   * Wrtie var uint value, used for serializing coins
   * @param value value to write as bigint or number
   * @param bits header bits to write size
   */
  writeVarUint(value, bits) {
    let v2 = BigInt(value);
    if (bits < 0 || !Number.isSafeInteger(bits)) {
      throw Error(`invalid bit length. Got ${bits}`);
    }
    if (v2 < 0) {
      throw Error(`value is negative. Got ${value}`);
    }
    if (v2 === 0n) {
      this.writeUint(0, bits);
      return;
    }
    const sizeBytes = Math.ceil(v2.toString(2).length / 8);
    const sizeBits = sizeBytes * 8;
    this.writeUint(sizeBytes, bits);
    this.writeUint(v2, sizeBits);
  }
  /**
   * Wrtie var int value, used for serializing coins
   * @param value value to write as bigint or number
   * @param bits header bits to write size
   */
  writeVarInt(value, bits) {
    let v2 = BigInt(value);
    if (bits < 0 || !Number.isSafeInteger(bits)) {
      throw Error(`invalid bit length. Got ${bits}`);
    }
    if (v2 === 0n) {
      this.writeUint(0, bits);
      return;
    }
    let v22 = v2 > 0 ? v2 : -v2;
    const sizeBytes = Math.ceil((v22.toString(2).length + 1) / 8);
    const sizeBits = sizeBytes * 8;
    this.writeUint(sizeBytes, bits);
    this.writeInt(v2, sizeBits);
  }
  /**
   * Write coins in var uint format
   * @param amount amount to write
   */
  writeCoins(amount) {
    this.writeVarUint(amount, 4);
  }
  /**
   * Write address
   * @param address write address or address external
   */
  writeAddress(address2) {
    if (address2 === null || address2 === void 0) {
      this.writeUint(0, 2);
      return;
    }
    if (Address_1.Address.isAddress(address2)) {
      this.writeUint(2, 2);
      this.writeUint(0, 1);
      this.writeInt(address2.workChain, 8);
      this.writeBuffer(address2.hash);
      return;
    }
    if (ExternalAddress_1.ExternalAddress.isAddress(address2)) {
      this.writeUint(1, 2);
      this.writeUint(address2.bits, 9);
      this.writeUint(address2.value, address2.bits);
      return;
    }
    throw Error(`Invalid address. Got ${address2}`);
  }
  /**
   * Build BitString
   * @returns result bit string
   */
  build() {
    return new BitString_12.BitString(this._buffer, 0, this._length);
  }
  /**
   * Build into Buffer
   * @returns result buffer
   */
  buffer() {
    if (this._length % 8 !== 0) {
      throw new Error("BitBuilder buffer is not byte aligned");
    }
    return this._buffer.subarray(0, this._length / 8);
  }
};
exports37.BitBuilder = BitBuilder;
var __export035;
if (Object.isExtensible(module37.exports)) {
  __export035 = module37.exports["BitBuilder"];
}

// ../../node_modules/@ton/core/dist/boc/Builder.js
function $$cjs_default$$28(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global29 !== "undefined" && global29 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global29 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global29 !== "undefined" && global29 || typeof globalThis !== "undefined" && globalThis || {};
var exports38 = {};
var module38 = {
  get exports() {
    return exports38;
  },
  set exports(value) {
    exports38 = value;
  }
};
Object.defineProperty(exports38, "__esModule", { value: true });
exports38.Builder = exports38.beginCell = void 0;
var BitBuilder_12 = $$cjs_default$$28(typeof BitBuilder_exports !== "undefined" ? BitBuilder_exports : {});
var Cell_1 = $$cjs_default$$28(typeof Cell_exports !== "undefined" ? Cell_exports : {});
var strings_1 = $$cjs_default$$28(typeof strings_exports !== "undefined" ? strings_exports : {});
function beginCell() {
  return new Builder();
}
exports38.beginCell = beginCell;
var Builder = class {
  constructor() {
    this._bits = new BitBuilder_12.BitBuilder();
    this._refs = [];
  }
  /**
   * Bits written so far
   */
  get bits() {
    return this._bits.length;
  }
  /**
   * References written so far
   */
  get refs() {
    return this._refs.length;
  }
  /**
   * Available bits
   */
  get availableBits() {
    return 1023 - this.bits;
  }
  /**
   * Available references
   */
  get availableRefs() {
    return 4 - this.refs;
  }
  /**
   * Write a single bit
   * @param value bit to write, true or positive number for 1, false or zero or negative for 0
   * @returns this builder
   */
  storeBit(value) {
    this._bits.writeBit(value);
    return this;
  }
  /**
   * Write bits from BitString
   * @param src source bits
   * @returns this builder
   */
  storeBits(src) {
    this._bits.writeBits(src);
    return this;
  }
  /**
   * Store Buffer
   * @param src source buffer
   * @param bytes optional number of bytes to write
   * @returns this builder
   */
  storeBuffer(src, bytes) {
    if (bytes !== void 0 && bytes !== null) {
      if (src.length !== bytes) {
        throw Error(`Buffer length ${src.length} is not equal to ${bytes}`);
      }
    }
    this._bits.writeBuffer(src);
    return this;
  }
  /**
   * Store Maybe Buffer
   * @param src source buffer or null
   * @param bytes optional number of bytes to write
   * @returns this builder
   */
  storeMaybeBuffer(src, bytes) {
    if (src !== null) {
      this.storeBit(1);
      this.storeBuffer(src, bytes);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store uint value
   * @param value value as bigint or number
   * @param bits number of bits to write
   * @returns this builder
   */
  storeUint(value, bits) {
    this._bits.writeUint(value, bits);
    return this;
  }
  /**
   * Store maybe uint value
   * @param value value as bigint or number, null or undefined
   * @param bits number of bits to write
   * @returns this builder
   */
  storeMaybeUint(value, bits) {
    if (value !== null && value !== void 0) {
      this.storeBit(1);
      this.storeUint(value, bits);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store int value
   * @param value value as bigint or number
   * @param bits number of bits to write
   * @returns this builder
   */
  storeInt(value, bits) {
    this._bits.writeInt(value, bits);
    return this;
  }
  /**
   * Store maybe int value
   * @param value value as bigint or number, null or undefined
   * @param bits number of bits to write
   * @returns this builder
   */
  storeMaybeInt(value, bits) {
    if (value !== null && value !== void 0) {
      this.storeBit(1);
      this.storeInt(value, bits);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store varuint value
   * @param value value as bigint or number
   * @param bits number of bits to write to header
   * @returns this builder
   */
  storeVarUint(value, bits) {
    this._bits.writeVarUint(value, bits);
    return this;
  }
  /**
   * Store maybe varuint value
   * @param value value as bigint or number, null or undefined
   * @param bits number of bits to write to header
   * @returns this builder
   */
  storeMaybeVarUint(value, bits) {
    if (value !== null && value !== void 0) {
      this.storeBit(1);
      this.storeVarUint(value, bits);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store varint value
   * @param value value as bigint or number
   * @param bits number of bits to write to header
   * @returns this builder
   */
  storeVarInt(value, bits) {
    this._bits.writeVarInt(value, bits);
    return this;
  }
  /**
   * Store maybe varint value
   * @param value value as bigint or number, null or undefined
   * @param bits number of bits to write to header
   * @returns this builder
   */
  storeMaybeVarInt(value, bits) {
    if (value !== null && value !== void 0) {
      this.storeBit(1);
      this.storeVarInt(value, bits);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store coins value
   * @param amount amount of coins
   * @returns this builder
   */
  storeCoins(amount) {
    this._bits.writeCoins(amount);
    return this;
  }
  /**
   * Store maybe coins value
   * @param amount amount of coins, null or undefined
   * @returns this builder
   */
  storeMaybeCoins(amount) {
    if (amount !== null && amount !== void 0) {
      this.storeBit(1);
      this.storeCoins(amount);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store address
   * @param addres address to store
   * @returns this builder
   */
  storeAddress(address2) {
    this._bits.writeAddress(address2);
    return this;
  }
  /**
   * Store reference
   * @param cell cell or builder to store
   * @returns this builder
   */
  storeRef(cell) {
    if (this._refs.length >= 4) {
      throw new Error("Too many references");
    }
    if (cell instanceof Cell_1.Cell) {
      this._refs.push(cell);
    } else if (cell instanceof Builder) {
      this._refs.push(cell.endCell());
    } else {
      throw new Error("Invalid argument");
    }
    return this;
  }
  /**
   * Store reference if not null
   * @param cell cell or builder to store
   * @returns this builder
   */
  storeMaybeRef(cell) {
    if (cell) {
      this.storeBit(1);
      this.storeRef(cell);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store slice it in this builder
   * @param src source slice
   */
  storeSlice(src) {
    let c2 = src.clone();
    if (c2.remainingBits > 0) {
      this.storeBits(c2.loadBits(c2.remainingBits));
    }
    while (c2.remainingRefs > 0) {
      this.storeRef(c2.loadRef());
    }
    return this;
  }
  /**
   * Store slice in this builder if not null
   * @param src source slice
   */
  storeMaybeSlice(src) {
    if (src) {
      this.storeBit(1);
      this.storeSlice(src);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store builder
   * @param src builder to store
   * @returns this builder
   */
  storeBuilder(src) {
    return this.storeSlice(src.endCell().beginParse());
  }
  /**
   * Store builder if not null
   * @param src builder to store
   * @returns this builder
   */
  storeMaybeBuilder(src) {
    if (src) {
      this.storeBit(1);
      this.storeBuilder(src);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store writer or builder
   * @param writer writer or builder to store
   * @returns this builder
   */
  storeWritable(writer) {
    if (typeof writer === "object") {
      writer.writeTo(this);
    } else {
      writer(this);
    }
    return this;
  }
  /**
   * Store writer or builder if not null
   * @param writer writer or builder to store
   * @returns this builder
   */
  storeMaybeWritable(writer) {
    if (writer) {
      this.storeBit(1);
      this.storeWritable(writer);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store object in this builder
   * @param writer Writable or writer functuin
   */
  store(writer) {
    this.storeWritable(writer);
    return this;
  }
  /**
   * Store string tail
   * @param src source string
   * @returns this builder
   */
  storeStringTail(src) {
    (0, strings_1.writeString)(src, this);
    return this;
  }
  /**
   * Store string tail
   * @param src source string
   * @returns this builder
   */
  storeMaybeStringTail(src) {
    if (src !== null && src !== void 0) {
      this.storeBit(1);
      (0, strings_1.writeString)(src, this);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store string tail in ref
   * @param src source string
   * @returns this builder
   */
  storeStringRefTail(src) {
    this.storeRef(beginCell().storeStringTail(src));
    return this;
  }
  /**
   * Store maybe string tail in ref
   * @param src source string
   * @returns this builder
   */
  storeMaybeStringRefTail(src) {
    if (src !== null && src !== void 0) {
      this.storeBit(1);
      this.storeStringRefTail(src);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store dictionary in this builder
   * @param dict dictionary to store
   * @returns this builder
   */
  storeDict(dict, key, value) {
    if (dict) {
      dict.store(this, key, value);
    } else {
      this.storeBit(0);
    }
    return this;
  }
  /**
   * Store dictionary in this builder directly
   * @param dict dictionary to store
   * @returns this builder
   */
  storeDictDirect(dict, key, value) {
    dict.storeDirect(this, key, value);
    return this;
  }
  /**
   * Complete cell
   * @param opts options
   * @returns cell
   */
  endCell(opts) {
    return new Cell_1.Cell({
      bits: this._bits.build(),
      refs: this._refs,
      exotic: opts?.exotic
    });
  }
  /**
   * Convert to cell
   * @returns cell
   */
  asCell() {
    return this.endCell();
  }
  /**
   * Convert to slice
   * @returns slice
   */
  asSlice() {
    return this.endCell().beginParse();
  }
};
exports38.Builder = Builder;
var __export036;
var __export120;
if (Object.isExtensible(module38.exports)) {
  __export036 = module38.exports["Builder"];
  __export120 = module38.exports["beginCell"];
}

// ../../node_modules/@ton/core/dist/boc/BitReader.js
var BitReader_exports = {};
__export(BitReader_exports, {
  BitReader: () => __export037
});
function $$cjs_default$$29(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global30 !== "undefined" && global30 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global30 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global30 !== "undefined" && global30 || typeof globalThis !== "undefined" && globalThis || {};
var exports39 = {};
var module39 = {
  get exports() {
    return exports39;
  },
  set exports(value) {
    exports39 = value;
  }
};
Object.defineProperty(exports39, "__esModule", { value: true });
exports39.BitReader = void 0;
var Address_12 = $$cjs_default$$29(typeof Address_exports !== "undefined" ? Address_exports : {});
var ExternalAddress_12 = $$cjs_default$$29(typeof ExternalAddress_exports !== "undefined" ? ExternalAddress_exports : {});
var BitReader = class {
  constructor(bits, offset = 0) {
    this._checkpoints = [];
    this._bits = bits;
    this._offset = offset;
  }
  /**
   * Offset in source bit string
   */
  get offset() {
    return this._offset;
  }
  /**
   * Number of bits remaining
   */
  get remaining() {
    return this._bits.length - this._offset;
  }
  /**
   * Skip bits
   * @param bits number of bits to skip
   */
  skip(bits) {
    if (bits < 0 || this._offset + bits > this._bits.length) {
      throw new Error(`Index ${this._offset + bits} is out of bounds`);
    }
    this._offset += bits;
  }
  /**
   * Reset to the beginning or latest checkpoint
   */
  reset() {
    if (this._checkpoints.length > 0) {
      this._offset = this._checkpoints.pop();
    } else {
      this._offset = 0;
    }
  }
  /**
   * Save checkpoint
   */
  save() {
    this._checkpoints.push(this._offset);
  }
  /**
   * Load a single bit
   * @returns true if the bit is set, false otherwise
   */
  loadBit() {
    let r2 = this._bits.at(this._offset);
    this._offset++;
    return r2;
  }
  /**
   * Preload bit
   * @returns true if the bit is set, false otherwise
   */
  preloadBit() {
    return this._bits.at(this._offset);
  }
  /**
   * Load bit string
   * @param bits number of bits to read
   * @returns new bitstring
   */
  loadBits(bits) {
    let r2 = this._bits.substring(this._offset, bits);
    this._offset += bits;
    return r2;
  }
  /**
   * Preload bit string
   * @param bits number of bits to read
   * @returns new bitstring
   */
  preloadBits(bits) {
    return this._bits.substring(this._offset, bits);
  }
  /**
   * Load buffer
   * @param bytes number of bytes
   * @returns new buffer
   */
  loadBuffer(bytes) {
    let buf = this._preloadBuffer(bytes, this._offset);
    this._offset += bytes * 8;
    return buf;
  }
  /**
   * Preload buffer
   * @param bytes number of bytes
   * @returns new buffer
   */
  preloadBuffer(bytes) {
    return this._preloadBuffer(bytes, this._offset);
  }
  /**
   * Load uint value
   * @param bits uint bits
   * @returns read value as number
   */
  loadUint(bits) {
    return this._toSafeInteger(this.loadUintBig(bits), "loadUintBig");
  }
  /**
   * Load uint value as bigint
   * @param bits uint bits
   * @returns read value as bigint
   */
  loadUintBig(bits) {
    let loaded = this.preloadUintBig(bits);
    this._offset += bits;
    return loaded;
  }
  /**
   * Preload uint value
   * @param bits uint bits
   * @returns read value as number
   */
  preloadUint(bits) {
    return this._toSafeInteger(this._preloadUint(bits, this._offset), "preloadUintBig");
  }
  /**
   * Preload uint value as bigint
   * @param bits uint bits
   * @returns read value as bigint
   */
  preloadUintBig(bits) {
    return this._preloadUint(bits, this._offset);
  }
  /**
   * Load int value
   * @param bits int bits
   * @returns read value as bigint
   */
  loadInt(bits) {
    let res = this._preloadInt(bits, this._offset);
    this._offset += bits;
    return this._toSafeInteger(res, "loadUintBig");
  }
  /**
   * Load int value as bigint
   * @param bits int bits
   * @returns read value as bigint
   */
  loadIntBig(bits) {
    let res = this._preloadInt(bits, this._offset);
    this._offset += bits;
    return res;
  }
  /**
   * Preload int value
   * @param bits int bits
   * @returns read value as bigint
   */
  preloadInt(bits) {
    return this._toSafeInteger(this._preloadInt(bits, this._offset), "preloadIntBig");
  }
  /**
   * Preload int value
   * @param bits int bits
   * @returns read value as bigint
   */
  preloadIntBig(bits) {
    return this._preloadInt(bits, this._offset);
  }
  /**
   * Load varuint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  loadVarUint(bits) {
    let size = Number(this.loadUint(bits));
    return this._toSafeInteger(this.loadUintBig(size * 8), "loadVarUintBig");
  }
  /**
   * Load varuint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  loadVarUintBig(bits) {
    let size = Number(this.loadUint(bits));
    return this.loadUintBig(size * 8);
  }
  /**
   * Preload varuint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  preloadVarUint(bits) {
    let size = Number(this._preloadUint(bits, this._offset));
    return this._toSafeInteger(this._preloadUint(size * 8, this._offset + bits), "preloadVarUintBig");
  }
  /**
   * Preload varuint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  preloadVarUintBig(bits) {
    let size = Number(this._preloadUint(bits, this._offset));
    return this._preloadUint(size * 8, this._offset + bits);
  }
  /**
   * Load varint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  loadVarInt(bits) {
    let size = Number(this.loadUint(bits));
    return this._toSafeInteger(this.loadIntBig(size * 8), "loadVarIntBig");
  }
  /**
   * Load varint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  loadVarIntBig(bits) {
    let size = Number(this.loadUint(bits));
    return this.loadIntBig(size * 8);
  }
  /**
   * Preload varint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  preloadVarInt(bits) {
    let size = Number(this._preloadUint(bits, this._offset));
    return this._toSafeInteger(this._preloadInt(size * 8, this._offset + bits), "preloadVarIntBig");
  }
  /**
   * Preload varint value
   * @param bits number of bits to read the size
   * @returns read value as bigint
   */
  preloadVarIntBig(bits) {
    let size = Number(this._preloadUint(bits, this._offset));
    return this._preloadInt(size * 8, this._offset + bits);
  }
  /**
   * Load coins value
   * @returns read value as bigint
   */
  loadCoins() {
    return this.loadVarUintBig(4);
  }
  /**
   * Preload coins value
   * @returns read value as bigint
   */
  preloadCoins() {
    return this.preloadVarUintBig(4);
  }
  /**
   * Load Address
   * @returns Address
   */
  loadAddress() {
    let type4 = Number(this._preloadUint(2, this._offset));
    if (type4 === 2) {
      return this._loadInternalAddress();
    } else {
      throw new Error("Invalid address: " + type4);
    }
  }
  /**
   * Load internal address
   * @returns Address or null
   */
  loadMaybeAddress() {
    let type4 = Number(this._preloadUint(2, this._offset));
    if (type4 === 0) {
      this._offset += 2;
      return null;
    } else if (type4 === 2) {
      return this._loadInternalAddress();
    } else {
      throw new Error("Invalid address");
    }
  }
  /**
   * Load external address
   * @returns ExternalAddress
   */
  loadExternalAddress() {
    let type4 = Number(this._preloadUint(2, this._offset));
    if (type4 === 1) {
      return this._loadExternalAddress();
    } else {
      throw new Error("Invalid address");
    }
  }
  /**
   * Load external address
   * @returns ExternalAddress or null
   */
  loadMaybeExternalAddress() {
    let type4 = Number(this._preloadUint(2, this._offset));
    if (type4 === 0) {
      this._offset += 2;
      return null;
    } else if (type4 === 1) {
      return this._loadExternalAddress();
    } else {
      throw new Error("Invalid address");
    }
  }
  /**
   * Read address of any type
   * @returns Address or ExternalAddress or null
   */
  loadAddressAny() {
    let type4 = Number(this._preloadUint(2, this._offset));
    if (type4 === 0) {
      this._offset += 2;
      return null;
    } else if (type4 === 2) {
      return this._loadInternalAddress();
    } else if (type4 === 1) {
      return this._loadExternalAddress();
    } else if (type4 === 3) {
      throw Error("Unsupported");
    } else {
      throw Error("Unreachable");
    }
  }
  /**
   * Load bit string that was padded to make it byte alligned. Used in BOC serialization
   * @param bytes number of bytes to read
   */
  loadPaddedBits(bits) {
    if (bits % 8 !== 0) {
      throw new Error("Invalid number of bits");
    }
    let length = bits;
    while (true) {
      if (this._bits.at(this._offset + length - 1)) {
        length--;
        break;
      } else {
        length--;
      }
    }
    let r2 = this._bits.substring(this._offset, length);
    this._offset += bits;
    return r2;
  }
  /**
   * Clone BitReader
   */
  clone() {
    return new BitReader(this._bits, this._offset);
  }
  /**
   * Preload int from specific offset
   * @param bits bits to preload
   * @param offset offset to start from
   * @returns read value as bigint
   */
  _preloadInt(bits, offset) {
    if (bits == 0) {
      return 0n;
    }
    let sign2 = this._bits.at(offset);
    let res = 0n;
    for (let i2 = 0; i2 < bits - 1; i2++) {
      if (this._bits.at(offset + 1 + i2)) {
        res += 1n << BigInt(bits - i2 - 1 - 1);
      }
    }
    if (sign2) {
      res = res - (1n << BigInt(bits - 1));
    }
    return res;
  }
  /**
   * Preload uint from specific offset
   * @param bits bits to preload
   * @param offset offset to start from
   * @returns read value as bigint
   */
  _preloadUint(bits, offset) {
    if (bits == 0) {
      return 0n;
    }
    let res = 0n;
    for (let i2 = 0; i2 < bits; i2++) {
      if (this._bits.at(offset + i2)) {
        res += 1n << BigInt(bits - i2 - 1);
      }
    }
    return res;
  }
  _preloadBuffer(bytes, offset) {
    let fastBuffer = this._bits.subbuffer(offset, bytes * 8);
    if (fastBuffer) {
      return fastBuffer;
    }
    let buf = Buffer.alloc(bytes);
    for (let i2 = 0; i2 < bytes; i2++) {
      buf[i2] = Number(this._preloadUint(8, offset + i2 * 8));
    }
    return buf;
  }
  _loadInternalAddress() {
    let type4 = Number(this._preloadUint(2, this._offset));
    if (type4 !== 2) {
      throw Error("Invalid address");
    }
    if (this._preloadUint(1, this._offset + 2) !== 0n) {
      throw Error("Invalid address");
    }
    let wc = Number(this._preloadInt(8, this._offset + 3));
    let hash = this._preloadBuffer(32, this._offset + 11);
    this._offset += 267;
    return new Address_12.Address(wc, hash);
  }
  _loadExternalAddress() {
    let type4 = Number(this._preloadUint(2, this._offset));
    if (type4 !== 1) {
      throw Error("Invalid address");
    }
    let bits = Number(this._preloadUint(9, this._offset + 2));
    let value = this._preloadUint(bits, this._offset + 11);
    this._offset += 11 + bits;
    return new ExternalAddress_12.ExternalAddress(value, bits);
  }
  _toSafeInteger(src, alt) {
    if (BigInt(Number.MAX_SAFE_INTEGER) < src || src < BigInt(Number.MIN_SAFE_INTEGER)) {
      throw new TypeError(`${src} is out of safe integer range. Use ${alt} instead`);
    }
    return Number(src);
  }
};
exports39.BitReader = BitReader;
var __export037;
if (Object.isExtensible(module39.exports)) {
  __export037 = module39.exports["BitReader"];
}

// ../../node_modules/@ton/core/dist/boc/cell/serialization.js
var serialization_exports = {};
__export(serialization_exports, {
  deserializeBoc: () => __export123,
  parseBoc: () => __export214,
  serializeBoc: () => __export042
});

// ../../node_modules/@ton/core/dist/boc/cell/descriptor.js
var descriptor_exports = {};
__export(descriptor_exports, {
  getBitsDescriptor: () => __export121,
  getRefsDescriptor: () => __export213,
  getRepr: () => __export039
});

// ../../node_modules/@ton/core/dist/boc/CellType.js
var CellType_exports = {};
__export(CellType_exports, {
  CellType: () => __export038
});
var exports40 = {};
var module40 = {
  get exports() {
    return exports40;
  },
  set exports(value) {
    exports40 = value;
  }
};
Object.defineProperty(exports40, "__esModule", { value: true });
exports40.CellType = void 0;
var CellType;
(function(CellType2) {
  CellType2[CellType2["Ordinary"] = -1] = "Ordinary";
  CellType2[CellType2["PrunedBranch"] = 1] = "PrunedBranch";
  CellType2[CellType2["Library"] = 2] = "Library";
  CellType2[CellType2["MerkleProof"] = 3] = "MerkleProof";
  CellType2[CellType2["MerkleUpdate"] = 4] = "MerkleUpdate";
})(CellType || (exports40.CellType = CellType = {}));
var __export038;
if (Object.isExtensible(module40.exports)) {
  __export038 = module40.exports["CellType"];
}

// ../../node_modules/@ton/core/dist/boc/cell/descriptor.js
function $$cjs_default$$30(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global31 !== "undefined" && global31 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global31 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global31 !== "undefined" && global31 || typeof globalThis !== "undefined" && globalThis || {};
var exports41 = {};
var module41 = {
  get exports() {
    return exports41;
  },
  set exports(value) {
    exports41 = value;
  }
};
Object.defineProperty(exports41, "__esModule", { value: true });
exports41.getRepr = exports41.getBitsDescriptor = exports41.getRefsDescriptor = void 0;
var CellType_1 = $$cjs_default$$30(typeof CellType_exports !== "undefined" ? CellType_exports : {});
var paddedBits_12 = $$cjs_default$$30(typeof paddedBits_exports !== "undefined" ? paddedBits_exports : {});
function getRefsDescriptor(refs, levelMask, type4) {
  return refs.length + (type4 !== CellType_1.CellType.Ordinary ? 1 : 0) * 8 + levelMask * 32;
}
exports41.getRefsDescriptor = getRefsDescriptor;
function getBitsDescriptor(bits) {
  let len = bits.length;
  return Math.ceil(len / 8) + Math.floor(len / 8);
}
exports41.getBitsDescriptor = getBitsDescriptor;
function getRepr(originalBits, bits, refs, level, levelMask, type4) {
  const bitsLen = Math.ceil(bits.length / 8);
  const repr = Buffer.alloc(2 + bitsLen + (2 + 32) * refs.length);
  let reprCursor = 0;
  repr[reprCursor++] = getRefsDescriptor(refs, levelMask, type4);
  repr[reprCursor++] = getBitsDescriptor(originalBits);
  (0, paddedBits_12.bitsToPaddedBuffer)(bits).copy(repr, reprCursor);
  reprCursor += bitsLen;
  for (const c2 of refs) {
    let childDepth;
    if (type4 == CellType_1.CellType.MerkleProof || type4 == CellType_1.CellType.MerkleUpdate) {
      childDepth = c2.depth(level + 1);
    } else {
      childDepth = c2.depth(level);
    }
    repr[reprCursor++] = Math.floor(childDepth / 256);
    repr[reprCursor++] = childDepth % 256;
  }
  for (const c2 of refs) {
    let childHash;
    if (type4 == CellType_1.CellType.MerkleProof || type4 == CellType_1.CellType.MerkleUpdate) {
      childHash = c2.hash(level + 1);
    } else {
      childHash = c2.hash(level);
    }
    childHash.copy(repr, reprCursor);
    reprCursor += 32;
  }
  return repr;
}
exports41.getRepr = getRepr;
var __export039;
var __export121;
var __export213;
if (Object.isExtensible(module41.exports)) {
  __export039 = module41.exports["getRepr"];
  __export121 = module41.exports["getBitsDescriptor"];
  __export213 = module41.exports["getRefsDescriptor"];
}

// ../../node_modules/@ton/core/dist/utils/bitsForNumber.js
var bitsForNumber_exports = {};
__export(bitsForNumber_exports, {
  bitsForNumber: () => __export040
});
var exports42 = {};
var module42 = {
  get exports() {
    return exports42;
  },
  set exports(value) {
    exports42 = value;
  }
};
Object.defineProperty(exports42, "__esModule", { value: true });
exports42.bitsForNumber = void 0;
function bitsForNumber(src, mode) {
  let v2 = BigInt(src);
  if (mode === "int") {
    if (v2 === 0n || v2 === -1n) {
      return 1;
    }
    let v22 = v2 > 0 ? v2 : -v2;
    return v22.toString(2).length + 1;
  } else if (mode === "uint") {
    if (v2 < 0) {
      throw Error(`value is negative. Got ${src}`);
    }
    return v2.toString(2).length;
  } else {
    throw Error(`invalid mode. Got ${mode}`);
  }
}
exports42.bitsForNumber = bitsForNumber;
var __export040;
if (Object.isExtensible(module42.exports)) {
  __export040 = module42.exports["bitsForNumber"];
}

// ../../node_modules/@ton/core/dist/boc/cell/utils/topologicalSort.js
var topologicalSort_exports = {};
__export(topologicalSort_exports, {
  topologicalSort: () => __export041
});
var exports43 = {};
var module43 = {
  get exports() {
    return exports43;
  },
  set exports(value) {
    exports43 = value;
  }
};
Object.defineProperty(exports43, "__esModule", { value: true });
exports43.topologicalSort = void 0;
function topologicalSort(src) {
  let pending = [src];
  let allCells = /* @__PURE__ */ new Map();
  let notPermCells = /* @__PURE__ */ new Set();
  let sorted = [];
  while (pending.length > 0) {
    const cells = [...pending];
    pending = [];
    for (let cell of cells) {
      const hash = cell.hash().toString("hex");
      if (allCells.has(hash)) {
        continue;
      }
      notPermCells.add(hash);
      allCells.set(hash, { cell, refs: cell.refs.map((v2) => v2.hash().toString("hex")) });
      for (let r2 of cell.refs) {
        pending.push(r2);
      }
    }
  }
  let tempMark = /* @__PURE__ */ new Set();
  function visit(hash) {
    if (!notPermCells.has(hash)) {
      return;
    }
    if (tempMark.has(hash)) {
      throw Error("Not a DAG");
    }
    tempMark.add(hash);
    let refs = allCells.get(hash).refs;
    for (let ci = refs.length - 1; ci >= 0; ci--) {
      visit(refs[ci]);
    }
    sorted.push(hash);
    tempMark.delete(hash);
    notPermCells.delete(hash);
  }
  while (notPermCells.size > 0) {
    const id = Array.from(notPermCells)[0];
    visit(id);
  }
  let indexes = /* @__PURE__ */ new Map();
  for (let i2 = 0; i2 < sorted.length; i2++) {
    indexes.set(sorted[sorted.length - i2 - 1], i2);
  }
  let result = [];
  for (let i2 = sorted.length - 1; i2 >= 0; i2--) {
    let ent = sorted[i2];
    const rrr = allCells.get(ent);
    result.push({ cell: rrr.cell, refs: rrr.refs.map((v2) => indexes.get(v2)) });
  }
  return result;
}
exports43.topologicalSort = topologicalSort;
var __export041;
if (Object.isExtensible(module43.exports)) {
  __export041 = module43.exports["topologicalSort"];
}

// ../../node_modules/@ton/core/dist/boc/cell/serialization.js
function $$cjs_default$$31(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global32 !== "undefined" && global32 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global32 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global32 !== "undefined" && global32 || typeof globalThis !== "undefined" && globalThis || {};
var exports44 = {};
var module44 = {
  get exports() {
    return exports44;
  },
  set exports(value) {
    exports44 = value;
  }
};
Object.defineProperty(exports44, "__esModule", { value: true });
exports44.serializeBoc = exports44.deserializeBoc = exports44.parseBoc = void 0;
var BitReader_1 = $$cjs_default$$31(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
var BitString_13 = $$cjs_default$$31(typeof BitString_exports !== "undefined" ? BitString_exports : {});
var Cell_12 = $$cjs_default$$31(typeof Cell_exports !== "undefined" ? Cell_exports : {});
var topologicalSort_1 = $$cjs_default$$31(typeof topologicalSort_exports !== "undefined" ? topologicalSort_exports : {});
var bitsForNumber_1 = $$cjs_default$$31(typeof bitsForNumber_exports !== "undefined" ? bitsForNumber_exports : {});
var BitBuilder_13 = $$cjs_default$$31(typeof BitBuilder_exports !== "undefined" ? BitBuilder_exports : {});
var descriptor_1 = $$cjs_default$$31(typeof descriptor_exports !== "undefined" ? descriptor_exports : {});
var paddedBits_13 = $$cjs_default$$31(typeof paddedBits_exports !== "undefined" ? paddedBits_exports : {});
var crc32c_1 = $$cjs_default$$31(typeof crc32c_exports !== "undefined" ? crc32c_exports : {});
function getHashesCount(levelMask) {
  return getHashesCountFromMask(levelMask & 7);
}
function getHashesCountFromMask(mask) {
  let n2 = 0;
  for (let i2 = 0; i2 < 3; i2++) {
    n2 += mask & 1;
    mask = mask >> 1;
  }
  return n2 + 1;
}
function readCell(reader, sizeBytes) {
  const d1 = reader.loadUint(8);
  const refsCount = d1 % 8;
  const exotic = !!(d1 & 8);
  const d2 = reader.loadUint(8);
  const dataBytesize = Math.ceil(d2 / 2);
  const paddingAdded = !!(d2 % 2);
  const levelMask = d1 >> 5;
  const hasHashes = (d1 & 16) != 0;
  const hash_bytes = 32;
  const hashesSize = hasHashes ? getHashesCount(levelMask) * hash_bytes : 0;
  const depthSize = hasHashes ? getHashesCount(levelMask) * 2 : 0;
  reader.skip(hashesSize * 8);
  reader.skip(depthSize * 8);
  let bits = BitString_13.BitString.EMPTY;
  if (dataBytesize > 0) {
    if (paddingAdded) {
      bits = reader.loadPaddedBits(dataBytesize * 8);
    } else {
      bits = reader.loadBits(dataBytesize * 8);
    }
  }
  let refs = [];
  for (let i2 = 0; i2 < refsCount; i2++) {
    refs.push(reader.loadUint(sizeBytes * 8));
  }
  return {
    bits,
    refs,
    exotic
  };
}
function calcCellSize(cell, sizeBytes) {
  return 2 + Math.ceil(cell.bits.length / 8) + cell.refs.length * sizeBytes;
}
function parseBoc(src) {
  let reader = new BitReader_1.BitReader(new BitString_13.BitString(src, 0, src.length * 8));
  let magic = reader.loadUint(32);
  if (magic === 1761568243) {
    let size = reader.loadUint(8);
    let offBytes = reader.loadUint(8);
    let cells = reader.loadUint(size * 8);
    let roots = reader.loadUint(size * 8);
    let absent = reader.loadUint(size * 8);
    let totalCellSize = reader.loadUint(offBytes * 8);
    let index = reader.loadBuffer(cells * offBytes);
    let cellData = reader.loadBuffer(totalCellSize);
    return {
      size,
      offBytes,
      cells,
      roots,
      absent,
      totalCellSize,
      index,
      cellData,
      root: [0]
    };
  } else if (magic === 2898503464) {
    let size = reader.loadUint(8);
    let offBytes = reader.loadUint(8);
    let cells = reader.loadUint(size * 8);
    let roots = reader.loadUint(size * 8);
    let absent = reader.loadUint(size * 8);
    let totalCellSize = reader.loadUint(offBytes * 8);
    let index = reader.loadBuffer(cells * offBytes);
    let cellData = reader.loadBuffer(totalCellSize);
    let crc32 = reader.loadBuffer(4);
    if (!(0, crc32c_1.crc32c)(src.subarray(0, src.length - 4)).equals(crc32)) {
      throw Error("Invalid CRC32C");
    }
    return {
      size,
      offBytes,
      cells,
      roots,
      absent,
      totalCellSize,
      index,
      cellData,
      root: [0]
    };
  } else if (magic === 3052313714) {
    let hasIdx = reader.loadUint(1);
    let hasCrc32c = reader.loadUint(1);
    reader.loadUint(1);
    reader.loadUint(2);
    let size = reader.loadUint(3);
    let offBytes = reader.loadUint(8);
    let cells = reader.loadUint(size * 8);
    let roots = reader.loadUint(size * 8);
    let absent = reader.loadUint(size * 8);
    let totalCellSize = reader.loadUint(offBytes * 8);
    let root = [];
    for (let i2 = 0; i2 < roots; i2++) {
      root.push(reader.loadUint(size * 8));
    }
    let index = null;
    if (hasIdx) {
      index = reader.loadBuffer(cells * offBytes);
    }
    let cellData = reader.loadBuffer(totalCellSize);
    if (hasCrc32c) {
      let crc32 = reader.loadBuffer(4);
      if (!(0, crc32c_1.crc32c)(src.subarray(0, src.length - 4)).equals(crc32)) {
        throw Error("Invalid CRC32C");
      }
    }
    return {
      size,
      offBytes,
      cells,
      roots,
      absent,
      totalCellSize,
      index,
      cellData,
      root
    };
  } else {
    throw Error("Invalid magic");
  }
}
exports44.parseBoc = parseBoc;
function deserializeBoc(src) {
  let boc = parseBoc(src);
  let reader = new BitReader_1.BitReader(new BitString_13.BitString(boc.cellData, 0, boc.cellData.length * 8));
  let cells = [];
  for (let i2 = 0; i2 < boc.cells; i2++) {
    let cll = readCell(reader, boc.size);
    cells.push({ ...cll, result: null });
  }
  for (let i2 = cells.length - 1; i2 >= 0; i2--) {
    if (cells[i2].result) {
      throw Error("Impossible");
    }
    let refs = [];
    for (let r2 of cells[i2].refs) {
      if (!cells[r2].result) {
        throw Error("Invalid BOC file");
      }
      refs.push(cells[r2].result);
    }
    cells[i2].result = new Cell_12.Cell({ bits: cells[i2].bits, refs, exotic: cells[i2].exotic });
  }
  let roots = [];
  for (let i2 = 0; i2 < boc.root.length; i2++) {
    roots.push(cells[boc.root[i2]].result);
  }
  return roots;
}
exports44.deserializeBoc = deserializeBoc;
function writeCellToBuilder(cell, refs, sizeBytes, to) {
  let d1 = (0, descriptor_1.getRefsDescriptor)(cell.refs, cell.mask.value, cell.type);
  let d2 = (0, descriptor_1.getBitsDescriptor)(cell.bits);
  to.writeUint(d1, 8);
  to.writeUint(d2, 8);
  to.writeBuffer((0, paddedBits_13.bitsToPaddedBuffer)(cell.bits));
  for (let r2 of refs) {
    to.writeUint(r2, sizeBytes * 8);
  }
}
function serializeBoc(root, opts) {
  let allCells = (0, topologicalSort_1.topologicalSort)(root);
  let cellsNum = allCells.length;
  let has_idx = opts.idx;
  let has_crc32c = opts.crc32;
  let has_cache_bits = false;
  let flags = 0;
  let sizeBytes = Math.max(Math.ceil((0, bitsForNumber_1.bitsForNumber)(cellsNum, "uint") / 8), 1);
  let totalCellSize = 0;
  let index = [];
  for (let c2 of allCells) {
    let sz = calcCellSize(c2.cell, sizeBytes);
    totalCellSize += sz;
    index.push(totalCellSize);
  }
  let offsetBytes = Math.max(Math.ceil((0, bitsForNumber_1.bitsForNumber)(totalCellSize, "uint") / 8), 1);
  let totalSize = (4 + // magic
  1 + // flags and s_bytes
  1 + // offset_bytes
  3 * sizeBytes + // cells_num, roots, complete
  offsetBytes + // full_size
  1 * sizeBytes + // root_idx
  (has_idx ? cellsNum * offsetBytes : 0) + totalCellSize + (has_crc32c ? 4 : 0)) * 8;
  let builder = new BitBuilder_13.BitBuilder(totalSize);
  builder.writeUint(3052313714, 32);
  builder.writeBit(has_idx);
  builder.writeBit(has_crc32c);
  builder.writeBit(has_cache_bits);
  builder.writeUint(flags, 2);
  builder.writeUint(sizeBytes, 3);
  builder.writeUint(offsetBytes, 8);
  builder.writeUint(cellsNum, sizeBytes * 8);
  builder.writeUint(1, sizeBytes * 8);
  builder.writeUint(0, sizeBytes * 8);
  builder.writeUint(totalCellSize, offsetBytes * 8);
  builder.writeUint(0, sizeBytes * 8);
  if (has_idx) {
    for (let i2 = 0; i2 < cellsNum; i2++) {
      builder.writeUint(index[i2], offsetBytes * 8);
    }
  }
  for (let i2 = 0; i2 < cellsNum; i2++) {
    writeCellToBuilder(allCells[i2].cell, allCells[i2].refs, sizeBytes, builder);
  }
  if (has_crc32c) {
    let crc32 = (0, crc32c_1.crc32c)(builder.buffer());
    builder.writeBuffer(crc32);
  }
  let res = builder.buffer();
  if (res.length !== totalSize / 8) {
    throw Error("Internal error");
  }
  return res;
}
exports44.serializeBoc = serializeBoc;
var __export042;
var __export123;
var __export214;
if (Object.isExtensible(module44.exports)) {
  __export042 = module44.exports["serializeBoc"];
  __export123 = module44.exports["deserializeBoc"];
  __export214 = module44.exports["parseBoc"];
}

// ../../node_modules/@ton/core/dist/boc/cell/wonderCalculator.js
var wonderCalculator_exports = {};
__export(wonderCalculator_exports, {
  wonderCalculator: () => __export048
});

// ../../node_modules/@ton/core/dist/boc/cell/exoticLibrary.js
var exoticLibrary_exports = {};
__export(exoticLibrary_exports, {
  exoticLibrary: () => __export043
});
function $$cjs_default$$32(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global33 !== "undefined" && global33 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global33 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global33 !== "undefined" && global33 || typeof globalThis !== "undefined" && globalThis || {};
var exports45 = {};
var module45 = {
  get exports() {
    return exports45;
  },
  set exports(value) {
    exports45 = value;
  }
};
Object.defineProperty(exports45, "__esModule", { value: true });
exports45.exoticLibrary = void 0;
var BitReader_12 = $$cjs_default$$32(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
function exoticLibrary(bits, refs) {
  const reader = new BitReader_12.BitReader(bits);
  const size = 8 + 256;
  if (bits.length !== size) {
    throw new Error(`Library cell must have exactly (8 + 256) bits, got "${bits.length}"`);
  }
  let type4 = reader.loadUint(8);
  if (type4 !== 2) {
    throw new Error(`Library cell must have type 2, got "${type4}"`);
  }
  return {};
}
exports45.exoticLibrary = exoticLibrary;
var __export043;
if (Object.isExtensible(module45.exports)) {
  __export043 = module45.exports["exoticLibrary"];
}

// ../../node_modules/@ton/core/dist/boc/cell/exoticMerkleUpdate.js
var exoticMerkleUpdate_exports = {};
__export(exoticMerkleUpdate_exports, {
  exoticMerkleUpdate: () => __export044
});
function $$cjs_default$$33(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global34 !== "undefined" && global34 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global34 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global34 !== "undefined" && global34 || typeof globalThis !== "undefined" && globalThis || {};
var exports46 = {};
var module46 = {
  get exports() {
    return exports46;
  },
  set exports(value) {
    exports46 = value;
  }
};
Object.defineProperty(exports46, "__esModule", { value: true });
exports46.exoticMerkleUpdate = void 0;
var BitReader_13 = $$cjs_default$$33(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
function exoticMerkleUpdate(bits, refs) {
  const reader = new BitReader_13.BitReader(bits);
  const size = 8 + 2 * (256 + 16);
  if (bits.length !== size) {
    throw new Error(`Merkle Update cell must have exactly (8 + (2 * (256 + 16))) bits, got "${bits.length}"`);
  }
  if (refs.length !== 2) {
    throw new Error(`Merkle Update cell must have exactly 2 refs, got "${refs.length}"`);
  }
  let type4 = reader.loadUint(8);
  if (type4 !== 4) {
    throw new Error(`Merkle Update cell type must be exactly 4, got "${type4}"`);
  }
  const proofHash1 = reader.loadBuffer(32);
  const proofHash2 = reader.loadBuffer(32);
  const proofDepth1 = reader.loadUint(16);
  const proofDepth2 = reader.loadUint(16);
  if (proofDepth1 !== refs[0].depth(0)) {
    throw new Error(`Merkle Update cell ref depth must be exactly "${proofDepth1}", got "${refs[0].depth(0)}"`);
  }
  if (!proofHash1.equals(refs[0].hash(0))) {
    throw new Error(`Merkle Update cell ref hash must be exactly "${proofHash1.toString("hex")}", got "${refs[0].hash(0).toString("hex")}"`);
  }
  if (proofDepth2 !== refs[1].depth(0)) {
    throw new Error(`Merkle Update cell ref depth must be exactly "${proofDepth2}", got "${refs[1].depth(0)}"`);
  }
  if (!proofHash2.equals(refs[1].hash(0))) {
    throw new Error(`Merkle Update cell ref hash must be exactly "${proofHash2.toString("hex")}", got "${refs[1].hash(0).toString("hex")}"`);
  }
  return {
    proofDepth1,
    proofDepth2,
    proofHash1,
    proofHash2
  };
}
exports46.exoticMerkleUpdate = exoticMerkleUpdate;
var __export044;
if (Object.isExtensible(module46.exports)) {
  __export044 = module46.exports["exoticMerkleUpdate"];
}

// ../../node_modules/@ton/core/dist/boc/cell/exoticMerkleProof.js
var exoticMerkleProof_exports = {};
__export(exoticMerkleProof_exports, {
  convertToMerkleProof: () => __export045,
  exoticMerkleProof: () => __export124
});
function $$cjs_default$$34(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global35 !== "undefined" && global35 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global35 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global35 !== "undefined" && global35 || typeof globalThis !== "undefined" && globalThis || {};
var exports47 = {};
var module47 = {
  get exports() {
    return exports47;
  },
  set exports(value) {
    exports47 = value;
  }
};
Object.defineProperty(exports47, "__esModule", { value: true });
exports47.convertToMerkleProof = exports47.exoticMerkleProof = void 0;
var BitReader_14 = $$cjs_default$$34(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
var Builder_12 = $$cjs_default$$34(typeof Builder_exports !== "undefined" ? Builder_exports : {});
function exoticMerkleProof(bits, refs) {
  const reader = new BitReader_14.BitReader(bits);
  const size = 8 + 256 + 16;
  if (bits.length !== size) {
    throw new Error(`Merkle Proof cell must have exactly (8 + 256 + 16) bits, got "${bits.length}"`);
  }
  if (refs.length !== 1) {
    throw new Error(`Merkle Proof cell must have exactly 1 ref, got "${refs.length}"`);
  }
  let type4 = reader.loadUint(8);
  if (type4 !== 3) {
    throw new Error(`Merkle Proof cell must have type 3, got "${type4}"`);
  }
  const proofHash = reader.loadBuffer(32);
  const proofDepth = reader.loadUint(16);
  const refHash = refs[0].hash(0);
  const refDepth = refs[0].depth(0);
  if (proofDepth !== refDepth) {
    throw new Error(`Merkle Proof cell ref depth must be exactly "${proofDepth}", got "${refDepth}"`);
  }
  if (!proofHash.equals(refHash)) {
    throw new Error(`Merkle Proof cell ref hash must be exactly "${proofHash.toString("hex")}", got "${refHash.toString("hex")}"`);
  }
  return {
    proofDepth,
    proofHash
  };
}
exports47.exoticMerkleProof = exoticMerkleProof;
function convertToMerkleProof(c2) {
  return (0, Builder_12.beginCell)().storeUint(3, 8).storeBuffer(c2.hash(0)).storeUint(c2.depth(0), 16).storeRef(c2).endCell({ exotic: true });
}
exports47.convertToMerkleProof = convertToMerkleProof;
var __export045;
var __export124;
if (Object.isExtensible(module47.exports)) {
  __export045 = module47.exports["convertToMerkleProof"];
  __export124 = module47.exports["exoticMerkleProof"];
}

// ../../node_modules/@ton/core/dist/boc/cell/exoticPruned.js
var exoticPruned_exports = {};
__export(exoticPruned_exports, {
  exoticPruned: () => __export047
});

// ../../node_modules/@ton/core/dist/boc/cell/LevelMask.js
var LevelMask_exports = {};
__export(LevelMask_exports, {
  LevelMask: () => __export046
});
var exports48 = {};
var module48 = {
  get exports() {
    return exports48;
  },
  set exports(value) {
    exports48 = value;
  }
};
Object.defineProperty(exports48, "__esModule", { value: true });
exports48.LevelMask = void 0;
var LevelMask = class {
  constructor(mask = 0) {
    this._mask = 0;
    this._mask = mask;
    this._hashIndex = countSetBits(this._mask);
    this._hashCount = this._hashIndex + 1;
  }
  get value() {
    return this._mask;
  }
  get level() {
    return 32 - Math.clz32(this._mask);
  }
  get hashIndex() {
    return this._hashIndex;
  }
  get hashCount() {
    return this._hashCount;
  }
  apply(level) {
    return new LevelMask(this._mask & (1 << level) - 1);
  }
  isSignificant(level) {
    let res = level === 0 || (this._mask >> level - 1) % 2 !== 0;
    return res;
  }
};
exports48.LevelMask = LevelMask;
function countSetBits(n2) {
  n2 = n2 - (n2 >> 1 & 1431655765);
  n2 = (n2 & 858993459) + (n2 >> 2 & 858993459);
  return (n2 + (n2 >> 4) & 252645135) * 16843009 >> 24;
}
var __export046;
if (Object.isExtensible(module48.exports)) {
  __export046 = module48.exports["LevelMask"];
}

// ../../node_modules/@ton/core/dist/boc/cell/exoticPruned.js
function $$cjs_default$$35(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global36 !== "undefined" && global36 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global36 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global36 !== "undefined" && global36 || typeof globalThis !== "undefined" && globalThis || {};
var exports49 = {};
var module49 = {
  get exports() {
    return exports49;
  },
  set exports(value) {
    exports49 = value;
  }
};
Object.defineProperty(exports49, "__esModule", { value: true });
exports49.exoticPruned = void 0;
var BitReader_15 = $$cjs_default$$35(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
var LevelMask_1 = $$cjs_default$$35(typeof LevelMask_exports !== "undefined" ? LevelMask_exports : {});
function exoticPruned(bits, refs) {
  let reader = new BitReader_15.BitReader(bits);
  let type4 = reader.loadUint(8);
  if (type4 !== 1) {
    throw new Error(`Pruned branch cell must have type 1, got "${type4}"`);
  }
  if (refs.length !== 0) {
    throw new Error(`Pruned Branch cell can't has refs, got "${refs.length}"`);
  }
  let mask;
  if (bits.length === 280) {
    mask = new LevelMask_1.LevelMask(1);
  } else {
    mask = new LevelMask_1.LevelMask(reader.loadUint(8));
    if (mask.level < 1 || mask.level > 3) {
      throw new Error(`Pruned Branch cell level must be >= 1 and <= 3, got "${mask.level}/${mask.value}"`);
    }
    const size = 8 + 8 + mask.apply(mask.level - 1).hashCount * (256 + 16);
    if (bits.length !== size) {
      throw new Error(`Pruned branch cell must have exactly ${size} bits, got "${bits.length}"`);
    }
  }
  let pruned = [];
  let hashes = [];
  let depths = [];
  for (let i2 = 0; i2 < mask.level; i2++) {
    hashes.push(reader.loadBuffer(32));
  }
  for (let i2 = 0; i2 < mask.level; i2++) {
    depths.push(reader.loadUint(16));
  }
  for (let i2 = 0; i2 < mask.level; i2++) {
    pruned.push({
      depth: depths[i2],
      hash: hashes[i2]
    });
  }
  return {
    mask: mask.value,
    pruned
  };
}
exports49.exoticPruned = exoticPruned;
var __export047;
if (Object.isExtensible(module49.exports)) {
  __export047 = module49.exports["exoticPruned"];
}

// ../../node_modules/@ton/core/dist/boc/cell/wonderCalculator.js
function $$cjs_default$$36(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global37 !== "undefined" && global37 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global37 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global37 !== "undefined" && global37 || typeof globalThis !== "undefined" && globalThis || {};
var exports50 = {};
var module50 = {
  get exports() {
    return exports50;
  },
  set exports(value) {
    exports50 = value;
  }
};
Object.defineProperty(exports50, "__esModule", { value: true });
exports50.wonderCalculator = void 0;
var BitString_14 = $$cjs_default$$36(typeof BitString_exports !== "undefined" ? BitString_exports : {});
var CellType_12 = $$cjs_default$$36(typeof CellType_exports !== "undefined" ? CellType_exports : {});
var LevelMask_12 = $$cjs_default$$36(typeof LevelMask_exports !== "undefined" ? LevelMask_exports : {});
var exoticPruned_1 = $$cjs_default$$36(typeof exoticPruned_exports !== "undefined" ? exoticPruned_exports : {});
var exoticMerkleProof_1 = $$cjs_default$$36(typeof exoticMerkleProof_exports !== "undefined" ? exoticMerkleProof_exports : {});
var descriptor_12 = $$cjs_default$$36(typeof descriptor_exports !== "undefined" ? descriptor_exports : {});
var crypto_17 = $$cjs_default$$36(typeof dist_exports !== "undefined" ? dist_exports : {});
var exoticMerkleUpdate_1 = $$cjs_default$$36(typeof exoticMerkleUpdate_exports !== "undefined" ? exoticMerkleUpdate_exports : {});
var exoticLibrary_1 = $$cjs_default$$36(typeof exoticLibrary_exports !== "undefined" ? exoticLibrary_exports : {});
function wonderCalculator(type4, bits, refs) {
  let levelMask;
  let pruned = null;
  if (type4 === CellType_12.CellType.Ordinary) {
    let mask = 0;
    for (let r2 of refs) {
      mask = mask | r2.mask.value;
    }
    levelMask = new LevelMask_12.LevelMask(mask);
  } else if (type4 === CellType_12.CellType.PrunedBranch) {
    pruned = (0, exoticPruned_1.exoticPruned)(bits, refs);
    levelMask = new LevelMask_12.LevelMask(pruned.mask);
  } else if (type4 === CellType_12.CellType.MerkleProof) {
    (0, exoticMerkleProof_1.exoticMerkleProof)(bits, refs);
    levelMask = new LevelMask_12.LevelMask(refs[0].mask.value >> 1);
  } else if (type4 === CellType_12.CellType.MerkleUpdate) {
    (0, exoticMerkleUpdate_1.exoticMerkleUpdate)(bits, refs);
    levelMask = new LevelMask_12.LevelMask((refs[0].mask.value | refs[1].mask.value) >> 1);
  } else if (type4 === CellType_12.CellType.Library) {
    (0, exoticLibrary_1.exoticLibrary)(bits, refs);
    levelMask = new LevelMask_12.LevelMask();
  } else {
    throw new Error("Unsupported exotic type");
  }
  let depths = [];
  let hashes = [];
  let hashCount = type4 === CellType_12.CellType.PrunedBranch ? 1 : levelMask.hashCount;
  let totalHashCount = levelMask.hashCount;
  let hashIOffset = totalHashCount - hashCount;
  for (let levelI = 0, hashI = 0; levelI <= levelMask.level; levelI++) {
    if (!levelMask.isSignificant(levelI)) {
      continue;
    }
    if (hashI < hashIOffset) {
      hashI++;
      continue;
    }
    let currentBits;
    if (hashI === hashIOffset) {
      if (!(levelI === 0 || type4 === CellType_12.CellType.PrunedBranch)) {
        throw Error("Invalid");
      }
      currentBits = bits;
    } else {
      if (!(levelI !== 0 && type4 !== CellType_12.CellType.PrunedBranch)) {
        throw Error("Invalid: " + levelI + ", " + type4);
      }
      currentBits = new BitString_14.BitString(hashes[hashI - hashIOffset - 1], 0, 256);
    }
    let currentDepth = 0;
    for (let c2 of refs) {
      let childDepth;
      if (type4 == CellType_12.CellType.MerkleProof || type4 == CellType_12.CellType.MerkleUpdate) {
        childDepth = c2.depth(levelI + 1);
      } else {
        childDepth = c2.depth(levelI);
      }
      currentDepth = Math.max(currentDepth, childDepth);
    }
    if (refs.length > 0) {
      currentDepth++;
    }
    let repr = (0, descriptor_12.getRepr)(bits, currentBits, refs, levelI, levelMask.apply(levelI).value, type4);
    let hash = (0, crypto_17.sha256_sync)(repr);
    let destI = hashI - hashIOffset;
    depths[destI] = currentDepth;
    hashes[destI] = hash;
    hashI++;
  }
  let resolvedHashes = [];
  let resolvedDepths = [];
  if (pruned) {
    for (let i2 = 0; i2 < 4; i2++) {
      const { hashIndex } = levelMask.apply(i2);
      const { hashIndex: thisHashIndex } = levelMask;
      if (hashIndex !== thisHashIndex) {
        resolvedHashes.push(pruned.pruned[hashIndex].hash);
        resolvedDepths.push(pruned.pruned[hashIndex].depth);
      } else {
        resolvedHashes.push(hashes[0]);
        resolvedDepths.push(depths[0]);
      }
    }
  } else {
    for (let i2 = 0; i2 < 4; i2++) {
      resolvedHashes.push(hashes[levelMask.apply(i2).hashIndex]);
      resolvedDepths.push(depths[levelMask.apply(i2).hashIndex]);
    }
  }
  return {
    mask: levelMask,
    hashes: resolvedHashes,
    depths: resolvedDepths
  };
}
exports50.wonderCalculator = wonderCalculator;
var __export048;
if (Object.isExtensible(module50.exports)) {
  __export048 = module50.exports["wonderCalculator"];
}

// ../../node_modules/@ton/core/dist/boc/cell/resolveExotic.js
var resolveExotic_exports = {};
__export(resolveExotic_exports, {
  resolveExotic: () => __export049
});
function $$cjs_default$$37(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global38 !== "undefined" && global38 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global38 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global38 !== "undefined" && global38 || typeof globalThis !== "undefined" && globalThis || {};
var exports51 = {};
var module51 = {
  get exports() {
    return exports51;
  },
  set exports(value) {
    exports51 = value;
  }
};
Object.defineProperty(exports51, "__esModule", { value: true });
exports51.resolveExotic = void 0;
var BitReader_16 = $$cjs_default$$37(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
var CellType_13 = $$cjs_default$$37(typeof CellType_exports !== "undefined" ? CellType_exports : {});
var exoticLibrary_12 = $$cjs_default$$37(typeof exoticLibrary_exports !== "undefined" ? exoticLibrary_exports : {});
var exoticMerkleProof_12 = $$cjs_default$$37(typeof exoticMerkleProof_exports !== "undefined" ? exoticMerkleProof_exports : {});
var exoticMerkleUpdate_12 = $$cjs_default$$37(typeof exoticMerkleUpdate_exports !== "undefined" ? exoticMerkleUpdate_exports : {});
var exoticPruned_12 = $$cjs_default$$37(typeof exoticPruned_exports !== "undefined" ? exoticPruned_exports : {});
var LevelMask_13 = $$cjs_default$$37(typeof LevelMask_exports !== "undefined" ? LevelMask_exports : {});
function resolvePruned(bits, refs) {
  let pruned = (0, exoticPruned_12.exoticPruned)(bits, refs);
  let depths = [];
  let hashes = [];
  let mask = new LevelMask_13.LevelMask(pruned.mask);
  for (let i2 = 0; i2 < pruned.pruned.length; i2++) {
    depths.push(pruned.pruned[i2].depth);
    hashes.push(pruned.pruned[i2].hash);
  }
  return {
    type: CellType_13.CellType.PrunedBranch,
    depths,
    hashes,
    mask
  };
}
function resolveLibrary(bits, refs) {
  (0, exoticLibrary_12.exoticLibrary)(bits, refs);
  let depths = [];
  let hashes = [];
  let mask = new LevelMask_13.LevelMask();
  return {
    type: CellType_13.CellType.Library,
    depths,
    hashes,
    mask
  };
}
function resolveMerkleProof(bits, refs) {
  (0, exoticMerkleProof_12.exoticMerkleProof)(bits, refs);
  let depths = [];
  let hashes = [];
  let mask = new LevelMask_13.LevelMask(refs[0].level() >> 1);
  return {
    type: CellType_13.CellType.MerkleProof,
    depths,
    hashes,
    mask
  };
}
function resolveMerkleUpdate(bits, refs) {
  (0, exoticMerkleUpdate_12.exoticMerkleUpdate)(bits, refs);
  let depths = [];
  let hashes = [];
  let mask = new LevelMask_13.LevelMask((refs[0].level() | refs[1].level()) >> 1);
  return {
    type: CellType_13.CellType.MerkleUpdate,
    depths,
    hashes,
    mask
  };
}
function resolveExotic(bits, refs) {
  let reader = new BitReader_16.BitReader(bits);
  let type4 = reader.preloadUint(8);
  if (type4 === 1) {
    return resolvePruned(bits, refs);
  }
  if (type4 === 2) {
    return resolveLibrary(bits, refs);
  }
  if (type4 === 3) {
    return resolveMerkleProof(bits, refs);
  }
  if (type4 === 4) {
    return resolveMerkleUpdate(bits, refs);
  }
  throw Error("Invalid exotic cell type: " + type4);
}
exports51.resolveExotic = resolveExotic;
var __export049;
if (Object.isExtensible(module51.exports)) {
  __export049 = module51.exports["resolveExotic"];
}

// ../../node_modules/@ton/core/dist/boc/Slice.js
var Slice_exports = {};
__export(Slice_exports, {
  Slice: () => __export058
});

// ../../node_modules/@ton/core/dist/dict/Dictionary.js
var Dictionary_exports = {};
__export(Dictionary_exports, {
  Dictionary: () => __export057
});

// ../../node_modules/@ton/core/dist/dict/utils/internalKeySerializer.js
var internalKeySerializer_exports = {};
__export(internalKeySerializer_exports, {
  deserializeInternalKey: () => __export050,
  serializeInternalKey: () => __export125
});
function $$cjs_default$$38(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global39 !== "undefined" && global39 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global39 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global39 !== "undefined" && global39 || typeof globalThis !== "undefined" && globalThis || {};
var exports52 = {};
var module52 = {
  get exports() {
    return exports52;
  },
  set exports(value) {
    exports52 = value;
  }
};
Object.defineProperty(exports52, "__esModule", { value: true });
exports52.deserializeInternalKey = exports52.serializeInternalKey = void 0;
var Address_13 = $$cjs_default$$38(typeof Address_exports !== "undefined" ? Address_exports : {});
var BitString_15 = $$cjs_default$$38(typeof BitString_exports !== "undefined" ? BitString_exports : {});
var paddedBits_14 = $$cjs_default$$38(typeof paddedBits_exports !== "undefined" ? paddedBits_exports : {});
function serializeInternalKey(value) {
  if (typeof value === "number") {
    if (!Number.isSafeInteger(value)) {
      throw Error("Invalid key type: not a safe integer: " + value);
    }
    return "n:" + value.toString(10);
  } else if (typeof value === "bigint") {
    return "b:" + value.toString(10);
  } else if (Address_13.Address.isAddress(value)) {
    return "a:" + value.toString();
  } else if (Buffer.isBuffer(value)) {
    return "f:" + value.toString("hex");
  } else if (BitString_15.BitString.isBitString(value)) {
    return "B:" + value.toString();
  } else {
    throw Error("Invalid key type");
  }
}
exports52.serializeInternalKey = serializeInternalKey;
function deserializeInternalKey(value) {
  let k2 = value.slice(0, 2);
  let v2 = value.slice(2);
  if (k2 === "n:") {
    return parseInt(v2, 10);
  } else if (k2 === "b:") {
    return BigInt(v2);
  } else if (k2 === "a:") {
    return Address_13.Address.parse(v2);
  } else if (k2 === "f:") {
    return Buffer.from(v2, "hex");
  } else if (k2 === "B:") {
    const lastDash = v2.slice(-1) == "_";
    const isPadded = lastDash || v2.length % 2 != 0;
    if (isPadded) {
      let charLen = lastDash ? v2.length - 1 : v2.length;
      const padded = v2.substr(0, charLen) + "0";
      if (!lastDash && (charLen & 1) !== 0) {
        return new BitString_15.BitString(Buffer.from(padded, "hex"), 0, charLen << 2);
      } else {
        return (0, paddedBits_14.paddedBufferToBits)(Buffer.from(padded, "hex"));
      }
    } else {
      return new BitString_15.BitString(Buffer.from(v2, "hex"), 0, v2.length << 2);
    }
  }
  throw Error("Invalid key type: " + k2);
}
exports52.deserializeInternalKey = deserializeInternalKey;
var __export050;
var __export125;
if (Object.isExtensible(module52.exports)) {
  __export050 = module52.exports["deserializeInternalKey"];
  __export125 = module52.exports["serializeInternalKey"];
}

// ../../node_modules/@ton/core/dist/dict/serializeDict.js
var serializeDict_exports = {};
__export(serializeDict_exports, {
  buildTree: () => __export55,
  detectLabelType: () => __export126,
  serializeDict: () => __export052,
  writeLabelLong: () => __export35,
  writeLabelSame: () => __export215,
  writeLabelShort: () => __export45
});

// ../../node_modules/@ton/core/dist/dict/utils/findCommonPrefix.js
var findCommonPrefix_exports = {};
__export(findCommonPrefix_exports, {
  findCommonPrefix: () => __export051
});
var exports53 = {};
var module53 = {
  get exports() {
    return exports53;
  },
  set exports(value) {
    exports53 = value;
  }
};
Object.defineProperty(exports53, "__esModule", { value: true });
exports53.findCommonPrefix = void 0;
function findCommonPrefix(src, startPos = 0) {
  if (src.length === 0) {
    return "";
  }
  let r2 = src[0].slice(startPos);
  for (let i2 = 1; i2 < src.length; i2++) {
    const s2 = src[i2];
    while (s2.indexOf(r2, startPos) !== startPos) {
      r2 = r2.substring(0, r2.length - 1);
      if (r2 === "") {
        return r2;
      }
    }
  }
  return r2;
}
exports53.findCommonPrefix = findCommonPrefix;
var __export051;
if (Object.isExtensible(module53.exports)) {
  __export051 = module53.exports["findCommonPrefix"];
}

// ../../node_modules/@ton/core/dist/dict/serializeDict.js
function $$cjs_default$$39(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global40 !== "undefined" && global40 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global40 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global40 !== "undefined" && global40 || typeof globalThis !== "undefined" && globalThis || {};
var exports54 = {};
var module54 = {
  get exports() {
    return exports54;
  },
  set exports(value) {
    exports54 = value;
  }
};
Object.defineProperty(exports54, "__esModule", { value: true });
exports54.serializeDict = exports54.detectLabelType = exports54.writeLabelSame = exports54.writeLabelLong = exports54.writeLabelShort = exports54.buildTree = void 0;
var Builder_13 = $$cjs_default$$39(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var findCommonPrefix_1 = $$cjs_default$$39(typeof findCommonPrefix_exports !== "undefined" ? findCommonPrefix_exports : {});
function pad(src, size) {
  while (src.length < size) {
    src = "0" + src;
  }
  return src;
}
function forkMap(src, prefixLen) {
  if (src.size === 0) {
    throw Error("Internal inconsistency");
  }
  let left = /* @__PURE__ */ new Map();
  let right = /* @__PURE__ */ new Map();
  for (let [k2, d2] of src.entries()) {
    if (k2[prefixLen] === "0") {
      left.set(k2, d2);
    } else {
      right.set(k2, d2);
    }
  }
  if (left.size === 0) {
    throw Error("Internal inconsistency. Left emtpy.");
  }
  if (right.size === 0) {
    throw Error("Internal inconsistency. Right emtpy.");
  }
  return { left, right };
}
function buildNode(src, prefixLen) {
  if (src.size === 0) {
    throw Error("Internal inconsistency");
  }
  if (src.size === 1) {
    return { type: "leaf", value: Array.from(src.values())[0] };
  }
  let { left, right } = forkMap(src, prefixLen);
  return {
    type: "fork",
    left: buildEdge(left, prefixLen + 1),
    right: buildEdge(right, prefixLen + 1)
  };
}
function buildEdge(src, prefixLen = 0) {
  if (src.size === 0) {
    throw Error("Internal inconsistency");
  }
  const label = (0, findCommonPrefix_1.findCommonPrefix)(Array.from(src.keys()), prefixLen);
  return { label, node: buildNode(src, label.length + prefixLen) };
}
function buildTree(src, keyLength) {
  let converted = /* @__PURE__ */ new Map();
  for (let k2 of Array.from(src.keys())) {
    const padded = pad(k2.toString(2), keyLength);
    converted.set(padded, src.get(k2));
  }
  return buildEdge(converted);
}
exports54.buildTree = buildTree;
function writeLabelShort(src, to) {
  to.storeBit(0);
  for (let i2 = 0; i2 < src.length; i2++) {
    to.storeBit(1);
  }
  to.storeBit(0);
  if (src.length > 0) {
    to.storeUint(BigInt("0b" + src), src.length);
  }
  return to;
}
exports54.writeLabelShort = writeLabelShort;
function labelShortLength(src) {
  return 1 + src.length + 1 + src.length;
}
function writeLabelLong(src, keyLength, to) {
  to.storeBit(1);
  to.storeBit(0);
  let length = Math.ceil(Math.log2(keyLength + 1));
  to.storeUint(src.length, length);
  if (src.length > 0) {
    to.storeUint(BigInt("0b" + src), src.length);
  }
  return to;
}
exports54.writeLabelLong = writeLabelLong;
function labelLongLength(src, keyLength) {
  return 1 + 1 + Math.ceil(Math.log2(keyLength + 1)) + src.length;
}
function writeLabelSame(value, length, keyLength, to) {
  to.storeBit(1);
  to.storeBit(1);
  to.storeBit(value);
  let lenLen = Math.ceil(Math.log2(keyLength + 1));
  to.storeUint(length, lenLen);
}
exports54.writeLabelSame = writeLabelSame;
function labelSameLength(keyLength) {
  return 1 + 1 + 1 + Math.ceil(Math.log2(keyLength + 1));
}
function isSame(src) {
  if (src.length === 0 || src.length === 1) {
    return true;
  }
  for (let i2 = 1; i2 < src.length; i2++) {
    if (src[i2] !== src[0]) {
      return false;
    }
  }
  return true;
}
function detectLabelType(src, keyLength) {
  let kind = "short";
  let kindLength = labelShortLength(src);
  let longLength = labelLongLength(src, keyLength);
  if (longLength < kindLength) {
    kindLength = longLength;
    kind = "long";
  }
  if (isSame(src)) {
    let sameLength = labelSameLength(keyLength);
    if (sameLength < kindLength) {
      kindLength = sameLength;
      kind = "same";
    }
  }
  return kind;
}
exports54.detectLabelType = detectLabelType;
function writeLabel(src, keyLength, to) {
  let type4 = detectLabelType(src, keyLength);
  if (type4 === "short") {
    writeLabelShort(src, to);
  } else if (type4 === "long") {
    writeLabelLong(src, keyLength, to);
  } else if (type4 === "same") {
    writeLabelSame(src[0] === "1", src.length, keyLength, to);
  }
}
function writeNode(src, keyLength, serializer, to) {
  if (src.type === "leaf") {
    serializer(src.value, to);
  }
  if (src.type === "fork") {
    const leftCell = (0, Builder_13.beginCell)();
    const rightCell = (0, Builder_13.beginCell)();
    writeEdge(src.left, keyLength - 1, serializer, leftCell);
    writeEdge(src.right, keyLength - 1, serializer, rightCell);
    to.storeRef(leftCell);
    to.storeRef(rightCell);
  }
}
function writeEdge(src, keyLength, serializer, to) {
  writeLabel(src.label, keyLength, to);
  writeNode(src.node, keyLength - src.label.length, serializer, to);
}
function serializeDict(src, keyLength, serializer, to) {
  const tree = buildTree(src, keyLength);
  writeEdge(tree, keyLength, serializer, to);
}
exports54.serializeDict = serializeDict;
var __export052;
var __export126;
var __export215;
var __export35;
var __export45;
var __export55;
if (Object.isExtensible(module54.exports)) {
  __export052 = module54.exports["serializeDict"];
  __export126 = module54.exports["detectLabelType"];
  __export215 = module54.exports["writeLabelSame"];
  __export35 = module54.exports["writeLabelLong"];
  __export45 = module54.exports["writeLabelShort"];
  __export55 = module54.exports["buildTree"];
}

// ../../node_modules/@ton/core/dist/dict/parseDict.js
var parseDict_exports = {};
__export(parseDict_exports, {
  parseDict: () => __export053
});
var exports55 = {};
var module55 = {
  get exports() {
    return exports55;
  },
  set exports(value) {
    exports55 = value;
  }
};
Object.defineProperty(exports55, "__esModule", { value: true });
exports55.parseDict = void 0;
function readUnaryLength(slice) {
  let res = 0;
  while (slice.loadBit()) {
    res++;
  }
  return res;
}
function doParse(prefix, slice, n2, res, extractor) {
  let lb0 = slice.loadBit() ? 1 : 0;
  let prefixLength = 0;
  let pp = prefix;
  if (lb0 === 0) {
    prefixLength = readUnaryLength(slice);
    for (let i2 = 0; i2 < prefixLength; i2++) {
      pp += slice.loadBit() ? "1" : "0";
    }
  } else {
    let lb1 = slice.loadBit() ? 1 : 0;
    if (lb1 === 0) {
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n2 + 1)));
      for (let i2 = 0; i2 < prefixLength; i2++) {
        pp += slice.loadBit() ? "1" : "0";
      }
    } else {
      let bit = slice.loadBit() ? "1" : "0";
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n2 + 1)));
      for (let i2 = 0; i2 < prefixLength; i2++) {
        pp += bit;
      }
    }
  }
  if (n2 - prefixLength === 0) {
    res.set(BigInt("0b" + pp), extractor(slice));
  } else {
    let left = slice.loadRef();
    let right = slice.loadRef();
    if (!left.isExotic) {
      doParse(pp + "0", left.beginParse(), n2 - prefixLength - 1, res, extractor);
    }
    if (!right.isExotic) {
      doParse(pp + "1", right.beginParse(), n2 - prefixLength - 1, res, extractor);
    }
  }
}
function parseDict(sc, keySize, extractor) {
  let res = /* @__PURE__ */ new Map();
  if (sc) {
    doParse("", sc, keySize, res, extractor);
  }
  return res;
}
exports55.parseDict = parseDict;
var __export053;
if (Object.isExtensible(module55.exports)) {
  __export053 = module55.exports["parseDict"];
}

// ../../node_modules/@ton/core/dist/dict/generateMerkleUpdate.js
var generateMerkleUpdate_exports = {};
__export(generateMerkleUpdate_exports, {
  generateMerkleUpdate: () => __export056
});

// ../../node_modules/@ton/core/dist/dict/generateMerkleProof.js
var generateMerkleProof_exports = {};
__export(generateMerkleProof_exports, {
  generateMerkleProof: () => __export055,
  generateMerkleProofDirect: () => __export127
});

// ../../node_modules/@ton/core/dist/dict/utils/readUnaryLength.js
var readUnaryLength_exports = {};
__export(readUnaryLength_exports, {
  readUnaryLength: () => __export054
});
var exports56 = {};
var module56 = {
  get exports() {
    return exports56;
  },
  set exports(value) {
    exports56 = value;
  }
};
Object.defineProperty(exports56, "__esModule", { value: true });
exports56.readUnaryLength = void 0;
function readUnaryLength2(slice) {
  let res = 0;
  while (slice.loadBit()) {
    res++;
  }
  return res;
}
exports56.readUnaryLength = readUnaryLength2;
var __export054;
if (Object.isExtensible(module56.exports)) {
  __export054 = module56.exports["readUnaryLength"];
}

// ../../node_modules/@ton/core/dist/dict/generateMerkleProof.js
function $$cjs_default$$40(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global41 !== "undefined" && global41 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global41 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global41 !== "undefined" && global41 || typeof globalThis !== "undefined" && globalThis || {};
var exports57 = {};
var module57 = {
  get exports() {
    return exports57;
  },
  set exports(value) {
    exports57 = value;
  }
};
Object.defineProperty(exports57, "__esModule", { value: true });
exports57.generateMerkleProof = exports57.generateMerkleProofDirect = void 0;
var Builder_14 = $$cjs_default$$40(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var readUnaryLength_1 = $$cjs_default$$40(typeof readUnaryLength_exports !== "undefined" ? readUnaryLength_exports : {});
var exoticMerkleProof_13 = $$cjs_default$$40(typeof exoticMerkleProof_exports !== "undefined" ? exoticMerkleProof_exports : {});
function convertToPrunedBranch(c2) {
  return (0, Builder_14.beginCell)().storeUint(1, 8).storeUint(1, 8).storeBuffer(c2.hash(0)).storeUint(c2.depth(0), 16).endCell({ exotic: true });
}
function doGenerateMerkleProof(prefix, slice, n2, keys) {
  const originalCell = slice.asCell();
  if (keys.length == 0) {
    return convertToPrunedBranch(originalCell);
  }
  let lb0 = slice.loadBit() ? 1 : 0;
  let prefixLength = 0;
  let pp = prefix;
  if (lb0 === 0) {
    prefixLength = (0, readUnaryLength_1.readUnaryLength)(slice);
    for (let i2 = 0; i2 < prefixLength; i2++) {
      pp += slice.loadBit() ? "1" : "0";
    }
  } else {
    let lb1 = slice.loadBit() ? 1 : 0;
    if (lb1 === 0) {
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n2 + 1)));
      for (let i2 = 0; i2 < prefixLength; i2++) {
        pp += slice.loadBit() ? "1" : "0";
      }
    } else {
      let bit = slice.loadBit() ? "1" : "0";
      prefixLength = slice.loadUint(Math.ceil(Math.log2(n2 + 1)));
      for (let i2 = 0; i2 < prefixLength; i2++) {
        pp += bit;
      }
    }
  }
  if (n2 - prefixLength === 0) {
    return originalCell;
  } else {
    let sl = originalCell.beginParse();
    let left = sl.loadRef();
    let right = sl.loadRef();
    if (!left.isExotic) {
      const leftKeys = keys.filter((key) => {
        return pp + "0" === key.slice(0, pp.length + 1);
      });
      left = doGenerateMerkleProof(pp + "0", left.beginParse(), n2 - prefixLength - 1, leftKeys);
    }
    if (!right.isExotic) {
      const rightKeys = keys.filter((key) => {
        return pp + "1" === key.slice(0, pp.length + 1);
      });
      right = doGenerateMerkleProof(pp + "1", right.beginParse(), n2 - prefixLength - 1, rightKeys);
    }
    return (0, Builder_14.beginCell)().storeSlice(sl).storeRef(left).storeRef(right).endCell();
  }
}
function generateMerkleProofDirect(dict, keys, keyObject) {
  keys.forEach((key) => {
    if (!dict.has(key)) {
      throw new Error(`Trying to generate merkle proof for a missing key "${key}"`);
    }
  });
  const s2 = (0, Builder_14.beginCell)().storeDictDirect(dict).asSlice();
  return doGenerateMerkleProof("", s2, keyObject.bits, keys.map((key) => keyObject.serialize(key).toString(2).padStart(keyObject.bits, "0")));
}
exports57.generateMerkleProofDirect = generateMerkleProofDirect;
function generateMerkleProof(dict, keys, keyObject) {
  return (0, exoticMerkleProof_13.convertToMerkleProof)(generateMerkleProofDirect(dict, keys, keyObject));
}
exports57.generateMerkleProof = generateMerkleProof;
var __export055;
var __export127;
if (Object.isExtensible(module57.exports)) {
  __export055 = module57.exports["generateMerkleProof"];
  __export127 = module57.exports["generateMerkleProofDirect"];
}

// ../../node_modules/@ton/core/dist/dict/generateMerkleUpdate.js
function $$cjs_default$$41(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global42 !== "undefined" && global42 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global42 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global42 !== "undefined" && global42 || typeof globalThis !== "undefined" && globalThis || {};
var exports58 = {};
var module58 = {
  get exports() {
    return exports58;
  },
  set exports(value) {
    exports58 = value;
  }
};
Object.defineProperty(exports58, "__esModule", { value: true });
exports58.generateMerkleUpdate = void 0;
var Builder_15 = $$cjs_default$$41(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var generateMerkleProof_1 = $$cjs_default$$41(typeof generateMerkleProof_exports !== "undefined" ? generateMerkleProof_exports : {});
function convertToMerkleUpdate(c1, c2) {
  return (0, Builder_15.beginCell)().storeUint(4, 8).storeBuffer(c1.hash(0)).storeBuffer(c2.hash(0)).storeUint(c1.depth(0), 16).storeUint(c2.depth(0), 16).storeRef(c1).storeRef(c2).endCell({ exotic: true });
}
function generateMerkleUpdate(dict, key, keyObject, newValue) {
  const oldProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, [key], keyObject).refs[0];
  dict.set(key, newValue);
  const newProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, [key], keyObject).refs[0];
  return convertToMerkleUpdate(oldProof, newProof);
}
exports58.generateMerkleUpdate = generateMerkleUpdate;
var __export056;
if (Object.isExtensible(module58.exports)) {
  __export056 = module58.exports["generateMerkleUpdate"];
}

// ../../node_modules/@ton/core/dist/dict/Dictionary.js
function $$cjs_default$$42(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global43 !== "undefined" && global43 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global43 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global43 !== "undefined" && global43 || typeof globalThis !== "undefined" && globalThis || {};
var exports59 = {};
var module59 = {
  get exports() {
    return exports59;
  },
  set exports(value) {
    exports59 = value;
  }
};
Object.defineProperty(exports59, "__esModule", { value: true });
exports59.Dictionary = void 0;
var Address_14 = $$cjs_default$$42(typeof Address_exports !== "undefined" ? Address_exports : {});
var Builder_16 = $$cjs_default$$42(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var Cell_13 = $$cjs_default$$42(typeof Cell_exports !== "undefined" ? Cell_exports : {});
var BitString_16 = $$cjs_default$$42(typeof BitString_exports !== "undefined" ? BitString_exports : {});
var generateMerkleProof_12 = $$cjs_default$$42(typeof generateMerkleProof_exports !== "undefined" ? generateMerkleProof_exports : {});
var generateMerkleUpdate_1 = $$cjs_default$$42(typeof generateMerkleUpdate_exports !== "undefined" ? generateMerkleUpdate_exports : {});
var parseDict_1 = $$cjs_default$$42(typeof parseDict_exports !== "undefined" ? parseDict_exports : {});
var serializeDict_1 = $$cjs_default$$42(typeof serializeDict_exports !== "undefined" ? serializeDict_exports : {});
var internalKeySerializer_1 = $$cjs_default$$42(typeof internalKeySerializer_exports !== "undefined" ? internalKeySerializer_exports : {});
var Dictionary = class {
  /**
   * Create an empty map
   * @param key key type
   * @param value value type
   * @returns Dictionary<K, V>
   */
  static empty(key, value) {
    if (key && value) {
      return new Dictionary(/* @__PURE__ */ new Map(), key, value);
    } else {
      return new Dictionary(/* @__PURE__ */ new Map(), null, null);
    }
  }
  /**
   * Load dictionary from slice
   * @param key key description
   * @param value value description
   * @param src slice
   * @returns Dictionary<K, V>
   */
  static load(key, value, sc) {
    let slice;
    if (sc instanceof Cell_13.Cell) {
      if (sc.isExotic) {
        return Dictionary.empty(key, value);
      }
      slice = sc.beginParse();
    } else {
      slice = sc;
    }
    let cell = slice.loadMaybeRef();
    if (cell && !cell.isExotic) {
      return Dictionary.loadDirect(key, value, cell.beginParse());
    } else {
      return Dictionary.empty(key, value);
    }
  }
  /**
   * Low level method for rare dictionaries from system contracts.
   * Loads dictionary from slice directly without going to the ref.
   *
   * @param key key description
   * @param value value description
   * @param sc slice
   * @returns Dictionary<K, V>
   */
  static loadDirect(key, value, sc) {
    if (!sc) {
      return Dictionary.empty(key, value);
    }
    let slice;
    if (sc instanceof Cell_13.Cell) {
      slice = sc.beginParse();
    } else {
      slice = sc;
    }
    let values = (0, parseDict_1.parseDict)(slice, key.bits, value.parse);
    let prepare = /* @__PURE__ */ new Map();
    for (let [k2, v2] of values) {
      prepare.set((0, internalKeySerializer_1.serializeInternalKey)(key.parse(k2)), v2);
    }
    return new Dictionary(prepare, key, value);
  }
  constructor(values, key, value) {
    this._key = key;
    this._value = value;
    this._map = values;
  }
  get size() {
    return this._map.size;
  }
  get(key) {
    return this._map.get((0, internalKeySerializer_1.serializeInternalKey)(key));
  }
  has(key) {
    return this._map.has((0, internalKeySerializer_1.serializeInternalKey)(key));
  }
  set(key, value) {
    this._map.set((0, internalKeySerializer_1.serializeInternalKey)(key), value);
    return this;
  }
  delete(key) {
    const k2 = (0, internalKeySerializer_1.serializeInternalKey)(key);
    return this._map.delete(k2);
  }
  clear() {
    this._map.clear();
  }
  *[Symbol.iterator]() {
    for (const [k2, v2] of this._map) {
      const key = (0, internalKeySerializer_1.deserializeInternalKey)(k2);
      yield [key, v2];
    }
  }
  keys() {
    return Array.from(this._map.keys()).map((v2) => (0, internalKeySerializer_1.deserializeInternalKey)(v2));
  }
  values() {
    return Array.from(this._map.values());
  }
  store(builder, key, value) {
    if (this._map.size === 0) {
      builder.storeBit(0);
    } else {
      let resolvedKey = this._key;
      if (key !== null && key !== void 0) {
        resolvedKey = key;
      }
      let resolvedValue = this._value;
      if (value !== null && value !== void 0) {
        resolvedValue = value;
      }
      if (!resolvedKey) {
        throw Error("Key serializer is not defined");
      }
      if (!resolvedValue) {
        throw Error("Value serializer is not defined");
      }
      let prepared = /* @__PURE__ */ new Map();
      for (const [k2, v2] of this._map) {
        prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k2)), v2);
      }
      builder.storeBit(1);
      let dd = (0, Builder_16.beginCell)();
      (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, dd);
      builder.storeRef(dd.endCell());
    }
  }
  storeDirect(builder, key, value) {
    if (this._map.size === 0) {
      throw Error("Cannot store empty dictionary directly");
    }
    let resolvedKey = this._key;
    if (key !== null && key !== void 0) {
      resolvedKey = key;
    }
    let resolvedValue = this._value;
    if (value !== null && value !== void 0) {
      resolvedValue = value;
    }
    if (!resolvedKey) {
      throw Error("Key serializer is not defined");
    }
    if (!resolvedValue) {
      throw Error("Value serializer is not defined");
    }
    let prepared = /* @__PURE__ */ new Map();
    for (const [k2, v2] of this._map) {
      prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k2)), v2);
    }
    (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, builder);
  }
  /**
   * Generate merkle proof for multiple keys in the dictionary
   * @param keys an array of the keys
   * @returns generated merkle proof cell
   */
  generateMerkleProof(keys) {
    return (0, generateMerkleProof_12.generateMerkleProof)(this, keys, this._key);
  }
  /**
   * Low level method for generating pruned dictionary directly.
   * The result can be used as a part of a bigger merkle proof
   * @param keys an array of the keys
   * @returns cell that contains the pruned dictionary
   */
  generateMerkleProofDirect(keys) {
    return (0, generateMerkleProof_12.generateMerkleProofDirect)(this, keys, this._key);
  }
  generateMerkleUpdate(key, newValue) {
    return (0, generateMerkleUpdate_1.generateMerkleUpdate)(this, key, this._key, newValue);
  }
};
exports59.Dictionary = Dictionary;
Dictionary.Keys = {
  /**
   * Standard address key
   * @returns DictionaryKey<Address>
   */
  Address: () => {
    return createAddressKey();
  },
  /**
   * Create standard big integer key
   * @param bits number of bits
   * @returns DictionaryKey<bigint>
   */
  BigInt: (bits) => {
    return createBigIntKey(bits);
  },
  /**
   * Create integer key
   * @param bits bits of integer
   * @returns DictionaryKey<number>
   */
  Int: (bits) => {
    return createIntKey(bits);
  },
  /**
   * Create standard unsigned big integer key
   * @param bits number of bits
   * @returns DictionaryKey<bigint>
   */
  BigUint: (bits) => {
    return createBigUintKey(bits);
  },
  /**
   * Create standard unsigned integer key
   * @param bits number of bits
   * @returns DictionaryKey<number>
   */
  Uint: (bits) => {
    return createUintKey(bits);
  },
  /**
   * Create standard buffer key
   * @param bytes number of bytes of a buffer
   * @returns DictionaryKey<Buffer>
   */
  Buffer: (bytes) => {
    return createBufferKey(bytes);
  },
  /**
   * Create BitString key
   * @param bits key length
   * @returns DictionaryKey<BitString>
   * Point is that Buffer has to be 8 bit aligned,
   * while key is TVM dictionary doesn't have to be
   * aligned at all.
   */
  BitString: (bits) => {
    return createBitStringKey(bits);
  }
};
Dictionary.Values = {
  /**
   * Create standard integer value
   * @returns DictionaryValue<bigint>
   */
  BigInt: (bits) => {
    return createBigIntValue(bits);
  },
  /**
   * Create standard integer value
   * @returns DictionaryValue<number>
   */
  Int: (bits) => {
    return createIntValue(bits);
  },
  /**
   * Create big var int
   * @param bits nubmer of header bits
   * @returns DictionaryValue<bigint>
   */
  BigVarInt: (bits) => {
    return createBigVarIntValue(bits);
  },
  /**
   * Create standard unsigned integer value
   * @param bits number of bits
   * @returns DictionaryValue<bigint>
   */
  BigUint: (bits) => {
    return createBigUintValue(bits);
  },
  /**
   * Create standard unsigned integer value
   * @param bits number of bits
   * @returns DictionaryValue<bigint>
   */
  Uint: (bits) => {
    return createUintValue(bits);
  },
  /**
   * Create big var int
   * @param bits nubmer of header bits
   * @returns DictionaryValue<bigint>
   */
  BigVarUint: (bits) => {
    return createBigVarUintValue(bits);
  },
  /**
   * Create standard boolean value
   * @returns DictionaryValue<boolean>
   */
  Bool: () => {
    return createBooleanValue();
  },
  /**
   * Create standard address value
   * @returns DictionaryValue<Address>
   */
  Address: () => {
    return createAddressValue();
  },
  /**
   * Create standard cell value
   * @returns DictionaryValue<Cell>
   */
  Cell: () => {
    return createCellValue();
  },
  /**
   * Create Builder value
   * @param bytes number of bytes of a buffer
   * @returns DictionaryValue<Builder>
   */
  Buffer: (bytes) => {
    return createBufferValue(bytes);
  },
  /**
   * Create BitString value
   * @param requested bit length
   * @returns DictionaryValue<BitString>
   * Point is that Buffer is not applicable
   * when length is not 8 bit alligned.
   */
  BitString: (bits) => {
    return createBitStringValue(bits);
  },
  /**
   * Create dictionary value
   * @param key
   * @param value
   */
  Dictionary: (key, value) => {
    return createDictionaryValue(key, value);
  }
};
function createAddressKey() {
  return {
    bits: 267,
    serialize: (src) => {
      if (!Address_14.Address.isAddress(src)) {
        throw Error("Key is not an address");
      }
      return (0, Builder_16.beginCell)().storeAddress(src).endCell().beginParse().preloadUintBig(267);
    },
    parse: (src) => {
      return (0, Builder_16.beginCell)().storeUint(src, 267).endCell().beginParse().loadAddress();
    }
  };
}
function createBigIntKey(bits) {
  return {
    bits,
    serialize: (src) => {
      if (typeof src !== "bigint") {
        throw Error("Key is not a bigint");
      }
      return (0, Builder_16.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: (src) => {
      return (0, Builder_16.beginCell)().storeUint(src, bits).endCell().beginParse().loadIntBig(bits);
    }
  };
}
function createIntKey(bits) {
  return {
    bits,
    serialize: (src) => {
      if (typeof src !== "number") {
        throw Error("Key is not a number");
      }
      if (!Number.isSafeInteger(src)) {
        throw Error("Key is not a safe integer: " + src);
      }
      return (0, Builder_16.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: (src) => {
      return (0, Builder_16.beginCell)().storeUint(src, bits).endCell().beginParse().loadInt(bits);
    }
  };
}
function createBigUintKey(bits) {
  return {
    bits,
    serialize: (src) => {
      if (typeof src !== "bigint") {
        throw Error("Key is not a bigint");
      }
      if (src < 0) {
        throw Error("Key is negative: " + src);
      }
      return (0, Builder_16.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: (src) => {
      return (0, Builder_16.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);
    }
  };
}
function createUintKey(bits) {
  return {
    bits,
    serialize: (src) => {
      if (typeof src !== "number") {
        throw Error("Key is not a number");
      }
      if (!Number.isSafeInteger(src)) {
        throw Error("Key is not a safe integer: " + src);
      }
      if (src < 0) {
        throw Error("Key is negative: " + src);
      }
      return (0, Builder_16.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);
    },
    parse: (src) => {
      return Number((0, Builder_16.beginCell)().storeUint(src, bits).endCell().beginParse().loadUint(bits));
    }
  };
}
function createBufferKey(bytes) {
  return {
    bits: bytes * 8,
    serialize: (src) => {
      if (!Buffer.isBuffer(src)) {
        throw Error("Key is not a buffer");
      }
      return (0, Builder_16.beginCell)().storeBuffer(src).endCell().beginParse().loadUintBig(bytes * 8);
    },
    parse: (src) => {
      return (0, Builder_16.beginCell)().storeUint(src, bytes * 8).endCell().beginParse().loadBuffer(bytes);
    }
  };
}
function createBitStringKey(bits) {
  return {
    bits,
    serialize: (src) => {
      if (!BitString_16.BitString.isBitString(src))
        throw Error("Key is not a BitString");
      return (0, Builder_16.beginCell)().storeBits(src).endCell().beginParse().loadUintBig(bits);
    },
    parse: (src) => {
      return (0, Builder_16.beginCell)().storeUint(src, bits).endCell().beginParse().loadBits(bits);
    }
  };
}
function createIntValue(bits) {
  return {
    serialize: (src, buidler) => {
      buidler.storeInt(src, bits);
    },
    parse: (src) => {
      return src.loadInt(bits);
    }
  };
}
function createBigIntValue(bits) {
  return {
    serialize: (src, buidler) => {
      buidler.storeInt(src, bits);
    },
    parse: (src) => {
      return src.loadIntBig(bits);
    }
  };
}
function createBigVarIntValue(bits) {
  return {
    serialize: (src, buidler) => {
      buidler.storeVarInt(src, bits);
    },
    parse: (src) => {
      return src.loadVarIntBig(bits);
    }
  };
}
function createBigVarUintValue(bits) {
  return {
    serialize: (src, buidler) => {
      buidler.storeVarUint(src, bits);
    },
    parse: (src) => {
      return src.loadVarUintBig(bits);
    }
  };
}
function createUintValue(bits) {
  return {
    serialize: (src, buidler) => {
      buidler.storeUint(src, bits);
    },
    parse: (src) => {
      return src.loadUint(bits);
    }
  };
}
function createBigUintValue(bits) {
  return {
    serialize: (src, buidler) => {
      buidler.storeUint(src, bits);
    },
    parse: (src) => {
      return src.loadUintBig(bits);
    }
  };
}
function createBooleanValue() {
  return {
    serialize: (src, buidler) => {
      buidler.storeBit(src);
    },
    parse: (src) => {
      return src.loadBit();
    }
  };
}
function createAddressValue() {
  return {
    serialize: (src, buidler) => {
      buidler.storeAddress(src);
    },
    parse: (src) => {
      return src.loadAddress();
    }
  };
}
function createCellValue() {
  return {
    serialize: (src, buidler) => {
      buidler.storeRef(src);
    },
    parse: (src) => {
      return src.loadRef();
    }
  };
}
function createDictionaryValue(key, value) {
  return {
    serialize: (src, buidler) => {
      src.store(buidler);
    },
    parse: (src) => {
      return Dictionary.load(key, value, src);
    }
  };
}
function createBufferValue(size) {
  return {
    serialize: (src, buidler) => {
      if (src.length !== size) {
        throw Error("Invalid buffer size");
      }
      buidler.storeBuffer(src);
    },
    parse: (src) => {
      return src.loadBuffer(size);
    }
  };
}
function createBitStringValue(bits) {
  return {
    serialize: (src, builder) => {
      if (src.length !== bits) {
        throw Error("Invalid BitString size");
      }
      builder.storeBits(src);
    },
    parse: (src) => {
      return src.loadBits(bits);
    }
  };
}
var __export057;
if (Object.isExtensible(module59.exports)) {
  __export057 = module59.exports["Dictionary"];
}

// ../../node_modules/@ton/core/dist/boc/Slice.js
function $$cjs_default$$43(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global44 !== "undefined" && global44 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global44 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global44 !== "undefined" && global44 || typeof globalThis !== "undefined" && globalThis || {};
var exports60 = {};
var module60 = {
  get exports() {
    return exports60;
  },
  set exports(value) {
    exports60 = value;
  }
};
var __importDefault14 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
var _a4;
Object.defineProperty(exports60, "__esModule", { value: true });
exports60.Slice = void 0;
var symbol_inspect_14 = __importDefault14($$cjs_default$$43(typeof symbol_exports !== "undefined" ? symbol_exports : {}));
var Dictionary_1 = $$cjs_default$$43(typeof Dictionary_exports !== "undefined" ? Dictionary_exports : {});
var Builder_17 = $$cjs_default$$43(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var strings_12 = $$cjs_default$$43(typeof strings_exports !== "undefined" ? strings_exports : {});
var Slice = class {
  constructor(reader, refs) {
    this[_a4] = () => this.toString();
    this._reader = reader.clone();
    this._refs = [...refs];
    this._refsOffset = 0;
  }
  /**
   * Get remaining bits
   */
  get remainingBits() {
    return this._reader.remaining;
  }
  /**
   * Get offset bits
   */
  get offsetBits() {
    return this._reader.offset;
  }
  /**
   * Get remaining refs
   */
  get remainingRefs() {
    return this._refs.length - this._refsOffset;
  }
  /**
   * Get offset refs
   */
  get offsetRefs() {
    return this._refsOffset;
  }
  /**
   * Skip bits
   * @param bits
   */
  skip(bits) {
    this._reader.skip(bits);
    return this;
  }
  /**
   * Load a single bit
   * @returns true or false depending on the bit value
   */
  loadBit() {
    return this._reader.loadBit();
  }
  /**
   * Preload a signle bit
   * @returns true or false depending on the bit value
   */
  preloadBit() {
    return this._reader.preloadBit();
  }
  /**
   * Load a boolean
   * @returns true or false depending on the bit value
   */
  loadBoolean() {
    return this.loadBit();
  }
  /**
   * Load maybe boolean
   * @returns true or false depending on the bit value or null
   */
  loadMaybeBoolean() {
    if (this.loadBit()) {
      return this.loadBoolean();
    } else {
      return null;
    }
  }
  /**
   * Load bits as a new BitString
   * @param bits number of bits to read
   * @returns new BitString
   */
  loadBits(bits) {
    return this._reader.loadBits(bits);
  }
  /**
   * Preload bits as a new BitString
   * @param bits number of bits to read
   * @returns new BitString
   */
  preloadBits(bits) {
    return this._reader.preloadBits(bits);
  }
  /**
   * Load uint
   * @param bits number of bits to read
   * @returns uint value
   */
  loadUint(bits) {
    return this._reader.loadUint(bits);
  }
  /**
   * Load uint
   * @param bits number of bits to read
   * @returns uint value
   */
  loadUintBig(bits) {
    return this._reader.loadUintBig(bits);
  }
  /**
   * Preload uint
   * @param bits number of bits to read
   * @returns uint value
   */
  preloadUint(bits) {
    return this._reader.preloadUint(bits);
  }
  /**
   * Preload uint
   * @param bits number of bits to read
   * @returns uint value
   */
  preloadUintBig(bits) {
    return this._reader.preloadUintBig(bits);
  }
  /**
   * Load maybe uint
   * @param bits number of bits to read
   * @returns uint value or null
   */
  loadMaybeUint(bits) {
    if (this.loadBit()) {
      return this.loadUint(bits);
    } else {
      return null;
    }
  }
  /**
   * Load maybe uint
   * @param bits number of bits to read
   * @returns uint value or null
   */
  loadMaybeUintBig(bits) {
    if (this.loadBit()) {
      return this.loadUintBig(bits);
    } else {
      return null;
    }
  }
  /**
   * Load int
   * @param bits number of bits to read
   * @returns int value
   */
  loadInt(bits) {
    return this._reader.loadInt(bits);
  }
  /**
   * Load int
   * @param bits number of bits to read
   * @returns int value
   */
  loadIntBig(bits) {
    return this._reader.loadIntBig(bits);
  }
  /**
   * Preload int
   * @param bits number of bits to read
   * @returns int value
   */
  preloadInt(bits) {
    return this._reader.preloadInt(bits);
  }
  /**
   * Preload int
   * @param bits number of bits to read
   * @returns int value
   */
  preloadIntBig(bits) {
    return this._reader.preloadIntBig(bits);
  }
  /**
   * Load maybe uint
   * @param bits number of bits to read
   * @returns uint value or null
   */
  loadMaybeInt(bits) {
    if (this.loadBit()) {
      return this.loadInt(bits);
    } else {
      return null;
    }
  }
  /**
   * Load maybe uint
   * @param bits number of bits to read
   * @returns uint value or null
   */
  loadMaybeIntBig(bits) {
    if (this.loadBit()) {
      return this.loadIntBig(bits);
    } else {
      return null;
    }
  }
  /**
   * Load varuint
   * @param bits number of bits to read in header
   * @returns varuint value
   */
  loadVarUint(bits) {
    return this._reader.loadVarUint(bits);
  }
  /**
   * Load varuint
   * @param bits number of bits to read in header
   * @returns varuint value
   */
  loadVarUintBig(bits) {
    return this._reader.loadVarUintBig(bits);
  }
  /**
   * Preload varuint
   * @param bits number of bits to read in header
   * @returns varuint value
   */
  preloadVarUint(bits) {
    return this._reader.preloadVarUint(bits);
  }
  /**
   * Preload varuint
   * @param bits number of bits to read in header
   * @returns varuint value
   */
  preloadVarUintBig(bits) {
    return this._reader.preloadVarUintBig(bits);
  }
  /**
   * Load varint
   * @param bits number of bits to read in header
   * @returns varint value
   */
  loadVarInt(bits) {
    return this._reader.loadVarInt(bits);
  }
  /**
   * Load varint
   * @param bits number of bits to read in header
   * @returns varint value
   */
  loadVarIntBig(bits) {
    return this._reader.loadVarIntBig(bits);
  }
  /**
   * Preload varint
   * @param bits number of bits to read in header
   * @returns varint value
   */
  preloadVarInt(bits) {
    return this._reader.preloadVarInt(bits);
  }
  /**
   * Preload varint
   * @param bits number of bits to read in header
   * @returns varint value
   */
  preloadVarIntBig(bits) {
    return this._reader.preloadVarIntBig(bits);
  }
  /**
   * Load coins
   * @returns coins value
   */
  loadCoins() {
    return this._reader.loadCoins();
  }
  /**
   * Preload coins
   * @returns coins value
   */
  preloadCoins() {
    return this._reader.preloadCoins();
  }
  /**
   * Load maybe coins
   * @returns coins value or null
   */
  loadMaybeCoins() {
    if (this._reader.loadBit()) {
      return this._reader.loadCoins();
    } else {
      return null;
    }
  }
  /**
   * Load internal Address
   * @returns Address
   */
  loadAddress() {
    return this._reader.loadAddress();
  }
  /**
   * Load optional internal Address
   * @returns Address or null
   */
  loadMaybeAddress() {
    return this._reader.loadMaybeAddress();
  }
  /**
   * Load external address
   * @returns ExternalAddress
   */
  loadExternalAddress() {
    return this._reader.loadExternalAddress();
  }
  /**
   * Load optional external address
   * @returns ExternalAddress or null
   */
  loadMaybeExternalAddress() {
    return this._reader.loadMaybeExternalAddress();
  }
  /**
   * Load address
   * @returns Address, ExternalAddress or null
   */
  loadAddressAny() {
    return this._reader.loadAddressAny();
  }
  /**
   * Load reference
   * @returns Cell
   */
  loadRef() {
    if (this._refsOffset >= this._refs.length) {
      throw new Error("No more references");
    }
    return this._refs[this._refsOffset++];
  }
  /**
   * Preload reference
   * @returns Cell
   */
  preloadRef() {
    if (this._refsOffset >= this._refs.length) {
      throw new Error("No more references");
    }
    return this._refs[this._refsOffset];
  }
  /**
   * Load optional reference
   * @returns Cell or null
   */
  loadMaybeRef() {
    if (this.loadBit()) {
      return this.loadRef();
    } else {
      return null;
    }
  }
  /**
   * Preload optional reference
   * @returns Cell or null
   */
  preloadMaybeRef() {
    if (this.preloadBit()) {
      return this.preloadRef();
    } else {
      return null;
    }
  }
  /**
   * Load byte buffer
   * @param bytes number of bytes to load
   * @returns Buffer
   */
  loadBuffer(bytes) {
    return this._reader.loadBuffer(bytes);
  }
  /**
   * Load byte buffer
   * @param bytes number of bytes to load
   * @returns Buffer
   */
  preloadBuffer(bytes) {
    return this._reader.preloadBuffer(bytes);
  }
  /**
   * Load string tail
   */
  loadStringTail() {
    return (0, strings_12.readString)(this);
  }
  /**
   * Load maybe string tail
   * @returns string or null
   */
  loadMaybeStringTail() {
    if (this.loadBit()) {
      return (0, strings_12.readString)(this);
    } else {
      return null;
    }
  }
  /**
   * Load string tail from ref
   * @returns string
   */
  loadStringRefTail() {
    return (0, strings_12.readString)(this.loadRef().beginParse());
  }
  /**
   * Load maybe string tail from ref
   * @returns string or null
   */
  loadMaybeStringRefTail() {
    const ref = this.loadMaybeRef();
    if (ref) {
      return (0, strings_12.readString)(ref.beginParse());
    } else {
      return null;
    }
  }
  /**
   * Loads dictionary
   * @param key key description
   * @param value value description
   * @returns Dictionary<K, V>
   */
  loadDict(key, value) {
    return Dictionary_1.Dictionary.load(key, value, this);
  }
  /**
   * Loads dictionary directly from current slice
   * @param key key description
   * @param value value description
   * @returns Dictionary<K, V>
   */
  loadDictDirect(key, value) {
    return Dictionary_1.Dictionary.loadDirect(key, value, this);
  }
  /**
   * Checks if slice is empty
   */
  endParse() {
    if (this.remainingBits > 0 || this.remainingRefs > 0) {
      throw new Error("Slice is not empty");
    }
  }
  /**
   * Convert slice to cell
   */
  asCell() {
    return (0, Builder_17.beginCell)().storeSlice(this).endCell();
  }
  /**
   *
   * @returns
   */
  asBuilder() {
    return (0, Builder_17.beginCell)().storeSlice(this);
  }
  /**
   * Clone slice
   * @returns cloned slice
   */
  clone(fromStart = false) {
    if (fromStart) {
      let reader = this._reader.clone();
      reader.reset();
      return new Slice(reader, this._refs);
    } else {
      let res = new Slice(this._reader, this._refs);
      res._refsOffset = this._refsOffset;
      return res;
    }
  }
  /**
   * Print slice as string by converting it to cell
   * @returns string
   */
  toString() {
    return this.asCell().toString();
  }
};
exports60.Slice = Slice;
_a4 = symbol_inspect_14.default;
var __export058;
if (Object.isExtensible(module60.exports)) {
  __export058 = module60.exports["Slice"];
}

// ../../node_modules/@ton/core/dist/boc/Cell.js
function $$cjs_default$$44(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global45 !== "undefined" && global45 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global45 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global45 !== "undefined" && global45 || typeof globalThis !== "undefined" && globalThis || {};
var exports61 = {};
var module61 = {
  get exports() {
    return exports61;
  },
  set exports(value) {
    exports61 = value;
  }
};
var __importDefault15 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
var _a5;
Object.defineProperty(exports61, "__esModule", { value: true });
exports61.Cell = void 0;
var symbol_inspect_15 = __importDefault15($$cjs_default$$44(typeof symbol_exports !== "undefined" ? symbol_exports : {}));
var BitString_17 = $$cjs_default$$44(typeof BitString_exports !== "undefined" ? BitString_exports : {});
var CellType_14 = $$cjs_default$$44(typeof CellType_exports !== "undefined" ? CellType_exports : {});
var Slice_1 = $$cjs_default$$44(typeof Slice_exports !== "undefined" ? Slice_exports : {});
var resolveExotic_1 = $$cjs_default$$44(typeof resolveExotic_exports !== "undefined" ? resolveExotic_exports : {});
var wonderCalculator_1 = $$cjs_default$$44(typeof wonderCalculator_exports !== "undefined" ? wonderCalculator_exports : {});
var serialization_1 = $$cjs_default$$44(typeof serialization_exports !== "undefined" ? serialization_exports : {});
var BitReader_17 = $$cjs_default$$44(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
var Builder_18 = $$cjs_default$$44(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var Cell = class {
  /**
   * Deserialize cells from BOC
   * @param src source buffer
   * @returns array of cells
   */
  static fromBoc(src) {
    return (0, serialization_1.deserializeBoc)(src);
  }
  /**
   * Helper function that deserializes a single cell from BOC in base64
   * @param src source string
   */
  static fromBase64(src) {
    let parsed = Cell.fromBoc(Buffer.from(src, "base64"));
    if (parsed.length !== 1) {
      throw new Error("Deserialized more than one cell");
    }
    return parsed[0];
  }
  /**
   * Helper function that deserializes a single cell from BOC in hex
   * @param src source string
   */
  static fromHex(src) {
    let parsed = Cell.fromBoc(Buffer.from(src, "hex"));
    if (parsed.length !== 1) {
      throw new Error("Deserialized more than one cell");
    }
    return parsed[0];
  }
  constructor(opts) {
    this._hashes = [];
    this._depths = [];
    this.beginParse = (allowExotic = false) => {
      if (this.isExotic && !allowExotic) {
        throw new Error("Exotic cells cannot be parsed");
      }
      return new Slice_1.Slice(new BitReader_17.BitReader(this.bits), this.refs);
    };
    this.hash = (level = 3) => {
      return this._hashes[Math.min(this._hashes.length - 1, level)];
    };
    this.depth = (level = 3) => {
      return this._depths[Math.min(this._depths.length - 1, level)];
    };
    this.level = () => {
      return this.mask.level;
    };
    this.equals = (other) => {
      return this.hash().equals(other.hash());
    };
    this[_a5] = () => this.toString();
    let bits = BitString_17.BitString.EMPTY;
    if (opts && opts.bits) {
      bits = opts.bits;
    }
    let refs = [];
    if (opts && opts.refs) {
      refs = [...opts.refs];
    }
    let hashes;
    let depths;
    let mask;
    let type4 = CellType_14.CellType.Ordinary;
    if (opts && opts.exotic) {
      let resolved = (0, resolveExotic_1.resolveExotic)(bits, refs);
      let wonders = (0, wonderCalculator_1.wonderCalculator)(resolved.type, bits, refs);
      mask = wonders.mask;
      depths = wonders.depths;
      hashes = wonders.hashes;
      type4 = resolved.type;
    } else {
      if (refs.length > 4) {
        throw new Error("Invalid number of references");
      }
      if (bits.length > 1023) {
        throw new Error(`Bits overflow: ${bits.length} > 1023`);
      }
      let wonders = (0, wonderCalculator_1.wonderCalculator)(CellType_14.CellType.Ordinary, bits, refs);
      mask = wonders.mask;
      depths = wonders.depths;
      hashes = wonders.hashes;
      type4 = CellType_14.CellType.Ordinary;
    }
    this.type = type4;
    this.bits = bits;
    this.refs = refs;
    this.mask = mask;
    this._depths = depths;
    this._hashes = hashes;
    Object.freeze(this);
    Object.freeze(this.refs);
    Object.freeze(this.bits);
    Object.freeze(this.mask);
    Object.freeze(this._depths);
    Object.freeze(this._hashes);
  }
  /**
   * Check if cell is exotic
   */
  get isExotic() {
    return this.type !== CellType_14.CellType.Ordinary;
  }
  /**
   * Serializes cell to BOC
   * @param opts options
   */
  toBoc(opts) {
    let idx = opts && opts.idx !== null && opts.idx !== void 0 ? opts.idx : false;
    let crc32 = opts && opts.crc32 !== null && opts.crc32 !== void 0 ? opts.crc32 : true;
    return (0, serialization_1.serializeBoc)(this, { idx, crc32 });
  }
  /**
   * Format cell to string
   * @param indent indentation
   * @returns string representation
   */
  toString(indent) {
    let id = indent || "";
    let t2 = "x";
    if (this.isExotic) {
      if (this.type === CellType_14.CellType.MerkleProof) {
        t2 = "p";
      } else if (this.type === CellType_14.CellType.MerkleUpdate) {
        t2 = "u";
      } else if (this.type === CellType_14.CellType.PrunedBranch) {
        t2 = "p";
      }
    }
    let s2 = id + (this.isExotic ? t2 : "x") + "{" + this.bits.toString() + "}";
    for (let k2 in this.refs) {
      const i2 = this.refs[k2];
      s2 += "\n" + i2.toString(id + " ");
    }
    return s2;
  }
  /**
   * Covnert cell to slice
   * @returns slice
   */
  asSlice() {
    return this.beginParse();
  }
  /**
   * Convert cell to a builder that has this cell stored
   * @returns builder
   */
  asBuilder() {
    return (0, Builder_18.beginCell)().storeSlice(this.asSlice());
  }
};
exports61.Cell = Cell;
_a5 = symbol_inspect_15.default;
Cell.EMPTY = new Cell();
var __export059;
if (Object.isExtensible(module61.exports)) {
  __export059 = module61.exports["Cell"];
}

// ../../node_modules/@ton/core/dist/contract/openContract.js
function $$cjs_default$$45(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global46 !== "undefined" && global46 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global46 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global46 !== "undefined" && global46 || typeof globalThis !== "undefined" && globalThis || {};
var exports62 = {};
var module62 = {
  get exports() {
    return exports62;
  },
  set exports(value) {
    exports62 = value;
  }
};
Object.defineProperty(exports62, "__esModule", { value: true });
exports62.openContract = void 0;
var Address_15 = $$cjs_default$$45(typeof Address_exports !== "undefined" ? Address_exports : {});
var Cell_14 = $$cjs_default$$45(typeof Cell_exports !== "undefined" ? Cell_exports : {});
function openContract(src, factory) {
  let address2;
  let init = null;
  if (!Address_15.Address.isAddress(src.address)) {
    throw Error("Invalid address");
  }
  address2 = src.address;
  if (src.init) {
    if (!(src.init.code instanceof Cell_14.Cell)) {
      throw Error("Invalid init.code");
    }
    if (!(src.init.data instanceof Cell_14.Cell)) {
      throw Error("Invalid init.data");
    }
    init = src.init;
  }
  let executor = factory({ address: address2, init });
  return new Proxy(src, {
    get(target, prop) {
      const value = target[prop];
      if (typeof prop === "string" && (prop.startsWith("get") || prop.startsWith("send") || prop.startsWith("is"))) {
        if (typeof value === "function") {
          return (...args) => value.apply(target, [executor, ...args]);
        }
      }
      return value;
    }
  });
}
exports62.openContract = openContract;
var __export060;
if (Object.isExtensible(module62.exports)) {
  __export060 = module62.exports["openContract"];
}

// ../../node_modules/@ton/core/dist/types/_export.js
var export_exports = {};
__export(export_exports, {
  ReserveMode: () => __export1410,
  SendMode: () => __export1510,
  ShardAccountRefValue: () => __export1110,
  comment: () => __export47,
  external: () => __export48,
  internal: () => __export49,
  loadAccount: () => __export462,
  loadAccountState: () => __export442,
  loadAccountStatus: () => __export422,
  loadAccountStatusChange: () => __export40,
  loadAccountStorage: () => __export38,
  loadCommonMessageInfo: () => __export323,
  loadCommonMessageInfoRelaxed: () => __export302,
  loadComputeSkipReason: () => __export283,
  loadCurrencyCollection: () => __export263,
  loadDepthBalanceInfo: () => __export243,
  loadHashUpdate: () => __export223,
  loadLibRef: () => __export37,
  loadMasterchainStateExtra: () => __export202,
  loadMessage: () => __export193,
  loadMessageRelaxed: () => __export173,
  loadOutAction: () => __export362,
  loadOutList: () => __export342,
  loadShardAccount: () => __export1310,
  loadShardAccounts: () => __export103,
  loadShardIdent: () => __export83,
  loadShardStateUnsplit: () => __export63,
  loadSimpleLibrary: () => __export56,
  loadSplitMergeInfo: () => __export165,
  loadStateInit: () => __export732,
  loadStorageInfo: () => __export71,
  loadStorageUsed: () => __export69,
  loadStorageUsedShort: () => __export67,
  loadTickTock: () => __export65,
  loadTransaction: () => __export632,
  loadTransactionActionPhase: () => __export61,
  loadTransactionBouncePhase: () => __export59,
  loadTransactionComputePhase: () => __export57,
  loadTransactionCreditPhase: () => __export552,
  loadTransactionDescription: () => __export532,
  loadTransactionStoragePhase: () => __export51,
  storeAccount: () => __export452,
  storeAccountState: () => __export432,
  storeAccountStatus: () => __export41,
  storeAccountStatusChange: () => __export39,
  storeAccountStorage: () => __export372,
  storeCommonMessageInfo: () => __export312,
  storeCommonMessageInfoRelaxed: () => __export293,
  storeComputeSkipReason: () => __export273,
  storeCurrencyCollection: () => __export253,
  storeDepthBalanceInfo: () => __export233,
  storeHashUpdate: () => __export2110,
  storeLibRef: () => __export221,
  storeMessage: () => __export183,
  storeMessageRelaxed: () => __export166,
  storeOutAction: () => __export352,
  storeOutList: () => __export332,
  storeShardAccount: () => __export1210,
  storeShardAccounts: () => __export93,
  storeShardIdent: () => __export73,
  storeSimpleLibrary: () => __export46,
  storeSplitMergeInfo: () => __export098,
  storeStateInit: () => __export722,
  storeStorageInfo: () => __export70,
  storeStorageUsed: () => __export68,
  storeStorageUsedShort: () => __export66,
  storeTickTock: () => __export64,
  storeTransaction: () => __export622,
  storeTransactionActionPhase: () => __export60,
  storeTransactionBouncePhase: () => __export58,
  storeTransactionComputePhase: () => __export562,
  storeTransactionCreditPhase: () => __export542,
  storeTransactionDescription: () => __export522,
  storeTransactionsStoragePhase: () => __export50
});

// ../../node_modules/@ton/core/dist/types/TransactionStoragePhase.js
var TransactionStoragePhase_exports = {};
__export(TransactionStoragePhase_exports, {
  loadTransactionStoragePhase: () => __export129,
  storeTransactionsStoragePhase: () => __export062
});

// ../../node_modules/@ton/core/dist/types/AccountStatusChange.js
var AccountStatusChange_exports = {};
__export(AccountStatusChange_exports, {
  loadAccountStatusChange: () => __export128,
  storeAccountStatusChange: () => __export061
});
var exports63 = {};
var module63 = {
  get exports() {
    return exports63;
  },
  set exports(value) {
    exports63 = value;
  }
};
Object.defineProperty(exports63, "__esModule", { value: true });
exports63.storeAccountStatusChange = exports63.loadAccountStatusChange = void 0;
function loadAccountStatusChange(slice) {
  if (!slice.loadBit()) {
    return "unchanged";
  }
  if (slice.loadBit()) {
    return "deleted";
  } else {
    return "frozen";
  }
}
exports63.loadAccountStatusChange = loadAccountStatusChange;
function storeAccountStatusChange(src) {
  return (builder) => {
    if (src == "unchanged") {
      builder.storeBit(0);
    } else if (src === "frozen") {
      builder.storeBit(1);
      builder.storeBit(0);
    } else if (src === "deleted") {
      builder.storeBit(1);
      builder.storeBit(1);
    } else {
      throw Error("Invalid account status change");
    }
  };
}
exports63.storeAccountStatusChange = storeAccountStatusChange;
var __export061;
var __export128;
if (Object.isExtensible(module63.exports)) {
  __export061 = module63.exports["storeAccountStatusChange"];
  __export128 = module63.exports["loadAccountStatusChange"];
}

// ../../node_modules/@ton/core/dist/types/TransactionStoragePhase.js
function $$cjs_default$$46(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global47 !== "undefined" && global47 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global47 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global47 !== "undefined" && global47 || typeof globalThis !== "undefined" && globalThis || {};
var exports64 = {};
var module64 = {
  get exports() {
    return exports64;
  },
  set exports(value) {
    exports64 = value;
  }
};
Object.defineProperty(exports64, "__esModule", { value: true });
exports64.storeTransactionsStoragePhase = exports64.loadTransactionStoragePhase = void 0;
var AccountStatusChange_1 = $$cjs_default$$46(typeof AccountStatusChange_exports !== "undefined" ? AccountStatusChange_exports : {});
function loadTransactionStoragePhase(slice) {
  const storageFeesCollected = slice.loadCoins();
  let storageFeesDue = void 0;
  if (slice.loadBit()) {
    storageFeesDue = slice.loadCoins();
  }
  const statusChange = (0, AccountStatusChange_1.loadAccountStatusChange)(slice);
  return {
    storageFeesCollected,
    storageFeesDue,
    statusChange
  };
}
exports64.loadTransactionStoragePhase = loadTransactionStoragePhase;
function storeTransactionsStoragePhase(src) {
  return (builder) => {
    builder.storeCoins(src.storageFeesCollected);
    if (src.storageFeesDue === null || src.storageFeesDue === void 0) {
      builder.storeBit(false);
    } else {
      builder.storeBit(true);
      builder.storeCoins(src.storageFeesDue);
    }
    builder.store((0, AccountStatusChange_1.storeAccountStatusChange)(src.statusChange));
  };
}
exports64.storeTransactionsStoragePhase = storeTransactionsStoragePhase;
var __export062;
var __export129;
if (Object.isExtensible(module64.exports)) {
  __export062 = module64.exports["storeTransactionsStoragePhase"];
  __export129 = module64.exports["loadTransactionStoragePhase"];
}

// ../../node_modules/@ton/core/dist/types/TransactionDescription.js
var TransactionDescription_exports = {};
__export(TransactionDescription_exports, {
  loadTransactionDescription: () => __export148,
  storeTransactionDescription: () => __export079
});

// ../../node_modules/@ton/core/dist/types/TransactionCreditPhase.js
var TransactionCreditPhase_exports = {};
__export(TransactionCreditPhase_exports, {
  loadTransactionCreditPhase: () => __export131,
  storeTransactionCreditPhase: () => __export064
});

// ../../node_modules/@ton/core/dist/types/CurrencyCollection.js
var CurrencyCollection_exports = {};
__export(CurrencyCollection_exports, {
  loadCurrencyCollection: () => __export130,
  storeCurrencyCollection: () => __export063
});
function $$cjs_default$$47(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global48 !== "undefined" && global48 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global48 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global48 !== "undefined" && global48 || typeof globalThis !== "undefined" && globalThis || {};
var exports65 = {};
var module65 = {
  get exports() {
    return exports65;
  },
  set exports(value) {
    exports65 = value;
  }
};
Object.defineProperty(exports65, "__esModule", { value: true });
exports65.storeCurrencyCollection = exports65.loadCurrencyCollection = void 0;
var Dictionary_12 = $$cjs_default$$47(typeof Dictionary_exports !== "undefined" ? Dictionary_exports : {});
function loadCurrencyCollection(slice) {
  const coins = slice.loadCoins();
  const other = slice.loadDict(Dictionary_12.Dictionary.Keys.Uint(32), Dictionary_12.Dictionary.Values.BigVarUint(
    5
    /* log2(32) */
  ));
  if (other.size === 0) {
    return { coins };
  } else {
    return { other, coins };
  }
}
exports65.loadCurrencyCollection = loadCurrencyCollection;
function storeCurrencyCollection(collection) {
  return (builder) => {
    builder.storeCoins(collection.coins);
    if (collection.other) {
      builder.storeDict(collection.other);
    } else {
      builder.storeBit(0);
    }
  };
}
exports65.storeCurrencyCollection = storeCurrencyCollection;
var __export063;
var __export130;
if (Object.isExtensible(module65.exports)) {
  __export063 = module65.exports["storeCurrencyCollection"];
  __export130 = module65.exports["loadCurrencyCollection"];
}

// ../../node_modules/@ton/core/dist/types/TransactionCreditPhase.js
function $$cjs_default$$48(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global49 !== "undefined" && global49 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global49 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global49 !== "undefined" && global49 || typeof globalThis !== "undefined" && globalThis || {};
var exports66 = {};
var module66 = {
  get exports() {
    return exports66;
  },
  set exports(value) {
    exports66 = value;
  }
};
Object.defineProperty(exports66, "__esModule", { value: true });
exports66.storeTransactionCreditPhase = exports66.loadTransactionCreditPhase = void 0;
var CurrencyCollection_1 = $$cjs_default$$48(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
function loadTransactionCreditPhase(slice) {
  const dueFeesColelcted = slice.loadBit() ? slice.loadCoins() : void 0;
  const credit = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);
  return {
    dueFeesColelcted,
    credit
  };
}
exports66.loadTransactionCreditPhase = loadTransactionCreditPhase;
function storeTransactionCreditPhase(src) {
  return (builder) => {
    if (src.dueFeesColelcted === null || src.dueFeesColelcted === void 0) {
      builder.storeBit(false);
    } else {
      builder.storeBit(true);
      builder.storeCoins(src.dueFeesColelcted);
    }
    builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.credit));
  };
}
exports66.storeTransactionCreditPhase = storeTransactionCreditPhase;
var __export064;
var __export131;
if (Object.isExtensible(module66.exports)) {
  __export064 = module66.exports["storeTransactionCreditPhase"];
  __export131 = module66.exports["loadTransactionCreditPhase"];
}

// ../../node_modules/@ton/core/dist/types/TransactionComputePhase.js
var TransactionComputePhase_exports = {};
__export(TransactionComputePhase_exports, {
  loadTransactionComputePhase: () => __export134,
  storeTransactionComputePhase: () => __export066
});

// ../../node_modules/@ton/core/dist/types/ComputeSkipReason.js
var ComputeSkipReason_exports = {};
__export(ComputeSkipReason_exports, {
  loadComputeSkipReason: () => __export133,
  storeComputeSkipReason: () => __export065
});
var exports67 = {};
var module67 = {
  get exports() {
    return exports67;
  },
  set exports(value) {
    exports67 = value;
  }
};
Object.defineProperty(exports67, "__esModule", { value: true });
exports67.storeComputeSkipReason = exports67.loadComputeSkipReason = void 0;
function loadComputeSkipReason(slice) {
  let reason = slice.loadUint(2);
  if (reason === 0) {
    return "no-state";
  } else if (reason === 1) {
    return "bad-state";
  } else if (reason === 2) {
    return "no-gas";
  }
  throw new Error(`Unknown ComputeSkipReason: ${reason}`);
}
exports67.loadComputeSkipReason = loadComputeSkipReason;
function storeComputeSkipReason(src) {
  return (builder) => {
    if (src === "no-state") {
      builder.storeUint(0, 2);
    } else if (src === "bad-state") {
      builder.storeUint(1, 2);
    } else if (src === "no-gas") {
      builder.storeUint(2, 2);
    } else {
      throw new Error(`Unknown ComputeSkipReason: ${src}`);
    }
  };
}
exports67.storeComputeSkipReason = storeComputeSkipReason;
var __export065;
var __export133;
if (Object.isExtensible(module67.exports)) {
  __export065 = module67.exports["storeComputeSkipReason"];
  __export133 = module67.exports["loadComputeSkipReason"];
}

// ../../node_modules/@ton/core/dist/types/TransactionComputePhase.js
function $$cjs_default$$49(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global50 !== "undefined" && global50 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global50 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global50 !== "undefined" && global50 || typeof globalThis !== "undefined" && globalThis || {};
var exports68 = {};
var module68 = {
  get exports() {
    return exports68;
  },
  set exports(value) {
    exports68 = value;
  }
};
Object.defineProperty(exports68, "__esModule", { value: true });
exports68.storeTransactionComputePhase = exports68.loadTransactionComputePhase = void 0;
var Builder_19 = $$cjs_default$$49(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var ComputeSkipReason_1 = $$cjs_default$$49(typeof ComputeSkipReason_exports !== "undefined" ? ComputeSkipReason_exports : {});
function loadTransactionComputePhase(slice) {
  if (!slice.loadBit()) {
    let reason = (0, ComputeSkipReason_1.loadComputeSkipReason)(slice);
    return {
      type: "skipped",
      reason
    };
  }
  let success = slice.loadBit();
  let messageStateUsed = slice.loadBit();
  let accountActivated = slice.loadBit();
  let gasFees = slice.loadCoins();
  const vmState = slice.loadRef().beginParse();
  let gasUsed = vmState.loadVarUintBig(3);
  let gasLimit = vmState.loadVarUintBig(3);
  let gasCredit = vmState.loadBit() ? vmState.loadVarUintBig(2) : void 0;
  let mode = vmState.loadUint(8);
  let exitCode = vmState.loadInt(32);
  let exitArg = vmState.loadBit() ? vmState.loadInt(32) : void 0;
  let vmSteps = vmState.loadUint(32);
  let vmInitStateHash = vmState.loadUintBig(256);
  let vmFinalStateHash = vmState.loadUintBig(256);
  return {
    type: "vm",
    success,
    messageStateUsed,
    accountActivated,
    gasFees,
    gasUsed,
    gasLimit,
    gasCredit,
    mode,
    exitCode,
    exitArg,
    vmSteps,
    vmInitStateHash,
    vmFinalStateHash
  };
}
exports68.loadTransactionComputePhase = loadTransactionComputePhase;
function storeTransactionComputePhase(src) {
  return (builder) => {
    if (src.type === "skipped") {
      builder.storeBit(0);
      builder.store((0, ComputeSkipReason_1.storeComputeSkipReason)(src.reason));
      return;
    }
    builder.storeBit(1);
    builder.storeBit(src.success);
    builder.storeBit(src.messageStateUsed);
    builder.storeBit(src.accountActivated);
    builder.storeCoins(src.gasFees);
    builder.storeRef((0, Builder_19.beginCell)().storeVarUint(src.gasUsed, 3).storeVarUint(src.gasLimit, 3).store((b2) => src.gasCredit !== void 0 && src.gasCredit !== null ? b2.storeBit(1).storeVarUint(src.gasCredit, 2) : b2.storeBit(0)).storeUint(src.mode, 8).storeInt(src.exitCode, 32).store((b2) => src.exitArg !== void 0 && src.exitArg !== null ? b2.storeBit(1).storeInt(src.exitArg, 32) : b2.storeBit(0)).storeUint(src.vmSteps, 32).storeUint(src.vmInitStateHash, 256).storeUint(src.vmFinalStateHash, 256).endCell());
  };
}
exports68.storeTransactionComputePhase = storeTransactionComputePhase;
var __export066;
var __export134;
if (Object.isExtensible(module68.exports)) {
  __export066 = module68.exports["storeTransactionComputePhase"];
  __export134 = module68.exports["loadTransactionComputePhase"];
}

// ../../node_modules/@ton/core/dist/types/TransactionBouncePhase.js
var TransactionBouncePhase_exports = {};
__export(TransactionBouncePhase_exports, {
  loadTransactionBouncePhase: () => __export136,
  storeTransactionBouncePhase: () => __export068
});

// ../../node_modules/@ton/core/dist/types/StorageUsedShort.js
var StorageUsedShort_exports = {};
__export(StorageUsedShort_exports, {
  loadStorageUsedShort: () => __export135,
  storeStorageUsedShort: () => __export067
});
var exports69 = {};
var module69 = {
  get exports() {
    return exports69;
  },
  set exports(value) {
    exports69 = value;
  }
};
Object.defineProperty(exports69, "__esModule", { value: true });
exports69.storeStorageUsedShort = exports69.loadStorageUsedShort = void 0;
function loadStorageUsedShort(slice) {
  let cells = slice.loadVarUintBig(3);
  let bits = slice.loadVarUintBig(3);
  return {
    cells,
    bits
  };
}
exports69.loadStorageUsedShort = loadStorageUsedShort;
function storeStorageUsedShort(src) {
  return (builder) => {
    builder.storeVarUint(src.cells, 3);
    builder.storeVarUint(src.bits, 3);
  };
}
exports69.storeStorageUsedShort = storeStorageUsedShort;
var __export067;
var __export135;
if (Object.isExtensible(module69.exports)) {
  __export067 = module69.exports["storeStorageUsedShort"];
  __export135 = module69.exports["loadStorageUsedShort"];
}

// ../../node_modules/@ton/core/dist/types/TransactionBouncePhase.js
function $$cjs_default$$50(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global51 !== "undefined" && global51 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global51 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global51 !== "undefined" && global51 || typeof globalThis !== "undefined" && globalThis || {};
var exports70 = {};
var module70 = {
  get exports() {
    return exports70;
  },
  set exports(value) {
    exports70 = value;
  }
};
Object.defineProperty(exports70, "__esModule", { value: true });
exports70.storeTransactionBouncePhase = exports70.loadTransactionBouncePhase = void 0;
var StorageUsedShort_1 = $$cjs_default$$50(typeof StorageUsedShort_exports !== "undefined" ? StorageUsedShort_exports : {});
function loadTransactionBouncePhase(slice) {
  if (slice.loadBit()) {
    let messageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);
    let messageFees = slice.loadCoins();
    let forwardFees = slice.loadCoins();
    return {
      type: "ok",
      messageSize,
      messageFees,
      forwardFees
    };
  }
  if (slice.loadBit()) {
    let messageSize = (0, StorageUsedShort_1.loadStorageUsedShort)(slice);
    let requiredForwardFees = slice.loadCoins();
    return {
      type: "no-funds",
      messageSize,
      requiredForwardFees
    };
  }
  return {
    type: "negative-funds"
  };
}
exports70.loadTransactionBouncePhase = loadTransactionBouncePhase;
function storeTransactionBouncePhase(src) {
  return (builder) => {
    if (src.type === "ok") {
      builder.storeBit(true);
      builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.messageSize));
      builder.storeCoins(src.messageFees);
      builder.storeCoins(src.forwardFees);
    } else if (src.type === "negative-funds") {
      builder.storeBit(false);
      builder.storeBit(false);
    } else if (src.type === "no-funds") {
      builder.storeBit(false);
      builder.storeBit(true);
      builder.store((0, StorageUsedShort_1.storeStorageUsedShort)(src.messageSize));
      builder.storeCoins(src.requiredForwardFees);
    } else {
      throw new Error("Invalid TransactionBouncePhase type");
    }
  };
}
exports70.storeTransactionBouncePhase = storeTransactionBouncePhase;
var __export068;
var __export136;
if (Object.isExtensible(module70.exports)) {
  __export068 = module70.exports["storeTransactionBouncePhase"];
  __export136 = module70.exports["loadTransactionBouncePhase"];
}

// ../../node_modules/@ton/core/dist/types/TransactionActionPhase.js
var TransactionActionPhase_exports = {};
__export(TransactionActionPhase_exports, {
  loadTransactionActionPhase: () => __export137,
  storeTransactionActionPhase: () => __export069
});
function $$cjs_default$$51(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global52 !== "undefined" && global52 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global52 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global52 !== "undefined" && global52 || typeof globalThis !== "undefined" && globalThis || {};
var exports71 = {};
var module71 = {
  get exports() {
    return exports71;
  },
  set exports(value) {
    exports71 = value;
  }
};
Object.defineProperty(exports71, "__esModule", { value: true });
exports71.storeTransactionActionPhase = exports71.loadTransactionActionPhase = void 0;
var AccountStatusChange_12 = $$cjs_default$$51(typeof AccountStatusChange_exports !== "undefined" ? AccountStatusChange_exports : {});
var StorageUsedShort_12 = $$cjs_default$$51(typeof StorageUsedShort_exports !== "undefined" ? StorageUsedShort_exports : {});
function loadTransactionActionPhase(slice) {
  let success = slice.loadBit();
  let valid = slice.loadBit();
  let noFunds = slice.loadBit();
  let statusChange = (0, AccountStatusChange_12.loadAccountStatusChange)(slice);
  let totalFwdFees = slice.loadBit() ? slice.loadCoins() : void 0;
  let totalActionFees = slice.loadBit() ? slice.loadCoins() : void 0;
  let resultCode = slice.loadInt(32);
  let resultArg = slice.loadBit() ? slice.loadInt(32) : void 0;
  let totalActions = slice.loadUint(16);
  let specActions = slice.loadUint(16);
  let skippedActions = slice.loadUint(16);
  let messagesCreated = slice.loadUint(16);
  let actionListHash = slice.loadUintBig(256);
  let totalMessageSize = (0, StorageUsedShort_12.loadStorageUsedShort)(slice);
  return {
    success,
    valid,
    noFunds,
    statusChange,
    totalFwdFees,
    totalActionFees,
    resultCode,
    resultArg,
    totalActions,
    specActions,
    skippedActions,
    messagesCreated,
    actionListHash,
    totalMessageSize
  };
}
exports71.loadTransactionActionPhase = loadTransactionActionPhase;
function storeTransactionActionPhase(src) {
  return (builder) => {
    builder.storeBit(src.success);
    builder.storeBit(src.valid);
    builder.storeBit(src.noFunds);
    builder.store((0, AccountStatusChange_12.storeAccountStatusChange)(src.statusChange));
    builder.storeMaybeCoins(src.totalFwdFees);
    builder.storeMaybeCoins(src.totalActionFees);
    builder.storeInt(src.resultCode, 32);
    builder.storeMaybeInt(src.resultArg, 32);
    builder.storeUint(src.totalActions, 16);
    builder.storeUint(src.specActions, 16);
    builder.storeUint(src.skippedActions, 16);
    builder.storeUint(src.messagesCreated, 16);
    builder.storeUint(src.actionListHash, 256);
    builder.store((0, StorageUsedShort_12.storeStorageUsedShort)(src.totalMessageSize));
  };
}
exports71.storeTransactionActionPhase = storeTransactionActionPhase;
var __export069;
var __export137;
if (Object.isExtensible(module71.exports)) {
  __export069 = module71.exports["storeTransactionActionPhase"];
  __export137 = module71.exports["loadTransactionActionPhase"];
}

// ../../node_modules/@ton/core/dist/types/Transaction.js
var Transaction_exports = {};
__export(Transaction_exports, {
  loadTransaction: () => __export146,
  storeTransaction: () => __export077
});

// ../../node_modules/@ton/core/dist/types/Message.js
var Message_exports = {};
__export(Message_exports, {
  MessageValue: () => __export074,
  loadMessage: () => __export217,
  storeMessage: () => __export143
});

// ../../node_modules/@ton/core/dist/types/StateInit.js
var StateInit_exports = {};
__export(StateInit_exports, {
  loadStateInit: () => __export140,
  storeStateInit: () => __export072
});

// ../../node_modules/@ton/core/dist/types/TickTock.js
var TickTock_exports = {};
__export(TickTock_exports, {
  loadTickTock: () => __export138,
  storeTickTock: () => __export070
});
var exports72 = {};
var module72 = {
  get exports() {
    return exports72;
  },
  set exports(value) {
    exports72 = value;
  }
};
Object.defineProperty(exports72, "__esModule", { value: true });
exports72.storeTickTock = exports72.loadTickTock = void 0;
function loadTickTock(slice) {
  return {
    tick: slice.loadBit(),
    tock: slice.loadBit()
  };
}
exports72.loadTickTock = loadTickTock;
function storeTickTock(src) {
  return (builder) => {
    builder.storeBit(src.tick);
    builder.storeBit(src.tock);
  };
}
exports72.storeTickTock = storeTickTock;
var __export070;
var __export138;
if (Object.isExtensible(module72.exports)) {
  __export070 = module72.exports["storeTickTock"];
  __export138 = module72.exports["loadTickTock"];
}

// ../../node_modules/@ton/core/dist/types/SimpleLibrary.js
var SimpleLibrary_exports = {};
__export(SimpleLibrary_exports, {
  SimpleLibraryValue: () => __export071,
  loadSimpleLibrary: () => __export216,
  storeSimpleLibrary: () => __export139
});
var exports73 = {};
var module73 = {
  get exports() {
    return exports73;
  },
  set exports(value) {
    exports73 = value;
  }
};
Object.defineProperty(exports73, "__esModule", { value: true });
exports73.SimpleLibraryValue = exports73.storeSimpleLibrary = exports73.loadSimpleLibrary = void 0;
function loadSimpleLibrary(slice) {
  return {
    public: slice.loadBit(),
    root: slice.loadRef()
  };
}
exports73.loadSimpleLibrary = loadSimpleLibrary;
function storeSimpleLibrary(src) {
  return (builder) => {
    builder.storeBit(src.public);
    builder.storeRef(src.root);
  };
}
exports73.storeSimpleLibrary = storeSimpleLibrary;
exports73.SimpleLibraryValue = {
  serialize(src, builder) {
    storeSimpleLibrary(src)(builder);
  },
  parse(src) {
    return loadSimpleLibrary(src);
  }
};
var __export071;
var __export139;
var __export216;
if (Object.isExtensible(module73.exports)) {
  __export071 = module73.exports["SimpleLibraryValue"];
  __export139 = module73.exports["storeSimpleLibrary"];
  __export216 = module73.exports["loadSimpleLibrary"];
}

// ../../node_modules/@ton/core/dist/types/StateInit.js
function $$cjs_default$$52(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global53 !== "undefined" && global53 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global53 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global53 !== "undefined" && global53 || typeof globalThis !== "undefined" && globalThis || {};
var exports74 = {};
var module74 = {
  get exports() {
    return exports74;
  },
  set exports(value) {
    exports74 = value;
  }
};
Object.defineProperty(exports74, "__esModule", { value: true });
exports74.storeStateInit = exports74.loadStateInit = void 0;
var Dictionary_13 = $$cjs_default$$52(typeof Dictionary_exports !== "undefined" ? Dictionary_exports : {});
var SimpleLibrary_1 = $$cjs_default$$52(typeof SimpleLibrary_exports !== "undefined" ? SimpleLibrary_exports : {});
var TickTock_1 = $$cjs_default$$52(typeof TickTock_exports !== "undefined" ? TickTock_exports : {});
function loadStateInit(slice) {
  let splitDepth;
  if (slice.loadBit()) {
    splitDepth = slice.loadUint(5);
  }
  let special;
  if (slice.loadBit()) {
    special = (0, TickTock_1.loadTickTock)(slice);
  }
  let code = slice.loadMaybeRef();
  let data = slice.loadMaybeRef();
  let libraries = slice.loadDict(Dictionary_13.Dictionary.Keys.BigUint(256), SimpleLibrary_1.SimpleLibraryValue);
  if (libraries.size === 0) {
    libraries = void 0;
  }
  return {
    splitDepth,
    special,
    code,
    data,
    libraries
  };
}
exports74.loadStateInit = loadStateInit;
function storeStateInit(src) {
  return (builder) => {
    if (src.splitDepth !== null && src.splitDepth !== void 0) {
      builder.storeBit(true);
      builder.storeUint(src.splitDepth, 5);
    } else {
      builder.storeBit(false);
    }
    if (src.special !== null && src.special !== void 0) {
      builder.storeBit(true);
      builder.store((0, TickTock_1.storeTickTock)(src.special));
    } else {
      builder.storeBit(false);
    }
    builder.storeMaybeRef(src.code);
    builder.storeMaybeRef(src.data);
    builder.storeDict(src.libraries);
  };
}
exports74.storeStateInit = storeStateInit;
var __export072;
var __export140;
if (Object.isExtensible(module74.exports)) {
  __export072 = module74.exports["storeStateInit"];
  __export140 = module74.exports["loadStateInit"];
}

// ../../node_modules/@ton/core/dist/types/CommonMessageInfo.js
var CommonMessageInfo_exports = {};
__export(CommonMessageInfo_exports, {
  loadCommonMessageInfo: () => __export141,
  storeCommonMessageInfo: () => __export073
});
function $$cjs_default$$53(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global54 !== "undefined" && global54 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global54 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global54 !== "undefined" && global54 || typeof globalThis !== "undefined" && globalThis || {};
var exports75 = {};
var module75 = {
  get exports() {
    return exports75;
  },
  set exports(value) {
    exports75 = value;
  }
};
Object.defineProperty(exports75, "__esModule", { value: true });
exports75.storeCommonMessageInfo = exports75.loadCommonMessageInfo = void 0;
var CurrencyCollection_12 = $$cjs_default$$53(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
function loadCommonMessageInfo(slice) {
  if (!slice.loadBit()) {
    const ihrDisabled = slice.loadBit();
    const bounce = slice.loadBit();
    const bounced = slice.loadBit();
    const src2 = slice.loadAddress();
    const dest2 = slice.loadAddress();
    const value = (0, CurrencyCollection_12.loadCurrencyCollection)(slice);
    const ihrFee = slice.loadCoins();
    const forwardFee = slice.loadCoins();
    const createdLt2 = slice.loadUintBig(64);
    const createdAt2 = slice.loadUint(32);
    return {
      type: "internal",
      ihrDisabled,
      bounce,
      bounced,
      src: src2,
      dest: dest2,
      value,
      ihrFee,
      forwardFee,
      createdLt: createdLt2,
      createdAt: createdAt2
    };
  }
  if (!slice.loadBit()) {
    const src2 = slice.loadMaybeExternalAddress();
    const dest2 = slice.loadAddress();
    const importFee = slice.loadCoins();
    return {
      type: "external-in",
      src: src2,
      dest: dest2,
      importFee
    };
  }
  const src = slice.loadAddress();
  const dest = slice.loadMaybeExternalAddress();
  const createdLt = slice.loadUintBig(64);
  const createdAt = slice.loadUint(32);
  return {
    type: "external-out",
    src,
    dest,
    createdLt,
    createdAt
  };
}
exports75.loadCommonMessageInfo = loadCommonMessageInfo;
function storeCommonMessageInfo(source) {
  return (builder) => {
    if (source.type === "internal") {
      builder.storeBit(0);
      builder.storeBit(source.ihrDisabled);
      builder.storeBit(source.bounce);
      builder.storeBit(source.bounced);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.store((0, CurrencyCollection_12.storeCurrencyCollection)(source.value));
      builder.storeCoins(source.ihrFee);
      builder.storeCoins(source.forwardFee);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else if (source.type === "external-in") {
      builder.storeBit(1);
      builder.storeBit(0);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.storeCoins(source.importFee);
    } else if (source.type === "external-out") {
      builder.storeBit(1);
      builder.storeBit(1);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else {
      throw new Error("Unknown CommonMessageInfo type");
    }
  };
}
exports75.storeCommonMessageInfo = storeCommonMessageInfo;
var __export073;
var __export141;
if (Object.isExtensible(module75.exports)) {
  __export073 = module75.exports["storeCommonMessageInfo"];
  __export141 = module75.exports["loadCommonMessageInfo"];
}

// ../../node_modules/@ton/core/dist/types/Message.js
function $$cjs_default$$54(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global55 !== "undefined" && global55 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global55 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global55 !== "undefined" && global55 || typeof globalThis !== "undefined" && globalThis || {};
var exports76 = {};
var module76 = {
  get exports() {
    return exports76;
  },
  set exports(value) {
    exports76 = value;
  }
};
Object.defineProperty(exports76, "__esModule", { value: true });
exports76.MessageValue = exports76.storeMessage = exports76.loadMessage = void 0;
var Builder_110 = $$cjs_default$$54(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var CommonMessageInfo_1 = $$cjs_default$$54(typeof CommonMessageInfo_exports !== "undefined" ? CommonMessageInfo_exports : {});
var StateInit_1 = $$cjs_default$$54(typeof StateInit_exports !== "undefined" ? StateInit_exports : {});
function loadMessage(slice) {
  const info = (0, CommonMessageInfo_1.loadCommonMessageInfo)(slice);
  let init = null;
  if (slice.loadBit()) {
    if (!slice.loadBit()) {
      init = (0, StateInit_1.loadStateInit)(slice);
    } else {
      init = (0, StateInit_1.loadStateInit)(slice.loadRef().beginParse());
    }
  }
  const body = slice.loadBit() ? slice.loadRef() : slice.asCell();
  return {
    info,
    init,
    body
  };
}
exports76.loadMessage = loadMessage;
function storeMessage(message, opts) {
  return (builder) => {
    builder.store((0, CommonMessageInfo_1.storeCommonMessageInfo)(message.info));
    if (message.init) {
      builder.storeBit(true);
      let initCell = (0, Builder_110.beginCell)().store((0, StateInit_1.storeStateInit)(message.init));
      let needRef2 = false;
      if (opts && opts.forceRef) {
        needRef2 = true;
      } else {
        needRef2 = builder.availableBits - 2 < initCell.bits + message.body.bits.length;
      }
      if (needRef2) {
        builder.storeBit(true);
        builder.storeRef(initCell);
      } else {
        builder.storeBit(false);
        builder.storeBuilder(initCell);
      }
    } else {
      builder.storeBit(false);
    }
    let needRef = false;
    if (opts && opts.forceRef) {
      needRef = true;
    } else {
      needRef = builder.availableBits - 1 < message.body.bits.length || builder.refs + message.body.refs.length > 4;
    }
    if (needRef) {
      builder.storeBit(true);
      builder.storeRef(message.body);
    } else {
      builder.storeBit(false);
      builder.storeBuilder(message.body.asBuilder());
    }
  };
}
exports76.storeMessage = storeMessage;
exports76.MessageValue = {
  serialize(src, builder) {
    builder.storeRef((0, Builder_110.beginCell)().store(storeMessage(src)));
  },
  parse(slice) {
    return loadMessage(slice.loadRef().beginParse());
  }
};
var __export074;
var __export143;
var __export217;
if (Object.isExtensible(module76.exports)) {
  __export074 = module76.exports["MessageValue"];
  __export143 = module76.exports["storeMessage"];
  __export217 = module76.exports["loadMessage"];
}

// ../../node_modules/@ton/core/dist/types/HashUpdate.js
var HashUpdate_exports = {};
__export(HashUpdate_exports, {
  loadHashUpdate: () => __export144,
  storeHashUpdate: () => __export075
});
var exports77 = {};
var module77 = {
  get exports() {
    return exports77;
  },
  set exports(value) {
    exports77 = value;
  }
};
Object.defineProperty(exports77, "__esModule", { value: true });
exports77.storeHashUpdate = exports77.loadHashUpdate = void 0;
function loadHashUpdate(slice) {
  if (slice.loadUint(8) !== 114) {
    throw Error("Invalid data");
  }
  const oldHash = slice.loadBuffer(32);
  const newHash = slice.loadBuffer(32);
  return { oldHash, newHash };
}
exports77.loadHashUpdate = loadHashUpdate;
function storeHashUpdate(src) {
  return (builder) => {
    builder.storeUint(114, 8);
    builder.storeBuffer(src.oldHash);
    builder.storeBuffer(src.newHash);
  };
}
exports77.storeHashUpdate = storeHashUpdate;
var __export075;
var __export144;
if (Object.isExtensible(module77.exports)) {
  __export075 = module77.exports["storeHashUpdate"];
  __export144 = module77.exports["loadHashUpdate"];
}

// ../../node_modules/@ton/core/dist/types/AccountStatus.js
var AccountStatus_exports = {};
__export(AccountStatus_exports, {
  loadAccountStatus: () => __export145,
  storeAccountStatus: () => __export076
});
var exports78 = {};
var module78 = {
  get exports() {
    return exports78;
  },
  set exports(value) {
    exports78 = value;
  }
};
Object.defineProperty(exports78, "__esModule", { value: true });
exports78.storeAccountStatus = exports78.loadAccountStatus = void 0;
function loadAccountStatus(slice) {
  const status = slice.loadUint(2);
  if (status === 0) {
    return "uninitialized";
  }
  if (status === 1) {
    return "frozen";
  }
  if (status === 2) {
    return "active";
  }
  if (status === 3) {
    return "non-existing";
  }
  throw Error("Invalid data");
}
exports78.loadAccountStatus = loadAccountStatus;
function storeAccountStatus(src) {
  return (builder) => {
    if (src === "uninitialized") {
      builder.storeUint(0, 2);
    } else if (src === "frozen") {
      builder.storeUint(1, 2);
    } else if (src === "active") {
      builder.storeUint(2, 2);
    } else if (src === "non-existing") {
      builder.storeUint(3, 2);
    } else {
      throw Error("Invalid data");
    }
    return builder;
  };
}
exports78.storeAccountStatus = storeAccountStatus;
var __export076;
var __export145;
if (Object.isExtensible(module78.exports)) {
  __export076 = module78.exports["storeAccountStatus"];
  __export145 = module78.exports["loadAccountStatus"];
}

// ../../node_modules/@ton/core/dist/types/Transaction.js
function $$cjs_default$$55(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global56 !== "undefined" && global56 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global56 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global56 !== "undefined" && global56 || typeof globalThis !== "undefined" && globalThis || {};
var exports79 = {};
var module79 = {
  get exports() {
    return exports79;
  },
  set exports(value) {
    exports79 = value;
  }
};
Object.defineProperty(exports79, "__esModule", { value: true });
exports79.storeTransaction = exports79.loadTransaction = void 0;
var Builder_111 = $$cjs_default$$55(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var Dictionary_14 = $$cjs_default$$55(typeof Dictionary_exports !== "undefined" ? Dictionary_exports : {});
var AccountStatus_1 = $$cjs_default$$55(typeof AccountStatus_exports !== "undefined" ? AccountStatus_exports : {});
var CurrencyCollection_13 = $$cjs_default$$55(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
var HashUpdate_1 = $$cjs_default$$55(typeof HashUpdate_exports !== "undefined" ? HashUpdate_exports : {});
var Message_1 = $$cjs_default$$55(typeof Message_exports !== "undefined" ? Message_exports : {});
var TransactionDescription_1 = $$cjs_default$$55(typeof TransactionDescription_exports !== "undefined" ? TransactionDescription_exports : {});
function loadTransaction(slice) {
  let raw = slice.asCell();
  if (slice.loadUint(4) !== 7) {
    throw Error("Invalid data");
  }
  let address2 = slice.loadUintBig(256);
  let lt = slice.loadUintBig(64);
  let prevTransactionHash = slice.loadUintBig(256);
  let prevTransactionLt = slice.loadUintBig(64);
  let now = slice.loadUint(32);
  let outMessagesCount = slice.loadUint(15);
  let oldStatus = (0, AccountStatus_1.loadAccountStatus)(slice);
  let endStatus = (0, AccountStatus_1.loadAccountStatus)(slice);
  let msgRef = slice.loadRef();
  let msgSlice = msgRef.beginParse();
  let inMessage = msgSlice.loadBit() ? (0, Message_1.loadMessage)(msgSlice.loadRef().beginParse()) : void 0;
  let outMessages = msgSlice.loadDict(Dictionary_14.Dictionary.Keys.Uint(15), Message_1.MessageValue);
  msgSlice.endParse();
  let totalFees = (0, CurrencyCollection_13.loadCurrencyCollection)(slice);
  let stateUpdate = (0, HashUpdate_1.loadHashUpdate)(slice.loadRef().beginParse());
  let description = (0, TransactionDescription_1.loadTransactionDescription)(slice.loadRef().beginParse());
  return {
    address: address2,
    lt,
    prevTransactionHash,
    prevTransactionLt,
    now,
    outMessagesCount,
    oldStatus,
    endStatus,
    inMessage,
    outMessages,
    totalFees,
    stateUpdate,
    description,
    raw,
    hash: () => raw.hash()
  };
}
exports79.loadTransaction = loadTransaction;
function storeTransaction(src) {
  return (builder) => {
    builder.storeUint(7, 4);
    builder.storeUint(src.address, 256);
    builder.storeUint(src.lt, 64);
    builder.storeUint(src.prevTransactionHash, 256);
    builder.storeUint(src.prevTransactionLt, 64);
    builder.storeUint(src.now, 32);
    builder.storeUint(src.outMessagesCount, 15);
    builder.store((0, AccountStatus_1.storeAccountStatus)(src.oldStatus));
    builder.store((0, AccountStatus_1.storeAccountStatus)(src.endStatus));
    let msgBuilder = (0, Builder_111.beginCell)();
    if (src.inMessage) {
      msgBuilder.storeBit(true);
      msgBuilder.storeRef((0, Builder_111.beginCell)().store((0, Message_1.storeMessage)(src.inMessage)));
    } else {
      msgBuilder.storeBit(false);
    }
    msgBuilder.storeDict(src.outMessages);
    builder.storeRef(msgBuilder);
    builder.store((0, CurrencyCollection_13.storeCurrencyCollection)(src.totalFees));
    builder.storeRef((0, Builder_111.beginCell)().store((0, HashUpdate_1.storeHashUpdate)(src.stateUpdate)));
    builder.storeRef((0, Builder_111.beginCell)().store((0, TransactionDescription_1.storeTransactionDescription)(src.description)));
  };
}
exports79.storeTransaction = storeTransaction;
var __export077;
var __export146;
if (Object.isExtensible(module79.exports)) {
  __export077 = module79.exports["storeTransaction"];
  __export146 = module79.exports["loadTransaction"];
}

// ../../node_modules/@ton/core/dist/types/SplitMergeInfo.js
var SplitMergeInfo_exports = {};
__export(SplitMergeInfo_exports, {
  loadSplitMergeInfo: () => __export147,
  storeSplitMergeInfo: () => __export078
});
var exports80 = {};
var module80 = {
  get exports() {
    return exports80;
  },
  set exports(value) {
    exports80 = value;
  }
};
Object.defineProperty(exports80, "__esModule", { value: true });
exports80.storeSplitMergeInfo = exports80.loadSplitMergeInfo = void 0;
function loadSplitMergeInfo(slice) {
  let currentShardPrefixLength = slice.loadUint(6);
  let accountSplitDepth = slice.loadUint(6);
  let thisAddress = slice.loadUintBig(256);
  let siblingAddress = slice.loadUintBig(256);
  return {
    currentShardPrefixLength,
    accountSplitDepth,
    thisAddress,
    siblingAddress
  };
}
exports80.loadSplitMergeInfo = loadSplitMergeInfo;
function storeSplitMergeInfo(src) {
  return (builder) => {
    builder.storeUint(src.currentShardPrefixLength, 6);
    builder.storeUint(src.accountSplitDepth, 6);
    builder.storeUint(src.thisAddress, 256);
    builder.storeUint(src.siblingAddress, 256);
  };
}
exports80.storeSplitMergeInfo = storeSplitMergeInfo;
var __export078;
var __export147;
if (Object.isExtensible(module80.exports)) {
  __export078 = module80.exports["storeSplitMergeInfo"];
  __export147 = module80.exports["loadSplitMergeInfo"];
}

// ../../node_modules/@ton/core/dist/types/TransactionDescription.js
function $$cjs_default$$56(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global57 !== "undefined" && global57 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global57 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global57 !== "undefined" && global57 || typeof globalThis !== "undefined" && globalThis || {};
var exports81 = {};
var module81 = {
  get exports() {
    return exports81;
  },
  set exports(value) {
    exports81 = value;
  }
};
Object.defineProperty(exports81, "__esModule", { value: true });
exports81.storeTransactionDescription = exports81.loadTransactionDescription = void 0;
var Builder_112 = $$cjs_default$$56(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var SplitMergeInfo_1 = $$cjs_default$$56(typeof SplitMergeInfo_exports !== "undefined" ? SplitMergeInfo_exports : {});
var Transaction_1 = $$cjs_default$$56(typeof Transaction_exports !== "undefined" ? Transaction_exports : {});
var TransactionActionPhase_1 = $$cjs_default$$56(typeof TransactionActionPhase_exports !== "undefined" ? TransactionActionPhase_exports : {});
var TransactionBouncePhase_1 = $$cjs_default$$56(typeof TransactionBouncePhase_exports !== "undefined" ? TransactionBouncePhase_exports : {});
var TransactionComputePhase_1 = $$cjs_default$$56(typeof TransactionComputePhase_exports !== "undefined" ? TransactionComputePhase_exports : {});
var TransactionCreditPhase_1 = $$cjs_default$$56(typeof TransactionCreditPhase_exports !== "undefined" ? TransactionCreditPhase_exports : {});
var TransactionStoragePhase_1 = $$cjs_default$$56(typeof TransactionStoragePhase_exports !== "undefined" ? TransactionStoragePhase_exports : {});
function loadTransactionDescription(slice) {
  let type4 = slice.loadUint(4);
  if (type4 === 0) {
    const creditFirst = slice.loadBit();
    let storagePhase = void 0;
    if (slice.loadBit()) {
      storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);
    }
    let creditPhase = void 0;
    if (slice.loadBit()) {
      creditPhase = (0, TransactionCreditPhase_1.loadTransactionCreditPhase)(slice);
    }
    let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);
    let actionPhase = void 0;
    if (slice.loadBit()) {
      actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());
    }
    let aborted = slice.loadBit();
    let bouncePhase = void 0;
    if (slice.loadBit()) {
      bouncePhase = (0, TransactionBouncePhase_1.loadTransactionBouncePhase)(slice);
    }
    const destroyed = slice.loadBit();
    return {
      type: "generic",
      creditFirst,
      storagePhase,
      creditPhase,
      computePhase,
      actionPhase,
      bouncePhase,
      aborted,
      destroyed
    };
  }
  if (type4 === 1) {
    return {
      type: "storage",
      storagePhase: (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice)
    };
  }
  if (type4 === 2 || type4 === 3) {
    const isTock = type4 === 3;
    let storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);
    let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);
    let actionPhase = void 0;
    if (slice.loadBit()) {
      actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());
    }
    const aborted = slice.loadBit();
    const destroyed = slice.loadBit();
    return {
      type: "tick-tock",
      isTock,
      storagePhase,
      computePhase,
      actionPhase,
      aborted,
      destroyed
    };
  }
  if (type4 === 4) {
    let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);
    let storagePhase = void 0;
    if (slice.loadBit()) {
      storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);
    }
    let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);
    let actionPhase = void 0;
    if (slice.loadBit()) {
      actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());
    }
    const aborted = slice.loadBit();
    const destroyed = slice.loadBit();
    return {
      type: "split-prepare",
      splitInfo,
      storagePhase,
      computePhase,
      actionPhase,
      aborted,
      destroyed
    };
  }
  if (type4 === 5) {
    let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);
    let prepareTransaction = (0, Transaction_1.loadTransaction)(slice.loadRef().beginParse());
    const installed = slice.loadBit();
    return {
      type: "split-install",
      splitInfo,
      prepareTransaction,
      installed
    };
  }
  throw Error(`Unsupported transaction description type ${type4}`);
}
exports81.loadTransactionDescription = loadTransactionDescription;
function storeTransactionDescription(src) {
  return (builder) => {
    if (src.type === "generic") {
      builder.storeUint(0, 4);
      builder.storeBit(src.creditFirst);
      if (src.storagePhase) {
        builder.storeBit(true);
        builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
      } else {
        builder.storeBit(false);
      }
      if (src.creditPhase) {
        builder.storeBit(true);
        builder.store((0, TransactionCreditPhase_1.storeTransactionCreditPhase)(src.creditPhase));
      } else {
        builder.storeBit(false);
      }
      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));
      if (src.actionPhase) {
        builder.storeBit(true);
        builder.storeRef((0, Builder_112.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.aborted);
      if (src.bouncePhase) {
        builder.storeBit(true);
        builder.store((0, TransactionBouncePhase_1.storeTransactionBouncePhase)(src.bouncePhase));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.destroyed);
    } else if (src.type === "storage") {
      builder.storeUint(1, 4);
      builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
    } else if (src.type === "tick-tock") {
      builder.storeUint(src.isTock ? 3 : 2, 4);
      builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));
      if (src.actionPhase) {
        builder.storeBit(true);
        builder.storeRef((0, Builder_112.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.aborted);
      builder.storeBit(src.destroyed);
    } else if (src.type === "split-prepare") {
      builder.storeUint(4, 4);
      builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));
      if (src.storagePhase) {
        builder.storeBit(true);
        builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));
      } else {
        builder.storeBit(false);
      }
      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));
      if (src.actionPhase) {
        builder.storeBit(true);
        builder.store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase));
      } else {
        builder.storeBit(false);
      }
      builder.storeBit(src.aborted);
      builder.storeBit(src.destroyed);
    } else if (src.type === "split-install") {
      builder.storeUint(5, 4);
      builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));
      builder.storeRef((0, Builder_112.beginCell)().store((0, Transaction_1.storeTransaction)(src.prepareTransaction)));
      builder.storeBit(src.installed);
    } else {
      throw Error(`Unsupported transaction description type ${src.type}`);
    }
  };
}
exports81.storeTransactionDescription = storeTransactionDescription;
var __export079;
var __export148;
if (Object.isExtensible(module81.exports)) {
  __export079 = module81.exports["storeTransactionDescription"];
  __export148 = module81.exports["loadTransactionDescription"];
}

// ../../node_modules/@ton/core/dist/types/StorageUsed.js
var StorageUsed_exports = {};
__export(StorageUsed_exports, {
  loadStorageUsed: () => __export149,
  storeStorageUsed: () => __export080
});
var exports82 = {};
var module82 = {
  get exports() {
    return exports82;
  },
  set exports(value) {
    exports82 = value;
  }
};
Object.defineProperty(exports82, "__esModule", { value: true });
exports82.storeStorageUsed = exports82.loadStorageUsed = void 0;
function loadStorageUsed(cs) {
  return {
    cells: cs.loadVarUintBig(3),
    bits: cs.loadVarUintBig(3),
    publicCells: cs.loadVarUintBig(3)
  };
}
exports82.loadStorageUsed = loadStorageUsed;
function storeStorageUsed(src) {
  return (builder) => {
    builder.storeVarUint(src.cells, 3);
    builder.storeVarUint(src.bits, 3);
    builder.storeVarUint(src.publicCells, 3);
  };
}
exports82.storeStorageUsed = storeStorageUsed;
var __export080;
var __export149;
if (Object.isExtensible(module82.exports)) {
  __export080 = module82.exports["storeStorageUsed"];
  __export149 = module82.exports["loadStorageUsed"];
}

// ../../node_modules/@ton/core/dist/types/StorageInto.js
var StorageInto_exports = {};
__export(StorageInto_exports, {
  loadStorageInfo: () => __export150,
  storeStorageInfo: () => __export081
});
function $$cjs_default$$57(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global58 !== "undefined" && global58 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global58 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global58 !== "undefined" && global58 || typeof globalThis !== "undefined" && globalThis || {};
var exports83 = {};
var module83 = {
  get exports() {
    return exports83;
  },
  set exports(value) {
    exports83 = value;
  }
};
Object.defineProperty(exports83, "__esModule", { value: true });
exports83.storeStorageInfo = exports83.loadStorageInfo = void 0;
var StorageUsed_1 = $$cjs_default$$57(typeof StorageUsed_exports !== "undefined" ? StorageUsed_exports : {});
function loadStorageInfo(slice) {
  return {
    used: (0, StorageUsed_1.loadStorageUsed)(slice),
    lastPaid: slice.loadUint(32),
    duePayment: slice.loadMaybeCoins()
  };
}
exports83.loadStorageInfo = loadStorageInfo;
function storeStorageInfo(src) {
  return (builder) => {
    builder.store((0, StorageUsed_1.storeStorageUsed)(src.used));
    builder.storeUint(src.lastPaid, 32);
    builder.storeMaybeCoins(src.duePayment);
  };
}
exports83.storeStorageInfo = storeStorageInfo;
var __export081;
var __export150;
if (Object.isExtensible(module83.exports)) {
  __export081 = module83.exports["storeStorageInfo"];
  __export150 = module83.exports["loadStorageInfo"];
}

// ../../node_modules/@ton/core/dist/types/LibRef.js
var LibRef_exports = {};
__export(LibRef_exports, {
  loadLibRef: () => __export151,
  storeLibRef: () => __export082
});
var exports84 = {};
var module84 = {
  get exports() {
    return exports84;
  },
  set exports(value) {
    exports84 = value;
  }
};
Object.defineProperty(exports84, "__esModule", { value: true });
exports84.storeLibRef = exports84.loadLibRef = void 0;
function loadLibRef(slice) {
  const type4 = slice.loadUint(1);
  if (type4 === 0) {
    return {
      type: "hash",
      libHash: slice.loadBuffer(32)
    };
  } else {
    return {
      type: "ref",
      library: slice.loadRef()
    };
  }
}
exports84.loadLibRef = loadLibRef;
function storeLibRef(src) {
  return (builder) => {
    if (src.type === "hash") {
      builder.storeUint(0, 1);
      builder.storeBuffer(src.libHash);
    } else {
      builder.storeUint(1, 1);
      builder.storeRef(src.library);
    }
  };
}
exports84.storeLibRef = storeLibRef;
var __export082;
var __export151;
if (Object.isExtensible(module84.exports)) {
  __export082 = module84.exports["storeLibRef"];
  __export151 = module84.exports["loadLibRef"];
}

// ../../node_modules/@ton/core/dist/types/ShardStateUnsplit.js
var ShardStateUnsplit_exports = {};
__export(ShardStateUnsplit_exports, {
  loadShardStateUnsplit: () => __export091
});

// ../../node_modules/@ton/core/dist/types/ShardIdent.js
var ShardIdent_exports = {};
__export(ShardIdent_exports, {
  loadShardIdent: () => __export153,
  storeShardIdent: () => __export083
});
var exports85 = {};
var module85 = {
  get exports() {
    return exports85;
  },
  set exports(value) {
    exports85 = value;
  }
};
Object.defineProperty(exports85, "__esModule", { value: true });
exports85.storeShardIdent = exports85.loadShardIdent = void 0;
function loadShardIdent(slice) {
  if (slice.loadUint(2) !== 0) {
    throw Error("Invalid data");
  }
  return {
    shardPrefixBits: slice.loadUint(6),
    workchainId: slice.loadInt(32),
    shardPrefix: slice.loadUintBig(64)
  };
}
exports85.loadShardIdent = loadShardIdent;
function storeShardIdent(src) {
  return (builder) => {
    builder.storeUint(0, 2);
    builder.storeUint(src.shardPrefixBits, 6);
    builder.storeInt(src.workchainId, 32);
    builder.storeUint(src.shardPrefix, 64);
  };
}
exports85.storeShardIdent = storeShardIdent;
var __export083;
var __export153;
if (Object.isExtensible(module85.exports)) {
  __export083 = module85.exports["storeShardIdent"];
  __export153 = module85.exports["loadShardIdent"];
}

// ../../node_modules/@ton/core/dist/types/ShardAccounts.js
var ShardAccounts_exports = {};
__export(ShardAccounts_exports, {
  ShardAccountRefValue: () => __export218,
  loadShardAccounts: () => __export159,
  storeShardAccounts: () => __export089
});

// ../../node_modules/@ton/core/dist/types/ShardAccount.js
var ShardAccount_exports = {};
__export(ShardAccount_exports, {
  loadShardAccount: () => __export157,
  storeShardAccount: () => __export087
});

// ../../node_modules/@ton/core/dist/types/Account.js
var Account_exports = {};
__export(Account_exports, {
  loadAccount: () => __export156,
  storeAccount: () => __export086
});

// ../../node_modules/@ton/core/dist/types/AccountStorage.js
var AccountStorage_exports = {};
__export(AccountStorage_exports, {
  loadAccountStorage: () => __export155,
  storeAccountStorage: () => __export085
});

// ../../node_modules/@ton/core/dist/types/AccountState.js
var AccountState_exports = {};
__export(AccountState_exports, {
  loadAccountState: () => __export154,
  storeAccountState: () => __export084
});
function $$cjs_default$$58(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global59 !== "undefined" && global59 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global59 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global59 !== "undefined" && global59 || typeof globalThis !== "undefined" && globalThis || {};
var exports86 = {};
var module86 = {
  get exports() {
    return exports86;
  },
  set exports(value) {
    exports86 = value;
  }
};
Object.defineProperty(exports86, "__esModule", { value: true });
exports86.storeAccountState = exports86.loadAccountState = void 0;
var StateInit_12 = $$cjs_default$$58(typeof StateInit_exports !== "undefined" ? StateInit_exports : {});
function loadAccountState(cs) {
  if (cs.loadBit()) {
    return { type: "active", state: (0, StateInit_12.loadStateInit)(cs) };
  } else if (cs.loadBit()) {
    return { type: "frozen", stateHash: cs.loadUintBig(256) };
  } else {
    return { type: "uninit" };
  }
}
exports86.loadAccountState = loadAccountState;
function storeAccountState(src) {
  return (builder) => {
    if (src.type === "active") {
      builder.storeBit(true);
      builder.store((0, StateInit_12.storeStateInit)(src.state));
    } else if (src.type === "frozen") {
      builder.storeBit(false);
      builder.storeBit(true);
      builder.storeUint(src.stateHash, 256);
    } else if (src.type === "uninit") {
      builder.storeBit(false);
      builder.storeBit(false);
    }
  };
}
exports86.storeAccountState = storeAccountState;
var __export084;
var __export154;
if (Object.isExtensible(module86.exports)) {
  __export084 = module86.exports["storeAccountState"];
  __export154 = module86.exports["loadAccountState"];
}

// ../../node_modules/@ton/core/dist/types/AccountStorage.js
function $$cjs_default$$59(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global60 !== "undefined" && global60 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global60 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global60 !== "undefined" && global60 || typeof globalThis !== "undefined" && globalThis || {};
var exports87 = {};
var module87 = {
  get exports() {
    return exports87;
  },
  set exports(value) {
    exports87 = value;
  }
};
Object.defineProperty(exports87, "__esModule", { value: true });
exports87.storeAccountStorage = exports87.loadAccountStorage = void 0;
var AccountState_1 = $$cjs_default$$59(typeof AccountState_exports !== "undefined" ? AccountState_exports : {});
var CurrencyCollection_14 = $$cjs_default$$59(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
function loadAccountStorage(slice) {
  return {
    lastTransLt: slice.loadUintBig(64),
    balance: (0, CurrencyCollection_14.loadCurrencyCollection)(slice),
    state: (0, AccountState_1.loadAccountState)(slice)
  };
}
exports87.loadAccountStorage = loadAccountStorage;
function storeAccountStorage(src) {
  return (builder) => {
    builder.storeUint(src.lastTransLt, 64);
    builder.store((0, CurrencyCollection_14.storeCurrencyCollection)(src.balance));
    builder.store((0, AccountState_1.storeAccountState)(src.state));
  };
}
exports87.storeAccountStorage = storeAccountStorage;
var __export085;
var __export155;
if (Object.isExtensible(module87.exports)) {
  __export085 = module87.exports["storeAccountStorage"];
  __export155 = module87.exports["loadAccountStorage"];
}

// ../../node_modules/@ton/core/dist/types/Account.js
function $$cjs_default$$60(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global61 !== "undefined" && global61 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global61 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global61 !== "undefined" && global61 || typeof globalThis !== "undefined" && globalThis || {};
var exports88 = {};
var module88 = {
  get exports() {
    return exports88;
  },
  set exports(value) {
    exports88 = value;
  }
};
Object.defineProperty(exports88, "__esModule", { value: true });
exports88.storeAccount = exports88.loadAccount = void 0;
var AccountStorage_1 = $$cjs_default$$60(typeof AccountStorage_exports !== "undefined" ? AccountStorage_exports : {});
var StorageInto_1 = $$cjs_default$$60(typeof StorageInto_exports !== "undefined" ? StorageInto_exports : {});
function loadAccount(slice) {
  return {
    addr: slice.loadAddress(),
    storageStats: (0, StorageInto_1.loadStorageInfo)(slice),
    storage: (0, AccountStorage_1.loadAccountStorage)(slice)
  };
}
exports88.loadAccount = loadAccount;
function storeAccount(src) {
  return (builder) => {
    builder.storeAddress(src.addr);
    builder.store((0, StorageInto_1.storeStorageInfo)(src.storageStats));
    builder.store((0, AccountStorage_1.storeAccountStorage)(src.storage));
  };
}
exports88.storeAccount = storeAccount;
var __export086;
var __export156;
if (Object.isExtensible(module88.exports)) {
  __export086 = module88.exports["storeAccount"];
  __export156 = module88.exports["loadAccount"];
}

// ../../node_modules/@ton/core/dist/types/ShardAccount.js
function $$cjs_default$$61(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global62 !== "undefined" && global62 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global62 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global62 !== "undefined" && global62 || typeof globalThis !== "undefined" && globalThis || {};
var exports89 = {};
var module89 = {
  get exports() {
    return exports89;
  },
  set exports(value) {
    exports89 = value;
  }
};
Object.defineProperty(exports89, "__esModule", { value: true });
exports89.storeShardAccount = exports89.loadShardAccount = void 0;
var Builder_113 = $$cjs_default$$61(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var Account_1 = $$cjs_default$$61(typeof Account_exports !== "undefined" ? Account_exports : {});
function loadShardAccount(slice) {
  let accountRef = slice.loadRef();
  let account = void 0;
  if (!accountRef.isExotic) {
    let accountSlice = accountRef.beginParse();
    if (accountSlice.loadBit()) {
      account = (0, Account_1.loadAccount)(accountSlice);
    }
  }
  return {
    account,
    lastTransactionHash: slice.loadUintBig(256),
    lastTransactionLt: slice.loadUintBig(64)
  };
}
exports89.loadShardAccount = loadShardAccount;
function storeShardAccount(src) {
  return (builder) => {
    if (src.account) {
      builder.storeRef((0, Builder_113.beginCell)().storeBit(true).store((0, Account_1.storeAccount)(src.account)));
    } else {
      builder.storeRef((0, Builder_113.beginCell)().storeBit(false));
    }
    builder.storeUint(src.lastTransactionHash, 256);
    builder.storeUint(src.lastTransactionLt, 64);
  };
}
exports89.storeShardAccount = storeShardAccount;
var __export087;
var __export157;
if (Object.isExtensible(module89.exports)) {
  __export087 = module89.exports["storeShardAccount"];
  __export157 = module89.exports["loadShardAccount"];
}

// ../../node_modules/@ton/core/dist/types/DepthBalanceInfo.js
var DepthBalanceInfo_exports = {};
__export(DepthBalanceInfo_exports, {
  loadDepthBalanceInfo: () => __export158,
  storeDepthBalanceInfo: () => __export088
});
function $$cjs_default$$62(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global63 !== "undefined" && global63 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global63 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global63 !== "undefined" && global63 || typeof globalThis !== "undefined" && globalThis || {};
var exports90 = {};
var module90 = {
  get exports() {
    return exports90;
  },
  set exports(value) {
    exports90 = value;
  }
};
Object.defineProperty(exports90, "__esModule", { value: true });
exports90.storeDepthBalanceInfo = exports90.loadDepthBalanceInfo = void 0;
var CurrencyCollection_15 = $$cjs_default$$62(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
function loadDepthBalanceInfo(slice) {
  let splitDepth = slice.loadUint(5);
  return {
    splitDepth,
    balance: (0, CurrencyCollection_15.loadCurrencyCollection)(slice)
  };
}
exports90.loadDepthBalanceInfo = loadDepthBalanceInfo;
function storeDepthBalanceInfo(src) {
  return (builder) => {
    builder.storeUint(src.splitDepth, 5);
    builder.store((0, CurrencyCollection_15.storeCurrencyCollection)(src.balance));
  };
}
exports90.storeDepthBalanceInfo = storeDepthBalanceInfo;
var __export088;
var __export158;
if (Object.isExtensible(module90.exports)) {
  __export088 = module90.exports["storeDepthBalanceInfo"];
  __export158 = module90.exports["loadDepthBalanceInfo"];
}

// ../../node_modules/@ton/core/dist/types/ShardAccounts.js
function $$cjs_default$$63(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global64 !== "undefined" && global64 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global64 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global64 !== "undefined" && global64 || typeof globalThis !== "undefined" && globalThis || {};
var exports91 = {};
var module91 = {
  get exports() {
    return exports91;
  },
  set exports(value) {
    exports91 = value;
  }
};
Object.defineProperty(exports91, "__esModule", { value: true });
exports91.storeShardAccounts = exports91.loadShardAccounts = exports91.ShardAccountRefValue = void 0;
var Dictionary_15 = $$cjs_default$$63(typeof Dictionary_exports !== "undefined" ? Dictionary_exports : {});
var DepthBalanceInfo_1 = $$cjs_default$$63(typeof DepthBalanceInfo_exports !== "undefined" ? DepthBalanceInfo_exports : {});
var ShardAccount_1 = $$cjs_default$$63(typeof ShardAccount_exports !== "undefined" ? ShardAccount_exports : {});
exports91.ShardAccountRefValue = {
  parse: (cs) => {
    let depthBalanceInfo = (0, DepthBalanceInfo_1.loadDepthBalanceInfo)(cs);
    let shardAccount = (0, ShardAccount_1.loadShardAccount)(cs);
    return {
      depthBalanceInfo,
      shardAccount
    };
  },
  serialize(src, builder) {
    builder.store((0, DepthBalanceInfo_1.storeDepthBalanceInfo)(src.depthBalanceInfo));
    builder.store((0, ShardAccount_1.storeShardAccount)(src.shardAccount));
  }
};
function loadShardAccounts(cs) {
  return Dictionary_15.Dictionary.load(Dictionary_15.Dictionary.Keys.BigUint(256), exports91.ShardAccountRefValue, cs);
}
exports91.loadShardAccounts = loadShardAccounts;
function storeShardAccounts(src) {
  return (Builder2) => {
    Builder2.storeDict(src);
  };
}
exports91.storeShardAccounts = storeShardAccounts;
var __export089;
var __export159;
var __export218;
if (Object.isExtensible(module91.exports)) {
  __export089 = module91.exports["storeShardAccounts"];
  __export159 = module91.exports["loadShardAccounts"];
  __export218 = module91.exports["ShardAccountRefValue"];
}

// ../../node_modules/@ton/core/dist/types/MasterchainStateExtra.js
var MasterchainStateExtra_exports = {};
__export(MasterchainStateExtra_exports, {
  loadMasterchainStateExtra: () => __export090
});
function $$cjs_default$$64(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global65 !== "undefined" && global65 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global65 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global65 !== "undefined" && global65 || typeof globalThis !== "undefined" && globalThis || {};
var exports92 = {};
var module92 = {
  get exports() {
    return exports92;
  },
  set exports(value) {
    exports92 = value;
  }
};
Object.defineProperty(exports92, "__esModule", { value: true });
exports92.loadMasterchainStateExtra = void 0;
var Dictionary_16 = $$cjs_default$$64(typeof Dictionary_exports !== "undefined" ? Dictionary_exports : {});
var CurrencyCollection_16 = $$cjs_default$$64(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
function loadMasterchainStateExtra(cs) {
  if (cs.loadUint(16) !== 52262) {
    throw Error("Invalid data");
  }
  if (cs.loadBit()) {
    cs.loadRef();
  }
  let configAddress = cs.loadUintBig(256);
  let config7 = Dictionary_16.Dictionary.load(Dictionary_16.Dictionary.Keys.Int(32), Dictionary_16.Dictionary.Values.Cell(), cs);
  const globalBalance = (0, CurrencyCollection_16.loadCurrencyCollection)(cs);
  return {
    config: config7,
    configAddress,
    globalBalance
  };
}
exports92.loadMasterchainStateExtra = loadMasterchainStateExtra;
var __export090;
if (Object.isExtensible(module92.exports)) {
  __export090 = module92.exports["loadMasterchainStateExtra"];
}

// ../../node_modules/@ton/core/dist/types/ShardStateUnsplit.js
function $$cjs_default$$65(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global66 !== "undefined" && global66 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global66 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global66 !== "undefined" && global66 || typeof globalThis !== "undefined" && globalThis || {};
var exports93 = {};
var module93 = {
  get exports() {
    return exports93;
  },
  set exports(value) {
    exports93 = value;
  }
};
Object.defineProperty(exports93, "__esModule", { value: true });
exports93.loadShardStateUnsplit = void 0;
var MasterchainStateExtra_1 = $$cjs_default$$65(typeof MasterchainStateExtra_exports !== "undefined" ? MasterchainStateExtra_exports : {});
var ShardAccounts_1 = $$cjs_default$$65(typeof ShardAccounts_exports !== "undefined" ? ShardAccounts_exports : {});
var ShardIdent_1 = $$cjs_default$$65(typeof ShardIdent_exports !== "undefined" ? ShardIdent_exports : {});
function loadShardStateUnsplit(cs) {
  if (cs.loadUint(32) !== 2418257890) {
    throw Error("Invalid data");
  }
  let globalId = cs.loadInt(32);
  let shardId = (0, ShardIdent_1.loadShardIdent)(cs);
  let seqno = cs.loadUint(32);
  let vertSeqNo = cs.loadUint(32);
  let genUtime = cs.loadUint(32);
  let genLt = cs.loadUintBig(64);
  let minRefMcSeqno = cs.loadUint(32);
  cs.loadRef();
  let beforeSplit = cs.loadBit();
  let shardAccountsRef = cs.loadRef();
  let accounts = void 0;
  if (!shardAccountsRef.isExotic) {
    accounts = (0, ShardAccounts_1.loadShardAccounts)(shardAccountsRef.beginParse());
  }
  cs.loadRef();
  let mcStateExtra = cs.loadBit();
  let extras = null;
  if (mcStateExtra) {
    let cell = cs.loadRef();
    if (!cell.isExotic) {
      extras = (0, MasterchainStateExtra_1.loadMasterchainStateExtra)(cell.beginParse());
    }
  }
  return {
    globalId,
    shardId,
    seqno,
    vertSeqNo,
    genUtime,
    genLt,
    minRefMcSeqno,
    beforeSplit,
    accounts,
    extras
  };
}
exports93.loadShardStateUnsplit = loadShardStateUnsplit;
var __export091;
if (Object.isExtensible(module93.exports)) {
  __export091 = module93.exports["loadShardStateUnsplit"];
}

// ../../node_modules/@ton/core/dist/types/ReserveMode.js
var ReserveMode_exports = {};
__export(ReserveMode_exports, {
  ReserveMode: () => __export092
});
var exports94 = {};
var module94 = {
  get exports() {
    return exports94;
  },
  set exports(value) {
    exports94 = value;
  }
};
Object.defineProperty(exports94, "__esModule", { value: true });
exports94.ReserveMode = void 0;
var ReserveMode;
(function(ReserveMode2) {
  ReserveMode2[ReserveMode2["THIS_AMOUNT"] = 0] = "THIS_AMOUNT";
  ReserveMode2[ReserveMode2["LEAVE_THIS_AMOUNT"] = 1] = "LEAVE_THIS_AMOUNT";
  ReserveMode2[ReserveMode2["AT_MOST_THIS_AMOUNT"] = 2] = "AT_MOST_THIS_AMOUNT";
  ReserveMode2[ReserveMode2["LEAVE_MAX_THIS_AMOUNT"] = 3] = "LEAVE_MAX_THIS_AMOUNT";
  ReserveMode2[ReserveMode2["BEFORE_BALANCE_PLUS_THIS_AMOUNT"] = 4] = "BEFORE_BALANCE_PLUS_THIS_AMOUNT";
  ReserveMode2[ReserveMode2["LEAVE_BBALANCE_PLUS_THIS_AMOUNT"] = 5] = "LEAVE_BBALANCE_PLUS_THIS_AMOUNT";
  ReserveMode2[ReserveMode2["BEFORE_BALANCE_MINUS_THIS_AMOUNT"] = 12] = "BEFORE_BALANCE_MINUS_THIS_AMOUNT";
  ReserveMode2[ReserveMode2["LEAVE_BEFORE_BALANCE_MINUS_THIS_AMOUNT"] = 13] = "LEAVE_BEFORE_BALANCE_MINUS_THIS_AMOUNT";
})(ReserveMode || (exports94.ReserveMode = ReserveMode = {}));
var __export092;
if (Object.isExtensible(module94.exports)) {
  __export092 = module94.exports["ReserveMode"];
}

// ../../node_modules/@ton/core/dist/types/SendMode.js
var SendMode_exports = {};
__export(SendMode_exports, {
  SendMode: () => __export093
});
var exports95 = {};
var module95 = {
  get exports() {
    return exports95;
  },
  set exports(value) {
    exports95 = value;
  }
};
Object.defineProperty(exports95, "__esModule", { value: true });
exports95.SendMode = void 0;
var SendMode;
(function(SendMode2) {
  SendMode2[SendMode2["CARRY_ALL_REMAINING_BALANCE"] = 128] = "CARRY_ALL_REMAINING_BALANCE";
  SendMode2[SendMode2["CARRY_ALL_REMAINING_INCOMING_VALUE"] = 64] = "CARRY_ALL_REMAINING_INCOMING_VALUE";
  SendMode2[SendMode2["DESTROY_ACCOUNT_IF_ZERO"] = 32] = "DESTROY_ACCOUNT_IF_ZERO";
  SendMode2[SendMode2["PAY_GAS_SEPARATELY"] = 1] = "PAY_GAS_SEPARATELY";
  SendMode2[SendMode2["IGNORE_ERRORS"] = 2] = "IGNORE_ERRORS";
  SendMode2[SendMode2["NONE"] = 0] = "NONE";
})(SendMode || (exports95.SendMode = SendMode = {}));
var __export093;
if (Object.isExtensible(module95.exports)) {
  __export093 = module95.exports["SendMode"];
}

// ../../node_modules/@ton/core/dist/types/MessageRelaxed.js
var MessageRelaxed_exports = {};
__export(MessageRelaxed_exports, {
  loadMessageRelaxed: () => __export161,
  storeMessageRelaxed: () => __export095
});

// ../../node_modules/@ton/core/dist/types/CommonMessageInfoRelaxed.js
var CommonMessageInfoRelaxed_exports = {};
__export(CommonMessageInfoRelaxed_exports, {
  loadCommonMessageInfoRelaxed: () => __export160,
  storeCommonMessageInfoRelaxed: () => __export094
});
function $$cjs_default$$66(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global67 !== "undefined" && global67 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global67 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global67 !== "undefined" && global67 || typeof globalThis !== "undefined" && globalThis || {};
var exports96 = {};
var module96 = {
  get exports() {
    return exports96;
  },
  set exports(value) {
    exports96 = value;
  }
};
Object.defineProperty(exports96, "__esModule", { value: true });
exports96.storeCommonMessageInfoRelaxed = exports96.loadCommonMessageInfoRelaxed = void 0;
var CurrencyCollection_17 = $$cjs_default$$66(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
function loadCommonMessageInfoRelaxed(slice) {
  if (!slice.loadBit()) {
    const ihrDisabled = slice.loadBit();
    const bounce = slice.loadBit();
    const bounced = slice.loadBit();
    const src2 = slice.loadMaybeAddress();
    const dest2 = slice.loadAddress();
    const value = (0, CurrencyCollection_17.loadCurrencyCollection)(slice);
    const ihrFee = slice.loadCoins();
    const forwardFee = slice.loadCoins();
    const createdLt2 = slice.loadUintBig(64);
    const createdAt2 = slice.loadUint(32);
    return {
      type: "internal",
      ihrDisabled,
      bounce,
      bounced,
      src: src2,
      dest: dest2,
      value,
      ihrFee,
      forwardFee,
      createdLt: createdLt2,
      createdAt: createdAt2
    };
  }
  if (!slice.loadBit()) {
    throw Error("External In message is not possible for CommonMessageInfoRelaxed");
  }
  const src = slice.loadMaybeAddress();
  const dest = slice.loadMaybeExternalAddress();
  const createdLt = slice.loadUintBig(64);
  const createdAt = slice.loadUint(32);
  return {
    type: "external-out",
    src,
    dest,
    createdLt,
    createdAt
  };
}
exports96.loadCommonMessageInfoRelaxed = loadCommonMessageInfoRelaxed;
function storeCommonMessageInfoRelaxed(source) {
  return (builder) => {
    if (source.type === "internal") {
      builder.storeBit(0);
      builder.storeBit(source.ihrDisabled);
      builder.storeBit(source.bounce);
      builder.storeBit(source.bounced);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.store((0, CurrencyCollection_17.storeCurrencyCollection)(source.value));
      builder.storeCoins(source.ihrFee);
      builder.storeCoins(source.forwardFee);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else if (source.type === "external-out") {
      builder.storeBit(1);
      builder.storeBit(1);
      builder.storeAddress(source.src);
      builder.storeAddress(source.dest);
      builder.storeUint(source.createdLt, 64);
      builder.storeUint(source.createdAt, 32);
    } else {
      throw new Error("Unknown CommonMessageInfo type");
    }
  };
}
exports96.storeCommonMessageInfoRelaxed = storeCommonMessageInfoRelaxed;
var __export094;
var __export160;
if (Object.isExtensible(module96.exports)) {
  __export094 = module96.exports["storeCommonMessageInfoRelaxed"];
  __export160 = module96.exports["loadCommonMessageInfoRelaxed"];
}

// ../../node_modules/@ton/core/dist/types/MessageRelaxed.js
function $$cjs_default$$67(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global68 !== "undefined" && global68 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global68 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global68 !== "undefined" && global68 || typeof globalThis !== "undefined" && globalThis || {};
var exports97 = {};
var module97 = {
  get exports() {
    return exports97;
  },
  set exports(value) {
    exports97 = value;
  }
};
Object.defineProperty(exports97, "__esModule", { value: true });
exports97.storeMessageRelaxed = exports97.loadMessageRelaxed = void 0;
var Builder_114 = $$cjs_default$$67(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var CommonMessageInfoRelaxed_1 = $$cjs_default$$67(typeof CommonMessageInfoRelaxed_exports !== "undefined" ? CommonMessageInfoRelaxed_exports : {});
var StateInit_13 = $$cjs_default$$67(typeof StateInit_exports !== "undefined" ? StateInit_exports : {});
function loadMessageRelaxed(slice) {
  const info = (0, CommonMessageInfoRelaxed_1.loadCommonMessageInfoRelaxed)(slice);
  let init = null;
  if (slice.loadBit()) {
    if (!slice.loadBit()) {
      init = (0, StateInit_13.loadStateInit)(slice);
    } else {
      init = (0, StateInit_13.loadStateInit)(slice.loadRef().beginParse());
    }
  }
  const body = slice.loadBit() ? slice.loadRef() : slice.asCell();
  return {
    info,
    init,
    body
  };
}
exports97.loadMessageRelaxed = loadMessageRelaxed;
function storeMessageRelaxed(message, opts) {
  return (builder) => {
    builder.store((0, CommonMessageInfoRelaxed_1.storeCommonMessageInfoRelaxed)(message.info));
    if (message.init) {
      builder.storeBit(true);
      let initCell = (0, Builder_114.beginCell)().store((0, StateInit_13.storeStateInit)(message.init));
      let needRef2 = false;
      if (opts && opts.forceRef) {
        needRef2 = true;
      } else {
        if (builder.availableBits - 2 >= initCell.bits) {
          needRef2 = false;
        } else {
          needRef2 = true;
        }
      }
      if (needRef2) {
        builder.storeBit(true);
        builder.storeRef(initCell);
      } else {
        builder.storeBit(false);
        builder.storeBuilder(initCell);
      }
    } else {
      builder.storeBit(false);
    }
    let needRef = false;
    if (opts && opts.forceRef) {
      needRef = true;
    } else {
      if (builder.availableBits - 1 >= message.body.bits.length && builder.refs + message.body.refs.length <= 4 && !message.body.isExotic) {
        needRef = false;
      } else {
        needRef = true;
      }
    }
    if (needRef) {
      builder.storeBit(true);
      builder.storeRef(message.body);
    } else {
      builder.storeBit(false);
      builder.storeBuilder(message.body.asBuilder());
    }
  };
}
exports97.storeMessageRelaxed = storeMessageRelaxed;
var __export095;
var __export161;
if (Object.isExtensible(module97.exports)) {
  __export095 = module97.exports["storeMessageRelaxed"];
  __export161 = module97.exports["loadMessageRelaxed"];
}

// ../../node_modules/@ton/core/dist/types/OutList.js
var OutList_exports = {};
__export(OutList_exports, {
  loadOutAction: () => __export219,
  loadOutList: () => __export096,
  storeOutAction: () => __export36,
  storeOutList: () => __export163
});
function $$cjs_default$$68(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global69 !== "undefined" && global69 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global69 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global69 !== "undefined" && global69 || typeof globalThis !== "undefined" && globalThis || {};
var exports98 = {};
var module98 = {
  get exports() {
    return exports98;
  },
  set exports(value) {
    exports98 = value;
  }
};
Object.defineProperty(exports98, "__esModule", { value: true });
exports98.loadOutList = exports98.storeOutList = exports98.loadOutAction = exports98.storeOutAction = void 0;
var MessageRelaxed_1 = $$cjs_default$$68(typeof MessageRelaxed_exports !== "undefined" ? MessageRelaxed_exports : {});
var Builder_115 = $$cjs_default$$68(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var CurrencyCollection_18 = $$cjs_default$$68(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
var LibRef_1 = $$cjs_default$$68(typeof LibRef_exports !== "undefined" ? LibRef_exports : {});
function storeOutAction(action2) {
  switch (action2.type) {
    case "sendMsg":
      return storeOutActionSendMsg(action2);
    case "setCode":
      return storeOutActionSetCode(action2);
    case "reserve":
      return storeOutActionReserve(action2);
    case "changeLibrary":
      return storeOutActionChangeLibrary(action2);
    default:
      throw new Error(`Unknown action type ${action2.type}`);
  }
}
exports98.storeOutAction = storeOutAction;
var outActionSendMsgTag = 247711853;
function storeOutActionSendMsg(action2) {
  return (builder) => {
    builder.storeUint(outActionSendMsgTag, 32).storeUint(action2.mode, 8).storeRef((0, Builder_115.beginCell)().store((0, MessageRelaxed_1.storeMessageRelaxed)(action2.outMsg)).endCell());
  };
}
var outActionSetCodeTag = 2907562126;
function storeOutActionSetCode(action2) {
  return (builder) => {
    builder.storeUint(outActionSetCodeTag, 32).storeRef(action2.newCode);
  };
}
var outActionReserveTag = 921090057;
function storeOutActionReserve(action2) {
  return (builder) => {
    builder.storeUint(outActionReserveTag, 32).storeUint(action2.mode, 8).store((0, CurrencyCollection_18.storeCurrencyCollection)(action2.currency));
  };
}
var outActionChangeLibraryTag = 653925844;
function storeOutActionChangeLibrary(action2) {
  return (builder) => {
    builder.storeUint(outActionChangeLibraryTag, 32).storeUint(action2.mode, 7).store((0, LibRef_1.storeLibRef)(action2.libRef));
  };
}
function loadOutAction(slice) {
  const tag = slice.loadUint(32);
  if (tag === outActionSendMsgTag) {
    const mode = slice.loadUint(8);
    const outMsg = (0, MessageRelaxed_1.loadMessageRelaxed)(slice.loadRef().beginParse());
    return {
      type: "sendMsg",
      mode,
      outMsg
    };
  }
  if (tag === outActionSetCodeTag) {
    const newCode = slice.loadRef();
    return {
      type: "setCode",
      newCode
    };
  }
  if (tag === outActionReserveTag) {
    const mode = slice.loadUint(8);
    const currency = (0, CurrencyCollection_18.loadCurrencyCollection)(slice);
    return {
      type: "reserve",
      mode,
      currency
    };
  }
  if (tag === outActionChangeLibraryTag) {
    const mode = slice.loadUint(7);
    const libRef = (0, LibRef_1.loadLibRef)(slice);
    return {
      type: "changeLibrary",
      mode,
      libRef
    };
  }
  throw new Error(`Unknown out action tag 0x${tag.toString(16)}`);
}
exports98.loadOutAction = loadOutAction;
function storeOutList(actions) {
  const cell = actions.reduce((cell2, action2) => (0, Builder_115.beginCell)().storeRef(cell2).store(storeOutAction(action2)).endCell(), (0, Builder_115.beginCell)().endCell());
  return (builder) => {
    builder.storeSlice(cell.beginParse());
  };
}
exports98.storeOutList = storeOutList;
function loadOutList(slice) {
  const actions = [];
  while (slice.remainingRefs) {
    const nextCell = slice.loadRef();
    actions.push(loadOutAction(slice));
    slice = nextCell.beginParse();
  }
  return actions.reverse();
}
exports98.loadOutList = loadOutList;
var __export096;
var __export163;
var __export219;
var __export36;
if (Object.isExtensible(module98.exports)) {
  __export096 = module98.exports["loadOutList"];
  __export163 = module98.exports["storeOutList"];
  __export219 = module98.exports["loadOutAction"];
  __export36 = module98.exports["storeOutAction"];
}

// ../../node_modules/@ton/core/dist/types/_helpers.js
var helpers_exports = {};
__export(helpers_exports, {
  comment: () => __export097,
  external: () => __export164,
  internal: () => __export220
});
function $$cjs_default$$69(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global70 !== "undefined" && global70 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global70 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global70 !== "undefined" && global70 || typeof globalThis !== "undefined" && globalThis || {};
var exports99 = {};
var module99 = {
  get exports() {
    return exports99;
  },
  set exports(value) {
    exports99 = value;
  }
};
Object.defineProperty(exports99, "__esModule", { value: true });
exports99.comment = exports99.external = exports99.internal = void 0;
var Address_16 = $$cjs_default$$69(typeof Address_exports !== "undefined" ? Address_exports : {});
var Cell_15 = $$cjs_default$$69(typeof Cell_exports !== "undefined" ? Cell_exports : {});
var Builder_116 = $$cjs_default$$69(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var convert_1 = $$cjs_default$$69(typeof convert_exports !== "undefined" ? convert_exports : {});
function internal(src) {
  let bounce = true;
  if (src.bounce !== null && src.bounce !== void 0) {
    bounce = src.bounce;
  }
  let to;
  if (typeof src.to === "string") {
    to = Address_16.Address.parse(src.to);
  } else if (Address_16.Address.isAddress(src.to)) {
    to = src.to;
  } else {
    throw new Error(`Invalid address ${src.to}`);
  }
  let value;
  if (typeof src.value === "string") {
    value = (0, convert_1.toNano)(src.value);
  } else {
    value = src.value;
  }
  let body = Cell_15.Cell.EMPTY;
  if (typeof src.body === "string") {
    body = (0, Builder_116.beginCell)().storeUint(0, 32).storeStringTail(src.body).endCell();
  } else if (src.body) {
    body = src.body;
  }
  return {
    info: {
      type: "internal",
      dest: to,
      value: { coins: value },
      bounce,
      ihrDisabled: true,
      bounced: false,
      ihrFee: 0n,
      forwardFee: 0n,
      createdAt: 0,
      createdLt: 0n
    },
    init: src.init ?? void 0,
    body
  };
}
exports99.internal = internal;
function external(src) {
  let to;
  if (typeof src.to === "string") {
    to = Address_16.Address.parse(src.to);
  } else if (Address_16.Address.isAddress(src.to)) {
    to = src.to;
  } else {
    throw new Error(`Invalid address ${src.to}`);
  }
  return {
    info: {
      type: "external-in",
      dest: to,
      importFee: 0n
    },
    init: src.init ?? void 0,
    body: src.body || Cell_15.Cell.EMPTY
  };
}
exports99.external = external;
function comment(src) {
  return (0, Builder_116.beginCell)().storeUint(0, 32).storeStringTail(src).endCell();
}
exports99.comment = comment;
var __export097;
var __export164;
var __export220;
if (Object.isExtensible(module99.exports)) {
  __export097 = module99.exports["comment"];
  __export164 = module99.exports["external"];
  __export220 = module99.exports["internal"];
}

// ../../node_modules/@ton/core/dist/types/_export.js
function $$cjs_default$$70(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global71 !== "undefined" && global71 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global71 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global71 !== "undefined" && global71 || typeof globalThis !== "undefined" && globalThis || {};
var exports100 = {};
var module100 = {
  get exports() {
    return exports100;
  },
  set exports(value) {
    exports100 = value;
  }
};
Object.defineProperty(exports100, "__esModule", { value: true });
exports100.storeSplitMergeInfo = exports100.loadSplitMergeInfo = exports100.storeLibRef = exports100.loadLibRef = exports100.storeSimpleLibrary = exports100.loadSimpleLibrary = exports100.loadShardStateUnsplit = exports100.storeShardIdent = exports100.loadShardIdent = exports100.storeShardAccounts = exports100.loadShardAccounts = exports100.ShardAccountRefValue = exports100.storeShardAccount = exports100.loadShardAccount = exports100.ReserveMode = exports100.SendMode = exports100.storeMessageRelaxed = exports100.loadMessageRelaxed = exports100.storeMessage = exports100.loadMessage = exports100.loadMasterchainStateExtra = exports100.storeHashUpdate = exports100.loadHashUpdate = exports100.storeDepthBalanceInfo = exports100.loadDepthBalanceInfo = exports100.storeCurrencyCollection = exports100.loadCurrencyCollection = exports100.storeComputeSkipReason = exports100.loadComputeSkipReason = exports100.storeCommonMessageInfoRelaxed = exports100.loadCommonMessageInfoRelaxed = exports100.storeCommonMessageInfo = exports100.loadCommonMessageInfo = exports100.storeOutList = exports100.loadOutList = exports100.storeOutAction = exports100.loadOutAction = exports100.storeAccountStorage = exports100.loadAccountStorage = exports100.storeAccountStatusChange = exports100.loadAccountStatusChange = exports100.storeAccountStatus = exports100.loadAccountStatus = exports100.storeAccountState = exports100.loadAccountState = exports100.storeAccount = exports100.loadAccount = exports100.comment = exports100.external = exports100.internal = void 0;
exports100.storeTransactionsStoragePhase = exports100.loadTransactionStoragePhase = exports100.storeTransactionDescription = exports100.loadTransactionDescription = exports100.storeTransactionCreditPhase = exports100.loadTransactionCreditPhase = exports100.storeTransactionComputePhase = exports100.loadTransactionComputePhase = exports100.storeTransactionBouncePhase = exports100.loadTransactionBouncePhase = exports100.storeTransactionActionPhase = exports100.loadTransactionActionPhase = exports100.storeTransaction = exports100.loadTransaction = exports100.storeTickTock = exports100.loadTickTock = exports100.storeStorageUsedShort = exports100.loadStorageUsedShort = exports100.storeStorageUsed = exports100.loadStorageUsed = exports100.storeStorageInfo = exports100.loadStorageInfo = exports100.storeStateInit = exports100.loadStateInit = void 0;
var _helpers_1 = $$cjs_default$$70(typeof helpers_exports !== "undefined" ? helpers_exports : {});
Object.defineProperty(exports100, "internal", { enumerable: true, get: function() {
  return _helpers_1.internal;
} });
Object.defineProperty(exports100, "external", { enumerable: true, get: function() {
  return _helpers_1.external;
} });
Object.defineProperty(exports100, "comment", { enumerable: true, get: function() {
  return _helpers_1.comment;
} });
var Account_12 = $$cjs_default$$70(typeof Account_exports !== "undefined" ? Account_exports : {});
Object.defineProperty(exports100, "loadAccount", { enumerable: true, get: function() {
  return Account_12.loadAccount;
} });
Object.defineProperty(exports100, "storeAccount", { enumerable: true, get: function() {
  return Account_12.storeAccount;
} });
var AccountState_12 = $$cjs_default$$70(typeof AccountState_exports !== "undefined" ? AccountState_exports : {});
Object.defineProperty(exports100, "loadAccountState", { enumerable: true, get: function() {
  return AccountState_12.loadAccountState;
} });
Object.defineProperty(exports100, "storeAccountState", { enumerable: true, get: function() {
  return AccountState_12.storeAccountState;
} });
var AccountStatus_12 = $$cjs_default$$70(typeof AccountStatus_exports !== "undefined" ? AccountStatus_exports : {});
Object.defineProperty(exports100, "loadAccountStatus", { enumerable: true, get: function() {
  return AccountStatus_12.loadAccountStatus;
} });
Object.defineProperty(exports100, "storeAccountStatus", { enumerable: true, get: function() {
  return AccountStatus_12.storeAccountStatus;
} });
var AccountStatusChange_13 = $$cjs_default$$70(typeof AccountStatusChange_exports !== "undefined" ? AccountStatusChange_exports : {});
Object.defineProperty(exports100, "loadAccountStatusChange", { enumerable: true, get: function() {
  return AccountStatusChange_13.loadAccountStatusChange;
} });
Object.defineProperty(exports100, "storeAccountStatusChange", { enumerable: true, get: function() {
  return AccountStatusChange_13.storeAccountStatusChange;
} });
var AccountStorage_12 = $$cjs_default$$70(typeof AccountStorage_exports !== "undefined" ? AccountStorage_exports : {});
Object.defineProperty(exports100, "loadAccountStorage", { enumerable: true, get: function() {
  return AccountStorage_12.loadAccountStorage;
} });
Object.defineProperty(exports100, "storeAccountStorage", { enumerable: true, get: function() {
  return AccountStorage_12.storeAccountStorage;
} });
var OutList_1 = $$cjs_default$$70(typeof OutList_exports !== "undefined" ? OutList_exports : {});
Object.defineProperty(exports100, "loadOutAction", { enumerable: true, get: function() {
  return OutList_1.loadOutAction;
} });
Object.defineProperty(exports100, "storeOutAction", { enumerable: true, get: function() {
  return OutList_1.storeOutAction;
} });
Object.defineProperty(exports100, "loadOutList", { enumerable: true, get: function() {
  return OutList_1.loadOutList;
} });
Object.defineProperty(exports100, "storeOutList", { enumerable: true, get: function() {
  return OutList_1.storeOutList;
} });
var CommonMessageInfo_12 = $$cjs_default$$70(typeof CommonMessageInfo_exports !== "undefined" ? CommonMessageInfo_exports : {});
Object.defineProperty(exports100, "loadCommonMessageInfo", { enumerable: true, get: function() {
  return CommonMessageInfo_12.loadCommonMessageInfo;
} });
Object.defineProperty(exports100, "storeCommonMessageInfo", { enumerable: true, get: function() {
  return CommonMessageInfo_12.storeCommonMessageInfo;
} });
var CommonMessageInfoRelaxed_12 = $$cjs_default$$70(typeof CommonMessageInfoRelaxed_exports !== "undefined" ? CommonMessageInfoRelaxed_exports : {});
Object.defineProperty(exports100, "loadCommonMessageInfoRelaxed", { enumerable: true, get: function() {
  return CommonMessageInfoRelaxed_12.loadCommonMessageInfoRelaxed;
} });
Object.defineProperty(exports100, "storeCommonMessageInfoRelaxed", { enumerable: true, get: function() {
  return CommonMessageInfoRelaxed_12.storeCommonMessageInfoRelaxed;
} });
var ComputeSkipReason_12 = $$cjs_default$$70(typeof ComputeSkipReason_exports !== "undefined" ? ComputeSkipReason_exports : {});
Object.defineProperty(exports100, "loadComputeSkipReason", { enumerable: true, get: function() {
  return ComputeSkipReason_12.loadComputeSkipReason;
} });
Object.defineProperty(exports100, "storeComputeSkipReason", { enumerable: true, get: function() {
  return ComputeSkipReason_12.storeComputeSkipReason;
} });
var CurrencyCollection_19 = $$cjs_default$$70(typeof CurrencyCollection_exports !== "undefined" ? CurrencyCollection_exports : {});
Object.defineProperty(exports100, "loadCurrencyCollection", { enumerable: true, get: function() {
  return CurrencyCollection_19.loadCurrencyCollection;
} });
Object.defineProperty(exports100, "storeCurrencyCollection", { enumerable: true, get: function() {
  return CurrencyCollection_19.storeCurrencyCollection;
} });
var DepthBalanceInfo_12 = $$cjs_default$$70(typeof DepthBalanceInfo_exports !== "undefined" ? DepthBalanceInfo_exports : {});
Object.defineProperty(exports100, "loadDepthBalanceInfo", { enumerable: true, get: function() {
  return DepthBalanceInfo_12.loadDepthBalanceInfo;
} });
Object.defineProperty(exports100, "storeDepthBalanceInfo", { enumerable: true, get: function() {
  return DepthBalanceInfo_12.storeDepthBalanceInfo;
} });
var HashUpdate_12 = $$cjs_default$$70(typeof HashUpdate_exports !== "undefined" ? HashUpdate_exports : {});
Object.defineProperty(exports100, "loadHashUpdate", { enumerable: true, get: function() {
  return HashUpdate_12.loadHashUpdate;
} });
Object.defineProperty(exports100, "storeHashUpdate", { enumerable: true, get: function() {
  return HashUpdate_12.storeHashUpdate;
} });
var MasterchainStateExtra_12 = $$cjs_default$$70(typeof MasterchainStateExtra_exports !== "undefined" ? MasterchainStateExtra_exports : {});
Object.defineProperty(exports100, "loadMasterchainStateExtra", { enumerable: true, get: function() {
  return MasterchainStateExtra_12.loadMasterchainStateExtra;
} });
var Message_12 = $$cjs_default$$70(typeof Message_exports !== "undefined" ? Message_exports : {});
Object.defineProperty(exports100, "loadMessage", { enumerable: true, get: function() {
  return Message_12.loadMessage;
} });
Object.defineProperty(exports100, "storeMessage", { enumerable: true, get: function() {
  return Message_12.storeMessage;
} });
var MessageRelaxed_12 = $$cjs_default$$70(typeof MessageRelaxed_exports !== "undefined" ? MessageRelaxed_exports : {});
Object.defineProperty(exports100, "loadMessageRelaxed", { enumerable: true, get: function() {
  return MessageRelaxed_12.loadMessageRelaxed;
} });
Object.defineProperty(exports100, "storeMessageRelaxed", { enumerable: true, get: function() {
  return MessageRelaxed_12.storeMessageRelaxed;
} });
var SendMode_1 = $$cjs_default$$70(typeof SendMode_exports !== "undefined" ? SendMode_exports : {});
Object.defineProperty(exports100, "SendMode", { enumerable: true, get: function() {
  return SendMode_1.SendMode;
} });
var ReserveMode_1 = $$cjs_default$$70(typeof ReserveMode_exports !== "undefined" ? ReserveMode_exports : {});
Object.defineProperty(exports100, "ReserveMode", { enumerable: true, get: function() {
  return ReserveMode_1.ReserveMode;
} });
var ShardAccount_12 = $$cjs_default$$70(typeof ShardAccount_exports !== "undefined" ? ShardAccount_exports : {});
Object.defineProperty(exports100, "loadShardAccount", { enumerable: true, get: function() {
  return ShardAccount_12.loadShardAccount;
} });
Object.defineProperty(exports100, "storeShardAccount", { enumerable: true, get: function() {
  return ShardAccount_12.storeShardAccount;
} });
var ShardAccounts_12 = $$cjs_default$$70(typeof ShardAccounts_exports !== "undefined" ? ShardAccounts_exports : {});
Object.defineProperty(exports100, "ShardAccountRefValue", { enumerable: true, get: function() {
  return ShardAccounts_12.ShardAccountRefValue;
} });
Object.defineProperty(exports100, "loadShardAccounts", { enumerable: true, get: function() {
  return ShardAccounts_12.loadShardAccounts;
} });
Object.defineProperty(exports100, "storeShardAccounts", { enumerable: true, get: function() {
  return ShardAccounts_12.storeShardAccounts;
} });
var ShardIdent_12 = $$cjs_default$$70(typeof ShardIdent_exports !== "undefined" ? ShardIdent_exports : {});
Object.defineProperty(exports100, "loadShardIdent", { enumerable: true, get: function() {
  return ShardIdent_12.loadShardIdent;
} });
Object.defineProperty(exports100, "storeShardIdent", { enumerable: true, get: function() {
  return ShardIdent_12.storeShardIdent;
} });
var ShardStateUnsplit_1 = $$cjs_default$$70(typeof ShardStateUnsplit_exports !== "undefined" ? ShardStateUnsplit_exports : {});
Object.defineProperty(exports100, "loadShardStateUnsplit", { enumerable: true, get: function() {
  return ShardStateUnsplit_1.loadShardStateUnsplit;
} });
var SimpleLibrary_12 = $$cjs_default$$70(typeof SimpleLibrary_exports !== "undefined" ? SimpleLibrary_exports : {});
Object.defineProperty(exports100, "loadSimpleLibrary", { enumerable: true, get: function() {
  return SimpleLibrary_12.loadSimpleLibrary;
} });
Object.defineProperty(exports100, "storeSimpleLibrary", { enumerable: true, get: function() {
  return SimpleLibrary_12.storeSimpleLibrary;
} });
var LibRef_12 = $$cjs_default$$70(typeof LibRef_exports !== "undefined" ? LibRef_exports : {});
Object.defineProperty(exports100, "loadLibRef", { enumerable: true, get: function() {
  return LibRef_12.loadLibRef;
} });
Object.defineProperty(exports100, "storeLibRef", { enumerable: true, get: function() {
  return LibRef_12.storeLibRef;
} });
var SplitMergeInfo_12 = $$cjs_default$$70(typeof SplitMergeInfo_exports !== "undefined" ? SplitMergeInfo_exports : {});
Object.defineProperty(exports100, "loadSplitMergeInfo", { enumerable: true, get: function() {
  return SplitMergeInfo_12.loadSplitMergeInfo;
} });
Object.defineProperty(exports100, "storeSplitMergeInfo", { enumerable: true, get: function() {
  return SplitMergeInfo_12.storeSplitMergeInfo;
} });
var StateInit_14 = $$cjs_default$$70(typeof StateInit_exports !== "undefined" ? StateInit_exports : {});
Object.defineProperty(exports100, "loadStateInit", { enumerable: true, get: function() {
  return StateInit_14.loadStateInit;
} });
Object.defineProperty(exports100, "storeStateInit", { enumerable: true, get: function() {
  return StateInit_14.storeStateInit;
} });
var StorageInto_12 = $$cjs_default$$70(typeof StorageInto_exports !== "undefined" ? StorageInto_exports : {});
Object.defineProperty(exports100, "loadStorageInfo", { enumerable: true, get: function() {
  return StorageInto_12.loadStorageInfo;
} });
Object.defineProperty(exports100, "storeStorageInfo", { enumerable: true, get: function() {
  return StorageInto_12.storeStorageInfo;
} });
var StorageUsed_12 = $$cjs_default$$70(typeof StorageUsed_exports !== "undefined" ? StorageUsed_exports : {});
Object.defineProperty(exports100, "loadStorageUsed", { enumerable: true, get: function() {
  return StorageUsed_12.loadStorageUsed;
} });
Object.defineProperty(exports100, "storeStorageUsed", { enumerable: true, get: function() {
  return StorageUsed_12.storeStorageUsed;
} });
var StorageUsedShort_13 = $$cjs_default$$70(typeof StorageUsedShort_exports !== "undefined" ? StorageUsedShort_exports : {});
Object.defineProperty(exports100, "loadStorageUsedShort", { enumerable: true, get: function() {
  return StorageUsedShort_13.loadStorageUsedShort;
} });
Object.defineProperty(exports100, "storeStorageUsedShort", { enumerable: true, get: function() {
  return StorageUsedShort_13.storeStorageUsedShort;
} });
var TickTock_12 = $$cjs_default$$70(typeof TickTock_exports !== "undefined" ? TickTock_exports : {});
Object.defineProperty(exports100, "loadTickTock", { enumerable: true, get: function() {
  return TickTock_12.loadTickTock;
} });
Object.defineProperty(exports100, "storeTickTock", { enumerable: true, get: function() {
  return TickTock_12.storeTickTock;
} });
var Transaction_12 = $$cjs_default$$70(typeof Transaction_exports !== "undefined" ? Transaction_exports : {});
Object.defineProperty(exports100, "loadTransaction", { enumerable: true, get: function() {
  return Transaction_12.loadTransaction;
} });
Object.defineProperty(exports100, "storeTransaction", { enumerable: true, get: function() {
  return Transaction_12.storeTransaction;
} });
var TransactionActionPhase_12 = $$cjs_default$$70(typeof TransactionActionPhase_exports !== "undefined" ? TransactionActionPhase_exports : {});
Object.defineProperty(exports100, "loadTransactionActionPhase", { enumerable: true, get: function() {
  return TransactionActionPhase_12.loadTransactionActionPhase;
} });
Object.defineProperty(exports100, "storeTransactionActionPhase", { enumerable: true, get: function() {
  return TransactionActionPhase_12.storeTransactionActionPhase;
} });
var TransactionBouncePhase_12 = $$cjs_default$$70(typeof TransactionBouncePhase_exports !== "undefined" ? TransactionBouncePhase_exports : {});
Object.defineProperty(exports100, "loadTransactionBouncePhase", { enumerable: true, get: function() {
  return TransactionBouncePhase_12.loadTransactionBouncePhase;
} });
Object.defineProperty(exports100, "storeTransactionBouncePhase", { enumerable: true, get: function() {
  return TransactionBouncePhase_12.storeTransactionBouncePhase;
} });
var TransactionComputePhase_12 = $$cjs_default$$70(typeof TransactionComputePhase_exports !== "undefined" ? TransactionComputePhase_exports : {});
Object.defineProperty(exports100, "loadTransactionComputePhase", { enumerable: true, get: function() {
  return TransactionComputePhase_12.loadTransactionComputePhase;
} });
Object.defineProperty(exports100, "storeTransactionComputePhase", { enumerable: true, get: function() {
  return TransactionComputePhase_12.storeTransactionComputePhase;
} });
var TransactionCreditPhase_12 = $$cjs_default$$70(typeof TransactionCreditPhase_exports !== "undefined" ? TransactionCreditPhase_exports : {});
Object.defineProperty(exports100, "loadTransactionCreditPhase", { enumerable: true, get: function() {
  return TransactionCreditPhase_12.loadTransactionCreditPhase;
} });
Object.defineProperty(exports100, "storeTransactionCreditPhase", { enumerable: true, get: function() {
  return TransactionCreditPhase_12.storeTransactionCreditPhase;
} });
var TransactionDescription_12 = $$cjs_default$$70(typeof TransactionDescription_exports !== "undefined" ? TransactionDescription_exports : {});
Object.defineProperty(exports100, "loadTransactionDescription", { enumerable: true, get: function() {
  return TransactionDescription_12.loadTransactionDescription;
} });
Object.defineProperty(exports100, "storeTransactionDescription", { enumerable: true, get: function() {
  return TransactionDescription_12.storeTransactionDescription;
} });
var TransactionStoragePhase_12 = $$cjs_default$$70(typeof TransactionStoragePhase_exports !== "undefined" ? TransactionStoragePhase_exports : {});
Object.defineProperty(exports100, "loadTransactionStoragePhase", { enumerable: true, get: function() {
  return TransactionStoragePhase_12.loadTransactionStoragePhase;
} });
Object.defineProperty(exports100, "storeTransactionsStoragePhase", { enumerable: true, get: function() {
  return TransactionStoragePhase_12.storeTransactionsStoragePhase;
} });
var __export098;
var __export165;
var __export221;
var __export37;
var __export46;
var __export56;
var __export63;
var __export73;
var __export83;
var __export93;
var __export103;
var __export1110;
var __export1210;
var __export1310;
var __export1410;
var __export1510;
var __export166;
var __export173;
var __export183;
var __export193;
var __export202;
var __export2110;
var __export223;
var __export233;
var __export243;
var __export253;
var __export263;
var __export273;
var __export283;
var __export293;
var __export302;
var __export312;
var __export323;
var __export332;
var __export342;
var __export352;
var __export362;
var __export372;
var __export38;
var __export39;
var __export40;
var __export41;
var __export422;
var __export432;
var __export442;
var __export452;
var __export462;
var __export47;
var __export48;
var __export49;
var __export50;
var __export51;
var __export522;
var __export532;
var __export542;
var __export552;
var __export562;
var __export57;
var __export58;
var __export59;
var __export60;
var __export61;
var __export622;
var __export632;
var __export64;
var __export65;
var __export66;
var __export67;
var __export68;
var __export69;
var __export70;
var __export71;
var __export722;
var __export732;
if (Object.isExtensible(module100.exports)) {
  __export098 = module100.exports["storeSplitMergeInfo"];
  __export165 = module100.exports["loadSplitMergeInfo"];
  __export221 = module100.exports["storeLibRef"];
  __export37 = module100.exports["loadLibRef"];
  __export46 = module100.exports["storeSimpleLibrary"];
  __export56 = module100.exports["loadSimpleLibrary"];
  __export63 = module100.exports["loadShardStateUnsplit"];
  __export73 = module100.exports["storeShardIdent"];
  __export83 = module100.exports["loadShardIdent"];
  __export93 = module100.exports["storeShardAccounts"];
  __export103 = module100.exports["loadShardAccounts"];
  __export1110 = module100.exports["ShardAccountRefValue"];
  __export1210 = module100.exports["storeShardAccount"];
  __export1310 = module100.exports["loadShardAccount"];
  __export1410 = module100.exports["ReserveMode"];
  __export1510 = module100.exports["SendMode"];
  __export166 = module100.exports["storeMessageRelaxed"];
  __export173 = module100.exports["loadMessageRelaxed"];
  __export183 = module100.exports["storeMessage"];
  __export193 = module100.exports["loadMessage"];
  __export202 = module100.exports["loadMasterchainStateExtra"];
  __export2110 = module100.exports["storeHashUpdate"];
  __export223 = module100.exports["loadHashUpdate"];
  __export233 = module100.exports["storeDepthBalanceInfo"];
  __export243 = module100.exports["loadDepthBalanceInfo"];
  __export253 = module100.exports["storeCurrencyCollection"];
  __export263 = module100.exports["loadCurrencyCollection"];
  __export273 = module100.exports["storeComputeSkipReason"];
  __export283 = module100.exports["loadComputeSkipReason"];
  __export293 = module100.exports["storeCommonMessageInfoRelaxed"];
  __export302 = module100.exports["loadCommonMessageInfoRelaxed"];
  __export312 = module100.exports["storeCommonMessageInfo"];
  __export323 = module100.exports["loadCommonMessageInfo"];
  __export332 = module100.exports["storeOutList"];
  __export342 = module100.exports["loadOutList"];
  __export352 = module100.exports["storeOutAction"];
  __export362 = module100.exports["loadOutAction"];
  __export372 = module100.exports["storeAccountStorage"];
  __export38 = module100.exports["loadAccountStorage"];
  __export39 = module100.exports["storeAccountStatusChange"];
  __export40 = module100.exports["loadAccountStatusChange"];
  __export41 = module100.exports["storeAccountStatus"];
  __export422 = module100.exports["loadAccountStatus"];
  __export432 = module100.exports["storeAccountState"];
  __export442 = module100.exports["loadAccountState"];
  __export452 = module100.exports["storeAccount"];
  __export462 = module100.exports["loadAccount"];
  __export47 = module100.exports["comment"];
  __export48 = module100.exports["external"];
  __export49 = module100.exports["internal"];
  __export50 = module100.exports["storeTransactionsStoragePhase"];
  __export51 = module100.exports["loadTransactionStoragePhase"];
  __export522 = module100.exports["storeTransactionDescription"];
  __export532 = module100.exports["loadTransactionDescription"];
  __export542 = module100.exports["storeTransactionCreditPhase"];
  __export552 = module100.exports["loadTransactionCreditPhase"];
  __export562 = module100.exports["storeTransactionComputePhase"];
  __export57 = module100.exports["loadTransactionComputePhase"];
  __export58 = module100.exports["storeTransactionBouncePhase"];
  __export59 = module100.exports["loadTransactionBouncePhase"];
  __export60 = module100.exports["storeTransactionActionPhase"];
  __export61 = module100.exports["loadTransactionActionPhase"];
  __export622 = module100.exports["storeTransaction"];
  __export632 = module100.exports["loadTransaction"];
  __export64 = module100.exports["storeTickTock"];
  __export65 = module100.exports["loadTickTock"];
  __export66 = module100.exports["storeStorageUsedShort"];
  __export67 = module100.exports["loadStorageUsedShort"];
  __export68 = module100.exports["storeStorageUsed"];
  __export69 = module100.exports["loadStorageUsed"];
  __export70 = module100.exports["storeStorageInfo"];
  __export71 = module100.exports["loadStorageInfo"];
  __export722 = module100.exports["storeStateInit"];
  __export732 = module100.exports["loadStateInit"];
}

// ../../node_modules/@ton/core/dist/tuple/builder.js
var builder_exports = {};
__export(builder_exports, {
  TupleBuilder: () => __export099
});
function $$cjs_default$$71(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global72 !== "undefined" && global72 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global72 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global72 !== "undefined" && global72 || typeof globalThis !== "undefined" && globalThis || {};
var exports101 = {};
var module101 = {
  get exports() {
    return exports101;
  },
  set exports(value) {
    exports101 = value;
  }
};
Object.defineProperty(exports101, "__esModule", { value: true });
exports101.TupleBuilder = void 0;
var Builder_117 = $$cjs_default$$71(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var Cell_16 = $$cjs_default$$71(typeof Cell_exports !== "undefined" ? Cell_exports : {});
var Slice_12 = $$cjs_default$$71(typeof Slice_exports !== "undefined" ? Slice_exports : {});
var TupleBuilder = class {
  constructor() {
    this._tuple = [];
  }
  writeNumber(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      this._tuple.push({ type: "int", value: BigInt(v2) });
    }
  }
  writeBoolean(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      this._tuple.push({ type: "int", value: v2 ? -1n : 0n });
    }
  }
  writeBuffer(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      this._tuple.push({ type: "slice", cell: (0, Builder_117.beginCell)().storeBuffer(v2).endCell() });
    }
  }
  writeString(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      this._tuple.push({ type: "slice", cell: (0, Builder_117.beginCell)().storeStringTail(v2).endCell() });
    }
  }
  writeCell(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      if (v2 instanceof Cell_16.Cell) {
        this._tuple.push({ type: "cell", cell: v2 });
      } else if (v2 instanceof Slice_12.Slice) {
        this._tuple.push({ type: "cell", cell: v2.asCell() });
      }
    }
  }
  writeSlice(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      if (v2 instanceof Cell_16.Cell) {
        this._tuple.push({ type: "slice", cell: v2 });
      } else if (v2 instanceof Slice_12.Slice) {
        this._tuple.push({ type: "slice", cell: v2.asCell() });
      }
    }
  }
  writeBuilder(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      if (v2 instanceof Cell_16.Cell) {
        this._tuple.push({ type: "builder", cell: v2 });
      } else if (v2 instanceof Slice_12.Slice) {
        this._tuple.push({ type: "builder", cell: v2.asCell() });
      }
    }
  }
  writeTuple(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      this._tuple.push({ type: "tuple", items: v2 });
    }
  }
  writeAddress(v2) {
    if (v2 === null || v2 === void 0) {
      this._tuple.push({ type: "null" });
    } else {
      this._tuple.push({ type: "slice", cell: (0, Builder_117.beginCell)().storeAddress(v2).endCell() });
    }
  }
  build() {
    return [...this._tuple];
  }
};
exports101.TupleBuilder = TupleBuilder;
var __export099;
if (Object.isExtensible(module101.exports)) {
  __export099 = module101.exports["TupleBuilder"];
}

// ../../node_modules/@ton/core/dist/tuple/reader.js
var reader_exports = {};
__export(reader_exports, {
  TupleReader: () => __export0100
});
var exports102 = {};
var module102 = {
  get exports() {
    return exports102;
  },
  set exports(value) {
    exports102 = value;
  }
};
Object.defineProperty(exports102, "__esModule", { value: true });
exports102.TupleReader = void 0;
var TupleReader = class {
  constructor(items) {
    this.items = [...items];
  }
  get remaining() {
    return this.items.length;
  }
  peek() {
    if (this.items.length === 0) {
      throw Error("EOF");
    }
    return this.items[0];
  }
  pop() {
    if (this.items.length === 0) {
      throw Error("EOF");
    }
    let res = this.items[0];
    this.items.splice(0, 1);
    return res;
  }
  skip(num = 1) {
    for (let i2 = 0; i2 < num; i2++) {
      this.pop();
    }
    return this;
  }
  readBigNumber() {
    let popped = this.pop();
    if (popped.type !== "int") {
      throw Error("Not a number");
    }
    return popped.value;
  }
  readBigNumberOpt() {
    let popped = this.pop();
    if (popped.type === "null") {
      return null;
    }
    if (popped.type !== "int") {
      throw Error("Not a number");
    }
    return popped.value;
  }
  readNumber() {
    return Number(this.readBigNumber());
  }
  readNumberOpt() {
    let r2 = this.readBigNumberOpt();
    if (r2 !== null) {
      return Number(r2);
    } else {
      return null;
    }
  }
  readBoolean() {
    let res = this.readNumber();
    return res === 0 ? false : true;
  }
  readBooleanOpt() {
    let res = this.readNumberOpt();
    if (res !== null) {
      return res === 0 ? false : true;
    } else {
      return null;
    }
  }
  readAddress() {
    let r2 = this.readCell().beginParse().loadAddress();
    if (r2 !== null) {
      return r2;
    } else {
      throw Error("Not an address");
    }
  }
  readAddressOpt() {
    let r2 = this.readCellOpt();
    if (r2 !== null) {
      return r2.beginParse().loadMaybeAddress();
    } else {
      return null;
    }
  }
  readCell() {
    let popped = this.pop();
    if (popped.type !== "cell" && popped.type !== "slice" && popped.type !== "builder") {
      throw Error("Not a cell: " + popped.type);
    }
    return popped.cell;
  }
  readCellOpt() {
    let popped = this.pop();
    if (popped.type === "null") {
      return null;
    }
    if (popped.type !== "cell" && popped.type !== "slice" && popped.type !== "builder") {
      throw Error("Not a cell");
    }
    return popped.cell;
  }
  readTuple() {
    let popped = this.pop();
    if (popped.type !== "tuple") {
      throw Error("Not a tuple");
    }
    return new TupleReader(popped.items);
  }
  readTupleOpt() {
    let popped = this.pop();
    if (popped.type === "null") {
      return null;
    }
    if (popped.type !== "tuple") {
      throw Error("Not a tuple");
    }
    return new TupleReader(popped.items);
  }
  static readLispList(reader) {
    const result = [];
    let tail = reader;
    while (tail !== null) {
      var head = tail.pop();
      if (tail.items.length === 0 || tail.items[0].type !== "tuple" && tail.items[0].type !== "null") {
        throw Error("Lisp list consists only from (any, tuple) elements and ends with null");
      }
      tail = tail.readTupleOpt();
      result.push(head);
    }
    return result;
  }
  readLispListDirect() {
    if (this.items.length === 1 && this.items[0].type === "null") {
      return [];
    }
    return TupleReader.readLispList(this);
  }
  readLispList() {
    return TupleReader.readLispList(this.readTupleOpt());
  }
  readBuffer() {
    let s2 = this.readCell().beginParse();
    if (s2.remainingRefs !== 0) {
      throw Error("Not a buffer");
    }
    if (s2.remainingBits % 8 !== 0) {
      throw Error("Not a buffer");
    }
    return s2.loadBuffer(s2.remainingBits / 8);
  }
  readBufferOpt() {
    let r2 = this.readCellOpt();
    if (r2 !== null) {
      let s2 = r2.beginParse();
      if (s2.remainingRefs !== 0 || s2.remainingBits % 8 !== 0) {
        throw Error("Not a buffer");
      }
      return s2.loadBuffer(s2.remainingBits / 8);
    } else {
      return null;
    }
  }
  readString() {
    let s2 = this.readCell().beginParse();
    return s2.loadStringTail();
  }
  readStringOpt() {
    let r2 = this.readCellOpt();
    if (r2 !== null) {
      let s2 = r2.beginParse();
      return s2.loadStringTail();
    } else {
      return null;
    }
  }
};
exports102.TupleReader = TupleReader;
var __export0100;
if (Object.isExtensible(module102.exports)) {
  __export0100 = module102.exports["TupleReader"];
}

// ../../node_modules/@ton/core/dist/tuple/tuple.js
var tuple_exports = {};
__export(tuple_exports, {
  parseTuple: () => __export0101,
  serializeTuple: () => __export167
});
function $$cjs_default$$72(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global73 !== "undefined" && global73 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global73 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global73 !== "undefined" && global73 || typeof globalThis !== "undefined" && globalThis || {};
var exports103 = {};
var module103 = {
  get exports() {
    return exports103;
  },
  set exports(value) {
    exports103 = value;
  }
};
Object.defineProperty(exports103, "__esModule", { value: true });
exports103.parseTuple = exports103.serializeTuple = void 0;
var Builder_118 = $$cjs_default$$72(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var INT64_MIN = BigInt("-9223372036854775808");
var INT64_MAX = BigInt("9223372036854775807");
function serializeTupleItem(src, builder) {
  if (src.type === "null") {
    builder.storeUint(0, 8);
  } else if (src.type === "int") {
    if (src.value <= INT64_MAX && src.value >= INT64_MIN) {
      builder.storeUint(1, 8);
      builder.storeInt(src.value, 64);
    } else {
      builder.storeUint(256, 15);
      builder.storeInt(src.value, 257);
    }
  } else if (src.type === "nan") {
    builder.storeInt(767, 16);
  } else if (src.type === "cell") {
    builder.storeUint(3, 8);
    builder.storeRef(src.cell);
  } else if (src.type === "slice") {
    builder.storeUint(4, 8);
    builder.storeUint(0, 10);
    builder.storeUint(src.cell.bits.length, 10);
    builder.storeUint(0, 3);
    builder.storeUint(src.cell.refs.length, 3);
    builder.storeRef(src.cell);
  } else if (src.type === "builder") {
    builder.storeUint(5, 8);
    builder.storeRef(src.cell);
  } else if (src.type === "tuple") {
    let head = null;
    let tail = null;
    for (let i2 = 0; i2 < src.items.length; i2++) {
      let s2 = head;
      head = tail;
      tail = s2;
      if (i2 > 1) {
        head = (0, Builder_118.beginCell)().storeRef(tail).storeRef(head).endCell();
      }
      let bc = (0, Builder_118.beginCell)();
      serializeTupleItem(src.items[i2], bc);
      tail = bc.endCell();
    }
    builder.storeUint(7, 8);
    builder.storeUint(src.items.length, 16);
    if (head) {
      builder.storeRef(head);
    }
    if (tail) {
      builder.storeRef(tail);
    }
  } else {
    throw Error("Invalid value");
  }
}
function parseStackItem(cs) {
  let kind = cs.loadUint(8);
  if (kind === 0) {
    return { type: "null" };
  } else if (kind === 1) {
    return { type: "int", value: cs.loadIntBig(64) };
  } else if (kind === 2) {
    if (cs.loadUint(7) === 0) {
      return { type: "int", value: cs.loadIntBig(257) };
    } else {
      cs.loadBit();
      return { type: "nan" };
    }
  } else if (kind === 3) {
    return { type: "cell", cell: cs.loadRef() };
  } else if (kind === 4) {
    let startBits = cs.loadUint(10);
    let endBits = cs.loadUint(10);
    let startRefs = cs.loadUint(3);
    let endRefs = cs.loadUint(3);
    let rs = cs.loadRef().beginParse();
    rs.skip(startBits);
    let dt = rs.loadBits(endBits - startBits);
    let builder = (0, Builder_118.beginCell)().storeBits(dt);
    if (startRefs < endRefs) {
      for (let i2 = 0; i2 < startRefs; i2++) {
        rs.loadRef();
      }
      for (let i2 = 0; i2 < endRefs - startRefs; i2++) {
        builder.storeRef(rs.loadRef());
      }
    }
    return { type: "slice", cell: builder.endCell() };
  } else if (kind === 5) {
    return { type: "builder", cell: cs.loadRef() };
  } else if (kind === 7) {
    let length = cs.loadUint(16);
    let items = [];
    if (length > 1) {
      let head = cs.loadRef().beginParse();
      let tail = cs.loadRef().beginParse();
      items.unshift(parseStackItem(tail));
      for (let i2 = 0; i2 < length - 2; i2++) {
        let ohead = head;
        head = ohead.loadRef().beginParse();
        tail = ohead.loadRef().beginParse();
        items.unshift(parseStackItem(tail));
      }
      items.unshift(parseStackItem(head));
    } else if (length === 1) {
      items.push(parseStackItem(cs.loadRef().beginParse()));
    }
    return { type: "tuple", items };
  } else {
    throw Error("Unsupported stack item");
  }
}
function serializeTupleTail(src, builder) {
  if (src.length > 0) {
    let tail = (0, Builder_118.beginCell)();
    serializeTupleTail(src.slice(0, src.length - 1), tail);
    builder.storeRef(tail.endCell());
    serializeTupleItem(src[src.length - 1], builder);
  }
}
function serializeTuple(src) {
  let builder = (0, Builder_118.beginCell)();
  builder.storeUint(src.length, 24);
  let r2 = [...src];
  serializeTupleTail(r2, builder);
  return builder.endCell();
}
exports103.serializeTuple = serializeTuple;
function parseTuple(src) {
  let res = [];
  let cs = src.beginParse();
  let size = cs.loadUint(24);
  for (let i2 = 0; i2 < size; i2++) {
    let next = cs.loadRef();
    res.unshift(parseStackItem(cs));
    cs = next.beginParse();
  }
  return res;
}
exports103.parseTuple = parseTuple;
var __export0101;
var __export167;
if (Object.isExtensible(module103.exports)) {
  __export0101 = module103.exports["parseTuple"];
  __export167 = module103.exports["serializeTuple"];
}

// ../../node_modules/@ton/core/dist/address/contractAddress.js
var contractAddress_exports = {};
__export(contractAddress_exports, {
  contractAddress: () => __export0102
});
function $$cjs_default$$73(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global74 !== "undefined" && global74 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global74 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global74 !== "undefined" && global74 || typeof globalThis !== "undefined" && globalThis || {};
var exports104 = {};
var module104 = {
  get exports() {
    return exports104;
  },
  set exports(value) {
    exports104 = value;
  }
};
Object.defineProperty(exports104, "__esModule", { value: true });
exports104.contractAddress = void 0;
var Builder_119 = $$cjs_default$$73(typeof Builder_exports !== "undefined" ? Builder_exports : {});
var StateInit_15 = $$cjs_default$$73(typeof StateInit_exports !== "undefined" ? StateInit_exports : {});
var Address_17 = $$cjs_default$$73(typeof Address_exports !== "undefined" ? Address_exports : {});
function contractAddress(workchain, init) {
  let hash = (0, Builder_119.beginCell)().store((0, StateInit_15.storeStateInit)(init)).endCell().hash();
  return new Address_17.Address(workchain, hash);
}
exports104.contractAddress = contractAddress;
var __export0102;
if (Object.isExtensible(module104.exports)) {
  __export0102 = module104.exports["contractAddress"];
}

// ../../node_modules/@ton/core/dist/address/ADNLAddress.js
var ADNLAddress_exports = {};
__export(ADNLAddress_exports, {
  ADNLAddress: () => __export0103
});
function $$cjs_default$$74(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global75 !== "undefined" && global75 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global75 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global75 !== "undefined" && global75 || typeof globalThis !== "undefined" && globalThis || {};
var exports105 = {};
var module105 = {
  get exports() {
    return exports105;
  },
  set exports(value) {
    exports105 = value;
  }
};
var __importDefault16 = function(mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
var _a6;
Object.defineProperty(exports105, "__esModule", { value: true });
exports105.ADNLAddress = void 0;
var symbol_inspect_16 = __importDefault16($$cjs_default$$74(typeof symbol_exports !== "undefined" ? symbol_exports : {}));
var base32_1 = $$cjs_default$$74(typeof base32_exports !== "undefined" ? base32_exports : {});
var crc16_12 = $$cjs_default$$74(typeof crc16_exports !== "undefined" ? crc16_exports : {});
var ADNLAddress = class {
  static parseFriendly(src) {
    if (src.length !== 55) {
      throw Error("Invalid address");
    }
    src = "f" + src;
    let decoded = (0, base32_1.base32Decode)(src);
    if (decoded[0] !== 45) {
      throw Error("Invalid address");
    }
    let gotHash = decoded.slice(33);
    let hash = (0, crc16_12.crc16)(decoded.slice(0, 33));
    if (!hash.equals(gotHash)) {
      throw Error("Invalid address");
    }
    return new ADNLAddress(decoded.slice(1, 33));
  }
  static parseRaw(src) {
    const data = Buffer.from(src, "base64");
    return new ADNLAddress(data);
  }
  constructor(address2) {
    this.toRaw = () => {
      return this.address.toString("hex").toUpperCase();
    };
    this.toString = () => {
      let data = Buffer.concat([Buffer.from([45]), this.address]);
      let hash = (0, crc16_12.crc16)(data);
      data = Buffer.concat([data, hash]);
      return (0, base32_1.base32Encode)(data).slice(1);
    };
    this[_a6] = () => this.toString();
    if (address2.length !== 32) {
      throw Error("Invalid address");
    }
    this.address = address2;
  }
  equals(b2) {
    return this.address.equals(b2.address);
  }
};
exports105.ADNLAddress = ADNLAddress;
_a6 = symbol_inspect_16.default;
var __export0103;
if (Object.isExtensible(module105.exports)) {
  __export0103 = module105.exports["ADNLAddress"];
}

// ../../node_modules/@ton/core/dist/index.js
function $$cjs_default$$75(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global76 !== "undefined" && global76 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global76 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global76 !== "undefined" && global76 || typeof globalThis !== "undefined" && globalThis || {};
var exports106 = {};
var module106 = {
  get exports() {
    return exports106;
  },
  set exports(value) {
    exports106 = value;
  }
};
var __createBinding = Object.create ? function(o2, m2, k2, k22) {
  if (k22 === void 0)
    k22 = k2;
  var desc = Object.getOwnPropertyDescriptor(m2, k2);
  if (!desc || ("get" in desc ? !m2.__esModule : desc.writable || desc.configurable)) {
    desc = { enumerable: true, get: function() {
      return m2[k2];
    } };
  }
  Object.defineProperty(o2, k22, desc);
} : function(o2, m2, k2, k22) {
  if (k22 === void 0)
    k22 = k2;
  o2[k22] = m2[k2];
};
var __exportStar = function(m2, exports109) {
  for (var p2 in m2)
    if (p2 !== "default" && !Object.prototype.hasOwnProperty.call(exports109, p2))
      __createBinding(exports109, m2, p2);
};
Object.defineProperty(exports106, "__esModule", { value: true });
exports106.safeSignVerify = exports106.safeSign = exports106.getMethodId = exports106.base32Encode = exports106.base32Decode = exports106.crc32c = exports106.crc16 = exports106.fromNano = exports106.toNano = exports106.ComputeError = exports106.openContract = exports106.TupleBuilder = exports106.TupleReader = exports106.serializeTuple = exports106.parseTuple = exports106.generateMerkleUpdate = exports106.generateMerkleProofDirect = exports106.generateMerkleProof = exports106.exoticPruned = exports106.exoticMerkleUpdate = exports106.convertToMerkleProof = exports106.exoticMerkleProof = exports106.Dictionary = exports106.Cell = exports106.CellType = exports106.Slice = exports106.beginCell = exports106.Builder = exports106.BitBuilder = exports106.BitReader = exports106.BitString = exports106.contractAddress = exports106.ADNLAddress = exports106.ExternalAddress = exports106.address = exports106.Address = void 0;
var Address_18 = $$cjs_default$$75(typeof Address_exports !== "undefined" ? Address_exports : {});
Object.defineProperty(exports106, "Address", { enumerable: true, get: function() {
  return Address_18.Address;
} });
Object.defineProperty(exports106, "address", { enumerable: true, get: function() {
  return Address_18.address;
} });
var ExternalAddress_13 = $$cjs_default$$75(typeof ExternalAddress_exports !== "undefined" ? ExternalAddress_exports : {});
Object.defineProperty(exports106, "ExternalAddress", { enumerable: true, get: function() {
  return ExternalAddress_13.ExternalAddress;
} });
var ADNLAddress_1 = $$cjs_default$$75(typeof ADNLAddress_exports !== "undefined" ? ADNLAddress_exports : {});
Object.defineProperty(exports106, "ADNLAddress", { enumerable: true, get: function() {
  return ADNLAddress_1.ADNLAddress;
} });
var contractAddress_1 = $$cjs_default$$75(typeof contractAddress_exports !== "undefined" ? contractAddress_exports : {});
Object.defineProperty(exports106, "contractAddress", { enumerable: true, get: function() {
  return contractAddress_1.contractAddress;
} });
var BitString_18 = $$cjs_default$$75(typeof BitString_exports !== "undefined" ? BitString_exports : {});
Object.defineProperty(exports106, "BitString", { enumerable: true, get: function() {
  return BitString_18.BitString;
} });
var BitReader_18 = $$cjs_default$$75(typeof BitReader_exports !== "undefined" ? BitReader_exports : {});
Object.defineProperty(exports106, "BitReader", { enumerable: true, get: function() {
  return BitReader_18.BitReader;
} });
var BitBuilder_14 = $$cjs_default$$75(typeof BitBuilder_exports !== "undefined" ? BitBuilder_exports : {});
Object.defineProperty(exports106, "BitBuilder", { enumerable: true, get: function() {
  return BitBuilder_14.BitBuilder;
} });
var Builder_120 = $$cjs_default$$75(typeof Builder_exports !== "undefined" ? Builder_exports : {});
Object.defineProperty(exports106, "Builder", { enumerable: true, get: function() {
  return Builder_120.Builder;
} });
Object.defineProperty(exports106, "beginCell", { enumerable: true, get: function() {
  return Builder_120.beginCell;
} });
var Slice_13 = $$cjs_default$$75(typeof Slice_exports !== "undefined" ? Slice_exports : {});
Object.defineProperty(exports106, "Slice", { enumerable: true, get: function() {
  return Slice_13.Slice;
} });
var CellType_15 = $$cjs_default$$75(typeof CellType_exports !== "undefined" ? CellType_exports : {});
Object.defineProperty(exports106, "CellType", { enumerable: true, get: function() {
  return CellType_15.CellType;
} });
var Cell_17 = $$cjs_default$$75(typeof Cell_exports !== "undefined" ? Cell_exports : {});
Object.defineProperty(exports106, "Cell", { enumerable: true, get: function() {
  return Cell_17.Cell;
} });
var Dictionary_17 = $$cjs_default$$75(typeof Dictionary_exports !== "undefined" ? Dictionary_exports : {});
Object.defineProperty(exports106, "Dictionary", { enumerable: true, get: function() {
  return Dictionary_17.Dictionary;
} });
var exoticMerkleProof_14 = $$cjs_default$$75(typeof exoticMerkleProof_exports !== "undefined" ? exoticMerkleProof_exports : {});
Object.defineProperty(exports106, "exoticMerkleProof", { enumerable: true, get: function() {
  return exoticMerkleProof_14.exoticMerkleProof;
} });
Object.defineProperty(exports106, "convertToMerkleProof", { enumerable: true, get: function() {
  return exoticMerkleProof_14.convertToMerkleProof;
} });
var exoticMerkleUpdate_13 = $$cjs_default$$75(typeof exoticMerkleUpdate_exports !== "undefined" ? exoticMerkleUpdate_exports : {});
Object.defineProperty(exports106, "exoticMerkleUpdate", { enumerable: true, get: function() {
  return exoticMerkleUpdate_13.exoticMerkleUpdate;
} });
var exoticPruned_13 = $$cjs_default$$75(typeof exoticPruned_exports !== "undefined" ? exoticPruned_exports : {});
Object.defineProperty(exports106, "exoticPruned", { enumerable: true, get: function() {
  return exoticPruned_13.exoticPruned;
} });
var generateMerkleProof_13 = $$cjs_default$$75(typeof generateMerkleProof_exports !== "undefined" ? generateMerkleProof_exports : {});
Object.defineProperty(exports106, "generateMerkleProof", { enumerable: true, get: function() {
  return generateMerkleProof_13.generateMerkleProof;
} });
Object.defineProperty(exports106, "generateMerkleProofDirect", { enumerable: true, get: function() {
  return generateMerkleProof_13.generateMerkleProofDirect;
} });
var generateMerkleUpdate_12 = $$cjs_default$$75(typeof generateMerkleUpdate_exports !== "undefined" ? generateMerkleUpdate_exports : {});
Object.defineProperty(exports106, "generateMerkleUpdate", { enumerable: true, get: function() {
  return generateMerkleUpdate_12.generateMerkleUpdate;
} });
var tuple_1 = $$cjs_default$$75(typeof tuple_exports !== "undefined" ? tuple_exports : {});
Object.defineProperty(exports106, "parseTuple", { enumerable: true, get: function() {
  return tuple_1.parseTuple;
} });
Object.defineProperty(exports106, "serializeTuple", { enumerable: true, get: function() {
  return tuple_1.serializeTuple;
} });
var reader_1 = $$cjs_default$$75(typeof reader_exports !== "undefined" ? reader_exports : {});
Object.defineProperty(exports106, "TupleReader", { enumerable: true, get: function() {
  return reader_1.TupleReader;
} });
var builder_1 = $$cjs_default$$75(typeof builder_exports !== "undefined" ? builder_exports : {});
Object.defineProperty(exports106, "TupleBuilder", { enumerable: true, get: function() {
  return builder_1.TupleBuilder;
} });
__exportStar($$cjs_default$$75(typeof export_exports !== "undefined" ? export_exports : {}), exports106);
var openContract_1 = $$cjs_default$$75(typeof openContract_exports !== "undefined" ? openContract_exports : {});
Object.defineProperty(exports106, "openContract", { enumerable: true, get: function() {
  return openContract_1.openContract;
} });
var ComputeError_1 = $$cjs_default$$75(typeof ComputeError_exports !== "undefined" ? ComputeError_exports : {});
Object.defineProperty(exports106, "ComputeError", { enumerable: true, get: function() {
  return ComputeError_1.ComputeError;
} });
var convert_12 = $$cjs_default$$75(typeof convert_exports !== "undefined" ? convert_exports : {});
Object.defineProperty(exports106, "toNano", { enumerable: true, get: function() {
  return convert_12.toNano;
} });
Object.defineProperty(exports106, "fromNano", { enumerable: true, get: function() {
  return convert_12.fromNano;
} });
var crc16_13 = $$cjs_default$$75(typeof crc16_exports !== "undefined" ? crc16_exports : {});
Object.defineProperty(exports106, "crc16", { enumerable: true, get: function() {
  return crc16_13.crc16;
} });
var crc32c_12 = $$cjs_default$$75(typeof crc32c_exports !== "undefined" ? crc32c_exports : {});
Object.defineProperty(exports106, "crc32c", { enumerable: true, get: function() {
  return crc32c_12.crc32c;
} });
var base32_12 = $$cjs_default$$75(typeof base32_exports !== "undefined" ? base32_exports : {});
Object.defineProperty(exports106, "base32Decode", { enumerable: true, get: function() {
  return base32_12.base32Decode;
} });
Object.defineProperty(exports106, "base32Encode", { enumerable: true, get: function() {
  return base32_12.base32Encode;
} });
var getMethodId_1 = $$cjs_default$$75(typeof getMethodId_exports !== "undefined" ? getMethodId_exports : {});
Object.defineProperty(exports106, "getMethodId", { enumerable: true, get: function() {
  return getMethodId_1.getMethodId;
} });
var safeSign_1 = $$cjs_default$$75(typeof safeSign_exports !== "undefined" ? safeSign_exports : {});
Object.defineProperty(exports106, "safeSign", { enumerable: true, get: function() {
  return safeSign_1.safeSign;
} });
Object.defineProperty(exports106, "safeSignVerify", { enumerable: true, get: function() {
  return safeSign_1.safeSignVerify;
} });
var __export0104;
var __export168;
var __export224;
var __export310;
var __export410;
var __export510;
var __export610;
var __export74;
var __export84;
var __export94;
var __export104;
var __export1111;
var __export1211;
var __export1311;
var __export1411;
var __export1511;
var __export169;
var __export174;
var __export184;
var __export194;
var __export203;
var __export2111;
var __export225;
var __export234;
var __export244;
var __export254;
var __export264;
var __export274;
var __export284;
var __export294;
var __export303;
var __export313;
var __export324;
var __export333;
var __export343;
var __export353;
if (Object.isExtensible(module106.exports)) {
  __export0104 = module106.exports["safeSignVerify"];
  __export168 = module106.exports["safeSign"];
  __export224 = module106.exports["getMethodId"];
  __export310 = module106.exports["base32Encode"];
  __export410 = module106.exports["base32Decode"];
  __export510 = module106.exports["crc32c"];
  __export610 = module106.exports["crc16"];
  __export74 = module106.exports["fromNano"];
  __export84 = module106.exports["toNano"];
  __export94 = module106.exports["ComputeError"];
  __export104 = module106.exports["openContract"];
  __export1111 = module106.exports["TupleBuilder"];
  __export1211 = module106.exports["TupleReader"];
  __export1311 = module106.exports["serializeTuple"];
  __export1411 = module106.exports["parseTuple"];
  __export1511 = module106.exports["generateMerkleUpdate"];
  __export169 = module106.exports["generateMerkleProofDirect"];
  __export174 = module106.exports["generateMerkleProof"];
  __export184 = module106.exports["exoticPruned"];
  __export194 = module106.exports["exoticMerkleUpdate"];
  __export203 = module106.exports["convertToMerkleProof"];
  __export2111 = module106.exports["exoticMerkleProof"];
  __export225 = module106.exports["Dictionary"];
  __export234 = module106.exports["Cell"];
  __export244 = module106.exports["CellType"];
  __export254 = module106.exports["Slice"];
  __export264 = module106.exports["beginCell"];
  __export274 = module106.exports["Builder"];
  __export284 = module106.exports["BitBuilder"];
  __export294 = module106.exports["BitReader"];
  __export303 = module106.exports["BitString"];
  __export313 = module106.exports["contractAddress"];
  __export324 = module106.exports["ADNLAddress"];
  __export333 = module106.exports["ExternalAddress"];
  __export343 = module106.exports["address"];
  __export353 = module106.exports["Address"];
}
var __defProp2 = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __require2 = /* @__PURE__ */ ((x2) => typeof __require !== "undefined" ? __require : typeof Proxy !== "undefined" ? new Proxy(x2, {
  get: (a2, b2) => (typeof __require !== "undefined" ? __require : a2)[b2]
}) : x2)(function(x2) {
  if (typeof __require !== "undefined")
    (() => {
      try {
        return (() => {
          return __require.apply(this, arguments);
        })();
      } catch (err) {
      }
    })();
  throw Error('Dynamic require of "' + x2 + '" is not supported');
});
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require22() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export75 = (target, all) => {
  for (var name in all)
    __defProp2(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp2({}, "__esModule", { value: true }), mod);
var assert_exports = {};
__export75(assert_exports, {
  default: () => assert_default
});
var exports510;
var module510;
var assert_default;
var init_assert = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/interface/assert.js"() {
    exports510 = {};
    module510 = {
      get exports() {
        return exports510;
      },
      set exports(value) {
        exports510 = value;
      }
    };
    module510.exports = function(chai7, util2) {
      var Assertion = chai7.Assertion, flag12 = util2.flag;
      var assert2 = chai7.assert = function(express, errmsg) {
        var test2 = new Assertion(null, null, chai7.assert, true);
        test2.assert(
          express,
          errmsg,
          "[ negation message unavailable ]"
        );
      };
      assert2.fail = function(actual, expected, message, operator) {
        if (arguments.length < 2) {
          message = actual;
          actual = void 0;
        }
        message = message || "assert.fail()";
        throw new chai7.AssertionError(message, {
          actual,
          expected,
          operator
        }, assert2.fail);
      };
      assert2.isOk = function(val, msg) {
        new Assertion(val, msg, assert2.isOk, true).is.ok;
      };
      assert2.isNotOk = function(val, msg) {
        new Assertion(val, msg, assert2.isNotOk, true).is.not.ok;
      };
      assert2.equal = function(act, exp, msg) {
        var test2 = new Assertion(act, msg, assert2.equal, true);
        test2.assert(
          exp == flag12(test2, "object"),
          "expected #{this} to equal #{exp}",
          "expected #{this} to not equal #{act}",
          exp,
          act,
          true
        );
      };
      assert2.notEqual = function(act, exp, msg) {
        var test2 = new Assertion(act, msg, assert2.notEqual, true);
        test2.assert(
          exp != flag12(test2, "object"),
          "expected #{this} to not equal #{exp}",
          "expected #{this} to equal #{act}",
          exp,
          act,
          true
        );
      };
      assert2.strictEqual = function(act, exp, msg) {
        new Assertion(act, msg, assert2.strictEqual, true).to.equal(exp);
      };
      assert2.notStrictEqual = function(act, exp, msg) {
        new Assertion(act, msg, assert2.notStrictEqual, true).to.not.equal(exp);
      };
      assert2.deepEqual = assert2.deepStrictEqual = function(act, exp, msg) {
        new Assertion(act, msg, assert2.deepEqual, true).to.eql(exp);
      };
      assert2.notDeepEqual = function(act, exp, msg) {
        new Assertion(act, msg, assert2.notDeepEqual, true).to.not.eql(exp);
      };
      assert2.isAbove = function(val, abv, msg) {
        new Assertion(val, msg, assert2.isAbove, true).to.be.above(abv);
      };
      assert2.isAtLeast = function(val, atlst, msg) {
        new Assertion(val, msg, assert2.isAtLeast, true).to.be.least(atlst);
      };
      assert2.isBelow = function(val, blw, msg) {
        new Assertion(val, msg, assert2.isBelow, true).to.be.below(blw);
      };
      assert2.isAtMost = function(val, atmst, msg) {
        new Assertion(val, msg, assert2.isAtMost, true).to.be.most(atmst);
      };
      assert2.isTrue = function(val, msg) {
        new Assertion(val, msg, assert2.isTrue, true).is["true"];
      };
      assert2.isNotTrue = function(val, msg) {
        new Assertion(val, msg, assert2.isNotTrue, true).to.not.equal(true);
      };
      assert2.isFalse = function(val, msg) {
        new Assertion(val, msg, assert2.isFalse, true).is["false"];
      };
      assert2.isNotFalse = function(val, msg) {
        new Assertion(val, msg, assert2.isNotFalse, true).to.not.equal(false);
      };
      assert2.isNull = function(val, msg) {
        new Assertion(val, msg, assert2.isNull, true).to.equal(null);
      };
      assert2.isNotNull = function(val, msg) {
        new Assertion(val, msg, assert2.isNotNull, true).to.not.equal(null);
      };
      assert2.isNaN = function(val, msg) {
        new Assertion(val, msg, assert2.isNaN, true).to.be.NaN;
      };
      assert2.isNotNaN = function(val, msg) {
        new Assertion(val, msg, assert2.isNotNaN, true).not.to.be.NaN;
      };
      assert2.exists = function(val, msg) {
        new Assertion(val, msg, assert2.exists, true).to.exist;
      };
      assert2.notExists = function(val, msg) {
        new Assertion(val, msg, assert2.notExists, true).to.not.exist;
      };
      assert2.isUndefined = function(val, msg) {
        new Assertion(val, msg, assert2.isUndefined, true).to.equal(void 0);
      };
      assert2.isDefined = function(val, msg) {
        new Assertion(val, msg, assert2.isDefined, true).to.not.equal(void 0);
      };
      assert2.isFunction = function(val, msg) {
        new Assertion(val, msg, assert2.isFunction, true).to.be.a("function");
      };
      assert2.isNotFunction = function(val, msg) {
        new Assertion(val, msg, assert2.isNotFunction, true).to.not.be.a("function");
      };
      assert2.isObject = function(val, msg) {
        new Assertion(val, msg, assert2.isObject, true).to.be.a("object");
      };
      assert2.isNotObject = function(val, msg) {
        new Assertion(val, msg, assert2.isNotObject, true).to.not.be.a("object");
      };
      assert2.isArray = function(val, msg) {
        new Assertion(val, msg, assert2.isArray, true).to.be.an("array");
      };
      assert2.isNotArray = function(val, msg) {
        new Assertion(val, msg, assert2.isNotArray, true).to.not.be.an("array");
      };
      assert2.isString = function(val, msg) {
        new Assertion(val, msg, assert2.isString, true).to.be.a("string");
      };
      assert2.isNotString = function(val, msg) {
        new Assertion(val, msg, assert2.isNotString, true).to.not.be.a("string");
      };
      assert2.isNumber = function(val, msg) {
        new Assertion(val, msg, assert2.isNumber, true).to.be.a("number");
      };
      assert2.isNotNumber = function(val, msg) {
        new Assertion(val, msg, assert2.isNotNumber, true).to.not.be.a("number");
      };
      assert2.isFinite = function(val, msg) {
        new Assertion(val, msg, assert2.isFinite, true).to.be.finite;
      };
      assert2.isBoolean = function(val, msg) {
        new Assertion(val, msg, assert2.isBoolean, true).to.be.a("boolean");
      };
      assert2.isNotBoolean = function(val, msg) {
        new Assertion(val, msg, assert2.isNotBoolean, true).to.not.be.a("boolean");
      };
      assert2.typeOf = function(val, type4, msg) {
        new Assertion(val, msg, assert2.typeOf, true).to.be.a(type4);
      };
      assert2.notTypeOf = function(val, type4, msg) {
        new Assertion(val, msg, assert2.notTypeOf, true).to.not.be.a(type4);
      };
      assert2.instanceOf = function(val, type4, msg) {
        new Assertion(val, msg, assert2.instanceOf, true).to.be.instanceOf(type4);
      };
      assert2.notInstanceOf = function(val, type4, msg) {
        new Assertion(val, msg, assert2.notInstanceOf, true).to.not.be.instanceOf(type4);
      };
      assert2.include = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.include, true).include(inc);
      };
      assert2.notInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.notInclude, true).not.include(inc);
      };
      assert2.deepInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.deepInclude, true).deep.include(inc);
      };
      assert2.notDeepInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.notDeepInclude, true).not.deep.include(inc);
      };
      assert2.nestedInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.nestedInclude, true).nested.include(inc);
      };
      assert2.notNestedInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.notNestedInclude, true).not.nested.include(inc);
      };
      assert2.deepNestedInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.deepNestedInclude, true).deep.nested.include(inc);
      };
      assert2.notDeepNestedInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.notDeepNestedInclude, true).not.deep.nested.include(inc);
      };
      assert2.ownInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.ownInclude, true).own.include(inc);
      };
      assert2.notOwnInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.notOwnInclude, true).not.own.include(inc);
      };
      assert2.deepOwnInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.deepOwnInclude, true).deep.own.include(inc);
      };
      assert2.notDeepOwnInclude = function(exp, inc, msg) {
        new Assertion(exp, msg, assert2.notDeepOwnInclude, true).not.deep.own.include(inc);
      };
      assert2.match = function(exp, re, msg) {
        new Assertion(exp, msg, assert2.match, true).to.match(re);
      };
      assert2.notMatch = function(exp, re, msg) {
        new Assertion(exp, msg, assert2.notMatch, true).to.not.match(re);
      };
      assert2.property = function(obj, prop, msg) {
        new Assertion(obj, msg, assert2.property, true).to.have.property(prop);
      };
      assert2.notProperty = function(obj, prop, msg) {
        new Assertion(obj, msg, assert2.notProperty, true).to.not.have.property(prop);
      };
      assert2.propertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.propertyVal, true).to.have.property(prop, val);
      };
      assert2.notPropertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.notPropertyVal, true).to.not.have.property(prop, val);
      };
      assert2.deepPropertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.deepPropertyVal, true).to.have.deep.property(prop, val);
      };
      assert2.notDeepPropertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.notDeepPropertyVal, true).to.not.have.deep.property(prop, val);
      };
      assert2.ownProperty = function(obj, prop, msg) {
        new Assertion(obj, msg, assert2.ownProperty, true).to.have.own.property(prop);
      };
      assert2.notOwnProperty = function(obj, prop, msg) {
        new Assertion(obj, msg, assert2.notOwnProperty, true).to.not.have.own.property(prop);
      };
      assert2.ownPropertyVal = function(obj, prop, value, msg) {
        new Assertion(obj, msg, assert2.ownPropertyVal, true).to.have.own.property(prop, value);
      };
      assert2.notOwnPropertyVal = function(obj, prop, value, msg) {
        new Assertion(obj, msg, assert2.notOwnPropertyVal, true).to.not.have.own.property(prop, value);
      };
      assert2.deepOwnPropertyVal = function(obj, prop, value, msg) {
        new Assertion(obj, msg, assert2.deepOwnPropertyVal, true).to.have.deep.own.property(prop, value);
      };
      assert2.notDeepOwnPropertyVal = function(obj, prop, value, msg) {
        new Assertion(obj, msg, assert2.notDeepOwnPropertyVal, true).to.not.have.deep.own.property(prop, value);
      };
      assert2.nestedProperty = function(obj, prop, msg) {
        new Assertion(obj, msg, assert2.nestedProperty, true).to.have.nested.property(prop);
      };
      assert2.notNestedProperty = function(obj, prop, msg) {
        new Assertion(obj, msg, assert2.notNestedProperty, true).to.not.have.nested.property(prop);
      };
      assert2.nestedPropertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.nestedPropertyVal, true).to.have.nested.property(prop, val);
      };
      assert2.notNestedPropertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.notNestedPropertyVal, true).to.not.have.nested.property(prop, val);
      };
      assert2.deepNestedPropertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.deepNestedPropertyVal, true).to.have.deep.nested.property(prop, val);
      };
      assert2.notDeepNestedPropertyVal = function(obj, prop, val, msg) {
        new Assertion(obj, msg, assert2.notDeepNestedPropertyVal, true).to.not.have.deep.nested.property(prop, val);
      };
      assert2.lengthOf = function(exp, len, msg) {
        new Assertion(exp, msg, assert2.lengthOf, true).to.have.lengthOf(len);
      };
      assert2.hasAnyKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.hasAnyKeys, true).to.have.any.keys(keys);
      };
      assert2.hasAllKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.hasAllKeys, true).to.have.all.keys(keys);
      };
      assert2.containsAllKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.containsAllKeys, true).to.contain.all.keys(keys);
      };
      assert2.doesNotHaveAnyKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.doesNotHaveAnyKeys, true).to.not.have.any.keys(keys);
      };
      assert2.doesNotHaveAllKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.doesNotHaveAllKeys, true).to.not.have.all.keys(keys);
      };
      assert2.hasAnyDeepKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.hasAnyDeepKeys, true).to.have.any.deep.keys(keys);
      };
      assert2.hasAllDeepKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.hasAllDeepKeys, true).to.have.all.deep.keys(keys);
      };
      assert2.containsAllDeepKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.containsAllDeepKeys, true).to.contain.all.deep.keys(keys);
      };
      assert2.doesNotHaveAnyDeepKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.doesNotHaveAnyDeepKeys, true).to.not.have.any.deep.keys(keys);
      };
      assert2.doesNotHaveAllDeepKeys = function(obj, keys, msg) {
        new Assertion(obj, msg, assert2.doesNotHaveAllDeepKeys, true).to.not.have.all.deep.keys(keys);
      };
      assert2.throws = function(fn, errorLike, errMsgMatcher, msg) {
        if ("string" === typeof errorLike || errorLike instanceof RegExp) {
          errMsgMatcher = errorLike;
          errorLike = null;
        }
        var assertErr = new Assertion(fn, msg, assert2.throws, true).to.throw(errorLike, errMsgMatcher);
        return flag12(assertErr, "object");
      };
      assert2.doesNotThrow = function(fn, errorLike, errMsgMatcher, msg) {
        if ("string" === typeof errorLike || errorLike instanceof RegExp) {
          errMsgMatcher = errorLike;
          errorLike = null;
        }
        new Assertion(fn, msg, assert2.doesNotThrow, true).to.not.throw(errorLike, errMsgMatcher);
      };
      assert2.operator = function(val, operator, val2, msg) {
        var ok;
        switch (operator) {
          case "==":
            ok = val == val2;
            break;
          case "===":
            ok = val === val2;
            break;
          case ">":
            ok = val > val2;
            break;
          case ">=":
            ok = val >= val2;
            break;
          case "<":
            ok = val < val2;
            break;
          case "<=":
            ok = val <= val2;
            break;
          case "!=":
            ok = val != val2;
            break;
          case "!==":
            ok = val !== val2;
            break;
          default:
            msg = msg ? msg + ": " : msg;
            throw new chai7.AssertionError(
              msg + 'Invalid operator "' + operator + '"',
              void 0,
              assert2.operator
            );
        }
        var test2 = new Assertion(ok, msg, assert2.operator, true);
        test2.assert(
          true === flag12(test2, "object"),
          "expected " + util2.inspect(val) + " to be " + operator + " " + util2.inspect(val2),
          "expected " + util2.inspect(val) + " to not be " + operator + " " + util2.inspect(val2)
        );
      };
      assert2.closeTo = function(act, exp, delta, msg) {
        new Assertion(act, msg, assert2.closeTo, true).to.be.closeTo(exp, delta);
      };
      assert2.approximately = function(act, exp, delta, msg) {
        new Assertion(act, msg, assert2.approximately, true).to.be.approximately(exp, delta);
      };
      assert2.sameMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.sameMembers, true).to.have.same.members(set22);
      };
      assert2.notSameMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.notSameMembers, true).to.not.have.same.members(set22);
      };
      assert2.sameDeepMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.sameDeepMembers, true).to.have.same.deep.members(set22);
      };
      assert2.notSameDeepMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.notSameDeepMembers, true).to.not.have.same.deep.members(set22);
      };
      assert2.sameOrderedMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.sameOrderedMembers, true).to.have.same.ordered.members(set22);
      };
      assert2.notSameOrderedMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.notSameOrderedMembers, true).to.not.have.same.ordered.members(set22);
      };
      assert2.sameDeepOrderedMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.sameDeepOrderedMembers, true).to.have.same.deep.ordered.members(set22);
      };
      assert2.notSameDeepOrderedMembers = function(set1, set22, msg) {
        new Assertion(set1, msg, assert2.notSameDeepOrderedMembers, true).to.not.have.same.deep.ordered.members(set22);
      };
      assert2.includeMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.includeMembers, true).to.include.members(subset);
      };
      assert2.notIncludeMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.notIncludeMembers, true).to.not.include.members(subset);
      };
      assert2.includeDeepMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.includeDeepMembers, true).to.include.deep.members(subset);
      };
      assert2.notIncludeDeepMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.notIncludeDeepMembers, true).to.not.include.deep.members(subset);
      };
      assert2.includeOrderedMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.includeOrderedMembers, true).to.include.ordered.members(subset);
      };
      assert2.notIncludeOrderedMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.notIncludeOrderedMembers, true).to.not.include.ordered.members(subset);
      };
      assert2.includeDeepOrderedMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.includeDeepOrderedMembers, true).to.include.deep.ordered.members(subset);
      };
      assert2.notIncludeDeepOrderedMembers = function(superset, subset, msg) {
        new Assertion(superset, msg, assert2.notIncludeDeepOrderedMembers, true).to.not.include.deep.ordered.members(subset);
      };
      assert2.oneOf = function(inList, list, msg) {
        new Assertion(inList, msg, assert2.oneOf, true).to.be.oneOf(list);
      };
      assert2.changes = function(fn, obj, prop, msg) {
        if (arguments.length === 3 && typeof obj === "function") {
          msg = prop;
          prop = null;
        }
        new Assertion(fn, msg, assert2.changes, true).to.change(obj, prop);
      };
      assert2.changesBy = function(fn, obj, prop, delta, msg) {
        if (arguments.length === 4 && typeof obj === "function") {
          var tmpMsg = delta;
          delta = prop;
          msg = tmpMsg;
        } else if (arguments.length === 3) {
          delta = prop;
          prop = null;
        }
        new Assertion(fn, msg, assert2.changesBy, true).to.change(obj, prop).by(delta);
      };
      assert2.doesNotChange = function(fn, obj, prop, msg) {
        if (arguments.length === 3 && typeof obj === "function") {
          msg = prop;
          prop = null;
        }
        return new Assertion(fn, msg, assert2.doesNotChange, true).to.not.change(obj, prop);
      };
      assert2.changesButNotBy = function(fn, obj, prop, delta, msg) {
        if (arguments.length === 4 && typeof obj === "function") {
          var tmpMsg = delta;
          delta = prop;
          msg = tmpMsg;
        } else if (arguments.length === 3) {
          delta = prop;
          prop = null;
        }
        new Assertion(fn, msg, assert2.changesButNotBy, true).to.change(obj, prop).but.not.by(delta);
      };
      assert2.increases = function(fn, obj, prop, msg) {
        if (arguments.length === 3 && typeof obj === "function") {
          msg = prop;
          prop = null;
        }
        return new Assertion(fn, msg, assert2.increases, true).to.increase(obj, prop);
      };
      assert2.increasesBy = function(fn, obj, prop, delta, msg) {
        if (arguments.length === 4 && typeof obj === "function") {
          var tmpMsg = delta;
          delta = prop;
          msg = tmpMsg;
        } else if (arguments.length === 3) {
          delta = prop;
          prop = null;
        }
        new Assertion(fn, msg, assert2.increasesBy, true).to.increase(obj, prop).by(delta);
      };
      assert2.doesNotIncrease = function(fn, obj, prop, msg) {
        if (arguments.length === 3 && typeof obj === "function") {
          msg = prop;
          prop = null;
        }
        return new Assertion(fn, msg, assert2.doesNotIncrease, true).to.not.increase(obj, prop);
      };
      assert2.increasesButNotBy = function(fn, obj, prop, delta, msg) {
        if (arguments.length === 4 && typeof obj === "function") {
          var tmpMsg = delta;
          delta = prop;
          msg = tmpMsg;
        } else if (arguments.length === 3) {
          delta = prop;
          prop = null;
        }
        new Assertion(fn, msg, assert2.increasesButNotBy, true).to.increase(obj, prop).but.not.by(delta);
      };
      assert2.decreases = function(fn, obj, prop, msg) {
        if (arguments.length === 3 && typeof obj === "function") {
          msg = prop;
          prop = null;
        }
        return new Assertion(fn, msg, assert2.decreases, true).to.decrease(obj, prop);
      };
      assert2.decreasesBy = function(fn, obj, prop, delta, msg) {
        if (arguments.length === 4 && typeof obj === "function") {
          var tmpMsg = delta;
          delta = prop;
          msg = tmpMsg;
        } else if (arguments.length === 3) {
          delta = prop;
          prop = null;
        }
        new Assertion(fn, msg, assert2.decreasesBy, true).to.decrease(obj, prop).by(delta);
      };
      assert2.doesNotDecrease = function(fn, obj, prop, msg) {
        if (arguments.length === 3 && typeof obj === "function") {
          msg = prop;
          prop = null;
        }
        return new Assertion(fn, msg, assert2.doesNotDecrease, true).to.not.decrease(obj, prop);
      };
      assert2.doesNotDecreaseBy = function(fn, obj, prop, delta, msg) {
        if (arguments.length === 4 && typeof obj === "function") {
          var tmpMsg = delta;
          delta = prop;
          msg = tmpMsg;
        } else if (arguments.length === 3) {
          delta = prop;
          prop = null;
        }
        return new Assertion(fn, msg, assert2.doesNotDecreaseBy, true).to.not.decrease(obj, prop).by(delta);
      };
      assert2.decreasesButNotBy = function(fn, obj, prop, delta, msg) {
        if (arguments.length === 4 && typeof obj === "function") {
          var tmpMsg = delta;
          delta = prop;
          msg = tmpMsg;
        } else if (arguments.length === 3) {
          delta = prop;
          prop = null;
        }
        new Assertion(fn, msg, assert2.decreasesButNotBy, true).to.decrease(obj, prop).but.not.by(delta);
      };
      assert2.ifError = function(val) {
        if (val) {
          throw val;
        }
      };
      assert2.isExtensible = function(obj, msg) {
        new Assertion(obj, msg, assert2.isExtensible, true).to.be.extensible;
      };
      assert2.isNotExtensible = function(obj, msg) {
        new Assertion(obj, msg, assert2.isNotExtensible, true).to.not.be.extensible;
      };
      assert2.isSealed = function(obj, msg) {
        new Assertion(obj, msg, assert2.isSealed, true).to.be.sealed;
      };
      assert2.isNotSealed = function(obj, msg) {
        new Assertion(obj, msg, assert2.isNotSealed, true).to.not.be.sealed;
      };
      assert2.isFrozen = function(obj, msg) {
        new Assertion(obj, msg, assert2.isFrozen, true).to.be.frozen;
      };
      assert2.isNotFrozen = function(obj, msg) {
        new Assertion(obj, msg, assert2.isNotFrozen, true).to.not.be.frozen;
      };
      assert2.isEmpty = function(val, msg) {
        new Assertion(val, msg, assert2.isEmpty, true).to.be.empty;
      };
      assert2.isNotEmpty = function(val, msg) {
        new Assertion(val, msg, assert2.isNotEmpty, true).to.not.be.empty;
      };
      (function alias(name, as) {
        assert2[as] = assert2[name];
        return alias;
      })("isOk", "ok")("isNotOk", "notOk")("throws", "throw")("throws", "Throw")("isExtensible", "extensible")("isNotExtensible", "notExtensible")("isSealed", "sealed")("isNotSealed", "notSealed")("isFrozen", "frozen")("isNotFrozen", "notFrozen")("isEmpty", "empty")("isNotEmpty", "notEmpty");
    };
    assert_default = module510.exports;
  }
});
var should_exports = {};
__export75(should_exports, {
  default: () => should_default
});
var exports610;
var module610;
var should_default;
var init_should = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/interface/should.js"() {
    exports610 = {};
    module610 = {
      get exports() {
        return exports610;
      },
      set exports(value) {
        exports610 = value;
      }
    };
    module610.exports = function(chai7, util2) {
      var Assertion = chai7.Assertion;
      function loadShould() {
        function shouldGetter() {
          if (this instanceof String || this instanceof Number || this instanceof Boolean || typeof Symbol === "function" && this instanceof Symbol || typeof BigInt === "function" && this instanceof BigInt) {
            return new Assertion(this.valueOf(), null, shouldGetter);
          }
          return new Assertion(this, null, shouldGetter);
        }
        function shouldSetter(value) {
          Object.defineProperty(this, "should", {
            value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        }
        Object.defineProperty(Object.prototype, "should", {
          set: shouldSetter,
          get: shouldGetter,
          configurable: true
        });
        var should2 = {};
        should2.fail = function(actual, expected, message, operator) {
          if (arguments.length < 2) {
            message = actual;
            actual = void 0;
          }
          message = message || "should.fail()";
          throw new chai7.AssertionError(message, {
            actual,
            expected,
            operator
          }, should2.fail);
        };
        should2.equal = function(val1, val2, msg) {
          new Assertion(val1, msg).to.equal(val2);
        };
        should2.Throw = function(fn, errt, errs, msg) {
          new Assertion(fn, msg).to.Throw(errt, errs);
        };
        should2.exist = function(val, msg) {
          new Assertion(val, msg).to.exist;
        };
        should2.not = {};
        should2.not.equal = function(val1, val2, msg) {
          new Assertion(val1, msg).to.not.equal(val2);
        };
        should2.not.Throw = function(fn, errt, errs, msg) {
          new Assertion(fn, msg).to.not.Throw(errt, errs);
        };
        should2.not.exist = function(val, msg) {
          new Assertion(val, msg).to.not.exist;
        };
        should2["throw"] = should2["Throw"];
        should2.not["throw"] = should2.not["Throw"];
        return should2;
      }
      chai7.should = loadShould;
      chai7.Should = loadShould;
    };
    should_default = module610.exports;
  }
});
var expect_exports = {};
__export75(expect_exports, {
  default: () => expect_default
});
var exports710;
var module710;
var expect_default;
var init_expect = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/interface/expect.js"() {
    exports710 = {};
    module710 = {
      get exports() {
        return exports710;
      },
      set exports(value) {
        exports710 = value;
      }
    };
    module710.exports = function(chai7, util2) {
      chai7.expect = function(val, message) {
        return new chai7.Assertion(val, message);
      };
      chai7.expect.fail = function(actual, expected, message, operator) {
        if (arguments.length < 2) {
          message = actual;
          actual = void 0;
        }
        message = message || "expect.fail()";
        throw new chai7.AssertionError(message, {
          actual,
          expected,
          operator
        }, chai7.expect.fail);
      };
    };
    expect_default = module710.exports;
  }
});
var assertions_exports = {};
__export75(assertions_exports, {
  default: () => assertions_default
});
var exports810;
var module810;
var assertions_default;
var init_assertions = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/core/assertions.js"() {
    exports810 = {};
    module810 = {
      get exports() {
        return exports810;
      },
      set exports(value) {
        exports810 = value;
      }
    };
    module810.exports = function(chai7, _15) {
      var Assertion = chai7.Assertion, AssertionError3 = chai7.AssertionError, flag12 = _15.flag;
      [
        "to",
        "be",
        "been",
        "is",
        "and",
        "has",
        "have",
        "with",
        "that",
        "which",
        "at",
        "of",
        "same",
        "but",
        "does",
        "still",
        "also"
      ].forEach(function(chain) {
        Assertion.addProperty(chain);
      });
      Assertion.addProperty("not", function() {
        flag12(this, "negate", true);
      });
      Assertion.addProperty("deep", function() {
        flag12(this, "deep", true);
      });
      Assertion.addProperty("nested", function() {
        flag12(this, "nested", true);
      });
      Assertion.addProperty("own", function() {
        flag12(this, "own", true);
      });
      Assertion.addProperty("ordered", function() {
        flag12(this, "ordered", true);
      });
      Assertion.addProperty("any", function() {
        flag12(this, "any", true);
        flag12(this, "all", false);
      });
      Assertion.addProperty("all", function() {
        flag12(this, "all", true);
        flag12(this, "any", false);
      });
      function an(type4, msg) {
        if (msg)
          flag12(this, "message", msg);
        type4 = type4.toLowerCase();
        var obj = flag12(this, "object"), article = ~["a", "e", "i", "o", "u"].indexOf(type4.charAt(0)) ? "an " : "a ";
        this.assert(
          type4 === _15.type(obj).toLowerCase(),
          "expected #{this} to be " + article + type4,
          "expected #{this} not to be " + article + type4
        );
      }
      Assertion.addChainableMethod("an", an);
      Assertion.addChainableMethod("a", an);
      function SameValueZero(a2, b2) {
        return _15.isNaN(a2) && _15.isNaN(b2) || a2 === b2;
      }
      function includeChainingBehavior() {
        flag12(this, "contains", true);
      }
      function include(val, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), objType = _15.type(obj).toLowerCase(), flagMsg = flag12(this, "message"), negate = flag12(this, "negate"), ssfi = flag12(this, "ssfi"), isDeep = flag12(this, "deep"), descriptor = isDeep ? "deep " : "", isEql = isDeep ? flag12(this, "eql") : SameValueZero;
        flagMsg = flagMsg ? flagMsg + ": " : "";
        var included = false;
        switch (objType) {
          case "string":
            included = obj.indexOf(val) !== -1;
            break;
          case "weakset":
            if (isDeep) {
              throw new AssertionError3(
                flagMsg + "unable to use .deep.include with WeakSet",
                void 0,
                ssfi
              );
            }
            included = obj.has(val);
            break;
          case "map":
            obj.forEach(function(item) {
              included = included || isEql(item, val);
            });
            break;
          case "set":
            if (isDeep) {
              obj.forEach(function(item) {
                included = included || isEql(item, val);
              });
            } else {
              included = obj.has(val);
            }
            break;
          case "array":
            if (isDeep) {
              included = obj.some(function(item) {
                return isEql(item, val);
              });
            } else {
              included = obj.indexOf(val) !== -1;
            }
            break;
          default:
            if (val !== Object(val)) {
              throw new AssertionError3(
                flagMsg + "the given combination of arguments (" + objType + " and " + _15.type(val).toLowerCase() + ") is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a " + _15.type(val).toLowerCase(),
                void 0,
                ssfi
              );
            }
            var props = Object.keys(val), firstErr = null, numErrs = 0;
            props.forEach(function(prop) {
              var propAssertion = new Assertion(obj);
              _15.transferFlags(this, propAssertion, true);
              flag12(propAssertion, "lockSsfi", true);
              if (!negate || props.length === 1) {
                propAssertion.property(prop, val[prop]);
                return;
              }
              try {
                propAssertion.property(prop, val[prop]);
              } catch (err) {
                if (!_15.checkError.compatibleConstructor(err, AssertionError3)) {
                  throw err;
                }
                if (firstErr === null)
                  firstErr = err;
                numErrs++;
              }
            }, this);
            if (negate && props.length > 1 && numErrs === props.length) {
              throw firstErr;
            }
            return;
        }
        this.assert(
          included,
          "expected #{this} to " + descriptor + "include " + _15.inspect(val),
          "expected #{this} to not " + descriptor + "include " + _15.inspect(val)
        );
      }
      Assertion.addChainableMethod("include", include, includeChainingBehavior);
      Assertion.addChainableMethod("contain", include, includeChainingBehavior);
      Assertion.addChainableMethod("contains", include, includeChainingBehavior);
      Assertion.addChainableMethod("includes", include, includeChainingBehavior);
      Assertion.addProperty("ok", function() {
        this.assert(
          flag12(this, "object"),
          "expected #{this} to be truthy",
          "expected #{this} to be falsy"
        );
      });
      Assertion.addProperty("true", function() {
        this.assert(
          true === flag12(this, "object"),
          "expected #{this} to be true",
          "expected #{this} to be false",
          flag12(this, "negate") ? false : true
        );
      });
      Assertion.addProperty("false", function() {
        this.assert(
          false === flag12(this, "object"),
          "expected #{this} to be false",
          "expected #{this} to be true",
          flag12(this, "negate") ? true : false
        );
      });
      Assertion.addProperty("null", function() {
        this.assert(
          null === flag12(this, "object"),
          "expected #{this} to be null",
          "expected #{this} not to be null"
        );
      });
      Assertion.addProperty("undefined", function() {
        this.assert(
          void 0 === flag12(this, "object"),
          "expected #{this} to be undefined",
          "expected #{this} not to be undefined"
        );
      });
      Assertion.addProperty("NaN", function() {
        this.assert(
          _15.isNaN(flag12(this, "object")),
          "expected #{this} to be NaN",
          "expected #{this} not to be NaN"
        );
      });
      function assertExist() {
        var val = flag12(this, "object");
        this.assert(
          val !== null && val !== void 0,
          "expected #{this} to exist",
          "expected #{this} to not exist"
        );
      }
      Assertion.addProperty("exist", assertExist);
      Assertion.addProperty("exists", assertExist);
      Assertion.addProperty("empty", function() {
        var val = flag12(this, "object"), ssfi = flag12(this, "ssfi"), flagMsg = flag12(this, "message"), itemsCount;
        flagMsg = flagMsg ? flagMsg + ": " : "";
        switch (_15.type(val).toLowerCase()) {
          case "array":
          case "string":
            itemsCount = val.length;
            break;
          case "map":
          case "set":
            itemsCount = val.size;
            break;
          case "weakmap":
          case "weakset":
            throw new AssertionError3(
              flagMsg + ".empty was passed a weak collection",
              void 0,
              ssfi
            );
          case "function":
            var msg = flagMsg + ".empty was passed a function " + _15.getName(val);
            throw new AssertionError3(msg.trim(), void 0, ssfi);
          default:
            if (val !== Object(val)) {
              throw new AssertionError3(
                flagMsg + ".empty was passed non-string primitive " + _15.inspect(val),
                void 0,
                ssfi
              );
            }
            itemsCount = Object.keys(val).length;
        }
        this.assert(
          0 === itemsCount,
          "expected #{this} to be empty",
          "expected #{this} not to be empty"
        );
      });
      function checkArguments() {
        var obj = flag12(this, "object"), type4 = _15.type(obj);
        this.assert(
          "Arguments" === type4,
          "expected #{this} to be arguments but got " + type4,
          "expected #{this} to not be arguments"
        );
      }
      Assertion.addProperty("arguments", checkArguments);
      Assertion.addProperty("Arguments", checkArguments);
      function assertEqual(val, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object");
        if (flag12(this, "deep")) {
          var prevLockSsfi = flag12(this, "lockSsfi");
          flag12(this, "lockSsfi", true);
          this.eql(val);
          flag12(this, "lockSsfi", prevLockSsfi);
        } else {
          this.assert(
            val === obj,
            "expected #{this} to equal #{exp}",
            "expected #{this} to not equal #{exp}",
            val,
            this._obj,
            true
          );
        }
      }
      Assertion.addMethod("equal", assertEqual);
      Assertion.addMethod("equals", assertEqual);
      Assertion.addMethod("eq", assertEqual);
      function assertEql(obj, msg) {
        if (msg)
          flag12(this, "message", msg);
        var eql = flag12(this, "eql");
        this.assert(
          eql(obj, flag12(this, "object")),
          "expected #{this} to deeply equal #{exp}",
          "expected #{this} to not deeply equal #{exp}",
          obj,
          this._obj,
          true
        );
      }
      Assertion.addMethod("eql", assertEql);
      Assertion.addMethod("eqls", assertEql);
      function assertAbove(n2, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), doLength = flag12(this, "doLength"), flagMsg = flag12(this, "message"), msgPrefix = flagMsg ? flagMsg + ": " : "", ssfi = flag12(this, "ssfi"), objType = _15.type(obj).toLowerCase(), nType = _15.type(n2).toLowerCase(), errorMessage, shouldThrow = true;
        if (doLength && objType !== "map" && objType !== "set") {
          new Assertion(obj, flagMsg, ssfi, true).to.have.property("length");
        }
        if (!doLength && (objType === "date" && nType !== "date")) {
          errorMessage = msgPrefix + "the argument to above must be a date";
        } else if (nType !== "number" && (doLength || objType === "number")) {
          errorMessage = msgPrefix + "the argument to above must be a number";
        } else if (!doLength && (objType !== "date" && objType !== "number")) {
          var printObj = objType === "string" ? "'" + obj + "'" : obj;
          errorMessage = msgPrefix + "expected " + printObj + " to be a number or a date";
        } else {
          shouldThrow = false;
        }
        if (shouldThrow) {
          throw new AssertionError3(errorMessage, void 0, ssfi);
        }
        if (doLength) {
          var descriptor = "length", itemsCount;
          if (objType === "map" || objType === "set") {
            descriptor = "size";
            itemsCount = obj.size;
          } else {
            itemsCount = obj.length;
          }
          this.assert(
            itemsCount > n2,
            "expected #{this} to have a " + descriptor + " above #{exp} but got #{act}",
            "expected #{this} to not have a " + descriptor + " above #{exp}",
            n2,
            itemsCount
          );
        } else {
          this.assert(
            obj > n2,
            "expected #{this} to be above #{exp}",
            "expected #{this} to be at most #{exp}",
            n2
          );
        }
      }
      Assertion.addMethod("above", assertAbove);
      Assertion.addMethod("gt", assertAbove);
      Assertion.addMethod("greaterThan", assertAbove);
      function assertLeast(n2, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), doLength = flag12(this, "doLength"), flagMsg = flag12(this, "message"), msgPrefix = flagMsg ? flagMsg + ": " : "", ssfi = flag12(this, "ssfi"), objType = _15.type(obj).toLowerCase(), nType = _15.type(n2).toLowerCase(), errorMessage, shouldThrow = true;
        if (doLength && objType !== "map" && objType !== "set") {
          new Assertion(obj, flagMsg, ssfi, true).to.have.property("length");
        }
        if (!doLength && (objType === "date" && nType !== "date")) {
          errorMessage = msgPrefix + "the argument to least must be a date";
        } else if (nType !== "number" && (doLength || objType === "number")) {
          errorMessage = msgPrefix + "the argument to least must be a number";
        } else if (!doLength && (objType !== "date" && objType !== "number")) {
          var printObj = objType === "string" ? "'" + obj + "'" : obj;
          errorMessage = msgPrefix + "expected " + printObj + " to be a number or a date";
        } else {
          shouldThrow = false;
        }
        if (shouldThrow) {
          throw new AssertionError3(errorMessage, void 0, ssfi);
        }
        if (doLength) {
          var descriptor = "length", itemsCount;
          if (objType === "map" || objType === "set") {
            descriptor = "size";
            itemsCount = obj.size;
          } else {
            itemsCount = obj.length;
          }
          this.assert(
            itemsCount >= n2,
            "expected #{this} to have a " + descriptor + " at least #{exp} but got #{act}",
            "expected #{this} to have a " + descriptor + " below #{exp}",
            n2,
            itemsCount
          );
        } else {
          this.assert(
            obj >= n2,
            "expected #{this} to be at least #{exp}",
            "expected #{this} to be below #{exp}",
            n2
          );
        }
      }
      Assertion.addMethod("least", assertLeast);
      Assertion.addMethod("gte", assertLeast);
      Assertion.addMethod("greaterThanOrEqual", assertLeast);
      function assertBelow(n2, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), doLength = flag12(this, "doLength"), flagMsg = flag12(this, "message"), msgPrefix = flagMsg ? flagMsg + ": " : "", ssfi = flag12(this, "ssfi"), objType = _15.type(obj).toLowerCase(), nType = _15.type(n2).toLowerCase(), errorMessage, shouldThrow = true;
        if (doLength && objType !== "map" && objType !== "set") {
          new Assertion(obj, flagMsg, ssfi, true).to.have.property("length");
        }
        if (!doLength && (objType === "date" && nType !== "date")) {
          errorMessage = msgPrefix + "the argument to below must be a date";
        } else if (nType !== "number" && (doLength || objType === "number")) {
          errorMessage = msgPrefix + "the argument to below must be a number";
        } else if (!doLength && (objType !== "date" && objType !== "number")) {
          var printObj = objType === "string" ? "'" + obj + "'" : obj;
          errorMessage = msgPrefix + "expected " + printObj + " to be a number or a date";
        } else {
          shouldThrow = false;
        }
        if (shouldThrow) {
          throw new AssertionError3(errorMessage, void 0, ssfi);
        }
        if (doLength) {
          var descriptor = "length", itemsCount;
          if (objType === "map" || objType === "set") {
            descriptor = "size";
            itemsCount = obj.size;
          } else {
            itemsCount = obj.length;
          }
          this.assert(
            itemsCount < n2,
            "expected #{this} to have a " + descriptor + " below #{exp} but got #{act}",
            "expected #{this} to not have a " + descriptor + " below #{exp}",
            n2,
            itemsCount
          );
        } else {
          this.assert(
            obj < n2,
            "expected #{this} to be below #{exp}",
            "expected #{this} to be at least #{exp}",
            n2
          );
        }
      }
      Assertion.addMethod("below", assertBelow);
      Assertion.addMethod("lt", assertBelow);
      Assertion.addMethod("lessThan", assertBelow);
      function assertMost(n2, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), doLength = flag12(this, "doLength"), flagMsg = flag12(this, "message"), msgPrefix = flagMsg ? flagMsg + ": " : "", ssfi = flag12(this, "ssfi"), objType = _15.type(obj).toLowerCase(), nType = _15.type(n2).toLowerCase(), errorMessage, shouldThrow = true;
        if (doLength && objType !== "map" && objType !== "set") {
          new Assertion(obj, flagMsg, ssfi, true).to.have.property("length");
        }
        if (!doLength && (objType === "date" && nType !== "date")) {
          errorMessage = msgPrefix + "the argument to most must be a date";
        } else if (nType !== "number" && (doLength || objType === "number")) {
          errorMessage = msgPrefix + "the argument to most must be a number";
        } else if (!doLength && (objType !== "date" && objType !== "number")) {
          var printObj = objType === "string" ? "'" + obj + "'" : obj;
          errorMessage = msgPrefix + "expected " + printObj + " to be a number or a date";
        } else {
          shouldThrow = false;
        }
        if (shouldThrow) {
          throw new AssertionError3(errorMessage, void 0, ssfi);
        }
        if (doLength) {
          var descriptor = "length", itemsCount;
          if (objType === "map" || objType === "set") {
            descriptor = "size";
            itemsCount = obj.size;
          } else {
            itemsCount = obj.length;
          }
          this.assert(
            itemsCount <= n2,
            "expected #{this} to have a " + descriptor + " at most #{exp} but got #{act}",
            "expected #{this} to have a " + descriptor + " above #{exp}",
            n2,
            itemsCount
          );
        } else {
          this.assert(
            obj <= n2,
            "expected #{this} to be at most #{exp}",
            "expected #{this} to be above #{exp}",
            n2
          );
        }
      }
      Assertion.addMethod("most", assertMost);
      Assertion.addMethod("lte", assertMost);
      Assertion.addMethod("lessThanOrEqual", assertMost);
      Assertion.addMethod("within", function(start, finish, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), doLength = flag12(this, "doLength"), flagMsg = flag12(this, "message"), msgPrefix = flagMsg ? flagMsg + ": " : "", ssfi = flag12(this, "ssfi"), objType = _15.type(obj).toLowerCase(), startType = _15.type(start).toLowerCase(), finishType = _15.type(finish).toLowerCase(), errorMessage, shouldThrow = true, range = startType === "date" && finishType === "date" ? start.toISOString() + ".." + finish.toISOString() : start + ".." + finish;
        if (doLength && objType !== "map" && objType !== "set") {
          new Assertion(obj, flagMsg, ssfi, true).to.have.property("length");
        }
        if (!doLength && (objType === "date" && (startType !== "date" || finishType !== "date"))) {
          errorMessage = msgPrefix + "the arguments to within must be dates";
        } else if ((startType !== "number" || finishType !== "number") && (doLength || objType === "number")) {
          errorMessage = msgPrefix + "the arguments to within must be numbers";
        } else if (!doLength && (objType !== "date" && objType !== "number")) {
          var printObj = objType === "string" ? "'" + obj + "'" : obj;
          errorMessage = msgPrefix + "expected " + printObj + " to be a number or a date";
        } else {
          shouldThrow = false;
        }
        if (shouldThrow) {
          throw new AssertionError3(errorMessage, void 0, ssfi);
        }
        if (doLength) {
          var descriptor = "length", itemsCount;
          if (objType === "map" || objType === "set") {
            descriptor = "size";
            itemsCount = obj.size;
          } else {
            itemsCount = obj.length;
          }
          this.assert(
            itemsCount >= start && itemsCount <= finish,
            "expected #{this} to have a " + descriptor + " within " + range,
            "expected #{this} to not have a " + descriptor + " within " + range
          );
        } else {
          this.assert(
            obj >= start && obj <= finish,
            "expected #{this} to be within " + range,
            "expected #{this} to not be within " + range
          );
        }
      });
      function assertInstanceOf(constructor, msg) {
        if (msg)
          flag12(this, "message", msg);
        var target = flag12(this, "object");
        var ssfi = flag12(this, "ssfi");
        var flagMsg = flag12(this, "message");
        try {
          var isInstanceOf = target instanceof constructor;
        } catch (err) {
          if (err instanceof TypeError) {
            flagMsg = flagMsg ? flagMsg + ": " : "";
            throw new AssertionError3(
              flagMsg + "The instanceof assertion needs a constructor but " + _15.type(constructor) + " was given.",
              void 0,
              ssfi
            );
          }
          throw err;
        }
        var name = _15.getName(constructor);
        if (name === null) {
          name = "an unnamed constructor";
        }
        this.assert(
          isInstanceOf,
          "expected #{this} to be an instance of " + name,
          "expected #{this} to not be an instance of " + name
        );
      }
      Assertion.addMethod("instanceof", assertInstanceOf);
      Assertion.addMethod("instanceOf", assertInstanceOf);
      function assertProperty(name, val, msg) {
        if (msg)
          flag12(this, "message", msg);
        var isNested = flag12(this, "nested"), isOwn = flag12(this, "own"), flagMsg = flag12(this, "message"), obj = flag12(this, "object"), ssfi = flag12(this, "ssfi"), nameType = typeof name;
        flagMsg = flagMsg ? flagMsg + ": " : "";
        if (isNested) {
          if (nameType !== "string") {
            throw new AssertionError3(
              flagMsg + "the argument to property must be a string when using nested syntax",
              void 0,
              ssfi
            );
          }
        } else {
          if (nameType !== "string" && nameType !== "number" && nameType !== "symbol") {
            throw new AssertionError3(
              flagMsg + "the argument to property must be a string, number, or symbol",
              void 0,
              ssfi
            );
          }
        }
        if (isNested && isOwn) {
          throw new AssertionError3(
            flagMsg + 'The "nested" and "own" flags cannot be combined.',
            void 0,
            ssfi
          );
        }
        if (obj === null || obj === void 0) {
          throw new AssertionError3(
            flagMsg + "Target cannot be null or undefined.",
            void 0,
            ssfi
          );
        }
        var isDeep = flag12(this, "deep"), negate = flag12(this, "negate"), pathInfo = isNested ? _15.getPathInfo(obj, name) : null, value = isNested ? pathInfo.value : obj[name], isEql = isDeep ? flag12(this, "eql") : (val1, val2) => val1 === val2;
        var descriptor = "";
        if (isDeep)
          descriptor += "deep ";
        if (isOwn)
          descriptor += "own ";
        if (isNested)
          descriptor += "nested ";
        descriptor += "property ";
        var hasProperty2;
        if (isOwn)
          hasProperty2 = Object.prototype.hasOwnProperty.call(obj, name);
        else if (isNested)
          hasProperty2 = pathInfo.exists;
        else
          hasProperty2 = _15.hasProperty(obj, name);
        if (!negate || arguments.length === 1) {
          this.assert(
            hasProperty2,
            "expected #{this} to have " + descriptor + _15.inspect(name),
            "expected #{this} to not have " + descriptor + _15.inspect(name)
          );
        }
        if (arguments.length > 1) {
          this.assert(
            hasProperty2 && isEql(val, value),
            "expected #{this} to have " + descriptor + _15.inspect(name) + " of #{exp}, but got #{act}",
            "expected #{this} to not have " + descriptor + _15.inspect(name) + " of #{act}",
            val,
            value
          );
        }
        flag12(this, "object", value);
      }
      Assertion.addMethod("property", assertProperty);
      function assertOwnProperty(name, value, msg) {
        flag12(this, "own", true);
        assertProperty.apply(this, arguments);
      }
      Assertion.addMethod("ownProperty", assertOwnProperty);
      Assertion.addMethod("haveOwnProperty", assertOwnProperty);
      function assertOwnPropertyDescriptor(name, descriptor, msg) {
        if (typeof descriptor === "string") {
          msg = descriptor;
          descriptor = null;
        }
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object");
        var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);
        var eql = flag12(this, "eql");
        if (actualDescriptor && descriptor) {
          this.assert(
            eql(descriptor, actualDescriptor),
            "expected the own property descriptor for " + _15.inspect(name) + " on #{this} to match " + _15.inspect(descriptor) + ", got " + _15.inspect(actualDescriptor),
            "expected the own property descriptor for " + _15.inspect(name) + " on #{this} to not match " + _15.inspect(descriptor),
            descriptor,
            actualDescriptor,
            true
          );
        } else {
          this.assert(
            actualDescriptor,
            "expected #{this} to have an own property descriptor for " + _15.inspect(name),
            "expected #{this} to not have an own property descriptor for " + _15.inspect(name)
          );
        }
        flag12(this, "object", actualDescriptor);
      }
      Assertion.addMethod("ownPropertyDescriptor", assertOwnPropertyDescriptor);
      Assertion.addMethod("haveOwnPropertyDescriptor", assertOwnPropertyDescriptor);
      function assertLengthChain() {
        flag12(this, "doLength", true);
      }
      function assertLength(n2, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), objType = _15.type(obj).toLowerCase(), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi"), descriptor = "length", itemsCount;
        switch (objType) {
          case "map":
          case "set":
            descriptor = "size";
            itemsCount = obj.size;
            break;
          default:
            new Assertion(obj, flagMsg, ssfi, true).to.have.property("length");
            itemsCount = obj.length;
        }
        this.assert(
          itemsCount == n2,
          "expected #{this} to have a " + descriptor + " of #{exp} but got #{act}",
          "expected #{this} to not have a " + descriptor + " of #{act}",
          n2,
          itemsCount
        );
      }
      Assertion.addChainableMethod("length", assertLength, assertLengthChain);
      Assertion.addChainableMethod("lengthOf", assertLength, assertLengthChain);
      function assertMatch(re, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object");
        this.assert(
          re.exec(obj),
          "expected #{this} to match " + re,
          "expected #{this} not to match " + re
        );
      }
      Assertion.addMethod("match", assertMatch);
      Assertion.addMethod("matches", assertMatch);
      Assertion.addMethod("string", function(str, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi");
        new Assertion(obj, flagMsg, ssfi, true).is.a("string");
        this.assert(
          ~obj.indexOf(str),
          "expected #{this} to contain " + _15.inspect(str),
          "expected #{this} to not contain " + _15.inspect(str)
        );
      });
      function assertKeys(keys) {
        var obj = flag12(this, "object"), objType = _15.type(obj), keysType = _15.type(keys), ssfi = flag12(this, "ssfi"), isDeep = flag12(this, "deep"), str, deepStr = "", actual, ok = true, flagMsg = flag12(this, "message");
        flagMsg = flagMsg ? flagMsg + ": " : "";
        var mixedArgsMsg = flagMsg + "when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";
        if (objType === "Map" || objType === "Set") {
          deepStr = isDeep ? "deeply " : "";
          actual = [];
          obj.forEach(function(val, key) {
            actual.push(key);
          });
          if (keysType !== "Array") {
            keys = Array.prototype.slice.call(arguments);
          }
        } else {
          actual = _15.getOwnEnumerableProperties(obj);
          switch (keysType) {
            case "Array":
              if (arguments.length > 1) {
                throw new AssertionError3(mixedArgsMsg, void 0, ssfi);
              }
              break;
            case "Object":
              if (arguments.length > 1) {
                throw new AssertionError3(mixedArgsMsg, void 0, ssfi);
              }
              keys = Object.keys(keys);
              break;
            default:
              keys = Array.prototype.slice.call(arguments);
          }
          keys = keys.map(function(val) {
            return typeof val === "symbol" ? val : String(val);
          });
        }
        if (!keys.length) {
          throw new AssertionError3(flagMsg + "keys required", void 0, ssfi);
        }
        var len = keys.length, any = flag12(this, "any"), all = flag12(this, "all"), expected = keys, isEql = isDeep ? flag12(this, "eql") : (val1, val2) => val1 === val2;
        if (!any && !all) {
          all = true;
        }
        if (any) {
          ok = expected.some(function(expectedKey) {
            return actual.some(function(actualKey) {
              return isEql(expectedKey, actualKey);
            });
          });
        }
        if (all) {
          ok = expected.every(function(expectedKey) {
            return actual.some(function(actualKey) {
              return isEql(expectedKey, actualKey);
            });
          });
          if (!flag12(this, "contains")) {
            ok = ok && keys.length == actual.length;
          }
        }
        if (len > 1) {
          keys = keys.map(function(key) {
            return _15.inspect(key);
          });
          var last = keys.pop();
          if (all) {
            str = keys.join(", ") + ", and " + last;
          }
          if (any) {
            str = keys.join(", ") + ", or " + last;
          }
        } else {
          str = _15.inspect(keys[0]);
        }
        str = (len > 1 ? "keys " : "key ") + str;
        str = (flag12(this, "contains") ? "contain " : "have ") + str;
        this.assert(
          ok,
          "expected #{this} to " + deepStr + str,
          "expected #{this} to not " + deepStr + str,
          expected.slice(0).sort(_15.compareByInspect),
          actual.sort(_15.compareByInspect),
          true
        );
      }
      Assertion.addMethod("keys", assertKeys);
      Assertion.addMethod("key", assertKeys);
      function assertThrows(errorLike, errMsgMatcher, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), ssfi = flag12(this, "ssfi"), flagMsg = flag12(this, "message"), negate = flag12(this, "negate") || false;
        new Assertion(obj, flagMsg, ssfi, true).is.a("function");
        if (errorLike instanceof RegExp || typeof errorLike === "string") {
          errMsgMatcher = errorLike;
          errorLike = null;
        }
        var caughtErr;
        try {
          obj();
        } catch (err) {
          caughtErr = err;
        }
        var everyArgIsUndefined = errorLike === void 0 && errMsgMatcher === void 0;
        var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);
        var errorLikeFail = false;
        var errMsgMatcherFail = false;
        if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {
          var errorLikeString = "an error";
          if (errorLike instanceof Error) {
            errorLikeString = "#{exp}";
          } else if (errorLike) {
            errorLikeString = _15.checkError.getConstructorName(errorLike);
          }
          this.assert(
            caughtErr,
            "expected #{this} to throw " + errorLikeString,
            "expected #{this} to not throw an error but #{act} was thrown",
            errorLike && errorLike.toString(),
            caughtErr instanceof Error ? caughtErr.toString() : typeof caughtErr === "string" ? caughtErr : caughtErr && _15.checkError.getConstructorName(caughtErr)
          );
        }
        if (errorLike && caughtErr) {
          if (errorLike instanceof Error) {
            var isCompatibleInstance = _15.checkError.compatibleInstance(caughtErr, errorLike);
            if (isCompatibleInstance === negate) {
              if (everyArgIsDefined && negate) {
                errorLikeFail = true;
              } else {
                this.assert(
                  negate,
                  "expected #{this} to throw #{exp} but #{act} was thrown",
                  "expected #{this} to not throw #{exp}" + (caughtErr && !negate ? " but #{act} was thrown" : ""),
                  errorLike.toString(),
                  caughtErr.toString()
                );
              }
            }
          }
          var isCompatibleConstructor = _15.checkError.compatibleConstructor(caughtErr, errorLike);
          if (isCompatibleConstructor === negate) {
            if (everyArgIsDefined && negate) {
              errorLikeFail = true;
            } else {
              this.assert(
                negate,
                "expected #{this} to throw #{exp} but #{act} was thrown",
                "expected #{this} to not throw #{exp}" + (caughtErr ? " but #{act} was thrown" : ""),
                errorLike instanceof Error ? errorLike.toString() : errorLike && _15.checkError.getConstructorName(errorLike),
                caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _15.checkError.getConstructorName(caughtErr)
              );
            }
          }
        }
        if (caughtErr && errMsgMatcher !== void 0 && errMsgMatcher !== null) {
          var placeholder = "including";
          if (errMsgMatcher instanceof RegExp) {
            placeholder = "matching";
          }
          var isCompatibleMessage = _15.checkError.compatibleMessage(caughtErr, errMsgMatcher);
          if (isCompatibleMessage === negate) {
            if (everyArgIsDefined && negate) {
              errMsgMatcherFail = true;
            } else {
              this.assert(
                negate,
                "expected #{this} to throw error " + placeholder + " #{exp} but got #{act}",
                "expected #{this} to throw error not " + placeholder + " #{exp}",
                errMsgMatcher,
                _15.checkError.getMessage(caughtErr)
              );
            }
          }
        }
        if (errorLikeFail && errMsgMatcherFail) {
          this.assert(
            negate,
            "expected #{this} to throw #{exp} but #{act} was thrown",
            "expected #{this} to not throw #{exp}" + (caughtErr ? " but #{act} was thrown" : ""),
            errorLike instanceof Error ? errorLike.toString() : errorLike && _15.checkError.getConstructorName(errorLike),
            caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _15.checkError.getConstructorName(caughtErr)
          );
        }
        flag12(this, "object", caughtErr);
      }
      Assertion.addMethod("throw", assertThrows);
      Assertion.addMethod("throws", assertThrows);
      Assertion.addMethod("Throw", assertThrows);
      function respondTo(method, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), itself = flag12(this, "itself"), context = "function" === typeof obj && !itself ? obj.prototype[method] : obj[method];
        this.assert(
          "function" === typeof context,
          "expected #{this} to respond to " + _15.inspect(method),
          "expected #{this} to not respond to " + _15.inspect(method)
        );
      }
      Assertion.addMethod("respondTo", respondTo);
      Assertion.addMethod("respondsTo", respondTo);
      Assertion.addProperty("itself", function() {
        flag12(this, "itself", true);
      });
      function satisfy(matcher, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object");
        var result = matcher(obj);
        this.assert(
          result,
          "expected #{this} to satisfy " + _15.objDisplay(matcher),
          "expected #{this} to not satisfy" + _15.objDisplay(matcher),
          flag12(this, "negate") ? false : true,
          result
        );
      }
      Assertion.addMethod("satisfy", satisfy);
      Assertion.addMethod("satisfies", satisfy);
      function closeTo(expected, delta, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi");
        new Assertion(obj, flagMsg, ssfi, true).is.a("number");
        if (typeof expected !== "number" || typeof delta !== "number") {
          flagMsg = flagMsg ? flagMsg + ": " : "";
          var deltaMessage = delta === void 0 ? ", and a delta is required" : "";
          throw new AssertionError3(
            flagMsg + "the arguments to closeTo or approximately must be numbers" + deltaMessage,
            void 0,
            ssfi
          );
        }
        this.assert(
          Math.abs(obj - expected) <= delta,
          "expected #{this} to be close to " + expected + " +/- " + delta,
          "expected #{this} not to be close to " + expected + " +/- " + delta
        );
      }
      Assertion.addMethod("closeTo", closeTo);
      Assertion.addMethod("approximately", closeTo);
      function isSubsetOf(subset, superset, cmp, contains, ordered) {
        if (!contains) {
          if (subset.length !== superset.length)
            return false;
          superset = superset.slice();
        }
        return subset.every(function(elem, idx) {
          if (ordered)
            return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];
          if (!cmp) {
            var matchIdx = superset.indexOf(elem);
            if (matchIdx === -1)
              return false;
            if (!contains)
              superset.splice(matchIdx, 1);
            return true;
          }
          return superset.some(function(elem2, matchIdx2) {
            if (!cmp(elem, elem2))
              return false;
            if (!contains)
              superset.splice(matchIdx2, 1);
            return true;
          });
        });
      }
      Assertion.addMethod("members", function(subset, msg) {
        if (msg)
          flag12(this, "message", msg);
        var obj = flag12(this, "object"), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi");
        new Assertion(obj, flagMsg, ssfi, true).to.be.an("array");
        new Assertion(subset, flagMsg, ssfi, true).to.be.an("array");
        var contains = flag12(this, "contains");
        var ordered = flag12(this, "ordered");
        var subject, failMsg, failNegateMsg;
        if (contains) {
          subject = ordered ? "an ordered superset" : "a superset";
          failMsg = "expected #{this} to be " + subject + " of #{exp}";
          failNegateMsg = "expected #{this} to not be " + subject + " of #{exp}";
        } else {
          subject = ordered ? "ordered members" : "members";
          failMsg = "expected #{this} to have the same " + subject + " as #{exp}";
          failNegateMsg = "expected #{this} to not have the same " + subject + " as #{exp}";
        }
        var cmp = flag12(this, "deep") ? flag12(this, "eql") : void 0;
        this.assert(
          isSubsetOf(subset, obj, cmp, contains, ordered),
          failMsg,
          failNegateMsg,
          subset,
          obj,
          true
        );
      });
      function oneOf(list, msg) {
        if (msg)
          flag12(this, "message", msg);
        var expected = flag12(this, "object"), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi"), contains = flag12(this, "contains"), isDeep = flag12(this, "deep"), eql = flag12(this, "eql");
        new Assertion(list, flagMsg, ssfi, true).to.be.an("array");
        if (contains) {
          this.assert(
            list.some(function(possibility) {
              return expected.indexOf(possibility) > -1;
            }),
            "expected #{this} to contain one of #{exp}",
            "expected #{this} to not contain one of #{exp}",
            list,
            expected
          );
        } else {
          if (isDeep) {
            this.assert(
              list.some(function(possibility) {
                return eql(expected, possibility);
              }),
              "expected #{this} to deeply equal one of #{exp}",
              "expected #{this} to deeply equal one of #{exp}",
              list,
              expected
            );
          } else {
            this.assert(
              list.indexOf(expected) > -1,
              "expected #{this} to be one of #{exp}",
              "expected #{this} to not be one of #{exp}",
              list,
              expected
            );
          }
        }
      }
      Assertion.addMethod("oneOf", oneOf);
      function assertChanges(subject, prop, msg) {
        if (msg)
          flag12(this, "message", msg);
        var fn = flag12(this, "object"), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi");
        new Assertion(fn, flagMsg, ssfi, true).is.a("function");
        var initial;
        if (!prop) {
          new Assertion(subject, flagMsg, ssfi, true).is.a("function");
          initial = subject();
        } else {
          new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);
          initial = subject[prop];
        }
        fn();
        var final = prop === void 0 || prop === null ? subject() : subject[prop];
        var msgObj = prop === void 0 || prop === null ? initial : "." + prop;
        flag12(this, "deltaMsgObj", msgObj);
        flag12(this, "initialDeltaValue", initial);
        flag12(this, "finalDeltaValue", final);
        flag12(this, "deltaBehavior", "change");
        flag12(this, "realDelta", final !== initial);
        this.assert(
          initial !== final,
          "expected " + msgObj + " to change",
          "expected " + msgObj + " to not change"
        );
      }
      Assertion.addMethod("change", assertChanges);
      Assertion.addMethod("changes", assertChanges);
      function assertIncreases(subject, prop, msg) {
        if (msg)
          flag12(this, "message", msg);
        var fn = flag12(this, "object"), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi");
        new Assertion(fn, flagMsg, ssfi, true).is.a("function");
        var initial;
        if (!prop) {
          new Assertion(subject, flagMsg, ssfi, true).is.a("function");
          initial = subject();
        } else {
          new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);
          initial = subject[prop];
        }
        new Assertion(initial, flagMsg, ssfi, true).is.a("number");
        fn();
        var final = prop === void 0 || prop === null ? subject() : subject[prop];
        var msgObj = prop === void 0 || prop === null ? initial : "." + prop;
        flag12(this, "deltaMsgObj", msgObj);
        flag12(this, "initialDeltaValue", initial);
        flag12(this, "finalDeltaValue", final);
        flag12(this, "deltaBehavior", "increase");
        flag12(this, "realDelta", final - initial);
        this.assert(
          final - initial > 0,
          "expected " + msgObj + " to increase",
          "expected " + msgObj + " to not increase"
        );
      }
      Assertion.addMethod("increase", assertIncreases);
      Assertion.addMethod("increases", assertIncreases);
      function assertDecreases(subject, prop, msg) {
        if (msg)
          flag12(this, "message", msg);
        var fn = flag12(this, "object"), flagMsg = flag12(this, "message"), ssfi = flag12(this, "ssfi");
        new Assertion(fn, flagMsg, ssfi, true).is.a("function");
        var initial;
        if (!prop) {
          new Assertion(subject, flagMsg, ssfi, true).is.a("function");
          initial = subject();
        } else {
          new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);
          initial = subject[prop];
        }
        new Assertion(initial, flagMsg, ssfi, true).is.a("number");
        fn();
        var final = prop === void 0 || prop === null ? subject() : subject[prop];
        var msgObj = prop === void 0 || prop === null ? initial : "." + prop;
        flag12(this, "deltaMsgObj", msgObj);
        flag12(this, "initialDeltaValue", initial);
        flag12(this, "finalDeltaValue", final);
        flag12(this, "deltaBehavior", "decrease");
        flag12(this, "realDelta", initial - final);
        this.assert(
          final - initial < 0,
          "expected " + msgObj + " to decrease",
          "expected " + msgObj + " to not decrease"
        );
      }
      Assertion.addMethod("decrease", assertDecreases);
      Assertion.addMethod("decreases", assertDecreases);
      function assertDelta(delta, msg) {
        if (msg)
          flag12(this, "message", msg);
        var msgObj = flag12(this, "deltaMsgObj");
        var initial = flag12(this, "initialDeltaValue");
        var final = flag12(this, "finalDeltaValue");
        var behavior = flag12(this, "deltaBehavior");
        var realDelta = flag12(this, "realDelta");
        var expression;
        if (behavior === "change") {
          expression = Math.abs(final - initial) === Math.abs(delta);
        } else {
          expression = realDelta === Math.abs(delta);
        }
        this.assert(
          expression,
          "expected " + msgObj + " to " + behavior + " by " + delta,
          "expected " + msgObj + " to not " + behavior + " by " + delta
        );
      }
      Assertion.addMethod("by", assertDelta);
      Assertion.addProperty("extensible", function() {
        var obj = flag12(this, "object");
        var isExtensible = obj === Object(obj) && Object.isExtensible(obj);
        this.assert(
          isExtensible,
          "expected #{this} to be extensible",
          "expected #{this} to not be extensible"
        );
      });
      Assertion.addProperty("sealed", function() {
        var obj = flag12(this, "object");
        var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;
        this.assert(
          isSealed,
          "expected #{this} to be sealed",
          "expected #{this} to not be sealed"
        );
      });
      Assertion.addProperty("frozen", function() {
        var obj = flag12(this, "object");
        var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;
        this.assert(
          isFrozen,
          "expected #{this} to be frozen",
          "expected #{this} to not be frozen"
        );
      });
      Assertion.addProperty("finite", function(msg) {
        var obj = flag12(this, "object");
        this.assert(
          typeof obj === "number" && isFinite(obj),
          "expected #{this} to be a finite number",
          "expected #{this} to not be a finite number"
        );
      });
    };
    assertions_default = module810.exports;
  }
});
var config_exports = {};
__export75(config_exports, {
  default: () => config_default,
  includeStack: () => __export0510,
  showDiff: () => __export1412
});
var exports910;
var module910;
var __export0510;
var __export1412;
var config_default;
var init_config = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/config.js"() {
    exports910 = {};
    module910 = {
      get exports() {
        return exports910;
      },
      set exports(value) {
        exports910 = value;
      }
    };
    module910.exports = {
      /**
       * ### config.includeStack
       *
       * User configurable property, influences whether stack trace
       * is included in Assertion error message. Default of false
       * suppresses stack trace in the error message.
       *
       *     chai.config.includeStack = true;  // enable stack on error
       *
       * @param {Boolean}
       * @api public
       */
      includeStack: false,
      /**
       * ### config.showDiff
       *
       * User configurable property, influences whether or not
       * the `showDiff` flag should be included in the thrown
       * AssertionErrors. `false` will always be `false`; `true`
       * will be true when the assertion has requested a diff
       * be shown.
       *
       * @param {Boolean}
       * @api public
       */
      showDiff: true,
      /**
       * ### config.truncateThreshold
       *
       * User configurable property, sets length threshold for actual and
       * expected values in assertion errors. If this threshold is exceeded, for
       * example for large data structures, the value is replaced with something
       * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.
       *
       * Set it to zero if you want to disable truncating altogether.
       *
       * This is especially userful when doing assertions on arrays: having this
       * set to a reasonable large value makes the failure messages readily
       * inspectable.
       *
       *     chai.config.truncateThreshold = 0;  // disable truncating
       *
       * @param {Number}
       * @api public
       */
      truncateThreshold: 40,
      /**
       * ### config.useProxy
       *
       * User configurable property, defines if chai will use a Proxy to throw
       * an error when a non-existent property is read, which protects users
       * from typos when using property-based assertions.
       *
       * Set it to false if you want to disable this feature.
       *
       *     chai.config.useProxy = false;  // disable use of Proxy
       *
       * This feature is automatically disabled regardless of this config value
       * in environments that don't support proxies.
       *
       * @param {Boolean}
       * @api public
       */
      useProxy: true,
      /**
       * ### config.proxyExcludedKeys
       *
       * User configurable property, defines which properties should be ignored
       * instead of throwing an error if they do not exist on the assertion.
       * This is only applied if the environment Chai is running in supports proxies and
       * if the `useProxy` configuration setting is enabled.
       * By default, `then` and `inspect` will not throw an error if they do not exist on the
       * assertion object because the `.inspect` property is read by `util.inspect` (for example, when
       * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.
       *
       *     // By default these keys will not throw an error if they do not exist on the assertion object
       *     chai.config.proxyExcludedKeys = ['then', 'inspect'];
       *
       * @param {Array}
       * @api public
       */
      proxyExcludedKeys: ["then", "catch", "inspect", "toJSON"],
      /**
       * ### config.deepEqual
       *
       * User configurable property, defines which a custom function to use for deepEqual
       * comparisons.
       * By default, the function used is the one from the `deep-eql` package without custom comparator.
       *
       *     // use a custom comparator
       *     chai.config.deepEqual = (expected, actual) => {
       *        return chai.util.eql(expected, actual, {
       *           comparator: (expected, actual) => {
       *              // for non number comparison, use the default behavior
       *              if(typeof expected !== 'number') return null;
       *              // allow a difference of 10 between compared numbers
       *              return typeof actual === 'number' && Math.abs(actual - expected) < 10
       *           }
       *        })
       *     };
       *
       * @param {Function}
       * @api public
       */
      deepEqual: null
    };
    if (Object.isExtensible(module910.exports) && Object.keys(module910.exports).length === 2) {
      __export0510 = module910.exports["includeStack"];
      __export1412 = module910.exports["showDiff"];
    }
    config_default = module910.exports;
  }
});
var assertion_exports = {};
__export75(assertion_exports, {
  default: () => assertion_default
});
function $$cjs_default$$410(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global510 !== "undefined" && global510 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global510;
var exports107;
var module107;
var config;
var assertion_default;
var init_assertion = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/assertion.js"() {
    init_config();
    global510 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global510 !== "undefined" && global510 || typeof globalThis !== "undefined" && globalThis || {};
    exports107 = {};
    module107 = {
      get exports() {
        return exports107;
      },
      set exports(value) {
        exports107 = value;
      }
    };
    config = $$cjs_default$$410(typeof config_exports !== "undefined" ? config_exports : {});
    module107.exports = function(_chai, util2) {
      var AssertionError3 = _chai.AssertionError, flag12 = util2.flag;
      _chai.Assertion = Assertion;
      function Assertion(obj, msg, ssfi, lockSsfi) {
        flag12(this, "ssfi", ssfi || Assertion);
        flag12(this, "lockSsfi", lockSsfi);
        flag12(this, "object", obj);
        flag12(this, "message", msg);
        flag12(this, "eql", config.deepEqual || util2.eql);
        return util2.proxify(this);
      }
      Object.defineProperty(Assertion, "includeStack", {
        get: function() {
          console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead.");
          return config.includeStack;
        },
        set: function(value) {
          console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead.");
          config.includeStack = value;
        }
      });
      Object.defineProperty(Assertion, "showDiff", {
        get: function() {
          console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead.");
          return config.showDiff;
        },
        set: function(value) {
          console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead.");
          config.showDiff = value;
        }
      });
      Assertion.addProperty = function(name, fn) {
        util2.addProperty(this.prototype, name, fn);
      };
      Assertion.addMethod = function(name, fn) {
        util2.addMethod(this.prototype, name, fn);
      };
      Assertion.addChainableMethod = function(name, fn, chainingBehavior) {
        util2.addChainableMethod(this.prototype, name, fn, chainingBehavior);
      };
      Assertion.overwriteProperty = function(name, fn) {
        util2.overwriteProperty(this.prototype, name, fn);
      };
      Assertion.overwriteMethod = function(name, fn) {
        util2.overwriteMethod(this.prototype, name, fn);
      };
      Assertion.overwriteChainableMethod = function(name, fn, chainingBehavior) {
        util2.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);
      };
      Assertion.prototype.assert = function(expr, msg, negateMsg, expected, _actual, showDiff) {
        var ok = util2.test(this, arguments);
        if (false !== showDiff)
          showDiff = true;
        if (void 0 === expected && void 0 === _actual)
          showDiff = false;
        if (true !== config.showDiff)
          showDiff = false;
        if (!ok) {
          msg = util2.getMessage(this, arguments);
          var actual = util2.getActual(this, arguments);
          var assertionErrorObjectProperties = {
            actual,
            expected,
            showDiff
          };
          var operator = util2.getOperator(this, arguments);
          if (operator) {
            assertionErrorObjectProperties.operator = operator;
          }
          throw new AssertionError3(
            msg,
            assertionErrorObjectProperties,
            config.includeStack ? this.assert : flag12(this, "ssfi")
          );
        }
      };
      Object.defineProperty(
        Assertion.prototype,
        "_obj",
        {
          get: function() {
            return flag12(this, "object");
          },
          set: function(val) {
            flag12(this, "object", val);
          }
        }
      );
    };
    assertion_default = module107.exports;
  }
});
var flag_exports = {};
__export75(flag_exports, {
  default: () => flag_default
});
var exports112;
var module112;
var flag_default;
var init_flag = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/flag.js"() {
    exports112 = {};
    module112 = {
      get exports() {
        return exports112;
      },
      set exports(value) {
        exports112 = value;
      }
    };
    module112.exports = function flag(obj, key, value) {
      var flags = obj.__flags || (obj.__flags = /* @__PURE__ */ Object.create(null));
      if (arguments.length === 3) {
        flags[key] = value;
      } else {
        return flags[key];
      }
    };
    flag_default = module112.exports;
  }
});
var type_detect_exports = {};
__export75(type_detect_exports, {
  default: () => type_detect_default
});
var __umdGlobal2;
var __umdExports2;
var __umdRoot2;
var __umdFunction2;
var type_detect_default;
var init_type_detect = __esm({
  "../../../../node_modules/.store/type-detect-npm-4.0.8-8d8127b901/package/type-detect.js"() {
    __umdGlobal2 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global !== "undefined" && global || typeof globalThis !== "undefined" && globalThis || {};
    __umdExports2 = [];
    __umdRoot2 = new Proxy(__umdGlobal2, {
      get: function(target, name) {
        var value = Reflect.get(target, name);
        if (__umdExports2.indexOf(name) !== -1) {
          return value;
        }
        if (typeof value === "function" && !value.prototype) {
          return value.bind(__umdGlobal2);
        }
        return value;
      },
      set: function(target, name, value) {
        __umdExports2.push(name);
        return Reflect.set(target, name, value);
      }
    });
    __umdFunction2 = function ProxyFunction2(code) {
      return __umdGlobal2.Function(code).bind(__umdRoot2);
    };
    __umdFunction2.prototype = Function.prototype;
    (function(window2, global302, globalThis2, self2, module452, exports452, Function2) {
      (function(global312, factory) {
        typeof exports452 === "object" && typeof module452 !== "undefined" ? module452.exports = factory() : typeof define === "function" && define.amd ? define(factory) : global312.typeDetect = factory();
      })(this || __umdGlobal2, function() {
        var promiseExists = typeof Promise === "function";
        var globalObject = typeof self2 === "object" ? self2 : global302;
        var symbolExists = typeof Symbol !== "undefined";
        var mapExists = typeof Map !== "undefined";
        var setExists = typeof Set !== "undefined";
        var weakMapExists = typeof WeakMap !== "undefined";
        var weakSetExists = typeof WeakSet !== "undefined";
        var dataViewExists = typeof DataView !== "undefined";
        var symbolIteratorExists = symbolExists && typeof Symbol.iterator !== "undefined";
        var symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== "undefined";
        var setEntriesExists = setExists && typeof Set.prototype.entries === "function";
        var mapEntriesExists = mapExists && typeof Map.prototype.entries === "function";
        var setIteratorPrototype = setEntriesExists && Object.getPrototypeOf((/* @__PURE__ */ new Set()).entries());
        var mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf((/* @__PURE__ */ new Map()).entries());
        var arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === "function";
        var arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());
        var stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === "function";
        var stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(""[Symbol.iterator]());
        var toStringLeftSliceLength = 8;
        var toStringRightSliceLength = -1;
        function typeDetect(obj) {
          var typeofObj = typeof obj;
          if (typeofObj !== "object") {
            return typeofObj;
          }
          if (obj === null) {
            return "null";
          }
          if (obj === globalObject) {
            return "global";
          }
          if (Array.isArray(obj) && (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))) {
            return "Array";
          }
          if (typeof window2 === "object" && window2 !== null) {
            if (typeof window2.location === "object" && obj === window2.location) {
              return "Location";
            }
            if (typeof window2.document === "object" && obj === window2.document) {
              return "Document";
            }
            if (typeof window2.navigator === "object") {
              if (typeof window2.navigator.mimeTypes === "object" && obj === window2.navigator.mimeTypes) {
                return "MimeTypeArray";
              }
              if (typeof window2.navigator.plugins === "object" && obj === window2.navigator.plugins) {
                return "PluginArray";
              }
            }
            if ((typeof window2.HTMLElement === "function" || typeof window2.HTMLElement === "object") && obj instanceof window2.HTMLElement) {
              if (obj.tagName === "BLOCKQUOTE") {
                return "HTMLQuoteElement";
              }
              if (obj.tagName === "TD") {
                return "HTMLTableDataCellElement";
              }
              if (obj.tagName === "TH") {
                return "HTMLTableHeaderCellElement";
              }
            }
          }
          var stringTag = symbolToStringTagExists && obj[Symbol.toStringTag];
          if (typeof stringTag === "string") {
            return stringTag;
          }
          var objPrototype = Object.getPrototypeOf(obj);
          if (objPrototype === RegExp.prototype) {
            return "RegExp";
          }
          if (objPrototype === Date.prototype) {
            return "Date";
          }
          if (promiseExists && objPrototype === Promise.prototype) {
            return "Promise";
          }
          if (setExists && objPrototype === Set.prototype) {
            return "Set";
          }
          if (mapExists && objPrototype === Map.prototype) {
            return "Map";
          }
          if (weakSetExists && objPrototype === WeakSet.prototype) {
            return "WeakSet";
          }
          if (weakMapExists && objPrototype === WeakMap.prototype) {
            return "WeakMap";
          }
          if (dataViewExists && objPrototype === DataView.prototype) {
            return "DataView";
          }
          if (mapExists && objPrototype === mapIteratorPrototype) {
            return "Map Iterator";
          }
          if (setExists && objPrototype === setIteratorPrototype) {
            return "Set Iterator";
          }
          if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {
            return "Array Iterator";
          }
          if (stringIteratorExists && objPrototype === stringIteratorPrototype) {
            return "String Iterator";
          }
          if (objPrototype === null) {
            return "Object";
          }
          return Object.prototype.toString.call(obj).slice(toStringLeftSliceLength, toStringRightSliceLength);
        }
        return typeDetect;
      });
    }).call(__umdRoot2, __umdRoot2, __umdRoot2, __umdRoot2, __umdRoot2, void 0, void 0, __umdFunction2);
    type_detect_default = __umdExports2.length !== 1 && __umdRoot2[__umdExports2[0]] !== __umdRoot2[__umdExports2[1]] ? __umdRoot2 : __umdRoot2[__umdExports2[0]];
  }
});
var getOperator_exports = {};
__export75(getOperator_exports, {
  default: () => getOperator_default
});
function $$cjs_default$$510(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global610 !== "undefined" && global610 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
function isObjectType(obj) {
  var objectType = type(obj);
  var objectTypes = ["Array", "Object", "function"];
  return objectTypes.indexOf(objectType) !== -1;
}
var global610;
var exports122;
var module122;
var type;
var flag2;
var getOperator_default;
var init_getOperator = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getOperator.js"() {
    init_flag();
    init_type_detect();
    global610 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global610 !== "undefined" && global610 || typeof globalThis !== "undefined" && globalThis || {};
    exports122 = {};
    module122 = {
      get exports() {
        return exports122;
      },
      set exports(value) {
        exports122 = value;
      }
    };
    type = $$cjs_default$$510(typeof type_detect_exports !== "undefined" ? type_detect_exports : {});
    flag2 = $$cjs_default$$510(typeof flag_exports !== "undefined" ? flag_exports : {});
    module122.exports = function getOperator(obj, args) {
      var operator = flag2(obj, "operator");
      var negate = flag2(obj, "negate");
      var expected = args[3];
      var msg = negate ? args[2] : args[1];
      if (operator) {
        return operator;
      }
      if (typeof msg === "function")
        msg = msg();
      msg = msg || "";
      if (!msg) {
        return void 0;
      }
      if (/\shave\s/.test(msg)) {
        return void 0;
      }
      var isObject2 = isObjectType(expected);
      if (/\snot\s/.test(msg)) {
        return isObject2 ? "notDeepStrictEqual" : "notStrictEqual";
      }
      return isObject2 ? "deepStrictEqual" : "strictEqual";
    };
    getOperator_default = module122.exports;
  }
});
var isNaN_exports = {};
__export75(isNaN_exports, {
  default: () => isNaN_default
});
function isNaN2(value) {
  return value !== value;
}
var exports132;
var module132;
var isNaN_default;
var init_isNaN = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/isNaN.js"() {
    exports132 = {};
    module132 = {
      get exports() {
        return exports132;
      },
      set exports(value) {
        exports132 = value;
      }
    };
    module132.exports = Number.isNaN || isNaN2;
    isNaN_default = module132.exports;
  }
});
var isProxyEnabled_exports = {};
__export75(isProxyEnabled_exports, {
  default: () => isProxyEnabled_default
});
function $$cjs_default$$610(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global77 !== "undefined" && global77 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global77;
var exports142;
var module142;
var config2;
var isProxyEnabled_default;
var init_isProxyEnabled = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/isProxyEnabled.js"() {
    init_config();
    global77 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global77 !== "undefined" && global77 || typeof globalThis !== "undefined" && globalThis || {};
    exports142 = {};
    module142 = {
      get exports() {
        return exports142;
      },
      set exports(value) {
        exports142 = value;
      }
    };
    config2 = $$cjs_default$$610(typeof config_exports !== "undefined" ? config_exports : {});
    module142.exports = function isProxyEnabled() {
      return config2.useProxy && typeof Proxy !== "undefined" && typeof Reflect !== "undefined";
    };
    isProxyEnabled_default = module142.exports;
  }
});
var addLengthGuard_exports = {};
__export75(addLengthGuard_exports, {
  default: () => addLengthGuard_default
});
var exports152;
var module152;
var fnLengthDesc;
var addLengthGuard_default;
var init_addLengthGuard = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addLengthGuard.js"() {
    exports152 = {};
    module152 = {
      get exports() {
        return exports152;
      },
      set exports(value) {
        exports152 = value;
      }
    };
    fnLengthDesc = Object.getOwnPropertyDescriptor(function() {
    }, "length");
    module152.exports = function addLengthGuard(fn, assertionName, isChainable) {
      if (!fnLengthDesc.configurable)
        return fn;
      Object.defineProperty(fn, "length", {
        get: function() {
          if (isChainable) {
            throw Error("Invalid Chai property: " + assertionName + '.length. Due to a compatibility issue, "length" cannot directly follow "' + assertionName + '". Use "' + assertionName + '.lengthOf" instead.');
          }
          throw Error("Invalid Chai property: " + assertionName + '.length. See docs for proper usage of "' + assertionName + '".');
        }
      });
      return fn;
    };
    addLengthGuard_default = module152.exports;
  }
});
var getProperties_exports = {};
__export75(getProperties_exports, {
  default: () => getProperties_default
});
var exports162;
var module162;
var getProperties_default;
var init_getProperties = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getProperties.js"() {
    exports162 = {};
    module162 = {
      get exports() {
        return exports162;
      },
      set exports(value) {
        exports162 = value;
      }
    };
    module162.exports = function getProperties(object2) {
      var result = Object.getOwnPropertyNames(object2);
      function addProperty2(property) {
        if (result.indexOf(property) === -1) {
          result.push(property);
        }
      }
      var proto = Object.getPrototypeOf(object2);
      while (proto !== null) {
        Object.getOwnPropertyNames(proto).forEach(addProperty2);
        proto = Object.getPrototypeOf(proto);
      }
      return result;
    };
    getProperties_default = module162.exports;
  }
});
var proxify_exports = {};
__export75(proxify_exports, {
  default: () => proxify_default
});
function $$cjs_default$$76(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global82 !== "undefined" && global82 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
function stringDistanceCapped(strA, strB, cap) {
  if (Math.abs(strA.length - strB.length) >= cap) {
    return cap;
  }
  var memo = [];
  for (var i2 = 0; i2 <= strA.length; i2++) {
    memo[i2] = Array(strB.length + 1).fill(0);
    memo[i2][0] = i2;
  }
  for (var j2 = 0; j2 < strB.length; j2++) {
    memo[0][j2] = j2;
  }
  for (var i2 = 1; i2 <= strA.length; i2++) {
    var ch = strA.charCodeAt(i2 - 1);
    for (var j2 = 1; j2 <= strB.length; j2++) {
      if (Math.abs(i2 - j2) >= cap) {
        memo[i2][j2] = cap;
        continue;
      }
      memo[i2][j2] = Math.min(
        memo[i2 - 1][j2] + 1,
        memo[i2][j2 - 1] + 1,
        memo[i2 - 1][j2 - 1] + (ch === strB.charCodeAt(j2 - 1) ? 0 : 1)
      );
    }
  }
  return memo[strA.length][strB.length];
}
var global82;
var exports172;
var module172;
var config3;
var flag3;
var getProperties2;
var isProxyEnabled2;
var builtins;
var proxify_default;
var init_proxify = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/proxify.js"() {
    init_isProxyEnabled();
    init_getProperties();
    init_flag();
    init_config();
    global82 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global82 !== "undefined" && global82 || typeof globalThis !== "undefined" && globalThis || {};
    exports172 = {};
    module172 = {
      get exports() {
        return exports172;
      },
      set exports(value) {
        exports172 = value;
      }
    };
    config3 = $$cjs_default$$76(typeof config_exports !== "undefined" ? config_exports : {});
    flag3 = $$cjs_default$$76(typeof flag_exports !== "undefined" ? flag_exports : {});
    getProperties2 = $$cjs_default$$76(typeof getProperties_exports !== "undefined" ? getProperties_exports : {});
    isProxyEnabled2 = $$cjs_default$$76(typeof isProxyEnabled_exports !== "undefined" ? isProxyEnabled_exports : {});
    builtins = ["__flags", "__methods", "_obj", "assert"];
    module172.exports = function proxify(obj, nonChainableMethodName) {
      if (!isProxyEnabled2())
        return obj;
      return new Proxy(obj, {
        get: function proxyGetter(target, property) {
          if (typeof property === "string" && config3.proxyExcludedKeys.indexOf(property) === -1 && !Reflect.has(target, property)) {
            if (nonChainableMethodName) {
              throw Error("Invalid Chai property: " + nonChainableMethodName + "." + property + '. See docs for proper usage of "' + nonChainableMethodName + '".');
            }
            var suggestion = null;
            var suggestionDistance = 4;
            getProperties2(target).forEach(function(prop) {
              if (!Object.prototype.hasOwnProperty(prop) && builtins.indexOf(prop) === -1) {
                var dist = stringDistanceCapped(
                  property,
                  prop,
                  suggestionDistance
                );
                if (dist < suggestionDistance) {
                  suggestion = prop;
                  suggestionDistance = dist;
                }
              }
            });
            if (suggestion !== null) {
              throw Error("Invalid Chai property: " + property + '. Did you mean "' + suggestion + '"?');
            } else {
              throw Error("Invalid Chai property: " + property);
            }
          }
          if (builtins.indexOf(property) === -1 && !flag3(target, "lockSsfi")) {
            flag3(target, "ssfi", proxyGetter);
          }
          return Reflect.get(target, property);
        }
      });
    };
    proxify_default = module172.exports;
  }
});
var package_exports2 = {};
__export75(package_exports2, {
  default: () => package_default2
});
function getFuncName(aFunc) {
  if (typeof aFunc !== "function") {
    return null;
  }
  var name = "";
  if (typeof Function.prototype.name === "undefined" && typeof aFunc.name === "undefined") {
    var functionSource = toString2.call(aFunc);
    if (functionSource.indexOf("(") > maxFunctionSourceLength) {
      return name;
    }
    var match = functionSource.match(functionNameMatch);
    if (match) {
      name = match[1];
    }
  } else {
    name = aFunc.name;
  }
  return name;
}
var exports182;
var module182;
var toString2;
var functionNameMatch;
var maxFunctionSourceLength;
var package_default2;
var init_package = __esm({
  "../../../../node_modules/.store/get-func-name-npm-2.0.2-409dbe3703/package/index.js"() {
    exports182 = {};
    module182 = {
      get exports() {
        return exports182;
      },
      set exports(value) {
        exports182 = value;
      }
    };
    toString2 = Function.prototype.toString;
    functionNameMatch = /\s*function(?:\s|\s*\/\*[^(?:*\/)]+\*\/\s*)*([^\s\(\/]+)/;
    maxFunctionSourceLength = 512;
    module182.exports = getFuncName;
    package_default2 = module182.exports;
  }
});
var package_exports3 = {};
__export75(package_exports3, {
  compatibleConstructor: () => __export1512,
  compatibleInstance: () => __export0610,
  compatibleMessage: () => __export235,
  default: () => package_default3,
  getConstructorName: () => __export423,
  getMessage: () => __export325
});
function $$cjs_default$$82(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global92 !== "undefined" && global92 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
function compatibleInstance(thrown, errorLike) {
  return errorLike instanceof Error && thrown === errorLike;
}
function compatibleConstructor(thrown, errorLike) {
  if (errorLike instanceof Error) {
    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;
  } else if (errorLike.prototype instanceof Error || errorLike === Error) {
    return thrown.constructor === errorLike || thrown instanceof errorLike;
  }
  return false;
}
function compatibleMessage(thrown, errMatcher) {
  var comparisonString = typeof thrown === "string" ? thrown : thrown.message;
  if (errMatcher instanceof RegExp) {
    return errMatcher.test(comparisonString);
  } else if (typeof errMatcher === "string") {
    return comparisonString.indexOf(errMatcher) !== -1;
  }
  return false;
}
function getConstructorName(errorLike) {
  var constructorName = errorLike;
  if (errorLike instanceof Error) {
    constructorName = getFunctionName(errorLike.constructor);
  } else if (typeof errorLike === "function") {
    constructorName = getFunctionName(errorLike);
    if (constructorName === "") {
      var newConstructorName = getFunctionName(new errorLike());
      constructorName = newConstructorName || constructorName;
    }
  }
  return constructorName;
}
function getMessage(errorLike) {
  var msg = "";
  if (errorLike && errorLike.message) {
    msg = errorLike.message;
  } else if (typeof errorLike === "string") {
    msg = errorLike;
  }
  return msg;
}
var global92;
var exports192;
var module192;
var getFunctionName;
var __export0610;
var __export1512;
var __export235;
var __export325;
var __export423;
var package_default3;
var init_package2 = __esm({
  "../../../../node_modules/.store/check-error-npm-1.0.3-137994eabc/package/index.js"() {
    init_package();
    global92 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global92 !== "undefined" && global92 || typeof globalThis !== "undefined" && globalThis || {};
    exports192 = {};
    module192 = {
      get exports() {
        return exports192;
      },
      set exports(value) {
        exports192 = value;
      }
    };
    getFunctionName = $$cjs_default$$82(typeof package_exports2 !== "undefined" ? package_exports2 : {});
    module192.exports = {
      compatibleInstance,
      compatibleConstructor,
      compatibleMessage,
      getMessage,
      getConstructorName
    };
    if (Object.isExtensible(module192.exports) && Object.keys(module192.exports).length === 5) {
      __export0610 = module192.exports["compatibleInstance"];
      __export1512 = module192.exports["compatibleConstructor"];
      __export235 = module192.exports["compatibleMessage"];
      __export325 = module192.exports["getMessage"];
      __export423 = module192.exports["getConstructorName"];
    }
    package_default3 = module192.exports;
  }
});
var getOwnEnumerablePropertySymbols_exports = {};
__export75(getOwnEnumerablePropertySymbols_exports, {
  default: () => getOwnEnumerablePropertySymbols_default
});
var exports202;
var module202;
var getOwnEnumerablePropertySymbols_default;
var init_getOwnEnumerablePropertySymbols = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getOwnEnumerablePropertySymbols.js"() {
    exports202 = {};
    module202 = {
      get exports() {
        return exports202;
      },
      set exports(value) {
        exports202 = value;
      }
    };
    module202.exports = function getOwnEnumerablePropertySymbols(obj) {
      if (typeof Object.getOwnPropertySymbols !== "function")
        return [];
      return Object.getOwnPropertySymbols(obj).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(obj, sym).enumerable;
      });
    };
    getOwnEnumerablePropertySymbols_default = module202.exports;
  }
});
var getOwnEnumerableProperties_exports = {};
__export75(getOwnEnumerableProperties_exports, {
  default: () => getOwnEnumerableProperties_default
});
function $$cjs_default$$92(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global102 !== "undefined" && global102 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global102;
var exports212;
var module212;
var getOwnEnumerablePropertySymbols2;
var getOwnEnumerableProperties_default;
var init_getOwnEnumerableProperties = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getOwnEnumerableProperties.js"() {
    init_getOwnEnumerablePropertySymbols();
    global102 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global102 !== "undefined" && global102 || typeof globalThis !== "undefined" && globalThis || {};
    exports212 = {};
    module212 = {
      get exports() {
        return exports212;
      },
      set exports(value) {
        exports212 = value;
      }
    };
    getOwnEnumerablePropertySymbols2 = $$cjs_default$$92(typeof getOwnEnumerablePropertySymbols_exports !== "undefined" ? getOwnEnumerablePropertySymbols_exports : {});
    module212.exports = function getOwnEnumerableProperties(obj) {
      return Object.keys(obj).concat(getOwnEnumerablePropertySymbols2(obj));
    };
    getOwnEnumerableProperties_default = module212.exports;
  }
});
function colorise(value, styleType) {
  const color = ansiColors[styles[styleType]] || ansiColors[styleType];
  if (!color) {
    return String(value);
  }
  return `\x1B[${color[0]}m${String(value)}\x1B[${color[1]}m`;
}
function normaliseOptions({
  showHidden = false,
  depth = 2,
  colors = false,
  customInspect = true,
  showProxy = false,
  maxArrayLength = Infinity,
  breakLength = Infinity,
  seen = [],
  // eslint-disable-next-line no-shadow
  truncate: truncate2 = Infinity,
  stylize = String
} = {}) {
  const options = {
    showHidden: Boolean(showHidden),
    depth: Number(depth),
    colors: Boolean(colors),
    customInspect: Boolean(customInspect),
    showProxy: Boolean(showProxy),
    maxArrayLength: Number(maxArrayLength),
    breakLength: Number(breakLength),
    truncate: Number(truncate2),
    seen,
    stylize
  };
  if (options.colors) {
    options.stylize = colorise;
  }
  return options;
}
function truncate(string, length, tail = truncator) {
  string = String(string);
  const tailLength = tail.length;
  const stringLength = string.length;
  if (tailLength > length && stringLength > tailLength) {
    return tail;
  }
  if (stringLength > length && stringLength > tailLength) {
    return `${string.slice(0, length - tailLength)}${tail}`;
  }
  return string;
}
function inspectList(list, options, inspectItem, separator = ", ") {
  inspectItem = inspectItem || options.inspect;
  const size = list.length;
  if (size === 0)
    return "";
  const originalLength = options.truncate;
  let output = "";
  let peek = "";
  let truncated = "";
  for (let i2 = 0; i2 < size; i2 += 1) {
    const last = i2 + 1 === list.length;
    const secondToLast = i2 + 2 === list.length;
    truncated = `${truncator}(${list.length - i2})`;
    const value = list[i2];
    options.truncate = originalLength - output.length - (last ? 0 : separator.length);
    const string = peek || inspectItem(value, options) + (last ? "" : separator);
    const nextLength = output.length + string.length;
    const truncatedLength = nextLength + truncated.length;
    if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {
      break;
    }
    if (!last && !secondToLast && truncatedLength > originalLength) {
      break;
    }
    peek = last ? "" : inspectItem(list[i2 + 1], options) + (secondToLast ? "" : separator);
    if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {
      break;
    }
    output += string;
    if (!last && !secondToLast && nextLength + peek.length >= originalLength) {
      truncated = `${truncator}(${list.length - i2 - 1})`;
      break;
    }
    truncated = "";
  }
  return `${output}${truncated}`;
}
function quoteComplexKey(key) {
  if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {
    return key;
  }
  return JSON.stringify(key).replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
}
function inspectProperty([key, value], options) {
  options.truncate -= 2;
  if (typeof key === "string") {
    key = quoteComplexKey(key);
  } else if (typeof key !== "number") {
    key = `[${options.inspect(key, options)}]`;
  }
  options.truncate -= key.length;
  value = options.inspect(value, options);
  return `${key}: ${value}`;
}
var ansiColors;
var styles;
var truncator;
var init_helpers = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/helpers.js"() {
    ansiColors = {
      bold: ["1", "22"],
      dim: ["2", "22"],
      italic: ["3", "23"],
      underline: ["4", "24"],
      // 5 & 6 are blinking
      inverse: ["7", "27"],
      hidden: ["8", "28"],
      strike: ["9", "29"],
      // 10-20 are fonts
      // 21-29 are resets for 1-9
      black: ["30", "39"],
      red: ["31", "39"],
      green: ["32", "39"],
      yellow: ["33", "39"],
      blue: ["34", "39"],
      magenta: ["35", "39"],
      cyan: ["36", "39"],
      white: ["37", "39"],
      brightblack: ["30;1", "39"],
      brightred: ["31;1", "39"],
      brightgreen: ["32;1", "39"],
      brightyellow: ["33;1", "39"],
      brightblue: ["34;1", "39"],
      brightmagenta: ["35;1", "39"],
      brightcyan: ["36;1", "39"],
      brightwhite: ["37;1", "39"],
      grey: ["90", "39"]
    };
    styles = {
      special: "cyan",
      number: "yellow",
      bigint: "yellow",
      boolean: "yellow",
      undefined: "grey",
      null: "bold",
      string: "green",
      symbol: "green",
      date: "magenta",
      regexp: "red"
    };
    truncator = "\u2026";
  }
});
function inspectArray(array2, options) {
  const nonIndexProperties = Object.keys(array2).slice(array2.length);
  if (!array2.length && !nonIndexProperties.length)
    return "[]";
  options.truncate -= 4;
  const listContents = inspectList(array2, options);
  options.truncate -= listContents.length;
  let propertyContents = "";
  if (nonIndexProperties.length) {
    propertyContents = inspectList(
      nonIndexProperties.map((key) => [key, array2[key]]),
      options,
      inspectProperty
    );
  }
  return `[ ${listContents}${propertyContents ? `, ${propertyContents}` : ""} ]`;
}
var init_array = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/array.js"() {
    init_helpers();
  }
});
function inspectTypedArray(array2, options) {
  const name = getArrayName(array2);
  options.truncate -= name.length + 4;
  const nonIndexProperties = Object.keys(array2).slice(array2.length);
  if (!array2.length && !nonIndexProperties.length)
    return `${name}[]`;
  let output = "";
  for (let i2 = 0; i2 < array2.length; i2++) {
    const string = `${options.stylize(truncate(array2[i2], options.truncate), "number")}${i2 === array2.length - 1 ? "" : ", "}`;
    options.truncate -= string.length;
    if (array2[i2] !== array2.length && options.truncate <= 3) {
      output += `${truncator}(${array2.length - array2[i2] + 1})`;
      break;
    }
    output += string;
  }
  let propertyContents = "";
  if (nonIndexProperties.length) {
    propertyContents = inspectList(
      nonIndexProperties.map((key) => [key, array2[key]]),
      options,
      inspectProperty
    );
  }
  return `${name}[ ${output}${propertyContents ? `, ${propertyContents}` : ""} ]`;
}
var getArrayName;
var init_typedarray = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/typedarray.js"() {
    init_package();
    init_helpers();
    getArrayName = (array2) => {
      if (typeof Buffer === "function" && array2 instanceof Buffer) {
        return "Buffer";
      }
      if (array2[Symbol.toStringTag]) {
        return array2[Symbol.toStringTag];
      }
      return package_default2(array2.constructor);
    };
  }
});
function inspectDate(dateObject, options) {
  const stringRepresentation = dateObject.toJSON();
  if (stringRepresentation === null) {
    return "Invalid Date";
  }
  const split = stringRepresentation.split("T");
  const date = split[0];
  return options.stylize(`${date}T${truncate(split[1], options.truncate - date.length - 1)}`, "date");
}
var init_date = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/date.js"() {
    init_helpers();
  }
});
function inspectFunction(func, options) {
  const name = package_default2(func);
  if (!name) {
    return options.stylize("[Function]", "special");
  }
  return options.stylize(`[Function ${truncate(name, options.truncate - 11)}]`, "special");
}
var init_function = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/function.js"() {
    init_package();
    init_helpers();
  }
});
function inspectMapEntry([key, value], options) {
  options.truncate -= 4;
  key = options.inspect(key, options);
  options.truncate -= key.length;
  value = options.inspect(value, options);
  return `${key} => ${value}`;
}
function mapToEntries(map2) {
  const entries = [];
  map2.forEach((value, key) => {
    entries.push([key, value]);
  });
  return entries;
}
function inspectMap(map2, options) {
  const size = map2.size - 1;
  if (size <= 0) {
    return "Map{}";
  }
  options.truncate -= 7;
  return `Map{ ${inspectList(mapToEntries(map2), options, inspectMapEntry)} }`;
}
var init_map = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/map.js"() {
    init_helpers();
  }
});
function inspectNumber(number, options) {
  if (isNaN22(number)) {
    return options.stylize("NaN", "number");
  }
  if (number === Infinity) {
    return options.stylize("Infinity", "number");
  }
  if (number === -Infinity) {
    return options.stylize("-Infinity", "number");
  }
  if (number === 0) {
    return options.stylize(1 / number === Infinity ? "+0" : "-0", "number");
  }
  return options.stylize(truncate(number, options.truncate), "number");
}
var isNaN22;
var init_number = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/number.js"() {
    init_helpers();
    isNaN22 = Number.isNaN || ((i2) => i2 !== i2);
  }
});
function inspectBigInt(number, options) {
  let nums = truncate(number.toString(), options.truncate - 1);
  if (nums !== truncator)
    nums += "n";
  return options.stylize(nums, "bigint");
}
var init_bigint = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/bigint.js"() {
    init_helpers();
  }
});
function inspectRegExp(value, options) {
  const flags = value.toString().split("/")[2];
  const sourceLength = options.truncate - (2 + flags.length);
  const source = value.source;
  return options.stylize(`/${truncate(source, sourceLength)}/${flags}`, "regexp");
}
var init_regexp = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/regexp.js"() {
    init_helpers();
  }
});
function arrayFromSet(set32) {
  const values = [];
  set32.forEach((value) => {
    values.push(value);
  });
  return values;
}
function inspectSet(set32, options) {
  if (set32.size === 0)
    return "Set{}";
  options.truncate -= 7;
  return `Set{ ${inspectList(arrayFromSet(set32), options)} }`;
}
var init_set = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/set.js"() {
    init_helpers();
  }
});
function escape(char) {
  return escapeCharacters[char] || `\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`;
}
function inspectString(string, options) {
  if (stringEscapeChars.test(string)) {
    string = string.replace(stringEscapeChars, escape);
  }
  return options.stylize(`'${truncate(string, options.truncate - 2)}'`, "string");
}
var stringEscapeChars;
var escapeCharacters;
var hex;
var unicodeLength;
var init_string = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/string.js"() {
    init_helpers();
    stringEscapeChars = new RegExp(
      "['\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]",
      "g"
    );
    escapeCharacters = {
      "\b": "\\b",
      "	": "\\t",
      "\n": "\\n",
      "\f": "\\f",
      "\r": "\\r",
      "'": "\\'",
      "\\": "\\\\"
    };
    hex = 16;
    unicodeLength = 4;
  }
});
function inspectSymbol(value) {
  if ("description" in Symbol.prototype) {
    return value.description ? `Symbol(${value.description})` : "Symbol()";
  }
  return value.toString();
}
var init_symbol = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/symbol.js"() {
  }
});
var getPromiseValue;
var promise_default;
var init_promise = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/promise.js"() {
    getPromiseValue = () => "Promise{\u2026}";
    try {
      const { getPromiseDetails, kPending, kRejected } = process.binding("util");
      if (Array.isArray(getPromiseDetails(Promise.resolve()))) {
        getPromiseValue = (value, options) => {
          const [state, innerValue] = getPromiseDetails(value);
          if (state === kPending) {
            return "Promise{<pending>}";
          }
          return `Promise${state === kRejected ? "!" : ""}{${options.inspect(innerValue, options)}}`;
        };
      }
    } catch (notNode) {
    }
    promise_default = getPromiseValue;
  }
});
function inspectObject(object2, options) {
  const properties = Object.getOwnPropertyNames(object2);
  const symbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(object2) : [];
  if (properties.length === 0 && symbols.length === 0) {
    return "{}";
  }
  options.truncate -= 4;
  options.seen = options.seen || [];
  if (options.seen.indexOf(object2) >= 0) {
    return "[Circular]";
  }
  options.seen.push(object2);
  const propertyContents = inspectList(
    properties.map((key) => [key, object2[key]]),
    options,
    inspectProperty
  );
  const symbolContents = inspectList(
    symbols.map((key) => [key, object2[key]]),
    options,
    inspectProperty
  );
  options.seen.pop();
  let sep = "";
  if (propertyContents && symbolContents) {
    sep = ", ";
  }
  return `{ ${propertyContents}${sep}${symbolContents} }`;
}
var init_object = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/object.js"() {
    init_helpers();
  }
});
function inspectClass(value, options) {
  let name = "";
  if (toStringTag && toStringTag in value) {
    name = value[toStringTag];
  }
  name = name || package_default2(value.constructor);
  if (!name || name === "_class") {
    name = "<Anonymous Class>";
  }
  options.truncate -= name.length;
  return `${name}${inspectObject(value, options)}`;
}
var toStringTag;
var init_class = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/class.js"() {
    init_package();
    init_object();
    toStringTag = typeof Symbol !== "undefined" && Symbol.toStringTag ? Symbol.toStringTag : false;
  }
});
function inspectArguments(args, options) {
  if (args.length === 0)
    return "Arguments[]";
  options.truncate -= 13;
  return `Arguments[ ${inspectList(args, options)} ]`;
}
var init_arguments = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/arguments.js"() {
    init_helpers();
  }
});
function inspectObject2(error, options) {
  const properties = Object.getOwnPropertyNames(error).filter((key) => errorKeys.indexOf(key) === -1);
  const name = error.name;
  options.truncate -= name.length;
  let message = "";
  if (typeof error.message === "string") {
    message = truncate(error.message, options.truncate);
  } else {
    properties.unshift("message");
  }
  message = message ? `: ${message}` : "";
  options.truncate -= message.length + 5;
  const propertyContents = inspectList(
    properties.map((key) => [key, error[key]]),
    options,
    inspectProperty
  );
  return `${name}${message}${propertyContents ? ` { ${propertyContents} }` : ""}`;
}
var errorKeys;
var init_error = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/error.js"() {
    init_helpers();
    errorKeys = [
      "stack",
      "line",
      "column",
      "name",
      "message",
      "fileName",
      "lineNumber",
      "columnNumber",
      "number",
      "description"
    ];
  }
});
function inspectAttribute([key, value], options) {
  options.truncate -= 3;
  if (!value) {
    return `${options.stylize(key, "yellow")}`;
  }
  return `${options.stylize(key, "yellow")}=${options.stylize(`"${value}"`, "string")}`;
}
function inspectHTMLCollection(collection, options) {
  return inspectList(collection, options, inspectHTML, "\n");
}
function inspectHTML(element, options) {
  const properties = element.getAttributeNames();
  const name = element.tagName.toLowerCase();
  const head = options.stylize(`<${name}`, "special");
  const headClose = options.stylize(`>`, "special");
  const tail = options.stylize(`</${name}>`, "special");
  options.truncate -= name.length * 2 + 5;
  let propertyContents = "";
  if (properties.length > 0) {
    propertyContents += " ";
    propertyContents += inspectList(
      properties.map((key) => [key, element.getAttribute(key)]),
      options,
      inspectAttribute,
      " "
    );
  }
  options.truncate -= propertyContents.length;
  const truncate2 = options.truncate;
  let children = inspectHTMLCollection(element.children, options);
  if (children && children.length > truncate2) {
    children = `${truncator}(${element.children.length})`;
  }
  return `${head}${propertyContents}${headClose}${children}${tail}`;
}
var init_html = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/lib/html.js"() {
    init_helpers();
  }
});
var package_exports4 = {};
__export75(package_exports4, {
  custom: () => custom,
  default: () => package_default4,
  inspect: () => inspect2,
  registerConstructor: () => registerConstructor,
  registerStringTag: () => registerStringTag
});
function FakeMap() {
  this.key = "chai/loupe__" + Math.random() + Date.now();
}
function inspect2(value, options) {
  options = normaliseOptions(options);
  options.inspect = inspect2;
  const { customInspect } = options;
  let type4 = value === null ? "null" : typeof value;
  if (type4 === "object") {
    type4 = toString22.call(value).slice(8, -1);
  }
  if (baseTypesMap[type4]) {
    return baseTypesMap[type4](value, options);
  }
  if (customInspect && value) {
    const output = inspectCustom(value, options, type4);
    if (output) {
      if (typeof output === "string")
        return output;
      return inspect2(output, options);
    }
  }
  const proto = value ? Object.getPrototypeOf(value) : false;
  if (proto === Object.prototype || proto === null) {
    return inspectObject(value, options);
  }
  if (value && typeof HTMLElement === "function" && value instanceof HTMLElement) {
    return inspectHTML(value, options);
  }
  if ("constructor" in value) {
    if (value.constructor !== Object) {
      return inspectClass(value, options);
    }
    return inspectObject(value, options);
  }
  if (value === Object(value)) {
    return inspectObject(value, options);
  }
  return options.stylize(String(value), type4);
}
function registerConstructor(constructor, inspector) {
  if (constructorMap.has(constructor)) {
    return false;
  }
  constructorMap.set(constructor, inspector);
  return true;
}
function registerStringTag(stringTag, inspector) {
  if (stringTag in stringTagMap) {
    return false;
  }
  stringTagMap[stringTag] = inspector;
  return true;
}
var symbolsSupported;
var chaiInspect;
var nodeInspect;
var constructorMap;
var stringTagMap;
var baseTypesMap;
var inspectCustom;
var toString22;
var custom;
var package_default4;
var init_package3 = __esm({
  "../../../../node_modules/.store/loupe-npm-2.3.7-f294c2ef33/package/index.js"() {
    init_array();
    init_typedarray();
    init_date();
    init_function();
    init_map();
    init_number();
    init_bigint();
    init_regexp();
    init_set();
    init_string();
    init_symbol();
    init_promise();
    init_class();
    init_object();
    init_arguments();
    init_error();
    init_html();
    init_helpers();
    symbolsSupported = typeof Symbol === "function" && typeof Symbol.for === "function";
    chaiInspect = symbolsSupported ? Symbol.for("chai/inspect") : "@@chai/inspect";
    nodeInspect = false;
    try {
      const nodeUtil = __require2("util");
      nodeInspect = nodeUtil.inspect ? nodeUtil.inspect.custom : false;
    } catch (noNodeInspect) {
      nodeInspect = false;
    }
    FakeMap.prototype = {
      // eslint-disable-next-line object-shorthand
      get: function get3(key) {
        return key[this.key];
      },
      // eslint-disable-next-line object-shorthand
      has: function has2(key) {
        return this.key in key;
      },
      // eslint-disable-next-line object-shorthand
      set: function set4(key, value) {
        if (Object.isExtensible(key)) {
          Object.defineProperty(key, this.key, {
            // eslint-disable-next-line object-shorthand
            value,
            configurable: true
          });
        }
      }
    };
    constructorMap = new (typeof WeakMap === "function" ? WeakMap : FakeMap)();
    stringTagMap = {};
    baseTypesMap = {
      undefined: (value, options) => options.stylize("undefined", "undefined"),
      null: (value, options) => options.stylize(null, "null"),
      boolean: (value, options) => options.stylize(value, "boolean"),
      Boolean: (value, options) => options.stylize(value, "boolean"),
      number: inspectNumber,
      Number: inspectNumber,
      bigint: inspectBigInt,
      BigInt: inspectBigInt,
      string: inspectString,
      String: inspectString,
      function: inspectFunction,
      Function: inspectFunction,
      symbol: inspectSymbol,
      // A Symbol polyfill will return `Symbol` not `symbol` from typedetect
      Symbol: inspectSymbol,
      Array: inspectArray,
      Date: inspectDate,
      Map: inspectMap,
      Set: inspectSet,
      RegExp: inspectRegExp,
      Promise: promise_default,
      // WeakSet, WeakMap are totally opaque to us
      WeakSet: (value, options) => options.stylize("WeakSet{\u2026}", "special"),
      WeakMap: (value, options) => options.stylize("WeakMap{\u2026}", "special"),
      Arguments: inspectArguments,
      Int8Array: inspectTypedArray,
      Uint8Array: inspectTypedArray,
      Uint8ClampedArray: inspectTypedArray,
      Int16Array: inspectTypedArray,
      Uint16Array: inspectTypedArray,
      Int32Array: inspectTypedArray,
      Uint32Array: inspectTypedArray,
      Float32Array: inspectTypedArray,
      Float64Array: inspectTypedArray,
      Generator: () => "",
      DataView: () => "",
      ArrayBuffer: () => "",
      Error: inspectObject2,
      HTMLCollection: inspectHTMLCollection,
      NodeList: inspectHTMLCollection
    };
    inspectCustom = (value, options, type4) => {
      if (chaiInspect in value && typeof value[chaiInspect] === "function") {
        return value[chaiInspect](options);
      }
      if (nodeInspect && nodeInspect in value && typeof value[nodeInspect] === "function") {
        return value[nodeInspect](options.depth, options);
      }
      if ("inspect" in value && typeof value.inspect === "function") {
        return value.inspect(options.depth, options);
      }
      if ("constructor" in value && constructorMap.has(value.constructor)) {
        return constructorMap.get(value.constructor)(value, options);
      }
      if (stringTagMap[type4]) {
        return stringTagMap[type4](value, options);
      }
      return "";
    };
    toString22 = Object.prototype.toString;
    custom = chaiInspect;
    package_default4 = inspect2;
  }
});
var inspect_exports = {};
__export75(inspect_exports, {
  default: () => inspect_default2
});
function $$cjs_default$$102(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global112 !== "undefined" && global112 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
function inspect3(obj, showHidden, depth, colors) {
  var options = {
    colors,
    depth: typeof depth === "undefined" ? 2 : depth,
    showHidden,
    truncate: config4.truncateThreshold ? config4.truncateThreshold : Infinity
  };
  return loupe.inspect(obj, options);
}
var global112;
var exports222;
var module222;
var loupe;
var config4;
var inspect_default2;
var init_inspect = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/inspect.js"() {
    init_config();
    init_package3();
    init_package();
    global112 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global112 !== "undefined" && global112 || typeof globalThis !== "undefined" && globalThis || {};
    exports222 = {};
    module222 = {
      get exports() {
        return exports222;
      },
      set exports(value) {
        exports222 = value;
      }
    };
    $$cjs_default$$102(typeof package_exports2 !== "undefined" ? package_exports2 : {});
    loupe = $$cjs_default$$102(typeof package_exports4 !== "undefined" ? package_exports4 : {});
    config4 = $$cjs_default$$102(typeof config_exports !== "undefined" ? config_exports : {});
    module222.exports = inspect3;
    inspect_default2 = module222.exports;
  }
});
var compareByInspect_exports = {};
__export75(compareByInspect_exports, {
  default: () => compareByInspect_default
});
function $$cjs_default$$112(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global122 !== "undefined" && global122 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global122;
var exports232;
var module232;
var inspect4;
var compareByInspect_default;
var init_compareByInspect = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/compareByInspect.js"() {
    init_inspect();
    global122 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global122 !== "undefined" && global122 || typeof globalThis !== "undefined" && globalThis || {};
    exports232 = {};
    module232 = {
      get exports() {
        return exports232;
      },
      set exports(value) {
        exports232 = value;
      }
    };
    inspect4 = $$cjs_default$$112(typeof inspect_exports !== "undefined" ? inspect_exports : {});
    module232.exports = function compareByInspect(a2, b2) {
      return inspect4(a2) < inspect4(b2) ? -1 : 1;
    };
    compareByInspect_default = module232.exports;
  }
});
var transferFlags_exports = {};
__export75(transferFlags_exports, {
  default: () => transferFlags_default
});
var exports242;
var module242;
var transferFlags_default;
var init_transferFlags = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/transferFlags.js"() {
    exports242 = {};
    module242 = {
      get exports() {
        return exports242;
      },
      set exports(value) {
        exports242 = value;
      }
    };
    module242.exports = function transferFlags(assertion2, object2, includeAll) {
      var flags = assertion2.__flags || (assertion2.__flags = /* @__PURE__ */ Object.create(null));
      if (!object2.__flags) {
        object2.__flags = /* @__PURE__ */ Object.create(null);
      }
      includeAll = arguments.length === 3 ? includeAll : true;
      for (var flag12 in flags) {
        if (includeAll || flag12 !== "object" && flag12 !== "ssfi" && flag12 !== "lockSsfi" && flag12 != "message") {
          object2.__flags[flag12] = flags[flag12];
        }
      }
    };
    transferFlags_default = module242.exports;
  }
});
var overwriteChainableMethod_exports = {};
__export75(overwriteChainableMethod_exports, {
  default: () => overwriteChainableMethod_default
});
function $$cjs_default$$122(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global132 !== "undefined" && global132 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global132;
var exports252;
var module252;
var chai;
var transferFlags2;
var overwriteChainableMethod_default;
var init_overwriteChainableMethod = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/overwriteChainableMethod.js"() {
    init_transferFlags();
    init_chai();
    global132 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global132 !== "undefined" && global132 || typeof globalThis !== "undefined" && globalThis || {};
    exports252 = {};
    module252 = {
      get exports() {
        return exports252;
      },
      set exports(value) {
        exports252 = value;
      }
    };
    chai = $$cjs_default$$122(typeof chai_exports !== "undefined" ? chai_exports : {});
    transferFlags2 = $$cjs_default$$122(typeof transferFlags_exports !== "undefined" ? transferFlags_exports : {});
    module252.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {
      var chainableBehavior = ctx.__methods[name];
      var _chainingBehavior = chainableBehavior.chainingBehavior;
      chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {
        var result = chainingBehavior(_chainingBehavior).call(this);
        if (result !== void 0) {
          return result;
        }
        var newAssertion = new chai.Assertion();
        transferFlags2(this, newAssertion);
        return newAssertion;
      };
      var _method = chainableBehavior.method;
      chainableBehavior.method = function overwritingChainableMethodWrapper() {
        var result = method(_method).apply(this, arguments);
        if (result !== void 0) {
          return result;
        }
        var newAssertion = new chai.Assertion();
        transferFlags2(this, newAssertion);
        return newAssertion;
      };
    };
    overwriteChainableMethod_default = module252.exports;
  }
});
var addChainableMethod_exports = {};
__export75(addChainableMethod_exports, {
  default: () => addChainableMethod_default
});
function $$cjs_default$$132(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global142 !== "undefined" && global142 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global142;
var exports262;
var module262;
var addLengthGuard2;
var chai2;
var flag4;
var proxify2;
var transferFlags3;
var canSetPrototype;
var testFn;
var excludeNames;
var call;
var apply;
var addChainableMethod_default;
var init_addChainableMethod = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addChainableMethod.js"() {
    init_transferFlags();
    init_proxify();
    init_flag();
    init_chai();
    init_addLengthGuard();
    global142 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global142 !== "undefined" && global142 || typeof globalThis !== "undefined" && globalThis || {};
    exports262 = {};
    module262 = {
      get exports() {
        return exports262;
      },
      set exports(value) {
        exports262 = value;
      }
    };
    addLengthGuard2 = $$cjs_default$$132(typeof addLengthGuard_exports !== "undefined" ? addLengthGuard_exports : {});
    chai2 = $$cjs_default$$132(typeof chai_exports !== "undefined" ? chai_exports : {});
    flag4 = $$cjs_default$$132(typeof flag_exports !== "undefined" ? flag_exports : {});
    proxify2 = $$cjs_default$$132(typeof proxify_exports !== "undefined" ? proxify_exports : {});
    transferFlags3 = $$cjs_default$$132(typeof transferFlags_exports !== "undefined" ? transferFlags_exports : {});
    canSetPrototype = typeof Object.setPrototypeOf === "function";
    testFn = function() {
    };
    excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {
      var propDesc = Object.getOwnPropertyDescriptor(testFn, name);
      if (typeof propDesc !== "object")
        return true;
      return !propDesc.configurable;
    });
    call = Function.prototype.call;
    apply = Function.prototype.apply;
    module262.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {
      if (typeof chainingBehavior !== "function") {
        chainingBehavior = function() {
        };
      }
      var chainableBehavior = {
        method,
        chainingBehavior
      };
      if (!ctx.__methods) {
        ctx.__methods = {};
      }
      ctx.__methods[name] = chainableBehavior;
      Object.defineProperty(
        ctx,
        name,
        {
          get: function chainableMethodGetter() {
            chainableBehavior.chainingBehavior.call(this);
            var chainableMethodWrapper = function() {
              if (!flag4(this, "lockSsfi")) {
                flag4(this, "ssfi", chainableMethodWrapper);
              }
              var result = chainableBehavior.method.apply(this, arguments);
              if (result !== void 0) {
                return result;
              }
              var newAssertion = new chai2.Assertion();
              transferFlags3(this, newAssertion);
              return newAssertion;
            };
            addLengthGuard2(chainableMethodWrapper, name, true);
            if (canSetPrototype) {
              var prototype = Object.create(this);
              prototype.call = call;
              prototype.apply = apply;
              Object.setPrototypeOf(chainableMethodWrapper, prototype);
            } else {
              var asserterNames = Object.getOwnPropertyNames(ctx);
              asserterNames.forEach(function(asserterName) {
                if (excludeNames.indexOf(asserterName) !== -1) {
                  return;
                }
                var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);
                Object.defineProperty(chainableMethodWrapper, asserterName, pd);
              });
            }
            transferFlags3(this, chainableMethodWrapper);
            return proxify2(chainableMethodWrapper);
          },
          configurable: true
        }
      );
    };
    addChainableMethod_default = module262.exports;
  }
});
var overwriteMethod_exports = {};
__export75(overwriteMethod_exports, {
  default: () => overwriteMethod_default
});
function $$cjs_default$$142(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global152 !== "undefined" && global152 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global152;
var exports272;
var module272;
var addLengthGuard3;
var chai3;
var flag5;
var proxify3;
var transferFlags4;
var overwriteMethod_default;
var init_overwriteMethod = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/overwriteMethod.js"() {
    init_transferFlags();
    init_proxify();
    init_flag();
    init_chai();
    init_addLengthGuard();
    global152 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global152 !== "undefined" && global152 || typeof globalThis !== "undefined" && globalThis || {};
    exports272 = {};
    module272 = {
      get exports() {
        return exports272;
      },
      set exports(value) {
        exports272 = value;
      }
    };
    addLengthGuard3 = $$cjs_default$$142(typeof addLengthGuard_exports !== "undefined" ? addLengthGuard_exports : {});
    chai3 = $$cjs_default$$142(typeof chai_exports !== "undefined" ? chai_exports : {});
    flag5 = $$cjs_default$$142(typeof flag_exports !== "undefined" ? flag_exports : {});
    proxify3 = $$cjs_default$$142(typeof proxify_exports !== "undefined" ? proxify_exports : {});
    transferFlags4 = $$cjs_default$$142(typeof transferFlags_exports !== "undefined" ? transferFlags_exports : {});
    module272.exports = function overwriteMethod(ctx, name, method) {
      var _method = ctx[name], _super = function() {
        throw new Error(name + " is not a function");
      };
      if (_method && "function" === typeof _method)
        _super = _method;
      var overwritingMethodWrapper = function() {
        if (!flag5(this, "lockSsfi")) {
          flag5(this, "ssfi", overwritingMethodWrapper);
        }
        var origLockSsfi = flag5(this, "lockSsfi");
        flag5(this, "lockSsfi", true);
        var result = method(_super).apply(this, arguments);
        flag5(this, "lockSsfi", origLockSsfi);
        if (result !== void 0) {
          return result;
        }
        var newAssertion = new chai3.Assertion();
        transferFlags4(this, newAssertion);
        return newAssertion;
      };
      addLengthGuard3(overwritingMethodWrapper, name, false);
      ctx[name] = proxify3(overwritingMethodWrapper, name);
    };
    overwriteMethod_default = module272.exports;
  }
});
var overwriteProperty_exports = {};
__export75(overwriteProperty_exports, {
  default: () => overwriteProperty_default
});
function $$cjs_default$$152(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global162 !== "undefined" && global162 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global162;
var exports282;
var module282;
var chai4;
var flag6;
var isProxyEnabled3;
var transferFlags5;
var overwriteProperty_default;
var init_overwriteProperty = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/overwriteProperty.js"() {
    init_transferFlags();
    init_isProxyEnabled();
    init_flag();
    init_chai();
    global162 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global162 !== "undefined" && global162 || typeof globalThis !== "undefined" && globalThis || {};
    exports282 = {};
    module282 = {
      get exports() {
        return exports282;
      },
      set exports(value) {
        exports282 = value;
      }
    };
    chai4 = $$cjs_default$$152(typeof chai_exports !== "undefined" ? chai_exports : {});
    flag6 = $$cjs_default$$152(typeof flag_exports !== "undefined" ? flag_exports : {});
    isProxyEnabled3 = $$cjs_default$$152(typeof isProxyEnabled_exports !== "undefined" ? isProxyEnabled_exports : {});
    transferFlags5 = $$cjs_default$$152(typeof transferFlags_exports !== "undefined" ? transferFlags_exports : {});
    module282.exports = function overwriteProperty(ctx, name, getter) {
      var _get = Object.getOwnPropertyDescriptor(ctx, name), _super = function() {
      };
      if (_get && "function" === typeof _get.get)
        _super = _get.get;
      Object.defineProperty(
        ctx,
        name,
        {
          get: function overwritingPropertyGetter() {
            if (!isProxyEnabled3() && !flag6(this, "lockSsfi")) {
              flag6(this, "ssfi", overwritingPropertyGetter);
            }
            var origLockSsfi = flag6(this, "lockSsfi");
            flag6(this, "lockSsfi", true);
            var result = getter(_super).call(this);
            flag6(this, "lockSsfi", origLockSsfi);
            if (result !== void 0) {
              return result;
            }
            var newAssertion = new chai4.Assertion();
            transferFlags5(this, newAssertion);
            return newAssertion;
          },
          configurable: true
        }
      );
    };
    overwriteProperty_default = module282.exports;
  }
});
var addMethod_exports = {};
__export75(addMethod_exports, {
  default: () => addMethod_default
});
function $$cjs_default$$162(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global172 !== "undefined" && global172 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global172;
var exports292;
var module292;
var addLengthGuard4;
var chai5;
var flag7;
var proxify4;
var transferFlags6;
var addMethod_default;
var init_addMethod = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addMethod.js"() {
    init_transferFlags();
    init_proxify();
    init_flag();
    init_chai();
    init_addLengthGuard();
    global172 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global172 !== "undefined" && global172 || typeof globalThis !== "undefined" && globalThis || {};
    exports292 = {};
    module292 = {
      get exports() {
        return exports292;
      },
      set exports(value) {
        exports292 = value;
      }
    };
    addLengthGuard4 = $$cjs_default$$162(typeof addLengthGuard_exports !== "undefined" ? addLengthGuard_exports : {});
    chai5 = $$cjs_default$$162(typeof chai_exports !== "undefined" ? chai_exports : {});
    flag7 = $$cjs_default$$162(typeof flag_exports !== "undefined" ? flag_exports : {});
    proxify4 = $$cjs_default$$162(typeof proxify_exports !== "undefined" ? proxify_exports : {});
    transferFlags6 = $$cjs_default$$162(typeof transferFlags_exports !== "undefined" ? transferFlags_exports : {});
    module292.exports = function addMethod(ctx, name, method) {
      var methodWrapper = function() {
        if (!flag7(this, "lockSsfi")) {
          flag7(this, "ssfi", methodWrapper);
        }
        var result = method.apply(this, arguments);
        if (result !== void 0)
          return result;
        var newAssertion = new chai5.Assertion();
        transferFlags6(this, newAssertion);
        return newAssertion;
      };
      addLengthGuard4(methodWrapper, name, false);
      ctx[name] = proxify4(methodWrapper, name);
    };
    addMethod_default = module292.exports;
  }
});
var addProperty_exports = {};
__export75(addProperty_exports, {
  default: () => addProperty_default
});
function $$cjs_default$$172(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global182 !== "undefined" && global182 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global182;
var exports302;
var module302;
var chai6;
var flag8;
var isProxyEnabled4;
var transferFlags7;
var addProperty_default;
var init_addProperty = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addProperty.js"() {
    init_transferFlags();
    init_isProxyEnabled();
    init_flag();
    init_chai();
    global182 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global182 !== "undefined" && global182 || typeof globalThis !== "undefined" && globalThis || {};
    exports302 = {};
    module302 = {
      get exports() {
        return exports302;
      },
      set exports(value) {
        exports302 = value;
      }
    };
    chai6 = $$cjs_default$$172(typeof chai_exports !== "undefined" ? chai_exports : {});
    flag8 = $$cjs_default$$172(typeof flag_exports !== "undefined" ? flag_exports : {});
    isProxyEnabled4 = $$cjs_default$$172(typeof isProxyEnabled_exports !== "undefined" ? isProxyEnabled_exports : {});
    transferFlags7 = $$cjs_default$$172(typeof transferFlags_exports !== "undefined" ? transferFlags_exports : {});
    module302.exports = function addProperty(ctx, name, getter) {
      getter = getter === void 0 ? function() {
      } : getter;
      Object.defineProperty(
        ctx,
        name,
        {
          get: function propertyGetter() {
            if (!isProxyEnabled4() && !flag8(this, "lockSsfi")) {
              flag8(this, "ssfi", propertyGetter);
            }
            var result = getter.call(this);
            if (result !== void 0)
              return result;
            var newAssertion = new chai6.Assertion();
            transferFlags7(this, newAssertion);
            return newAssertion;
          },
          configurable: true
        }
      );
    };
    addProperty_default = module302.exports;
  }
});
var package_exports5 = {};
__export75(package_exports5, {
  MemoizeMap: () => __export0710,
  default: () => package_default5
});
function $$cjs_default$$182(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global192 !== "undefined" && global192 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
function FakeMap2() {
  this._key = "chai/deep-eql__" + Math.random() + Date.now();
}
function memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {
  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {
    return null;
  }
  var leftHandMap = memoizeMap.get(leftHandOperand);
  if (leftHandMap) {
    var result = leftHandMap.get(rightHandOperand);
    if (typeof result === "boolean") {
      return result;
    }
  }
  return null;
}
function memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {
  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {
    return;
  }
  var leftHandMap = memoizeMap.get(leftHandOperand);
  if (leftHandMap) {
    leftHandMap.set(rightHandOperand, result);
  } else {
    leftHandMap = new MemoizeMap();
    leftHandMap.set(rightHandOperand, result);
    memoizeMap.set(leftHandOperand, leftHandMap);
  }
}
function deepEqual2(leftHandOperand, rightHandOperand, options) {
  if (options && options.comparator) {
    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);
  }
  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);
  if (simpleResult !== null) {
    return simpleResult;
  }
  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);
}
function simpleEqual(leftHandOperand, rightHandOperand) {
  if (leftHandOperand === rightHandOperand) {
    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;
  }
  if (leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare
  rightHandOperand !== rightHandOperand) {
    return true;
  }
  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {
    return false;
  }
  return null;
}
function extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {
  options = options || {};
  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();
  var comparator = options && options.comparator;
  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);
  if (memoizeResultLeft !== null) {
    return memoizeResultLeft;
  }
  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);
  if (memoizeResultRight !== null) {
    return memoizeResultRight;
  }
  if (comparator) {
    var comparatorResult = comparator(leftHandOperand, rightHandOperand);
    if (comparatorResult === false || comparatorResult === true) {
      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);
      return comparatorResult;
    }
    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);
    if (simpleResult !== null) {
      return simpleResult;
    }
  }
  var leftHandType = type2(leftHandOperand);
  if (leftHandType !== type2(rightHandOperand)) {
    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);
    return false;
  }
  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);
  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);
  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);
  return result;
}
function extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {
  switch (leftHandType) {
    case "String":
    case "Number":
    case "Boolean":
    case "Date":
      return deepEqual2(leftHandOperand.valueOf(), rightHandOperand.valueOf());
    case "Promise":
    case "Symbol":
    case "function":
    case "WeakMap":
    case "WeakSet":
      return leftHandOperand === rightHandOperand;
    case "Error":
      return keysEqual(leftHandOperand, rightHandOperand, ["name", "message", "code"], options);
    case "Arguments":
    case "Int8Array":
    case "Uint8Array":
    case "Uint8ClampedArray":
    case "Int16Array":
    case "Uint16Array":
    case "Int32Array":
    case "Uint32Array":
    case "Float32Array":
    case "Float64Array":
    case "Array":
      return iterableEqual(leftHandOperand, rightHandOperand, options);
    case "RegExp":
      return regexpEqual(leftHandOperand, rightHandOperand);
    case "Generator":
      return generatorEqual(leftHandOperand, rightHandOperand, options);
    case "DataView":
      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);
    case "ArrayBuffer":
      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);
    case "Set":
      return entriesEqual(leftHandOperand, rightHandOperand, options);
    case "Map":
      return entriesEqual(leftHandOperand, rightHandOperand, options);
    case "Temporal.PlainDate":
    case "Temporal.PlainTime":
    case "Temporal.PlainDateTime":
    case "Temporal.Instant":
    case "Temporal.ZonedDateTime":
    case "Temporal.PlainYearMonth":
    case "Temporal.PlainMonthDay":
      return leftHandOperand.equals(rightHandOperand);
    case "Temporal.Duration":
      return leftHandOperand.total("nanoseconds") === rightHandOperand.total("nanoseconds");
    case "Temporal.TimeZone":
    case "Temporal.Calendar":
      return leftHandOperand.toString() === rightHandOperand.toString();
    default:
      return objectEqual(leftHandOperand, rightHandOperand, options);
  }
}
function regexpEqual(leftHandOperand, rightHandOperand) {
  return leftHandOperand.toString() === rightHandOperand.toString();
}
function entriesEqual(leftHandOperand, rightHandOperand, options) {
  if (leftHandOperand.size !== rightHandOperand.size) {
    return false;
  }
  if (leftHandOperand.size === 0) {
    return true;
  }
  var leftHandItems = [];
  var rightHandItems = [];
  leftHandOperand.forEach(function gatherEntries(key, value) {
    leftHandItems.push([key, value]);
  });
  rightHandOperand.forEach(function gatherEntries(key, value) {
    rightHandItems.push([key, value]);
  });
  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);
}
function iterableEqual(leftHandOperand, rightHandOperand, options) {
  var length = leftHandOperand.length;
  if (length !== rightHandOperand.length) {
    return false;
  }
  if (length === 0) {
    return true;
  }
  var index = -1;
  while (++index < length) {
    if (deepEqual2(leftHandOperand[index], rightHandOperand[index], options) === false) {
      return false;
    }
  }
  return true;
}
function generatorEqual(leftHandOperand, rightHandOperand, options) {
  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);
}
function hasIteratorFunction(target) {
  return typeof Symbol !== "undefined" && typeof target === "object" && typeof Symbol.iterator !== "undefined" && typeof target[Symbol.iterator] === "function";
}
function getIteratorEntries(target) {
  if (hasIteratorFunction(target)) {
    try {
      return getGeneratorEntries(target[Symbol.iterator]());
    } catch (iteratorError) {
      return [];
    }
  }
  return [];
}
function getGeneratorEntries(generator) {
  var generatorResult = generator.next();
  var accumulator = [generatorResult.value];
  while (generatorResult.done === false) {
    generatorResult = generator.next();
    accumulator.push(generatorResult.value);
  }
  return accumulator;
}
function getEnumerableKeys(target) {
  var keys = [];
  for (var key in target) {
    keys.push(key);
  }
  return keys;
}
function getEnumerableSymbols(target) {
  var keys = [];
  var allKeys = Object.getOwnPropertySymbols(target);
  for (var i2 = 0; i2 < allKeys.length; i2 += 1) {
    var key = allKeys[i2];
    if (Object.getOwnPropertyDescriptor(target, key).enumerable) {
      keys.push(key);
    }
  }
  return keys;
}
function keysEqual(leftHandOperand, rightHandOperand, keys, options) {
  var length = keys.length;
  if (length === 0) {
    return true;
  }
  for (var i2 = 0; i2 < length; i2 += 1) {
    if (deepEqual2(leftHandOperand[keys[i2]], rightHandOperand[keys[i2]], options) === false) {
      return false;
    }
  }
  return true;
}
function objectEqual(leftHandOperand, rightHandOperand, options) {
  var leftHandKeys = getEnumerableKeys(leftHandOperand);
  var rightHandKeys = getEnumerableKeys(rightHandOperand);
  var leftHandSymbols = getEnumerableSymbols(leftHandOperand);
  var rightHandSymbols = getEnumerableSymbols(rightHandOperand);
  leftHandKeys = leftHandKeys.concat(leftHandSymbols);
  rightHandKeys = rightHandKeys.concat(rightHandSymbols);
  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {
    if (iterableEqual(mapSymbols(leftHandKeys).sort(), mapSymbols(rightHandKeys).sort()) === false) {
      return false;
    }
    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);
  }
  var leftHandEntries = getIteratorEntries(leftHandOperand);
  var rightHandEntries = getIteratorEntries(rightHandOperand);
  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {
    leftHandEntries.sort();
    rightHandEntries.sort();
    return iterableEqual(leftHandEntries, rightHandEntries, options);
  }
  if (leftHandKeys.length === 0 && leftHandEntries.length === 0 && rightHandKeys.length === 0 && rightHandEntries.length === 0) {
    return true;
  }
  return false;
}
function isPrimitive(value) {
  return value === null || typeof value !== "object";
}
function mapSymbols(arr) {
  return arr.map(function mapSymbol(entry) {
    if (typeof entry === "symbol") {
      return entry.toString();
    }
    return entry;
  });
}
var global192;
var exports312;
var module312;
var type2;
var MemoizeMap;
var __export0710;
var package_default5;
var init_package4 = __esm({
  "../../../../node_modules/.store/deep-eql-npm-4.1.3-020a64f862/package/index.js"() {
    init_type_detect();
    global192 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global192 !== "undefined" && global192 || typeof globalThis !== "undefined" && globalThis || {};
    exports312 = {};
    module312 = {
      get exports() {
        return exports312;
      },
      set exports(value) {
        exports312 = value;
      }
    };
    type2 = $$cjs_default$$182(typeof type_detect_exports !== "undefined" ? type_detect_exports : {});
    FakeMap2.prototype = {
      get: function get22(key) {
        return key[this._key];
      },
      set: function set22(key, value) {
        if (Object.isExtensible(key)) {
          Object.defineProperty(key, this._key, {
            value,
            configurable: true
          });
        }
      }
    };
    MemoizeMap = typeof WeakMap === "function" ? WeakMap : FakeMap2;
    module312.exports = deepEqual2;
    module312.exports.MemoizeMap = MemoizeMap;
    if (Object.isExtensible(module312.exports) && Object.keys(module312.exports).length === 1) {
      __export0710 = module312.exports["MemoizeMap"];
    }
    package_default5 = module312.exports;
  }
});
var objDisplay_exports = {};
__export75(objDisplay_exports, {
  default: () => objDisplay_default
});
function $$cjs_default$$192(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global202 !== "undefined" && global202 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global202;
var exports322;
var module322;
var inspect5;
var config5;
var objDisplay_default;
var init_objDisplay = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/objDisplay.js"() {
    init_config();
    init_inspect();
    global202 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global202 !== "undefined" && global202 || typeof globalThis !== "undefined" && globalThis || {};
    exports322 = {};
    module322 = {
      get exports() {
        return exports322;
      },
      set exports(value) {
        exports322 = value;
      }
    };
    inspect5 = $$cjs_default$$192(typeof inspect_exports !== "undefined" ? inspect_exports : {});
    config5 = $$cjs_default$$192(typeof config_exports !== "undefined" ? config_exports : {});
    module322.exports = function objDisplay(obj) {
      var str = inspect5(obj), type4 = Object.prototype.toString.call(obj);
      if (config5.truncateThreshold && str.length >= config5.truncateThreshold) {
        if (type4 === "[object Function]") {
          return !obj.name || obj.name === "" ? "[Function]" : "[Function: " + obj.name + "]";
        } else if (type4 === "[object Array]") {
          return "[ Array(" + obj.length + ") ]";
        } else if (type4 === "[object Object]") {
          var keys = Object.keys(obj), kstr = keys.length > 2 ? keys.splice(0, 2).join(", ") + ", ..." : keys.join(", ");
          return "{ Object (" + kstr + ") }";
        } else {
          return str;
        }
      } else {
        return str;
      }
    };
    objDisplay_default = module322.exports;
  }
});
var getActual_exports = {};
__export75(getActual_exports, {
  default: () => getActual_default
});
var exports332;
var module332;
var getActual_default;
var init_getActual = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getActual.js"() {
    exports332 = {};
    module332 = {
      get exports() {
        return exports332;
      },
      set exports(value) {
        exports332 = value;
      }
    };
    module332.exports = function getActual(obj, args) {
      return args.length > 4 ? args[4] : obj._obj;
    };
    getActual_default = module332.exports;
  }
});
var getMessage_exports = {};
__export75(getMessage_exports, {
  default: () => getMessage_default
});
function $$cjs_default$$202(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global212 !== "undefined" && global212 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global212;
var exports342;
var module342;
var flag9;
var getActual2;
var objDisplay2;
var getMessage_default;
var init_getMessage = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getMessage.js"() {
    init_objDisplay();
    init_getActual();
    init_flag();
    global212 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global212 !== "undefined" && global212 || typeof globalThis !== "undefined" && globalThis || {};
    exports342 = {};
    module342 = {
      get exports() {
        return exports342;
      },
      set exports(value) {
        exports342 = value;
      }
    };
    flag9 = $$cjs_default$$202(typeof flag_exports !== "undefined" ? flag_exports : {});
    getActual2 = $$cjs_default$$202(typeof getActual_exports !== "undefined" ? getActual_exports : {});
    objDisplay2 = $$cjs_default$$202(typeof objDisplay_exports !== "undefined" ? objDisplay_exports : {});
    module342.exports = function getMessage2(obj, args) {
      var negate = flag9(obj, "negate"), val = flag9(obj, "object"), expected = args[3], actual = getActual2(obj, args), msg = negate ? args[2] : args[1], flagMsg = flag9(obj, "message");
      if (typeof msg === "function")
        msg = msg();
      msg = msg || "";
      msg = msg.replace(/#\{this\}/g, function() {
        return objDisplay2(val);
      }).replace(/#\{act\}/g, function() {
        return objDisplay2(actual);
      }).replace(/#\{exp\}/g, function() {
        return objDisplay2(expected);
      });
      return flagMsg ? flagMsg + ": " + msg : msg;
    };
    getMessage_default = module342.exports;
  }
});
var package_exports6 = {};
__export75(package_exports6, {
  default: () => package_default6
});
function exclude() {
  var excludes = [].slice.call(arguments);
  function excludeProps(res, obj) {
    Object.keys(obj).forEach(function(key) {
      if (!~excludes.indexOf(key))
        res[key] = obj[key];
    });
  }
  return function extendExclude() {
    var args = [].slice.call(arguments), i2 = 0, res = {};
    for (; i2 < args.length; i2++) {
      excludeProps(res, args[i2]);
    }
    return res;
  };
}
function AssertionError(message, _props, ssf) {
  var extend = exclude("name", "message", "stack", "constructor", "toJSON"), props = extend(_props || {});
  this.message = message || "Unspecified AssertionError";
  this.showDiff = false;
  for (var key in props) {
    this[key] = props[key];
  }
  ssf = ssf || AssertionError;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, ssf);
  } else {
    try {
      throw new Error();
    } catch (e2) {
      this.stack = e2.stack;
    }
  }
}
var exports352;
var module352;
var package_default6;
var init_package5 = __esm({
  "../../../../node_modules/.store/assertion-error-npm-1.1.0-66b893015e/package/index.js"() {
    exports352 = {};
    module352 = {
      get exports() {
        return exports352;
      },
      set exports(value) {
        exports352 = value;
      }
    };
    module352.exports = AssertionError;
    AssertionError.prototype = Object.create(Error.prototype);
    AssertionError.prototype.name = "AssertionError";
    AssertionError.prototype.constructor = AssertionError;
    AssertionError.prototype.toJSON = function(stack) {
      var extend = exclude("constructor", "toJSON", "stack"), props = extend({ name: this.name }, this);
      if (false !== stack && this.stack) {
        props.stack = this.stack;
      }
      return props;
    };
    package_default6 = module352.exports;
  }
});
var expectTypes_exports = {};
__export75(expectTypes_exports, {
  default: () => expectTypes_default
});
function $$cjs_default$$212(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global222 !== "undefined" && global222 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global222;
var exports362;
var module362;
var AssertionError2;
var flag10;
var type3;
var expectTypes_default;
var init_expectTypes = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/expectTypes.js"() {
    init_type_detect();
    init_flag();
    init_package5();
    global222 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global222 !== "undefined" && global222 || typeof globalThis !== "undefined" && globalThis || {};
    exports362 = {};
    module362 = {
      get exports() {
        return exports362;
      },
      set exports(value) {
        exports362 = value;
      }
    };
    AssertionError2 = $$cjs_default$$212(typeof package_exports6 !== "undefined" ? package_exports6 : {});
    flag10 = $$cjs_default$$212(typeof flag_exports !== "undefined" ? flag_exports : {});
    type3 = $$cjs_default$$212(typeof type_detect_exports !== "undefined" ? type_detect_exports : {});
    module362.exports = function expectTypes(obj, types) {
      var flagMsg = flag10(obj, "message");
      var ssfi = flag10(obj, "ssfi");
      flagMsg = flagMsg ? flagMsg + ": " : "";
      obj = flag10(obj, "object");
      types = types.map(function(t2) {
        return t2.toLowerCase();
      });
      types.sort();
      var str = types.map(function(t2, index) {
        var art = ~["a", "e", "i", "o", "u"].indexOf(t2.charAt(0)) ? "an" : "a";
        var or = types.length > 1 && index === types.length - 1 ? "or " : "";
        return or + art + " " + t2;
      }).join(", ");
      var objType = type3(obj).toLowerCase();
      if (!types.some(function(expected) {
        return objType === expected;
      })) {
        throw new AssertionError2(
          flagMsg + "object tested must be " + str + ", but " + objType + " given",
          void 0,
          ssfi
        );
      }
    };
    expectTypes_default = module362.exports;
  }
});
var test_exports = {};
__export75(test_exports, {
  default: () => test_default
});
function $$cjs_default$$222(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global232 !== "undefined" && global232 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global232;
var exports372;
var module372;
var flag11;
var test_default;
var init_test = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/test.js"() {
    init_flag();
    global232 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global232 !== "undefined" && global232 || typeof globalThis !== "undefined" && globalThis || {};
    exports372 = {};
    module372 = {
      get exports() {
        return exports372;
      },
      set exports(value) {
        exports372 = value;
      }
    };
    flag11 = $$cjs_default$$222(typeof flag_exports !== "undefined" ? flag_exports : {});
    module372.exports = function test(obj, args) {
      var negate = flag11(obj, "negate"), expr = args[0];
      return negate ? !expr : expr;
    };
    test_default = module372.exports;
  }
});
var package_exports7 = {};
__export75(package_exports7, {
  default: () => package_default7,
  getPathInfo: () => __export1610,
  getPathValue: () => __export245,
  hasProperty: () => __export0810,
  setPathValue: () => __export334
});
function hasProperty(obj, name) {
  if (typeof obj === "undefined" || obj === null) {
    return false;
  }
  return name in Object(obj);
}
function parsePath(path) {
  var str = path.replace(/([^\\])\[/g, "$1.[");
  var parts = str.match(/(\\\.|[^.]+?)+/g);
  return parts.map(function mapMatches(value) {
    if (value === "constructor" || value === "__proto__" || value === "prototype") {
      return {};
    }
    var regexp = /^\[(\d+)\]$/;
    var mArr = regexp.exec(value);
    var parsed = null;
    if (mArr) {
      parsed = { i: parseFloat(mArr[1]) };
    } else {
      parsed = { p: value.replace(/\\([.[\]])/g, "$1") };
    }
    return parsed;
  });
}
function internalGetPathValue(obj, parsed, pathDepth) {
  var temporaryValue = obj;
  var res = null;
  pathDepth = typeof pathDepth === "undefined" ? parsed.length : pathDepth;
  for (var i2 = 0; i2 < pathDepth; i2++) {
    var part = parsed[i2];
    if (temporaryValue) {
      if (typeof part.p === "undefined") {
        temporaryValue = temporaryValue[part.i];
      } else {
        temporaryValue = temporaryValue[part.p];
      }
      if (i2 === pathDepth - 1) {
        res = temporaryValue;
      }
    }
  }
  return res;
}
function internalSetPathValue(obj, val, parsed) {
  var tempObj = obj;
  var pathDepth = parsed.length;
  var part = null;
  for (var i2 = 0; i2 < pathDepth; i2++) {
    var propName = null;
    var propVal = null;
    part = parsed[i2];
    if (i2 === pathDepth - 1) {
      propName = typeof part.p === "undefined" ? part.i : part.p;
      tempObj[propName] = val;
    } else if (typeof part.p !== "undefined" && tempObj[part.p]) {
      tempObj = tempObj[part.p];
    } else if (typeof part.i !== "undefined" && tempObj[part.i]) {
      tempObj = tempObj[part.i];
    } else {
      var next = parsed[i2 + 1];
      propName = typeof part.p === "undefined" ? part.i : part.p;
      propVal = typeof next.p === "undefined" ? [] : {};
      tempObj[propName] = propVal;
      tempObj = tempObj[propName];
    }
  }
}
function getPathInfo(obj, path) {
  var parsed = parsePath(path);
  var last = parsed[parsed.length - 1];
  var info = {
    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,
    name: last.p || last.i,
    value: internalGetPathValue(obj, parsed)
  };
  info.exists = hasProperty(info.parent, info.name);
  return info;
}
function getPathValue(obj, path) {
  var info = getPathInfo(obj, path);
  return info.value;
}
function setPathValue(obj, path, val) {
  var parsed = parsePath(path);
  internalSetPathValue(obj, val, parsed);
  return obj;
}
var exports382;
var module382;
var __export0810;
var __export1610;
var __export245;
var __export334;
var package_default7;
var init_package6 = __esm({
  "../../../../node_modules/.store/pathval-npm-1.1.1-ce0311d7e0/package/index.js"() {
    exports382 = {};
    module382 = {
      get exports() {
        return exports382;
      },
      set exports(value) {
        exports382 = value;
      }
    };
    module382.exports = {
      hasProperty,
      getPathInfo,
      getPathValue,
      setPathValue
    };
    if (Object.isExtensible(module382.exports) && Object.keys(module382.exports).length === 4) {
      __export0810 = module382.exports["hasProperty"];
      __export1610 = module382.exports["getPathInfo"];
      __export245 = module382.exports["getPathValue"];
      __export334 = module382.exports["setPathValue"];
    }
    package_default7 = module382.exports;
  }
});
var utils_exports = {};
__export75(utils_exports, {
  addChainableMethod: () => __export1722,
  addLengthGuard: () => __export2422,
  addMethod: () => __export1422,
  addProperty: () => __export1322,
  checkError: () => __export2222,
  compareByInspect: () => __export195,
  default: () => utils_default,
  eql: () => __export95,
  expectTypes: () => __export255,
  flag: () => __export76,
  getActual: () => __export433,
  getMessage: () => __export344,
  getName: () => __export1222,
  getOperator: () => __export275,
  getOwnEnumerableProperties: () => __export2112,
  getOwnEnumerablePropertySymbols: () => __export204,
  getPathInfo: () => __export105,
  hasProperty: () => __export1112,
  inspect: () => __export523,
  isNaN: () => __export265,
  isProxyEnabled: () => __export2522,
  objDisplay: () => __export611,
  overwriteChainableMethod: () => __export185,
  overwriteMethod: () => __export1622,
  overwriteProperty: () => __export1522,
  proxify: () => __export2322,
  test: () => __export0910,
  transferFlags: () => __export85,
  type: () => __export175
});
function $$cjs_default$$232(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global242 !== "undefined" && global242 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global242;
var exports392;
var module392;
var pathval;
var __export0910;
var __export175;
var __export255;
var __export344;
var __export433;
var __export523;
var __export611;
var __export76;
var __export85;
var __export95;
var __export105;
var __export1112;
var __export1222;
var __export1322;
var __export1422;
var __export1522;
var __export1622;
var __export1722;
var __export185;
var __export195;
var __export204;
var __export2112;
var __export2222;
var __export2322;
var __export2422;
var __export2522;
var __export265;
var __export275;
var utils_default;
var init_utils = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/index.js"() {
    init_getOperator();
    init_isNaN();
    init_isProxyEnabled();
    init_addLengthGuard();
    init_proxify();
    init_package2();
    init_getOwnEnumerableProperties();
    init_getOwnEnumerablePropertySymbols();
    init_compareByInspect();
    init_overwriteChainableMethod();
    init_addChainableMethod();
    init_overwriteMethod();
    init_overwriteProperty();
    init_addMethod();
    init_addProperty();
    init_package();
    init_package4();
    init_transferFlags();
    init_flag();
    init_objDisplay();
    init_inspect();
    init_getActual();
    init_getMessage();
    init_expectTypes();
    init_type_detect();
    init_test();
    init_package6();
    global242 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global242 !== "undefined" && global242 || typeof globalThis !== "undefined" && globalThis || {};
    exports392 = {};
    module392 = {
      get exports() {
        return exports392;
      },
      set exports(value) {
        exports392 = value;
      }
    };
    pathval = $$cjs_default$$232(typeof package_exports7 !== "undefined" ? package_exports7 : {});
    exports392.test = $$cjs_default$$232(typeof test_exports !== "undefined" ? test_exports : {});
    exports392.type = $$cjs_default$$232(typeof type_detect_exports !== "undefined" ? type_detect_exports : {});
    exports392.expectTypes = $$cjs_default$$232(typeof expectTypes_exports !== "undefined" ? expectTypes_exports : {});
    exports392.getMessage = $$cjs_default$$232(typeof getMessage_exports !== "undefined" ? getMessage_exports : {});
    exports392.getActual = $$cjs_default$$232(typeof getActual_exports !== "undefined" ? getActual_exports : {});
    exports392.inspect = $$cjs_default$$232(typeof inspect_exports !== "undefined" ? inspect_exports : {});
    exports392.objDisplay = $$cjs_default$$232(typeof objDisplay_exports !== "undefined" ? objDisplay_exports : {});
    exports392.flag = $$cjs_default$$232(typeof flag_exports !== "undefined" ? flag_exports : {});
    exports392.transferFlags = $$cjs_default$$232(typeof transferFlags_exports !== "undefined" ? transferFlags_exports : {});
    exports392.eql = $$cjs_default$$232(typeof package_exports5 !== "undefined" ? package_exports5 : {});
    exports392.getPathInfo = pathval.getPathInfo;
    exports392.hasProperty = pathval.hasProperty;
    exports392.getName = $$cjs_default$$232(typeof package_exports2 !== "undefined" ? package_exports2 : {});
    exports392.addProperty = $$cjs_default$$232(typeof addProperty_exports !== "undefined" ? addProperty_exports : {});
    exports392.addMethod = $$cjs_default$$232(typeof addMethod_exports !== "undefined" ? addMethod_exports : {});
    exports392.overwriteProperty = $$cjs_default$$232(typeof overwriteProperty_exports !== "undefined" ? overwriteProperty_exports : {});
    exports392.overwriteMethod = $$cjs_default$$232(typeof overwriteMethod_exports !== "undefined" ? overwriteMethod_exports : {});
    exports392.addChainableMethod = $$cjs_default$$232(typeof addChainableMethod_exports !== "undefined" ? addChainableMethod_exports : {});
    exports392.overwriteChainableMethod = $$cjs_default$$232(typeof overwriteChainableMethod_exports !== "undefined" ? overwriteChainableMethod_exports : {});
    exports392.compareByInspect = $$cjs_default$$232(typeof compareByInspect_exports !== "undefined" ? compareByInspect_exports : {});
    exports392.getOwnEnumerablePropertySymbols = $$cjs_default$$232(typeof getOwnEnumerablePropertySymbols_exports !== "undefined" ? getOwnEnumerablePropertySymbols_exports : {});
    exports392.getOwnEnumerableProperties = $$cjs_default$$232(typeof getOwnEnumerableProperties_exports !== "undefined" ? getOwnEnumerableProperties_exports : {});
    exports392.checkError = $$cjs_default$$232(typeof package_exports3 !== "undefined" ? package_exports3 : {});
    exports392.proxify = $$cjs_default$$232(typeof proxify_exports !== "undefined" ? proxify_exports : {});
    exports392.addLengthGuard = $$cjs_default$$232(typeof addLengthGuard_exports !== "undefined" ? addLengthGuard_exports : {});
    exports392.isProxyEnabled = $$cjs_default$$232(typeof isProxyEnabled_exports !== "undefined" ? isProxyEnabled_exports : {});
    exports392.isNaN = $$cjs_default$$232(typeof isNaN_exports !== "undefined" ? isNaN_exports : {});
    exports392.getOperator = $$cjs_default$$232(typeof getOperator_exports !== "undefined" ? getOperator_exports : {});
    if (Object.isExtensible(module392.exports) && Object.keys(module392.exports).length === 28) {
      __export0910 = module392.exports["test"];
      __export175 = module392.exports["type"];
      __export255 = module392.exports["expectTypes"];
      __export344 = module392.exports["getMessage"];
      __export433 = module392.exports["getActual"];
      __export523 = module392.exports["inspect"];
      __export611 = module392.exports["objDisplay"];
      __export76 = module392.exports["flag"];
      __export85 = module392.exports["transferFlags"];
      __export95 = module392.exports["eql"];
      __export105 = module392.exports["getPathInfo"];
      __export1112 = module392.exports["hasProperty"];
      __export1222 = module392.exports["getName"];
      __export1322 = module392.exports["addProperty"];
      __export1422 = module392.exports["addMethod"];
      __export1522 = module392.exports["overwriteProperty"];
      __export1622 = module392.exports["overwriteMethod"];
      __export1722 = module392.exports["addChainableMethod"];
      __export185 = module392.exports["overwriteChainableMethod"];
      __export195 = module392.exports["compareByInspect"];
      __export204 = module392.exports["getOwnEnumerablePropertySymbols"];
      __export2112 = module392.exports["getOwnEnumerableProperties"];
      __export2222 = module392.exports["checkError"];
      __export2322 = module392.exports["proxify"];
      __export2422 = module392.exports["addLengthGuard"];
      __export2522 = module392.exports["isProxyEnabled"];
      __export265 = module392.exports["isNaN"];
      __export275 = module392.exports["getOperator"];
    }
    utils_default = module392.exports;
  }
});
var chai_exports = {};
__export75(chai_exports, {
  AssertionError: () => __export1102,
  config: () => __export443,
  default: () => chai_default,
  use: () => __export285,
  util: () => __export354,
  version: () => __export0105
});
function $$cjs_default$$242(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global252 !== "undefined" && global252 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global252;
var exports402;
var module402;
var used;
var util;
var config6;
var assertion;
var core;
var expect;
var should;
var assert;
var __export0105;
var __export1102;
var __export285;
var __export354;
var __export443;
var chai_default;
var init_chai = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai.js"() {
    init_assert();
    init_should();
    init_expect();
    init_assertions();
    init_assertion();
    init_config();
    init_utils();
    init_package5();
    global252 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global252 !== "undefined" && global252 || typeof globalThis !== "undefined" && globalThis || {};
    exports402 = {};
    module402 = {
      get exports() {
        return exports402;
      },
      set exports(value) {
        exports402 = value;
      }
    };
    used = [];
    exports402.version = "4.3.8";
    exports402.AssertionError = $$cjs_default$$242(typeof package_exports6 !== "undefined" ? package_exports6 : {});
    util = $$cjs_default$$242(typeof utils_exports !== "undefined" ? utils_exports : {});
    exports402.use = function(fn) {
      if (!~used.indexOf(fn)) {
        fn(exports402, util);
        used.push(fn);
      }
      return exports402;
    };
    exports402.util = util;
    config6 = $$cjs_default$$242(typeof config_exports !== "undefined" ? config_exports : {});
    exports402.config = config6;
    assertion = $$cjs_default$$242(typeof assertion_exports !== "undefined" ? assertion_exports : {});
    exports402.use(assertion);
    core = $$cjs_default$$242(typeof assertions_exports !== "undefined" ? assertions_exports : {});
    exports402.use(core);
    expect = $$cjs_default$$242(typeof expect_exports !== "undefined" ? expect_exports : {});
    exports402.use(expect);
    should = $$cjs_default$$242(typeof should_exports !== "undefined" ? should_exports : {});
    exports402.use(should);
    assert = $$cjs_default$$242(typeof assert_exports !== "undefined" ? assert_exports : {});
    exports402.use(assert);
    if (Object.isExtensible(module402.exports) && Object.keys(module402.exports).length === 5) {
      __export0105 = module402.exports["version"];
      __export1102 = module402.exports["AssertionError"];
      __export285 = module402.exports["use"];
      __export354 = module402.exports["util"];
      __export443 = module402.exports["config"];
    }
    chai_default = module402.exports;
  }
});
var package_exports8 = {};
__export75(package_exports8, {
  AssertionError: () => __export1102,
  config: () => __export443,
  default: () => package_default8,
  use: () => __export285,
  util: () => __export354,
  version: () => __export0105
});
function $$cjs_default$$252(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global262 !== "undefined" && global262 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global262;
var exports412;
var module412;
var package_default8;
var init_package7 = __esm({
  "../../../../node_modules/.store/chai-npm-4.4.1-ffd006b4b1/package/index.js"() {
    init_chai();
    init_chai();
    global262 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global262 !== "undefined" && global262 || typeof globalThis !== "undefined" && globalThis || {};
    exports412 = {};
    module412 = {
      get exports() {
        return exports412;
      },
      set exports(value) {
        exports412 = value;
      }
    };
    module412.exports = $$cjs_default$$252(typeof chai_exports !== "undefined" ? chai_exports : {});
    package_default8 = module412.exports;
  }
});
var require_build = __commonJS({
  "../../../../node_modules/.store/@jest-globals-npm-29.7.0-06f2bd411e/package/build/index.js"() {
    throw new Error(
      "Do not import `@jest/globals` outside of the Jest test environment"
    );
  }
});
var tonObjects = {
  BaseOApp: {
    name: "baseOApp",
    0: {
      fieldName: "BaseOApp::controllerAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "BaseOApp::eid",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "BaseOApp::maxReceivedNonce",
      fieldType: "cl::t::dict256"
    },
    3: {
      fieldName: "BaseOApp::baseLzReceiveGas",
      fieldType: "cl::t::coins"
    },
    4: {
      fieldName: "BaseOApp::peers",
      fieldType: "cl::t::dict256"
    },
    5: {
      fieldName: "BaseOApp::enforcedOptions",
      fieldType: "cl::t::dict256"
    },
    6: {
      fieldName: "BaseOApp::tentativeOwner",
      fieldType: "cl::t::address"
    },
    7: {
      fieldName: "BaseOApp::endpointCode",
      fieldType: "cl::t::cellRef"
    },
    8: {
      fieldName: "BaseOApp::channelCode",
      fieldType: "cl::t::cellRef"
    },
    9: {
      fieldName: "BaseOApp::endpointInitStorage",
      fieldType: "cl::t::objRef"
    }
  },
  Counter: {
    name: "counter",
    0: {
      fieldName: "Counter::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Counter::baseOAppStorage",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "Counter::inboundCount",
      fieldType: "cl::t::dict256"
    },
    3: {
      fieldName: "Counter::outboundCount",
      fieldType: "cl::t::dict256"
    },
    4: {
      fieldName: "Counter::failNextLzReceive",
      fieldType: "cl::t::bool"
    },
    5: {
      fieldName: "Counter::id",
      fieldType: "cl::t::uint32"
    }
  },
  "lz::Config": {
    name: "Config",
    0: {
      fieldName: "lz::Config::path",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "lz::Config::forwardingAddress",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "lz::Config::opCode",
      fieldType: "cl::t::uint32"
    },
    3: {
      fieldName: "lz::Config::config",
      fieldType: "cl::t::objRef"
    }
  },
  "lz::EpConfig::NewWithConnection": {
    name: "EpConfig",
    0: {
      fieldName: "lz::EpConfig::NewWithConnection::isNull",
      fieldType: "cl::t::bool"
    },
    1: {
      fieldName: "lz::EpConfig::NewWithConnection::sendMsglibManager",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "lz::EpConfig::NewWithConnection::sendMsglib",
      fieldType: "cl::t::address"
    },
    3: {
      fieldName: "lz::EpConfig::NewWithConnection::sendMsglibConnection",
      fieldType: "cl::t::address"
    },
    4: {
      fieldName: "lz::EpConfig::NewWithConnection::receiveMsglib",
      fieldType: "cl::t::address"
    },
    5: {
      fieldName: "lz::EpConfig::NewWithConnection::receiveMsglibConnection",
      fieldType: "cl::t::address"
    },
    6: {
      fieldName: "lz::EpConfig::NewWithConnection::timeoutReceiveMsglib",
      fieldType: "cl::t::address"
    },
    7: {
      fieldName: "lz::EpConfig::NewWithConnection::timeoutReceiveMsglibConnection",
      fieldType: "cl::t::address"
    },
    8: {
      fieldName: "lz::EpConfig::NewWithConnection::timeoutReceiveMsglibExpiry",
      fieldType: "cl::t::uint64"
    }
  },
  "lz::EpConfig": {
    name: "EpConfig"
  },
  "lz::EpConfig::NewWithDefaults": {
    name: "EpConfig"
  },
  "lz::MsglibInfo": {
    name: "MsglibInfo",
    0: {
      fieldName: "lz::MsglibInfo::msglibAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "lz::MsglibInfo::msglibConnectionCode",
      fieldType: "cl::t::cellRef"
    },
    2: {
      fieldName: "lz::MsglibInfo::msglibConnectionInitStorage",
      fieldType: "cl::t::objRef"
    }
  },
  "lz::Packet": {
    name: "Packet",
    0: {
      fieldName: "lz::Packet::path",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "lz::Packet::message",
      fieldType: "cl::t::cellRef"
    },
    2: {
      fieldName: "lz::Packet::nonce",
      fieldType: "cl::t::uint64"
    },
    3: {
      fieldName: "lz::Packet::guid",
      fieldType: "cl::t::uint256"
    }
  },
  "lz::Path": {
    name: "path",
    0: {
      fieldName: "lz::Path::srcEid",
      fieldType: "cl::t::uint32"
    },
    1: {
      fieldName: "lz::Path::srcOApp",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "lz::Path::dstEid",
      fieldType: "cl::t::uint32"
    },
    3: {
      fieldName: "lz::Path::dstOApp",
      fieldType: "cl::t::address"
    }
  },
  "lz::ReceiveEpConfig": {
    name: "RcvEpCfg",
    0: {
      fieldName: "lz::ReceiveEpConfig::receiveMsglibConnection",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "lz::ReceiveEpConfig::timeoutReceiveMsglibConnection",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "lz::ReceiveEpConfig::expiry",
      fieldType: "cl::t::uint64"
    }
  },
  "lz::SendEpConfig": {
    name: "SendEpCfg",
    0: {
      fieldName: "lz::SendEpConfig::sendMsglibManager",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "lz::SendEpConfig::sendMsglib",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "lz::SendEpConfig::sendMsglibConnection",
      fieldType: "cl::t::address"
    }
  },
  "lz::SmlJobAssigned": {
    name: "SmlJobAssg",
    0: {
      fieldName: "lz::SmlJobAssigned::executorAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "lz::SmlJobAssigned::fee",
      fieldType: "cl::t::coins"
    }
  },
  "md::AddMsglib": {
    name: "addMsgLib",
    0: {
      fieldName: "md::AddMsglib::msglibManagerAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "md::AddMsglib::dstEid",
      fieldType: "cl::t::uint32"
    }
  },
  "md::Bool": {
    name: "Bool",
    0: {
      fieldName: "md::Bool::bool",
      fieldType: "cl::t::bool"
    }
  },
  "md::ChannelNonceInfo": {
    name: "cNonceInfo",
    0: {
      fieldName: "md::ChannelNonceInfo::nonce",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "md::ChannelNonceInfo::firstUnexecutedNonce",
      fieldType: "cl::t::uint64"
    }
  },
  "md::CoinsAmount": {
    name: "coinsAmt",
    0: {
      fieldName: "md::CoinsAmount::amount",
      fieldType: "cl::t::coins"
    }
  },
  "md::CounterIncrement": {
    name: "countIncr",
    0: {
      fieldName: "md::CounterIncrement::dstEid",
      fieldType: "cl::t::uint32"
    },
    1: {
      fieldName: "md::CounterIncrement::incrementType",
      fieldType: "cl::t::uint8"
    },
    2: {
      fieldName: "md::CounterIncrement::extraOptions",
      fieldType: "cl::t::objRef"
    },
    3: {
      fieldName: "md::CounterIncrement::nativeFee",
      fieldType: "cl::t::coins"
    },
    4: {
      fieldName: "md::CounterIncrement::zroFee",
      fieldType: "cl::t::coins"
    }
  },
  "md::Deploy": {
    name: "deploy",
    0: {
      fieldName: "md::Deploy::initialDeposit",
      fieldType: "cl::t::coins"
    },
    1: {
      fieldName: "md::Deploy::dstEid",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "md::Deploy::dstOApp",
      fieldType: "cl::t::uint256"
    },
    3: {
      fieldName: "md::Deploy::extraInfo",
      fieldType: "cl::t::objRef"
    }
  },
  "md::Deploy::NewWithExtraInfo": {
    name: "deploy"
  },
  "md::ExtendedMd": {
    name: "extendedMd",
    0: {
      fieldName: "md::ExtendedMd::md",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::ExtendedMd::obj",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "md::ExtendedMd::forwardingAddress",
      fieldType: "cl::t::address"
    }
  },
  "md::getMsglibInfoCallback": {
    name: "getMsgLbCb",
    0: {
      fieldName: "md::getMsglibInfoCallback::msglibAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "md::getMsglibInfoCallback::connectionCode",
      fieldType: "cl::t::cellRef"
    }
  },
  "md::InitEndpoint": {
    name: "initEp",
    0: {
      fieldName: "md::InitEndpoint::channelCode",
      fieldType: "cl::t::cellRef"
    }
  },
  "md::InitSmlConnection": {
    name: "initSmlCon",
    0: {
      fieldName: "md::InitSmlConnection::channelAddress",
      fieldType: "cl::t::address"
    }
  },
  "md::LzReceivePrepare": {
    name: "lzrecvprep",
    0: {
      fieldName: "md::LzReceivePrepare::nonce",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "md::LzReceivePrepare::nanotons",
      fieldType: "cl::t::coins"
    }
  },
  "md::LzReceiveStatus": {
    name: "LzRecvSts",
    0: {
      fieldName: "md::LzReceiveStatus::success",
      fieldType: "cl::t::bool"
    },
    1: {
      fieldName: "md::LzReceiveStatus::nonce",
      fieldType: "cl::t::uint64"
    },
    2: {
      fieldName: "md::LzReceiveStatus::value",
      fieldType: "cl::t::coins"
    },
    3: {
      fieldName: "md::LzReceiveStatus::extraData",
      fieldType: "cl::t::cellRef"
    },
    4: {
      fieldName: "md::LzReceiveStatus::reason",
      fieldType: "cl::t::cellRef"
    },
    5: {
      fieldName: "md::LzReceiveStatus::sender",
      fieldType: "cl::t::address"
    },
    6: {
      fieldName: "md::LzReceiveStatus::packet",
      fieldType: "cl::t::objRef"
    },
    7: {
      fieldName: "md::LzReceiveStatus::executionStatus",
      fieldType: "cl::t::uint8"
    }
  },
  "md::LzReceiveStatus::NewFull": {
    name: "LzRecvSts",
    0: {
      fieldName: "md::LzReceiveStatus::NewFull::success",
      fieldType: "cl::t::bool"
    },
    1: {
      fieldName: "md::LzReceiveStatus::NewFull::nonce",
      fieldType: "cl::t::uint64"
    },
    2: {
      fieldName: "md::LzReceiveStatus::NewFull::value",
      fieldType: "cl::t::coins"
    },
    3: {
      fieldName: "md::LzReceiveStatus::NewFull::extraData",
      fieldType: "cl::t::cellRef"
    },
    4: {
      fieldName: "md::LzReceiveStatus::NewFull::reason",
      fieldType: "cl::t::cellRef"
    },
    5: {
      fieldName: "md::LzReceiveStatus::NewFull::sender",
      fieldType: "cl::t::address"
    },
    6: {
      fieldName: "md::LzReceiveStatus::NewFull::packet",
      fieldType: "cl::t::objRef"
    },
    7: {
      fieldName: "md::LzReceiveStatus::NewFull::executionStatus",
      fieldType: "cl::t::uint8"
    }
  },
  "md::LzSend": {
    name: "lzSend",
    0: {
      fieldName: "md::LzSend::sendRequestId",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "md::LzSend::sendMsglibManager",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "md::LzSend::sendMsglib",
      fieldType: "cl::t::address"
    },
    3: {
      fieldName: "md::LzSend::sendMsglibConnection",
      fieldType: "cl::t::address"
    },
    4: {
      fieldName: "md::LzSend::packet",
      fieldType: "cl::t::objRef"
    },
    5: {
      fieldName: "md::LzSend::nativeFee",
      fieldType: "cl::t::coins"
    },
    6: {
      fieldName: "md::LzSend::zroFee",
      fieldType: "cl::t::coins"
    },
    7: {
      fieldName: "md::LzSend::extraOptions",
      fieldType: "cl::t::objRef"
    },
    8: {
      fieldName: "md::LzSend::enforcedOptions",
      fieldType: "cl::t::objRef"
    },
    9: {
      fieldName: "md::LzSend::callbackData",
      fieldType: "cl::t::objRef"
    }
  },
  "md::MdAddress": {
    name: "MdAddr",
    0: {
      fieldName: "md::MdAddress::md",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::MdAddress::address",
      fieldType: "cl::t::address"
    }
  },
  "md::MdEid": {
    name: "MdEid",
    0: {
      fieldName: "md::MdEid::md",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::MdEid::eid",
      fieldType: "cl::t::uint32"
    }
  },
  "md::MdObj": {
    name: "MdObj",
    0: {
      fieldName: "md::MdObj::md",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::MdObj::obj",
      fieldType: "cl::t::objRef"
    }
  },
  "md::MessagingReceipt": {
    name: "MsgReceipt",
    0: {
      fieldName: "md::MessagingReceipt::lzSend",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::MessagingReceipt::nativeFeeActual",
      fieldType: "cl::t::coins"
    },
    2: {
      fieldName: "md::MessagingReceipt::zroFeeActual",
      fieldType: "cl::t::coins"
    },
    3: {
      fieldName: "md::MessagingReceipt::errorCode",
      fieldType: "cl::t::uint16"
    }
  },
  "md::MsglibSendCallback": {
    name: "libSndCb",
    0: {
      fieldName: "md::MsglibSendCallback::nativeFee",
      fieldType: "cl::t::coins"
    },
    1: {
      fieldName: "md::MsglibSendCallback::zroFee",
      fieldType: "cl::t::coins"
    },
    2: {
      fieldName: "md::MsglibSendCallback::lzSend",
      fieldType: "cl::t::objRef"
    },
    3: {
      fieldName: "md::MsglibSendCallback::packetEncoded",
      fieldType: "cl::t::cellRef"
    },
    4: {
      fieldName: "md::MsglibSendCallback::payees",
      fieldType: "cl::t::cellRef"
    },
    5: {
      fieldName: "md::MsglibSendCallback::nonceByteOffset",
      fieldType: "cl::t::uint16"
    },
    6: {
      fieldName: "md::MsglibSendCallback::nonceBytes",
      fieldType: "cl::t::uint8"
    },
    7: {
      fieldName: "md::MsglibSendCallback::guidByteOffset",
      fieldType: "cl::t::uint16"
    },
    8: {
      fieldName: "md::MsglibSendCallback::guidBytes",
      fieldType: "cl::t::uint8"
    },
    9: {
      fieldName: "md::MsglibSendCallback::msglibSendEvents",
      fieldType: "cl::t::objRef"
    },
    10: {
      fieldName: "md::MsglibSendCallback::errorCode",
      fieldType: "cl::t::uint8"
    }
  },
  "md::Nonce": {
    name: "nonce",
    0: {
      fieldName: "md::Nonce::nonce",
      fieldType: "cl::t::uint64"
    }
  },
  "md::OptionsExtended": {
    name: "OptionsExt",
    0: {
      fieldName: "md::OptionsExtended::eid",
      fieldType: "cl::t::uint32"
    },
    1: {
      fieldName: "md::OptionsExtended::msgType",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "md::OptionsExtended::options",
      fieldType: "cl::t::objRef"
    }
  },
  "md::OptionsV1": {
    name: "OptionsV1",
    0: {
      fieldName: "md::OptionsV1::lzReceiveGas",
      fieldType: "cl::t::uint256"
    },
    1: {
      fieldName: "md::OptionsV1::lzReceiveValue",
      fieldType: "cl::t::uint256"
    },
    2: {
      fieldName: "md::OptionsV1::nativeDropAddress",
      fieldType: "cl::t::address"
    },
    3: {
      fieldName: "md::OptionsV1::nativeDropAmount",
      fieldType: "cl::t::uint256"
    }
  },
  "md::OptionsV2": {
    name: "OptionsV2",
    0: {
      fieldName: "md::OptionsV2::lzReceiveGas",
      fieldType: "cl::t::uint256"
    },
    1: {
      fieldName: "md::OptionsV2::lzReceiveValue",
      fieldType: "cl::t::uint256"
    },
    2: {
      fieldName: "md::OptionsV2::lzComposeGas",
      fieldType: "cl::t::uint256"
    },
    3: {
      fieldName: "md::OptionsV2::lzComposeValue",
      fieldType: "cl::t::uint256"
    },
    4: {
      fieldName: "md::OptionsV2::nativeDropAddress",
      fieldType: "cl::t::address"
    },
    5: {
      fieldName: "md::OptionsV2::nativeDropAmount",
      fieldType: "cl::t::uint256"
    }
  },
  "md::PacketId": {
    name: "pktId",
    0: {
      fieldName: "md::PacketId::path",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::PacketId::nonce",
      fieldType: "cl::t::uint64"
    }
  },
  "md::PacketSent": {
    name: "pktSent",
    0: {
      fieldName: "md::PacketSent::nativeFee",
      fieldType: "cl::t::coins"
    },
    1: {
      fieldName: "md::PacketSent::zroFee",
      fieldType: "cl::t::coins"
    },
    2: {
      fieldName: "md::PacketSent::extraOptions",
      fieldType: "cl::t::objRef"
    },
    3: {
      fieldName: "md::PacketSent::enforcedOptions",
      fieldType: "cl::t::objRef"
    },
    4: {
      fieldName: "md::PacketSent::packetEncoded",
      fieldType: "cl::t::cellRef"
    },
    5: {
      fieldName: "md::PacketSent::nonce",
      fieldType: "cl::t::uint64"
    },
    6: {
      fieldName: "md::PacketSent::msglibAddress",
      fieldType: "cl::t::address"
    },
    7: {
      fieldName: "md::PacketSent::msglibSendEvents",
      fieldType: "cl::t::objRef"
    }
  },
  "md::SetAddress": {
    name: "setAddress",
    0: {
      fieldName: "md::SetAddress::address",
      fieldType: "cl::t::address"
    }
  },
  "md::SetEpConfig": {
    name: "SetEpCfg",
    0: {
      fieldName: "md::SetEpConfig::useDefaults",
      fieldType: "cl::t::bool"
    },
    1: {
      fieldName: "md::SetEpConfig::sendMsglibManager",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "md::SetEpConfig::receiveMsglibManager",
      fieldType: "cl::t::address"
    },
    3: {
      fieldName: "md::SetEpConfig::timeoutReceiveMsglibManager",
      fieldType: "cl::t::address"
    },
    4: {
      fieldName: "md::SetEpConfig::timeoutReceiveMsglibExpiry",
      fieldType: "cl::t::uint64"
    }
  },
  "md::SetPeer": {
    name: "setPeer",
    0: {
      fieldName: "md::SetPeer::eid",
      fieldType: "cl::t::uint32"
    },
    1: {
      fieldName: "md::SetPeer::peer",
      fieldType: "cl::t::uint256"
    }
  },
  "md::SetSmlManagerConfig": {
    name: "setSmlCfg",
    0: {
      fieldName: "md::SetSmlManagerConfig::nativeFee",
      fieldType: "cl::t::coins"
    },
    1: {
      fieldName: "md::SetSmlManagerConfig::zroFee",
      fieldType: "cl::t::coins"
    }
  },
  "action::event": {
    name: "event",
    0: {
      fieldName: "action::event::topic",
      fieldType: "cl::t::uint256"
    },
    1: {
      fieldName: "action::event::body",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "action::event::initialStorage",
      fieldType: "cl::t::objRef"
    }
  },
  POOO: {
    name: "POOO",
    0: {
      fieldName: "POOO::nextEmpty",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "POOO::bitmap",
      fieldType: "cl::t::cellRef"
    }
  },
  Channel: {
    name: "channel",
    0: {
      fieldName: "Channel::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Channel::path",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "Channel::endpointAddress",
      fieldType: "cl::t::address"
    },
    3: {
      fieldName: "Channel::epConfigOApp",
      fieldType: "cl::t::objRef"
    },
    4: {
      fieldName: "Channel::outboundNonce",
      fieldType: "cl::t::uint64"
    },
    5: {
      fieldName: "Channel::sendRequestQueue",
      fieldType: "cl::t::objRef"
    },
    6: {
      fieldName: "Channel::lastSendRequestId",
      fieldType: "cl::t::uint64"
    },
    7: {
      fieldName: "Channel::commitPOOO",
      fieldType: "cl::t::objRef"
    },
    8: {
      fieldName: "Channel::executePOOO",
      fieldType: "cl::t::objRef"
    },
    9: {
      fieldName: "Channel::executionQueue",
      fieldType: "cl::t::cellRef"
    },
    10: {
      fieldName: "Channel::zroBalance",
      fieldType: "cl::t::coins"
    }
  },
  Controller: {
    name: "controller",
    0: {
      fieldName: "Controller::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Controller::eid",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "Controller::endpointCode",
      fieldType: "cl::t::cellRef"
    },
    3: {
      fieldName: "Controller::channelCode",
      fieldType: "cl::t::cellRef"
    },
    4: {
      fieldName: "Controller::zroWallet",
      fieldType: "cl::t::address"
    },
    5: {
      fieldName: "Controller::tentativeOwner",
      fieldType: "cl::t::address"
    }
  },
  BaseStorage: {
    name: "baseStore",
    0: {
      fieldName: "BaseStorage::owner",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "BaseStorage::authenticated",
      fieldType: "cl::t::bool"
    },
    2: {
      fieldName: "BaseStorage::initialized",
      fieldType: "cl::t::bool"
    },
    3: {
      fieldName: "BaseStorage::initialStorage",
      fieldType: "cl::t::objRef"
    }
  },
  Endpoint: {
    name: "endpoint",
    0: {
      fieldName: "Endpoint::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Endpoint::eid",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "Endpoint::dstEid",
      fieldType: "cl::t::uint32"
    },
    3: {
      fieldName: "Endpoint::msglibs",
      fieldType: "cl::t::dict256"
    },
    4: {
      fieldName: "Endpoint::numMsglibs",
      fieldType: "cl::t::uint8"
    },
    5: {
      fieldName: "Endpoint::channelCode",
      fieldType: "cl::t::cellRef"
    },
    6: {
      fieldName: "Endpoint::channelStorageInit",
      fieldType: "cl::t::objRef"
    },
    7: {
      fieldName: "Endpoint::defaultSendMsglibManager",
      fieldType: "cl::t::address"
    },
    8: {
      fieldName: "Endpoint::defaultSendLibInfo",
      fieldType: "cl::t::objRef"
    },
    9: {
      fieldName: "Endpoint::defaultReceiveLibInfo",
      fieldType: "cl::t::objRef"
    },
    10: {
      fieldName: "Endpoint::defaultTimeoutReceiveLibInfo",
      fieldType: "cl::t::objRef"
    },
    11: {
      fieldName: "Endpoint::defaultExpiry",
      fieldType: "cl::t::uint64"
    }
  },
  SmlConnection: {
    name: "smlConn",
    0: {
      fieldName: "SmlConnection::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "SmlConnection::path",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "SmlConnection::channelAddress",
      fieldType: "cl::t::address"
    }
  },
  SmlManager: {
    name: "smlMgr",
    0: {
      fieldName: "SmlManager::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "SmlManager::eid",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "SmlManager::verison",
      fieldType: "cl::t::uint8"
    },
    3: {
      fieldName: "SmlManager::nativeFee",
      fieldType: "cl::t::coins"
    },
    4: {
      fieldName: "SmlManager::zroFee",
      fieldType: "cl::t::coins"
    },
    5: {
      fieldName: "SmlManager::packets",
      fieldType: "cl::t::dict256"
    },
    6: {
      fieldName: "SmlManager::controllerAddress",
      fieldType: "cl::t::address"
    },
    7: {
      fieldName: "SmlManager::endpointCode",
      fieldType: "cl::t::cellRef"
    },
    8: {
      fieldName: "SmlManager::channelCode",
      fieldType: "cl::t::cellRef"
    },
    9: {
      fieldName: "SmlManager::smlConnectionCode",
      fieldType: "cl::t::cellRef"
    }
  },
  "lz::Attestation": {
    name: "Attest",
    0: {
      fieldName: "lz::Attestation::hash",
      fieldType: "cl::t::uint256"
    },
    1: {
      fieldName: "lz::Attestation::confirmations",
      fieldType: "cl::t::uint64"
    }
  },
  DvnFeesPaidEvent: {
    name: "DvnFeePaid",
    0: {
      fieldName: "DvnFeesPaidEvent::requiredDVNs",
      fieldType: "cl::t::addressList"
    },
    1: {
      fieldName: "DvnFeesPaidEvent::optionalDVNs",
      fieldType: "cl::t::addressList"
    },
    2: {
      fieldName: "DvnFeesPaidEvent::serializedPayees",
      fieldType: "cl::t::objRef"
    }
  },
  ExecutorFeePaidEvent: {
    name: "ExcFeePaid",
    0: {
      fieldName: "ExecutorFeePaidEvent::executorAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "ExecutorFeePaidEvent::feePaid",
      fieldType: "cl::t::coins"
    }
  },
  "md::InitUln": {
    name: "initUln",
    0: {
      fieldName: "md::InitUln::connectionCode",
      fieldType: "cl::t::cellRef"
    },
    1: {
      fieldName: "md::InitUln::treasuryFeeBps",
      fieldType: "cl::t::uint16"
    }
  },
  "md::InitUlnConnection": {
    name: "initUlnCon",
    0: {
      fieldName: "md::InitUlnConnection::ulnSendConfigOApp",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::InitUlnConnection::ulnReceiveConfigOApp",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "md::InitUlnConnection::endpointAddress",
      fieldType: "cl::t::address"
    },
    3: {
      fieldName: "md::InitUlnConnection::channelAddress",
      fieldType: "cl::t::address"
    }
  },
  "md::InitUlnConnection::NewOnlyConfig": {
    name: "initUlnCon"
  },
  "md::InitUlnManager": {
    name: "InitUlnMgr",
    0: {
      fieldName: "md::InitUlnManager::endpointCode",
      fieldType: "cl::t::cellRef"
    },
    1: {
      fieldName: "md::InitUlnManager::channelCode",
      fieldType: "cl::t::cellRef"
    }
  },
  "md::RentRefill": {
    name: "RentRefill",
    0: {
      fieldName: "md::RentRefill::address",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "md::RentRefill::amount",
      fieldType: "cl::t::coins"
    }
  },
  "md::SetAdminWorkerAddresses": {
    name: "adminwork",
    0: {
      fieldName: "md::SetAdminWorkerAddresses::adminWorkers",
      fieldType: "cl::t::addressList"
    }
  },
  "md::TreasuryFeeBps": {
    name: "tfeebps",
    0: {
      fieldName: "md::TreasuryFeeBps::treasuryFeeBps",
      fieldType: "cl::t::uint16"
    }
  },
  UlnEvents: {
    name: "UlnEvents",
    0: {
      fieldName: "UlnEvents::workerEvents",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "UlnEvents::dvnFeesPaidEvent",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "UlnEvents::executorFeePaidEvent",
      fieldType: "cl::t::objRef"
    }
  },
  UlnReceiveConfig: {
    name: "UlnRecvCfg",
    0: {
      fieldName: "UlnReceiveConfig::minCommitPacketGasNull",
      fieldType: "cl::t::bool"
    },
    1: {
      fieldName: "UlnReceiveConfig::minCommitPacketGas",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "UlnReceiveConfig::confirmationsNull",
      fieldType: "cl::t::bool"
    },
    3: {
      fieldName: "UlnReceiveConfig::confirmations",
      fieldType: "cl::t::uint64"
    },
    4: {
      fieldName: "UlnReceiveConfig::requiredDVNsNull",
      fieldType: "cl::t::bool"
    },
    5: {
      fieldName: "UlnReceiveConfig::requiredDVNs",
      fieldType: "cl::t::addressList"
    },
    6: {
      fieldName: "UlnReceiveConfig::optionalDVNsNull",
      fieldType: "cl::t::bool"
    },
    7: {
      fieldName: "UlnReceiveConfig::optionalDVNs",
      fieldType: "cl::t::addressList"
    },
    8: {
      fieldName: "UlnReceiveConfig::optionalDVNThreshold",
      fieldType: "cl::t::uint8"
    }
  },
  "UlnReceiveConfig::NewWithDefaults": {
    name: "UlnRecvCfg"
  },
  "md::UlnSend": {
    name: "UlnSend",
    0: {
      fieldName: "md::UlnSend::lzSend",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::UlnSend::customUlnSendConfig",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "md::UlnSend::connectionInitialStorage",
      fieldType: "cl::t::objRef"
    },
    3: {
      fieldName: "md::UlnSend::forwardingAddress",
      fieldType: "cl::t::address"
    }
  },
  UlnSendConfig: {
    name: "UlnSendCfg",
    0: {
      fieldName: "UlnSendConfig::workerQuoteGasLimit",
      fieldType: "cl::t::uint32"
    },
    1: {
      fieldName: "UlnSendConfig::maxMessageBytes",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "UlnSendConfig::executorNull",
      fieldType: "cl::t::bool"
    },
    3: {
      fieldName: "UlnSendConfig::executor",
      fieldType: "cl::t::address"
    },
    4: {
      fieldName: "UlnSendConfig::requiredDVNsNull",
      fieldType: "cl::t::bool"
    },
    5: {
      fieldName: "UlnSendConfig::requiredDVNs",
      fieldType: "cl::t::addressList"
    },
    6: {
      fieldName: "UlnSendConfig::optionalDVNsNull",
      fieldType: "cl::t::bool"
    },
    7: {
      fieldName: "UlnSendConfig::optionalDVNs",
      fieldType: "cl::t::addressList"
    },
    8: {
      fieldName: "UlnSendConfig::confirmationsNull",
      fieldType: "cl::t::bool"
    },
    9: {
      fieldName: "UlnSendConfig::confirmations",
      fieldType: "cl::t::uint64"
    }
  },
  "UlnSendConfig::NewWithDefaults": {
    name: "UlnSendCfg"
  },
  "md::UlnVerification": {
    name: "UlnVerify",
    0: {
      fieldName: "md::UlnVerification::nonce",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "md::UlnVerification::attestation",
      fieldType: "cl::t::objRef"
    }
  },
  "md::UlnWorkerFeelibBytecode": {
    name: "Ulnbytecod",
    0: {
      fieldName: "md::UlnWorkerFeelibBytecode::bytecode",
      fieldType: "cl::t::cellRef"
    }
  },
  "md::UlnWorkerFeelibEvents": {
    name: "UlnWrkEvnt",
    0: {
      fieldName: "md::UlnWorkerFeelibEvents::workerAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "md::UlnWorkerFeelibEvents::workerEvents",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "md::UlnWorkerFeelibEvents::nextWorkerEvents",
      fieldType: "cl::t::objRef"
    }
  },
  UlnWorkerFeelibInfo: {
    name: "UlnWrkInfo",
    0: {
      fieldName: "UlnWorkerFeelibInfo::workerAddress",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "UlnWorkerFeelibInfo::workerFeelibBytecode",
      fieldType: "cl::t::cellRef"
    },
    2: {
      fieldName: "UlnWorkerFeelibInfo::workerFeelibStorage",
      fieldType: "cl::t::objRef"
    },
    3: {
      fieldName: "UlnWorkerFeelibInfo::friendWorkerAddress",
      fieldType: "cl::t::address"
    },
    4: {
      fieldName: "UlnWorkerFeelibInfo::dstEid",
      fieldType: "cl::t::uint32"
    },
    5: {
      fieldName: "UlnWorkerFeelibInfo::rentBalance",
      fieldType: "cl::t::coins"
    },
    6: {
      fieldName: "UlnWorkerFeelibInfo::lastRentTimestamp",
      fieldType: "cl::t::uint64"
    },
    7: {
      fieldName: "UlnWorkerFeelibInfo::isAdmin",
      fieldType: "cl::t::bool"
    }
  },
  "md::VerificationStatus": {
    name: "veristatus",
    0: {
      fieldName: "md::VerificationStatus::nonce",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "md::VerificationStatus::status",
      fieldType: "cl::t::uint32"
    }
  },
  Uln: {
    name: "uln",
    0: {
      fieldName: "Uln::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Uln::eid",
      fieldType: "cl::t::uint32"
    },
    2: {
      fieldName: "Uln::dstEid",
      fieldType: "cl::t::uint32"
    },
    3: {
      fieldName: "Uln::defaultUlnReceiveConfig",
      fieldType: "cl::t::objRef"
    },
    4: {
      fieldName: "Uln::defaultUlnSendConfig",
      fieldType: "cl::t::objRef"
    },
    5: {
      fieldName: "Uln::connectionCode",
      fieldType: "cl::t::cellRef"
    },
    6: {
      fieldName: "Uln::workerFeelibInfos",
      fieldType: "cl::t::dict256"
    },
    7: {
      fieldName: "Uln::treasuryFeeBps",
      fieldType: "cl::t::uint16"
    },
    8: {
      fieldName: "Uln::remainingWorkerSlots",
      fieldType: "cl::t::uint16"
    },
    9: {
      fieldName: "Uln::remainingAdminWorkerSlots",
      fieldType: "cl::t::uint16"
    }
  },
  ComputeSizeGasTest: {
    name: "cmptGas",
    0: {
      fieldName: "ComputeSizeGasTest::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "ComputeSizeGasTest::mockDict",
      fieldType: "cl::t::dict256"
    }
  },
  UlnConnection: {
    name: "connection",
    0: {
      fieldName: "UlnConnection::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "UlnConnection::path",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "UlnConnection::endpointAddress",
      fieldType: "cl::t::address"
    },
    3: {
      fieldName: "UlnConnection::channelAddress",
      fieldType: "cl::t::address"
    },
    4: {
      fieldName: "UlnConnection::firstUnexecutedNonce",
      fieldType: "cl::t::uint64"
    },
    5: {
      fieldName: "UlnConnection::ulnAddress",
      fieldType: "cl::t::address"
    },
    6: {
      fieldName: "UlnConnection::UlnSendConfigOApp",
      fieldType: "cl::t::objRef"
    },
    7: {
      fieldName: "UlnConnection::UlnReceiveConfigOApp",
      fieldType: "cl::t::objRef"
    },
    8: {
      fieldName: "UlnConnection::hashLookups",
      fieldType: "cl::t::dict256"
    },
    9: {
      fieldName: "UlnConnection::commitPOOO",
      fieldType: "cl::t::objRef"
    }
  },
  UlnManager: {
    name: "ulnMgr",
    0: {
      fieldName: "UlnManager::baseStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "UlnManager::ulnCode",
      fieldType: "cl::t::cellRef"
    },
    2: {
      fieldName: "UlnManager::ulnConnectionCode",
      fieldType: "cl::t::cellRef"
    },
    3: {
      fieldName: "UlnManager::controllerAddress",
      fieldType: "cl::t::address"
    },
    4: {
      fieldName: "UlnManager::eid",
      fieldType: "cl::t::uint32"
    },
    5: {
      fieldName: "UlnManager::endpointCode",
      fieldType: "cl::t::cellRef"
    },
    6: {
      fieldName: "UlnManager::channelCode",
      fieldType: "cl::t::cellRef"
    },
    7: {
      fieldName: "UlnManager::workerFeelibBytecodes",
      fieldType: "cl::t::dict256"
    },
    8: {
      fieldName: "UlnManager::adminWorkers",
      fieldType: "cl::t::addressList"
    },
    9: {
      fieldName: "UlnManager::tentativeOwner",
      fieldType: "cl::t::address"
    }
  },
  DvnFeelib: {
    name: "UlnDvnFl",
    0: {
      fieldName: "DvnFeelib::quorum",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "DvnFeelib::remoteGas",
      fieldType: "cl::t::uint64"
    },
    2: {
      fieldName: "DvnFeelib::multiplierBps",
      fieldType: "cl::t::uint16"
    },
    3: {
      fieldName: "DvnFeelib::floorMarginUSD",
      fieldType: "cl::t::coins"
    }
  },
  ExecutorFeelib: {
    name: "UlnExecutr",
    0: {
      fieldName: "ExecutorFeelib::lzReceiveBaseGas",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "ExecutorFeelib::multiplierBps",
      fieldType: "cl::t::uint16"
    },
    2: {
      fieldName: "ExecutorFeelib::floorMarginUSD",
      fieldType: "cl::t::coins"
    },
    3: {
      fieldName: "ExecutorFeelib::nativeCap",
      fieldType: "cl::t::coins"
    },
    4: {
      fieldName: "ExecutorFeelib::lzComposeBaseGas",
      fieldType: "cl::t::uint64"
    }
  },
  ArbitrumPriceFeedExtension: {
    name: "ArbFeeExt",
    0: {
      fieldName: "ArbitrumPriceFeedExtension::gasPerL2Tx",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "ArbitrumPriceFeedExtension::gasPerL1CallDataByte",
      fieldType: "cl::t::uint32"
    }
  },
  PriceFeedFeelib: {
    name: "PFFeelib",
    0: {
      fieldName: "PriceFeedFeelib::priceRatio",
      fieldType: "cl::t::coins"
    },
    1: {
      fieldName: "PriceFeedFeelib::gasPriceInRemoteUnit",
      fieldType: "cl::t::uint64"
    },
    2: {
      fieldName: "PriceFeedFeelib::gasPerByte",
      fieldType: "cl::t::uint32"
    },
    3: {
      fieldName: "PriceFeedFeelib::nativePriceUsd",
      fieldType: "cl::t::coins"
    },
    4: {
      fieldName: "PriceFeedFeelib::arbitrumExtension",
      fieldType: "cl::t::objRef"
    },
    5: {
      fieldName: "PriceFeedFeelib::optimismExtension",
      fieldType: "cl::t::objRef"
    }
  },
  WorkerCoreStorage: {
    name: "wrkCorStor",
    0: {
      fieldName: "WorkerCoreStorage::admins",
      fieldType: "cl::t::addressList"
    },
    1: {
      fieldName: "WorkerCoreStorage::proxy",
      fieldType: "cl::t::address"
    },
    2: {
      fieldName: "WorkerCoreStorage::version",
      fieldType: "cl::t::uint256"
    }
  },
  Dvn: {
    name: "dvn",
    0: {
      fieldName: "Dvn::workerCoreStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Dvn::quorum",
      fieldType: "cl::t::uint64"
    },
    2: {
      fieldName: "Dvn::verifiers",
      fieldType: "cl::t::dict256"
    },
    3: {
      fieldName: "Dvn::setQuorumNonce",
      fieldType: "cl::t::uint64"
    },
    4: {
      fieldName: "Dvn::setVerifiersNonce",
      fieldType: "cl::t::uint64"
    },
    5: {
      fieldName: "Dvn::setAdminsByQuorumNonce",
      fieldType: "cl::t::uint64"
    }
  },
  Executor: {
    name: "executor",
    0: {
      fieldName: "Executor::workerCoreStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Executor::nativeDropTotalCap",
      fieldType: "cl::t::coins"
    }
  },
  "md::ClaimTon": {
    name: "claimTon",
    0: {
      fieldName: "md::ClaimTon::amount",
      fieldType: "cl::t::coins"
    },
    1: {
      fieldName: "md::ClaimTon::target",
      fieldType: "cl::t::address"
    }
  },
  "md::ExecuteParams": {
    name: "execParams",
    0: {
      fieldName: "md::ExecuteParams::target",
      fieldType: "cl::t::address"
    },
    1: {
      fieldName: "md::ExecuteParams::callData",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "md::ExecuteParams::expiration",
      fieldType: "cl::t::uint64"
    },
    3: {
      fieldName: "md::ExecuteParams::opcode",
      fieldType: "cl::t::uint32"
    },
    4: {
      fieldName: "md::ExecuteParams::forwardingAddress",
      fieldType: "cl::t::address"
    }
  },
  "md::NativeDrop": {
    name: "NativeDrop",
    0: {
      fieldName: "md::NativeDrop::payees",
      fieldType: "cl::t::cellRef"
    },
    1: {
      fieldName: "md::NativeDrop::packetId",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "md::NativeDrop::msglib",
      fieldType: "cl::t::address"
    }
  },
  "md::SetDict": {
    name: "setDct",
    0: {
      fieldName: "md::SetDict::nonce",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "md::SetDict::opcode",
      fieldType: "cl::t::uint64"
    },
    2: {
      fieldName: "md::SetDict::dict",
      fieldType: "cl::t::dict256"
    },
    3: {
      fieldName: "md::SetDict::target",
      fieldType: "cl::t::address"
    }
  },
  "md::SetQuorum": {
    name: "setQuorum",
    0: {
      fieldName: "md::SetQuorum::nonce",
      fieldType: "cl::t::uint64"
    },
    1: {
      fieldName: "md::SetQuorum::opcode",
      fieldType: "cl::t::uint64"
    },
    2: {
      fieldName: "md::SetQuorum::quorum",
      fieldType: "cl::t::uint64"
    },
    3: {
      fieldName: "md::SetQuorum::target",
      fieldType: "cl::t::address"
    }
  },
  "md::SignedRequest": {
    name: "sgndReq",
    0: {
      fieldName: "md::SignedRequest::request",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "md::SignedRequest::signatures",
      fieldType: "cl::t::dict256"
    }
  },
  PriceFeedCache: {
    name: "pfCache",
    0: {
      fieldName: "PriceFeedCache::workerCoreStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "PriceFeedCache::priceFeedFeeLibStorage",
      fieldType: "cl::t::objRef"
    },
    2: {
      fieldName: "PriceFeedCache::dstEid",
      fieldType: "cl::t::uint32"
    }
  },
  Proxy: {
    name: "pfProxy",
    0: {
      fieldName: "Proxy::workerCoreStorage",
      fieldType: "cl::t::objRef"
    },
    1: {
      fieldName: "Proxy::callbackEnabled",
      fieldType: "cl::t::bool"
    }
  }
};
Object.fromEntries(
  Object.entries(tonObjects).filter(([_15, v2]) => {
    return Object.keys(v2).length > 1;
  }).map(([k2, v2]) => [v2.name, k2])
);
var OPCODES = {
  OP_SetOwner: 3745877410n,
  OP_DeployChannel: 1894438739n,
  OP_DeployConnection: 3709853659n,
  OP_ForceAbort: 452840351n,
  OP_Burn: 740167509n,
  OP_Nilify: 1804534537n,
  OP_SetPeer: 1576500515n,
  OP_SetEnforcedOptions: 7710253n,
  OP_SetLzConfig: 2189430800n,
  OP_TransferOwnership: 3072442064n,
  OP_ClaimOwnership: 2792556744n,
  Counter_OP_INCREMENT: 1146069063n,
  Counter_OP_FAIL_NEXT_LZ_RECEIVE: 877369036n,
  op_transfer_notification: 1935855772n,
  op_transfer: 260734629n,
  BaseInterface_OP_INITIALIZE: 4133284232n,
  BaseInterface_OP_EVENT: 3812333683n,
  op_internal_transfer: 395134233n,
  op_excesses_copy: 3576854235n,
  op_burn: 1499400124n,
  op_burn_notification: 2078119902n,
  op_mint: 1680571655n,
  op_new_order: 4145565967n,
  op_execute: 1963556701n,
  op_execute_internal: 2737592767n,
  op_init: 2624846754n,
  op_approve: 2808226575n,
  op_approve_accepted: 2187369462n,
  op_approve_rejected: 2947491902n,
  Layerzero_OP_CHANNEL_SEND_CALLBACK: 2729835438n,
  Layerzero_OP_LZ_RECEIVE_PREPARE: 2547990604n,
  Layerzero_OP_LZ_RECEIVE_EXECUTE: 209421336n,
  Layerzero_OP_BURN_CALLBACK: 2512618370n,
  Layerzero_OP_NILIFY_CALLBACK: 2067737187n,
  Channel_OP_SET_EP_CONFIG_OAPP: 1726097956n,
  Channel_OP_MSGLIB_SEND_CALLBACK: 1109137957n,
  Channel_OP_CHANNEL_SEND: 1399843593n,
  Channel_OP_CHANNEL_COMMIT_PACKET: 1401474440n,
  Channel_OP_LZ_RECEIVE_PREPARE: 586394633n,
  Channel_OP_DEPOSIT_ZRO: 617148342n,
  Channel_OP_NILIFY: 1371314582n,
  Channel_OP_BURN: 882743973n,
  Channel_OP_FORCE_ABORT: 1504021698n,
  Channel_OP_LZ_RECEIVE_LOCK: 3077049286n,
  Channel_OP_SYNC_MSGLIB_CONNECTION: 2903748817n,
  Channel_OP_LZ_RECEIVE_EXECUTE_CALLBACK: 3400410529n,
  Channel_OP_NOTIFY_PACKET_EXECUTED: 2440175356n,
  Channel_OP_EMIT_LZ_RECEIVE_ALERT: 1963505712n,
  Controller_OP_DEPLOY_ENDPOINT: 845100267n,
  Controller_OP_DEPLOY_CHANNEL: 115623346n,
  Controller_OP_SET_EP_CONFIG_DEFAULTS: 4128322714n,
  Controller_OP_SET_EP_CONFIG_OAPP: 172926131n,
  Controller_OP_ADD_MSGLIB: 3874107087n,
  Controller_OP_DEPOSIT_ZRO: 2294071196n,
  Controller_OP_SET_ZRO_WALLET: 3875499446n,
  Controller_OP_TRANSFER_OWNERSHIP: 3232004383n,
  Controller_OP_CLAIM_OWNERSHIP: 3551207764n,
  Endpoint_OP_ENDPOINT_SEND: 3712918452n,
  Endpoint_OP_ENDPOINT_COMMIT_PACKET: 1571517594n,
  Endpoint_OP_SET_EP_CONFIG_DEFAULTS: 2606379067n,
  Endpoint_OP_SET_EP_CONFIG_OAPP: 2317840231n,
  Endpoint_OP_ADD_MSGLIB: 3132988998n,
  Endpoint_OP_GET_MSGLIB_INFO_CALLBACK: 3876417750n,
  MsglibManager_OP_GET_MSGLIB_INFO: 3960526418n,
  MsglibManager_OP_DEPLOY_CONNECTION: 2027065647n,
  MsglibManager_OP_SET_OAPP_MSGLIB_SEND_CONFIG: 2884327674n,
  MsglibManager_OP_SET_OAPP_MSGLIB_RECEIVE_CONFIG: 1134132220n,
  Msglib_OP_RETURN_QUOTE: 802745970n,
  MsglibConnection_OP_MSGLIB_CONNECTION_QUOTE: 1159903224n,
  MsglibConnection_OP_MSGLIB_CONNECTION_SEND: 1073919888n,
  MsglibConnection_OP_MSGLIB_CONNECTION_COMMIT_PACKET_CALLBACK: 1578602291n,
  MsglibConnection_OP_MSGLIB_CONNECTION_SYNC_CHANNEL_STATE: 2258172214n,
  SmlConnection_OP_SML_CONNECTION_COMMIT_PACKET: 3361396149n,
  SmlManager_OP_SET_MSGLIB_CONFIG: 1124227351n,
  SmlManager_OP_SML_MANAGER_COMMIT_PACKET_CALLBACK: 1185790402n,
  SmlManager_OP_SML_MANAGER_COMMIT_PACKET: 3047542339n,
  SmlManager_OP_SML_MANAGER_SEND: 1814685393n,
  UltraLightNode_OP_ULN_CONNECTION_VERIFY_CALLBACK: 1018396816n,
  Uln_OP_SET_DEFAULT_ULN_RECEIVE_CONFIG: 952716673n,
  Uln_OP_SET_DEFAULT_ULN_SEND_CONFIG: 2359379426n,
  Uln_OP_SET_OAPP_ULN_RECEIVE_CONFIG: 800000008n,
  Uln_OP_SET_OAPP_ULN_SEND_CONFIG: 4274358024n,
  Uln_OP_UPDATE_WORKER_FEELIB: 4166112245n,
  Uln_OP_REFILL_WORKER_RENT: 2886150109n,
  Uln_OP_SET_TREASURY_FEE_BPS: 3428043014n,
  Uln_OP_DEREGISTER_WORKER_FEELIB: 3203029798n,
  Uln_OP_COLLECT_WORKER_RENT: 1576272773n,
  Uln_OP_GC_ATTESTATIONS: 3110105199n,
  Uln_OP_SET_WORKER_FEELIB_STORAGE: 3511433676n,
  Uln_OP_ULN_COMMIT_PACKET: 683241591n,
  Uln_OP_ULN_VERIFY: 2571808590n,
  Uln_OP_ULN_QUOTE: 3694527094n,
  Uln_OP_ULN_SEND: 1575388051n,
  Uln_OP_SET_WORKER_FEELIB_STORAGE_CALLBACK: 263374215n,
  UlnConnection_OP_ULN_CONNECTION_VERIFY: 1321793546n,
  UlnConnection_OP_ULN_CONNECTION_COMMIT_PACKET: 4191386496n,
  UlnConnection_OP_SET_OAPP_ULN_RECEIVE_CONFIG: 1704710509n,
  UlnConnection_OP_SET_OAPP_ULN_SEND_CONFIG: 3959015374n,
  UlnConnection_OP_GARBAGE_COLLECT_INVALID_ATTESTATIONS: 1329648306n,
  UlnConnection_OP_GARBAGE_COLLECT_EXECUTED_NONCES: 3612453594n,
  UlnManager_OP_DEPLOY_ULN: 1733510307n,
  UlnManager_OP_SET_DEFAULT_ULN_RECEIVE_CONFIG: 3190693811n,
  UlnManager_OP_SET_DEFAULT_ULN_SEND_CONFIG: 3186360544n,
  UlnManager_OP_CLAIM_TREASURY_FEES: 1143535035n,
  UlnManager_OP_REGISTER_WORKER_FEELIB_BYTECODE: 2609353271n,
  UlnManager_OP_ADD_ULN_WORKER: 2837313722n,
  UlnManager_OP_SET_ADMIN_WORKERS: 645006573n,
  UlnManager_OP_SET_ULN_TREASURY_FEE_BPS: 995168407n,
  UlnManager_OP_TRANSFER_OWNERSHIP: 3652440771n,
  UlnManager_OP_CLAIM_OWNERSHIP: 2349687018n,
  Worker_OP_CLAIM_TON: 561383380n,
  Worker_OP_CLAIM_TON_FROM_PROXY: 3460520967n,
  Worker_OP_CALL_VIA_PROXY: 3779088362n,
  Worker_OP_SET_PROXY: 2393492047n,
  Worker_OP_SET_ADMINS: 1405693006n,
  Dvn_OP_SET_VERIFIERS: 594287520n,
  Dvn_OP_SET_QUORUM: 2581239666n,
  Dvn_OP_VERIFY: 2698320525n,
  Dvn_OP_SET_ADMINS_BY_QUORUM: 152793178n,
  Dvn_OP_SET_PROXY_ADMINS: 1285624859n,
  Executor_OP_NATIVE_DROP: 74966741n,
  Executor_OP_LZ_RECEIVE_PREPARE: 333322037n,
  Executor_OP_COMMIT_PACKET: 1097876869n,
  Executor_OP_NATIVE_DROP_AND_LZ_RECEIVE_PREPARE: 1812316278n,
  Executor_OP_LZ_RECEIVE_ALERT: 3844476787n,
  Executor_OP_SET_NATIVE_DROP_TOTAL_CAP: 1545183747n,
  PriceFeedCache_OP_UPDATE_PRICE: 3356097040n,
  PriceFeedCache_OP_UPDATE_NATIVE_PRICE: 2272264441n,
  PriceFeedCache_OP_UPDATE_OP_PRICES: 68094176n,
  PriceFeedCache_OP_UPDATE_OP_NATIVE_PRICES: 1736418267n,
  PriceFeedCache_OP_UPDATE_ARB_EXTENSION: 4188442884n,
  Proxy_OP_CALL_CONTRACT: 166741977n,
  Proxy_OP_EMIT_EVENT: 3445418055n,
  Proxy_OP_HANDLE_CALLBACK: 542230303n,
  Proxy_OP_TOGGLE_CALLBACK: 441875500n
};
Object.fromEntries(Object.entries(OPCODES).map(([key, value]) => [value.toString(), key]));
var stepByStep_exports = {};
__export75(stepByStep_exports, {
  executeFrom: () => __export0210,
  executeTill: () => __export1212
});
var package_exports = {};
__export75(package_exports, {
  Proxy: () => Proxy2,
  default: () => package_default,
  format: () => format,
  formatWithOptions: () => formatWithOptions,
  inspect: () => inspect,
  stripVTControlCharacters: () => stripVTControlCharacters,
  stylizeWithColor: () => stylizeWithColor,
  stylizeWithHTML: () => stylizeWithHTML
});
var __umdGlobal = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global !== "undefined" && global || typeof globalThis !== "undefined" && globalThis || {};
var __umdExports = [];
var __umdRoot = new Proxy(__umdGlobal, {
  get: function(target, name) {
    var value = Reflect.get(target, name);
    if (__umdExports.indexOf(name) !== -1) {
      return value;
    }
    if (typeof value === "function" && !value.prototype) {
      return value.bind(__umdGlobal);
    }
    return value;
  },
  set: function(target, name, value) {
    __umdExports.push(name);
    return Reflect.set(target, name, value);
  }
});
var __umdFunction = function ProxyFunction(code) {
  return __umdGlobal.Function(code).bind(__umdRoot);
};
__umdFunction.prototype = Function.prototype;
(function(window2, global302, globalThis2, self2, module452, exports452, Function2) {
  !function(t2, e2) {
    "object" == typeof exports452 && "object" == typeof module452 ? module452.exports = e2() : "function" == typeof define && define.amd ? define([], e2) : "object" == typeof exports452 ? exports452.util = e2() : t2.util = e2();
  }(this || __umdGlobal, () => (() => {
    var t2 = { 11: (t22, e22) => {
      function r22(t3) {
        return r22 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, r22(t3);
      }
      function n2(t3, e3) {
        for (var n22 = 0; n22 < e3.length; n22++) {
          var o22 = e3[n22];
          o22.enumerable = o22.enumerable || false, o22.configurable = true, "value" in o22 && (o22.writable = true), Object.defineProperty(t3, (i2 = function(t4, e4) {
            if ("object" !== r22(t4) || null === t4)
              return t4;
            var n3 = t4[Symbol.toPrimitive];
            if (void 0 !== n3) {
              var o3 = n3.call(t4, e4);
              if ("object" !== r22(o3))
                return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(o22.key, "string"), "symbol" === r22(i2) ? i2 : String(i2)), o22);
        }
        var i2;
      }
      var o2 = function() {
        function t3() {
          !function(t4, e4) {
            if (!(t4 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this || __umdGlobal, t3);
        }
        var e3, r3;
        return e3 = t3, r3 = [{ key: "hexSlice", value: function() {
          var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, e4 = arguments.length > 1 ? arguments[1] : void 0;
          return Array.prototype.map.call(this.slice(t4, e4), function(t5) {
            return ("00" + t5.toString(16)).slice(-2);
          }).join("");
        } }], r3 && n2(e3.prototype, r3), Object.defineProperty(e3, "prototype", { writable: false }), t3;
      }();
      e22.l = o2;
    }, 609: (t22, e22, r22) => {
      function n2(t3) {
        return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, n2(t3);
      }
      function o2(t3, e3) {
        var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
        if (!r3) {
          if (Array.isArray(t3) || (r3 = function(t4, e4) {
            if (t4) {
              if ("string" == typeof t4)
                return i2(t4, e4);
              var r4 = Object.prototype.toString.call(t4).slice(8, -1);
              return "Object" === r4 && t4.constructor && (r4 = t4.constructor.name), "Map" === r4 || "Set" === r4 ? Array.from(t4) : "Arguments" === r4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i2(t4, e4) : void 0;
            }
          }(t3)) || e3) {
            r3 && (t3 = r3);
            var n22 = 0, o22 = function() {
            };
            return { s: o22, n: function() {
              return n22 >= t3.length ? { done: true } : { done: false, value: t3[n22++] };
            }, e: function(t4) {
              throw t4;
            }, f: o22 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a22, c22 = true, l22 = false;
        return { s: function() {
          r3 = r3.call(t3);
        }, n: function() {
          var t4 = r3.next();
          return c22 = t4.done, t4;
        }, e: function(t4) {
          l22 = true, a22 = t4;
        }, f: function() {
          try {
            c22 || null == r3.return || r3.return();
          } finally {
            if (l22)
              throw a22;
          }
        } };
      }
      function i2(t3, e3) {
        (null == e3 || e3 > t3.length) && (e3 = t3.length);
        for (var r3 = 0, n22 = new Array(e3); r3 < e3; r3++)
          n22[r3] = t3[r3];
        return n22;
      }
      function a2(t3, e3) {
        var r3 = Object.keys(t3);
        if (Object.getOwnPropertySymbols) {
          var n22 = Object.getOwnPropertySymbols(t3);
          e3 && (n22 = n22.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
          })), r3.push.apply(r3, n22);
        }
        return r3;
      }
      function c2(t3) {
        for (var e3 = 1; e3 < arguments.length; e3++) {
          var r3 = null != arguments[e3] ? arguments[e3] : {};
          e3 % 2 ? a2(Object(r3), true).forEach(function(e4) {
            l2(t3, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r3)) : a2(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t3;
      }
      function l2(t3, e3, r3) {
        return (e3 = function(t4) {
          var e4 = function(t5, e5) {
            if ("object" !== n2(t5) || null === t5)
              return t5;
            var r4 = t5[Symbol.toPrimitive];
            if (void 0 !== r4) {
              var o22 = r4.call(t5, e5);
              if ("object" !== n2(o22))
                return o22;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t5);
          }(t4, "string");
          return "symbol" === n2(e4) ? e4 : String(e4);
        }(e3)) in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
      }
      var u2, p2, f2 = r22(497), y2 = f2.internalBinding, s2 = f2.Array, g2 = f2.ArrayIsArray, d2 = f2.ArrayPrototypeFilter, b2 = f2.ArrayPrototypeForEach, h2 = f2.ArrayPrototypeIncludes, v2 = f2.ArrayPrototypeIndexOf, m2 = f2.ArrayPrototypeJoin, S2 = f2.ArrayPrototypeMap, P2 = f2.ArrayPrototypePop, x2 = f2.ArrayPrototypePush, O2 = f2.ArrayPrototypePushApply, A2 = f2.ArrayPrototypeSlice, w2 = f2.ArrayPrototypeSplice, j2 = f2.ArrayPrototypeSort, E2 = f2.ArrayPrototypeUnshift, _15 = f2.BigIntPrototypeValueOf, F2 = f2.BooleanPrototypeValueOf, L2 = f2.DatePrototypeGetTime, R2 = f2.DatePrototypeToISOString, T2 = f2.DatePrototypeToString, I2 = f2.ErrorPrototypeToString, k2 = f2.FunctionPrototypeBind, z2 = f2.FunctionPrototypeCall, M2 = f2.FunctionPrototypeToString, B2 = f2.JSONStringify, N2 = f2.MapPrototypeGetSize, D2 = f2.MapPrototypeEntries, C2 = f2.MathFloor, H2 = f2.MathMax, G2 = f2.MathMin, W2 = f2.MathRound, U2 = f2.MathSqrt, V2 = f2.MathTrunc, $2 = f2.Number, Z2 = f2.NumberIsFinite, q2 = f2.NumberIsNaN, K2 = f2.NumberParseFloat, Y2 = f2.NumberParseInt, J2 = f2.NumberPrototypeToString, Q2 = f2.NumberPrototypeValueOf, X2 = f2.Object, tt2 = f2.ObjectAssign, et2 = f2.ObjectDefineProperty, rt = f2.ObjectGetOwnPropertyDescriptor, nt2 = f2.ObjectGetOwnPropertyNames, ot = f2.ObjectGetOwnPropertySymbols, it = f2.ObjectGetPrototypeOf, at = f2.ObjectIs, ct = f2.ObjectKeys, lt = f2.ObjectPrototypeHasOwnProperty, ut = f2.ObjectPrototypePropertyIsEnumerable, pt = f2.ObjectSeal, ft = f2.ObjectSetPrototypeOf, yt = f2.ReflectApply, st = f2.ReflectOwnKeys, gt = f2.RegExp, dt = f2.RegExpPrototypeExec, bt = f2.RegExpPrototypeSymbolReplace, ht = f2.RegExpPrototypeSymbolSplit, vt = f2.RegExpPrototypeToString, mt = f2.SafeStringIterator, St = f2.SafeMap, Pt = f2.SafeSet, xt = f2.SetPrototypeGetSize, Ot = f2.SetPrototypeValues, At = f2.String, wt = f2.StringPrototypeCharCodeAt, jt = f2.StringPrototypeCodePointAt, Et = f2.StringPrototypeIncludes, _t = f2.StringPrototypeIndexOf, Ft = f2.StringPrototypeLastIndexOf, Lt = f2.StringPrototypeNormalize, Rt = f2.StringPrototypePadEnd, Tt = f2.StringPrototypePadStart, It = f2.StringPrototypeRepeat, kt = f2.StringPrototypeReplaceAll, zt = f2.StringPrototypeSlice, Mt = f2.StringPrototypeSplit, Bt = f2.StringPrototypeEndsWith, Nt = f2.StringPrototypeStartsWith, Dt = f2.StringPrototypeToLowerCase, Ct = f2.StringPrototypeTrim, Ht = f2.StringPrototypeValueOf, Gt = f2.SymbolPrototypeToString, Wt = f2.SymbolPrototypeValueOf, Ut = f2.SymbolIterator, Vt = f2.SymbolToStringTag, $t = f2.TypedArrayPrototypeGetLength, Zt = f2.TypedArrayPrototypeGetSymbolToStringTag, qt = f2.Uint8Array, Kt = f2.globalThis, Yt = f2.uncurryThis, Jt = r22(742), Qt = Jt.constants, Xt = Qt.ALL_PROPERTIES, te = Qt.ONLY_ENUMERABLE, ee = Qt.kPending, re = Qt.kRejected, ne = Jt.getOwnNonIndexProperties, oe = Jt.getPromiseDetails, ie = Jt.getProxyDetails, ae = Jt.previewEntries, ce = Jt.getConstructorName, le = Jt.getExternalValue, ue = Jt.Proxy, pe = r22(992), fe = pe.customInspectSymbol, ye = pe.isError, se = pe.join, ge = pe.removeColors, de = r22(744).isStackOverflowError, be = r22(926), he = be.isAsyncFunction, ve = be.isGeneratorFunction, me = be.isAnyArrayBuffer, Se = be.isArrayBuffer, Pe = be.isArgumentsObject, xe = be.isBoxedPrimitive, Oe = be.isDataView, Ae = be.isExternal, we = be.isMap, je = be.isMapIterator, Ee = be.isModuleNamespaceObject, _e = be.isNativeError, Fe = be.isPromise, Le = be.isSet, Re = be.isSetIterator, Te = be.isWeakMap, Ie = be.isWeakSet, ke = be.isRegExp, ze = be.isDate, Me = be.isTypedArray, Be = be.isStringObject, Ne = be.isNumberObject, De = be.isBooleanObject, Ce = be.isBigIntObject, He = r22(780), Ge = r22(337).BuiltinModule, We = r22(52), Ue = We.validateObject, Ve = We.validateString;
      var $e, Ze, qe, Ke, Ye, Je = new Pt(d2(nt2(Kt), function(t3) {
        return null !== dt(/^[A-Z][a-zA-Z0-9]+$/, t3);
      })), Qe = function(t3) {
        return void 0 === t3 && void 0 !== t3;
      }, Xe = pt({ showHidden: false, depth: 2, colors: false, customInspect: true, showProxy: false, maxArrayLength: 100, maxStringLength: 1e4, breakLength: 80, compact: 3, sorted: false, getters: false, numericSeparator: false });
      try {
        $e = new gt("[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]"), Ze = new gt("[\0-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]", "g"), qe = new gt("[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]"), Ke = new gt("[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]", "g");
        var tr = new gt("(?<=\\n)");
        Ye = function(t3) {
          return ht(tr, t3);
        };
      } catch (t3) {
        $e = /[\x00-\x1f\x27\x5c\x7f-\x9f]/, Ze = /[\x00-\x1f\x27\x5c\x7f-\x9f]/g, qe = /[\x00-\x1f\x5c\x7f-\x9f]/, Ke = /[\x00-\x1f\x5c\x7f-\x9f]/g, Ye = function(t4) {
          var e3 = ht(/\n/, t4), r3 = P2(e3), n22 = S2(e3, function(t5) {
            return t5 + "\n";
          });
          return "" !== r3 && n22.push(r3), n22;
        };
      }
      var er, rr = /^[a-zA-Z_][a-zA-Z_0-9]*$/, nr = /^(0|[1-9][0-9]*)$/, or = /^ {4}at (?:[^/\\(]+ \(|)node:(.+):\d+:\d+\)?$/, ir = /[/\\]node_modules[/\\](.+?)(?=[/\\])/g, ar = /^(\s+[^(]*?)\s*{/, cr = /(\/\/.*?\n)|(\/\*(.|\n)*?\*\/)/g, lr = ["\\x00", "\\x01", "\\x02", "\\x03", "\\x04", "\\x05", "\\x06", "\\x07", "\\b", "\\t", "\\n", "\\x0B", "\\f", "\\r", "\\x0E", "\\x0F", "\\x10", "\\x11", "\\x12", "\\x13", "\\x14", "\\x15", "\\x16", "\\x17", "\\x18", "\\x19", "\\x1A", "\\x1B", "\\x1C", "\\x1D", "\\x1E", "\\x1F", "", "", "", "", "", "", "", "\\'", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "\\\\", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "\\x7F", "\\x80", "\\x81", "\\x82", "\\x83", "\\x84", "\\x85", "\\x86", "\\x87", "\\x88", "\\x89", "\\x8A", "\\x8B", "\\x8C", "\\x8D", "\\x8E", "\\x8F", "\\x90", "\\x91", "\\x92", "\\x93", "\\x94", "\\x95", "\\x96", "\\x97", "\\x98", "\\x99", "\\x9A", "\\x9B", "\\x9C", "\\x9D", "\\x9E", "\\x9F"], ur = new gt("[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)|(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))", "g");
      function pr(t3, e3) {
        var r3 = { budget: {}, indentationLvl: 0, seen: [], currentDepth: 0, stylize: vr, showHidden: Xe.showHidden, depth: Xe.depth, colors: Xe.colors, customInspect: Xe.customInspect, showProxy: Xe.showProxy, maxArrayLength: Xe.maxArrayLength, maxStringLength: Xe.maxStringLength, breakLength: Xe.breakLength, compact: Xe.compact, sorted: Xe.sorted, getters: Xe.getters, numericSeparator: Xe.numericSeparator };
        if (arguments.length > 1) {
          if (arguments.length > 2 && (void 0 !== arguments[2] && (r3.depth = arguments[2]), arguments.length > 3 && void 0 !== arguments[3] && (r3.colors = arguments[3])), "boolean" == typeof e3)
            r3.showHidden = e3;
          else if (e3)
            for (var n22 = ct(e3), o22 = 0; o22 < n22.length; ++o22) {
              var i22 = n22[o22];
              lt(Xe, i22) || "stylize" === i22 ? r3[i22] = e3[i22] : void 0 === r3.userOptions && (r3.userOptions = e3);
            }
        }
        return r3.colors && (r3.stylize = hr), null === r3.maxArrayLength && (r3.maxArrayLength = 1 / 0), null === r3.maxStringLength && (r3.maxStringLength = 1 / 0), jr(r3, t3, 0);
      }
      pr.custom = fe, et2(pr, "defaultOptions", { __proto__: null, get: function() {
        return Xe;
      }, set: function(t3) {
        return Ue(t3, "options"), tt2(Xe, t3);
      } });
      var fr = 39, yr = 49;
      function sr(t3, e3) {
        et2(pr.colors, e3, { __proto__: null, get: function() {
          return this[t3];
        }, set: function(e4) {
          this[t3] = e4;
        }, configurable: true, enumerable: false });
      }
      function gr(t3, e3) {
        return -1 === e3 ? '"'.concat(t3, '"') : -2 === e3 ? "`".concat(t3, "`") : "'".concat(t3, "'");
      }
      function dr(t3) {
        var e3 = wt(t3);
        return lr.length > e3 ? lr[e3] : "\\u".concat(J2(e3, 16));
      }
      function br(t3) {
        var e3 = $e, r3 = Ze, n22 = 39;
        if (Et(t3, "'") && (Et(t3, '"') ? Et(t3, "`") || Et(t3, "${") || (n22 = -2) : n22 = -1, 39 !== n22 && (e3 = qe, r3 = Ke)), t3.length < 5e3 && null === dt(e3, t3))
          return gr(t3, n22);
        if (t3.length > 100)
          return gr(t3 = bt(r3, t3, dr), n22);
        for (var o22 = "", i22 = 0, a22 = 0; a22 < t3.length; a22++) {
          var c22 = wt(t3, a22);
          if (c22 === n22 || 92 === c22 || c22 < 32 || c22 > 126 && c22 < 160)
            o22 += i22 === a22 ? lr[c22] : "".concat(zt(t3, i22, a22)).concat(lr[c22]), i22 = a22 + 1;
          else if (c22 >= 55296 && c22 <= 57343) {
            if (c22 <= 56319 && a22 + 1 < t3.length) {
              var l22 = wt(t3, a22 + 1);
              if (l22 >= 56320 && l22 <= 57343) {
                a22++;
                continue;
              }
            }
            o22 += "".concat(zt(t3, i22, a22), "\\u").concat(J2(c22, 16)), i22 = a22 + 1;
          }
        }
        return i22 !== t3.length && (o22 += zt(t3, i22)), gr(o22, n22);
      }
      function hr(t3, e3) {
        var r3 = pr.styles[e3];
        if (void 0 !== r3) {
          var n22 = pr.colors[r3];
          if (void 0 !== n22)
            return "\x1B[".concat(n22[0], "m").concat(t3, "\x1B[").concat(n22[1], "m");
        }
        return t3;
      }
      function vr(t3) {
        return t3;
      }
      function mr() {
        return [];
      }
      function Sr(t3, e3) {
        try {
          return t3 instanceof e3;
        } catch (t4) {
          return false;
        }
      }
      function Pr(t3, e3, r3, n22) {
        for (var o22, i22 = t3; t3 || Qe(t3); ) {
          var a22 = rt(t3, "constructor");
          if (void 0 !== a22 && "function" == typeof a22.value && "" !== a22.value.name && Sr(i22, a22.value))
            return void 0 === n22 || o22 === t3 && Je.has(a22.value.name) || xr(e3, i22, o22 || i22, r3, n22), At(a22.value.name);
          t3 = it(t3), void 0 === o22 && (o22 = t3);
        }
        if (null === o22)
          return null;
        var l22 = ce(i22);
        if (r3 > e3.depth && null !== e3.depth)
          return "".concat(l22, " <Complex prototype>");
        var u22 = Pr(o22, e3, r3 + 1, n22);
        return null === u22 ? "".concat(l22, " <").concat(pr(o22, c2(c2({}, e3), {}, { customInspect: false, depth: -1 })), ">") : "".concat(l22, " <").concat(u22, ">");
      }
      function xr(t3, e3, r3, n22, i22) {
        var a22, c22, l22 = 0;
        do {
          if (0 !== l22 || e3 === r3) {
            if (null === (r3 = it(r3)))
              return;
            var u22 = rt(r3, "constructor");
            if (void 0 !== u22 && "function" == typeof u22.value && Je.has(u22.value.name))
              return;
          }
          0 === l22 ? c22 = new Pt() : b2(a22, function(t4) {
            return c22.add(t4);
          }), a22 = st(r3), x2(t3.seen, e3);
          var p22, f22 = o2(a22);
          try {
            for (f22.s(); !(p22 = f22.n()).done; ) {
              var y22 = p22.value;
              if (!("constructor" === y22 || lt(e3, y22) || 0 !== l22 && c22.has(y22))) {
                var s22 = rt(r3, y22);
                if ("function" != typeof s22.value) {
                  var g22 = Jr(t3, r3, n22, y22, 0, s22, e3);
                  t3.colors ? x2(i22, "\x1B[2m".concat(g22, "\x1B[22m")) : x2(i22, g22);
                }
              }
            }
          } catch (t4) {
            f22.e(t4);
          } finally {
            f22.f();
          }
          P2(t3.seen);
        } while (3 != ++l22);
      }
      function Or(t3, e3, r3) {
        var n22 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
        return null === t3 ? "" !== e3 && r3 !== e3 ? "[".concat(r3).concat(n22, ": null prototype] [").concat(e3, "] ") : "[".concat(r3).concat(n22, ": null prototype] ") : "" !== e3 && t3 !== e3 ? "".concat(t3).concat(n22, " [").concat(e3, "] ") : "".concat(t3).concat(n22, " ");
      }
      function Ar(t3, e3) {
        var r3, n22 = ot(t3);
        if (e3)
          r3 = nt2(t3), 0 !== n22.length && O2(r3, n22);
        else {
          try {
            r3 = ct(t3);
          } catch (e4) {
            He(_e(e4) && "ReferenceError" === e4.name && Ee(t3)), r3 = nt2(t3);
          }
          0 !== n22.length && O2(r3, d2(n22, function(e4) {
            return ut(t3, e4);
          }));
        }
        return r3;
      }
      function wr(t3, e3, r3) {
        var n22 = "";
        return null === e3 && (n22 = ce(t3)) === r3 && (n22 = "Object"), Or(e3, r3, n22);
      }
      function jr(t3, e3, i22, a22) {
        if ("object" !== n2(e3) && "function" != typeof e3 && !Qe(e3))
          return Mr(t3.stylize, e3, t3);
        if (null === e3)
          return t3.stylize("null", "null");
        var l22 = e3, u22 = ie(e3, !!t3.showProxy);
        if (void 0 !== u22) {
          if (null === u22 || null === u22[0])
            return t3.stylize("<Revoked Proxy>", "special");
          if (t3.showProxy)
            return function(t4, e4, r3) {
              if (r3 > t4.depth && null !== t4.depth)
                return t4.stylize("Proxy [Array]", "special");
              r3 += 1, t4.indentationLvl += 2;
              var n22 = [jr(t4, e4[0], r3), jr(t4, e4[1], r3)];
              return t4.indentationLvl -= 2, Xr(t4, n22, "", ["Proxy [", "]"], 2, r3);
            }(t3, u22, i22);
          e3 = u22;
        }
        if (t3.customInspect) {
          var y22 = e3[fe];
          if ("function" == typeof y22 && y22 !== pr && (!e3.constructor || e3.constructor.prototype !== e3)) {
            var s22 = null === t3.depth ? null : t3.depth - i22, d22 = z2(y22, l22, s22, function(t4, e4) {
              var r3 = c2({ stylize: t4.stylize, showHidden: t4.showHidden, depth: t4.depth, colors: t4.colors, customInspect: t4.customInspect, showProxy: t4.showProxy, maxArrayLength: t4.maxArrayLength, maxStringLength: t4.maxStringLength, breakLength: t4.breakLength, compact: t4.compact, sorted: t4.sorted, getters: t4.getters, numericSeparator: t4.numericSeparator }, t4.userOptions);
              if (e4) {
                ft(r3, null);
                var i3, a3 = o2(ct(r3));
                try {
                  for (a3.s(); !(i3 = a3.n()).done; ) {
                    var l3 = i3.value;
                    "object" !== n2(r3[l3]) && "function" != typeof r3[l3] || null === r3[l3] || delete r3[l3];
                  }
                } catch (t5) {
                  a3.e(t5);
                } finally {
                  a3.f();
                }
                r3.stylize = ft(function(e5, r4) {
                  var n22;
                  try {
                    n22 = "".concat(t4.stylize(e5, r4));
                  } catch (t5) {
                  }
                  return "string" != typeof n22 ? e5 : n22;
                }, null);
              }
              return r3;
            }(t3, void 0 !== u22 || !(l22 instanceof X2)), pr);
            if (d22 !== l22)
              return "string" != typeof d22 ? jr(t3, d22, i22) : kt(d22, "\n", "\n".concat(It(" ", t3.indentationLvl)));
          }
        }
        if (t3.seen.includes(e3)) {
          var b22 = 1;
          return void 0 === t3.circular ? (t3.circular = new St(), t3.circular.set(e3, b22)) : void 0 === (b22 = t3.circular.get(e3)) && (b22 = t3.circular.size + 1, t3.circular.set(e3, b22)), t3.stylize("[Circular *".concat(b22, "]"), "special");
        }
        return function(t4, e4, n22, i3) {
          var a3, c22;
          t4.showHidden && (n22 <= t4.depth || null === t4.depth) && (c22 = []);
          var l3 = Pr(e4, t4, n22, c22);
          void 0 !== c22 && 0 === c22.length && (c22 = void 0);
          var u3 = e4[Vt];
          ("string" != typeof u3 || "" !== u3 && (t4.showHidden ? lt : ut)(e4, Vt)) && (u3 = "");
          var y3, s3, d3 = "", b3 = mr, S22 = true, P22 = 0, I22 = t4.showHidden ? Xt : te, z22 = 0;
          if (Ut in e4 || null === l3)
            if (S22 = false, g2(e4)) {
              var B22 = "Array" !== l3 || "" !== u3 ? Or(l3, u3, "Array", "(".concat(e4.length, ")")) : "";
              if (a3 = ne(e4, I22), y3 = ["".concat(B22, "["), "]"], 0 === e4.length && 0 === a3.length && void 0 === c22)
                return "".concat(y3[0], "]");
              z22 = 2, b3 = Cr;
            } else if (Le(e4)) {
              var C22 = xt(e4), H22 = Or(l3, u3, "Set", "(".concat(C22, ")"));
              if (a3 = Ar(e4, t4.showHidden), b3 = k2(Gr, null, null !== l3 ? e4 : Ot(e4)), 0 === C22 && 0 === a3.length && void 0 === c22)
                return "".concat(H22, "{}");
              y3 = ["".concat(H22, "{"), "}"];
            } else if (we(e4)) {
              var G22 = N2(e4), W22 = Or(l3, u3, "Map", "(".concat(G22, ")"));
              if (a3 = Ar(e4, t4.showHidden), b3 = k2(Wr, null, null !== l3 ? e4 : D2(e4)), 0 === G22 && 0 === a3.length && void 0 === c22)
                return "".concat(W22, "{}");
              y3 = ["".concat(W22, "{"), "}"];
            } else if (Me(e4)) {
              a3 = ne(e4, I22);
              var U22 = e4, V22 = "";
              null === l3 && (V22 = Zt(e4), U22 = new f2[V22](e4));
              var $22 = $t(e4), Z22 = Or(l3, u3, V22, "(".concat($22, ")"));
              if (y3 = ["".concat(Z22, "["), "]"], 0 === e4.length && 0 === a3.length && !t4.showHidden)
                return "".concat(y3[0], "]");
              b3 = k2(Hr, null, U22, $22), z22 = 2;
            } else
              je(e4) ? (a3 = Ar(e4, t4.showHidden), y3 = Er("Map", u3), b3 = k2(Kr, null, y3)) : Re(e4) ? (a3 = Ar(e4, t4.showHidden), y3 = Er("Set", u3), b3 = k2(Kr, null, y3)) : S22 = true;
          if (S22)
            if (a3 = Ar(e4, t4.showHidden), y3 = ["{", "}"], "Object" === l3) {
              if (Pe(e4) ? y3[0] = "[Arguments] {" : "" !== u3 && (y3[0] = "".concat(Or(l3, u3, "Object"), "{")), 0 === a3.length && void 0 === c22)
                return "".concat(y3[0], "}");
            } else if ("function" == typeof e4) {
              if (d3 = function(t5, e5, r3) {
                var n3 = M2(t5);
                if (Nt(n3, "class") && Bt(n3, "}")) {
                  var o22 = zt(n3, 5, -1), i4 = _t(o22, "{");
                  if (-1 !== i4 && (!Et(zt(o22, 0, i4), "(") || null !== dt(ar, bt(cr, o22))))
                    return function(t6, e6, r4) {
                      var n4 = lt(t6, "name") && t6.name || "(anonymous)", o3 = "class ".concat(n4);
                      if ("Function" !== e6 && null !== e6 && (o3 += " [".concat(e6, "]")), "" !== r4 && e6 !== r4 && (o3 += " [".concat(r4, "]")), null !== e6) {
                        var i5 = it(t6).name;
                        i5 && (o3 += " extends ".concat(i5));
                      } else
                        o3 += " extends [null prototype]";
                      return "[".concat(o3, "]");
                    }(t5, e5, r3);
                }
                var a4 = "Function";
                ve(t5) && (a4 = "Generator".concat(a4)), he(t5) && (a4 = "Async".concat(a4));
                var c3 = "[".concat(a4);
                return null === e5 && (c3 += " (null prototype)"), "" === t5.name ? c3 += " (anonymous)" : c3 += ": ".concat(t5.name), c3 += "]", e5 !== a4 && null !== e5 && (c3 += " ".concat(e5)), "" !== r3 && e5 !== r3 && (c3 += " [".concat(r3, "]")), c3;
              }(e4, l3, u3), 0 === a3.length && void 0 === c22)
                return t4.stylize(d3, "special");
            } else if (ke(e4)) {
              d3 = vt(null !== l3 ? e4 : new gt(e4));
              var K22 = Or(l3, u3, "RegExp");
              if ("RegExp " !== K22 && (d3 = "".concat(K22).concat(d3)), 0 === a3.length && void 0 === c22 || n22 > t4.depth && null !== t4.depth)
                return t4.stylize(d3, "regexp");
            } else if (ze(e4)) {
              d3 = q2(L2(e4)) ? T2(e4) : R2(e4);
              var Y22 = Or(l3, u3, "Date");
              if ("Date " !== Y22 && (d3 = "".concat(Y22).concat(d3)), 0 === a3.length && void 0 === c22)
                return t4.stylize(d3, "date");
            } else if (ye(e4)) {
              if (d3 = function(t5, e5, n3, i4, a4) {
                var c3 = null != t5.name ? At(t5.name) : "Error", l4 = Fr(t5);
                ((function(t6, e6, r3, n4) {
                  if (!t6.showHidden && 0 !== e6.length)
                    for (var o22 = 0, i5 = ["name", "message", "stack"]; o22 < i5.length; o22++) {
                      var a5 = i5[o22], c4 = v2(e6, a5);
                      -1 !== c4 && Et(n4, r3[a5]) && w2(e6, c4, 1);
                    }
                }))(i4, a4, t5, l4), !("cause" in t5) || 0 !== a4.length && h2(a4, "cause") || x2(a4, "cause"), !g2(t5.errors) || 0 !== a4.length && h2(a4, "errors") || x2(a4, "errors"), l4 = function(t6, e6, r3, n4) {
                  var o22 = r3.length;
                  if (null === e6 || Bt(r3, "Error") && Nt(t6, r3) && (t6.length === o22 || ":" === t6[o22] || "\n" === t6[o22])) {
                    var i5 = "Error";
                    if (null === e6) {
                      var a5 = dt(/^([A-Z][a-z_ A-Z0-9[\]()-]+)(?::|\n {4}at)/, t6) || dt(/^([a-z_A-Z0-9-]*Error)$/, t6);
                      o22 = (i5 = a5 && a5[1] || "").length, i5 = i5 || "Error";
                    }
                    var c4 = zt(Or(e6, n4, i5), 0, -1);
                    r3 !== c4 && (t6 = Et(c4, r3) ? 0 === o22 ? "".concat(c4, ": ").concat(t6) : "".concat(c4).concat(zt(t6, o22)) : "".concat(c4, " [").concat(r3, "]").concat(zt(t6, o22)));
                  }
                  return t6;
                }(l4, e5, c3, n3);
                var u4 = t5.message && _t(l4, t5.message) || -1;
                -1 !== u4 && (u4 += t5.message.length);
                var f22, y4 = _t(l4, "\n    at", u4);
                if (-1 === y4)
                  l4 = "[".concat(l4, "]");
                else {
                  var s4 = zt(l4, 0, y4), d4 = function(t6, e6, r3) {
                    var n4 = Mt(r3, "\n");
                    if (e6.cause && ye(e6.cause)) {
                      var o22 = Fr(e6.cause), i5 = _t(o22, "\n    at");
                      if (-1 !== i5) {
                        var a5 = _r(n4, Mt(zt(o22, i5 + 1), "\n")), c4 = a5.len, l5 = a5.offset;
                        if (c4 > 0) {
                          var u5 = c4 - 2, p22 = "    ... ".concat(u5, " lines matching cause stack trace ...");
                          n4.splice(l5 + 1, u5, t6.stylize(p22, "undefined"));
                        }
                      }
                    }
                    return n4;
                  }(i4, t5, zt(l4, y4 + 1));
                  if (i4.colors) {
                    var b4, S3, P3 = function() {
                      var t6;
                      try {
                        t6 = process.cwd();
                      } catch (t7) {
                        return;
                      }
                      return t6;
                    }(), O22 = o2(d4);
                    try {
                      for (O22.s(); !(S3 = O22.n()).done; ) {
                        var A22 = S3.value, j22 = dt(or, A22);
                        if (null !== j22 && Ge.exists(j22[1]))
                          s4 += "\n".concat(i4.stylize(A22, "undefined"));
                        else {
                          if (s4 += "\n", A22 = Lr(i4, A22), void 0 !== P3) {
                            var E22 = Rr(i4, A22, P3);
                            E22 === A22 && (E22 = Rr(i4, A22, b4 = null == b4 ? (f22 = P3, (p2 = null == p2 ? r22(299) : p2).pathToFileURL(f22).href) : b4)), A22 = E22;
                          }
                          s4 += A22;
                        }
                      }
                    } catch (t6) {
                      O22.e(t6);
                    } finally {
                      O22.f();
                    }
                  } else
                    s4 += "\n".concat(m2(d4, "\n"));
                  l4 = s4;
                }
                if (0 !== i4.indentationLvl) {
                  var _22 = It(" ", i4.indentationLvl);
                  l4 = kt(l4, "\n", "\n".concat(_22));
                }
                return l4;
              }(e4, l3, u3, t4, a3), 0 === a3.length && void 0 === c22)
                return d3;
            } else if (me(e4)) {
              var J22 = Or(l3, u3, Se(e4) ? "ArrayBuffer" : "SharedArrayBuffer");
              if (void 0 === i3)
                b3 = Dr;
              else if (0 === a3.length && void 0 === c22)
                return J22 + "{ byteLength: ".concat(kr(t4.stylize, e4.byteLength, false), " }");
              y3[0] = "".concat(J22, "{"), E2(a3, "byteLength");
            } else if (Oe(e4))
              y3[0] = "".concat(Or(l3, u3, "DataView"), "{"), E2(a3, "byteLength", "byteOffset", "buffer");
            else if (Fe(e4))
              y3[0] = "".concat(Or(l3, u3, "Promise"), "{"), b3 = Yr;
            else if (Ie(e4))
              y3[0] = "".concat(Or(l3, u3, "WeakSet"), "{"), b3 = t4.showHidden ? Zr : $r;
            else if (Te(e4))
              y3[0] = "".concat(Or(l3, u3, "WeakMap"), "{"), b3 = t4.showHidden ? qr : $r;
            else if (Ee(e4))
              y3[0] = "".concat(Or(l3, u3, "Module"), "{"), b3 = Br.bind(null, a3);
            else if (xe(e4)) {
              if (d3 = function(t5, e5, r3, n3, o22) {
                var i4, a4;
                Ne(t5) ? (i4 = Q2, a4 = "Number") : Be(t5) ? (i4 = Ht, a4 = "String", r3.splice(0, t5.length)) : De(t5) ? (i4 = F2, a4 = "Boolean") : Ce(t5) ? (i4 = _15, a4 = "BigInt") : (i4 = Wt, a4 = "Symbol");
                var c3 = "[".concat(a4);
                return a4 !== n3 && (c3 += null === n3 ? " (null prototype)" : " (".concat(n3, ")")), c3 += ": ".concat(Mr(vr, i4(t5), e5), "]"), "" !== o22 && o22 !== n3 && (c3 += " [".concat(o22, "]")), 0 !== r3.length || e5.stylize === vr ? c3 : e5.stylize(c3, Dt(a4));
              }(e4, t4, a3, l3, u3), 0 === a3.length && void 0 === c22)
                return d3;
            } else {
              if (0 === a3.length && void 0 === c22) {
                if (Ae(e4)) {
                  var X22 = le(e4).toString(16);
                  return t4.stylize("[External: ".concat(X22, "]"), "special");
                }
                return "".concat(wr(e4, l3, u3), "{}");
              }
              y3[0] = "".concat(wr(e4, l3, u3), "{");
            }
          if (n22 > t4.depth && null !== t4.depth) {
            var tt22 = zt(wr(e4, l3, u3), 0, -1);
            return null !== l3 && (tt22 = "[".concat(tt22, "]")), t4.stylize(tt22, "special");
          }
          n22 += 1, t4.seen.push(e4), t4.currentDepth = n22;
          var et22 = t4.indentationLvl;
          try {
            for (s3 = b3(t4, e4, n22), P22 = 0; P22 < a3.length; P22++)
              x2(s3, Jr(t4, e4, n22, a3[P22], z22));
            void 0 !== c22 && O2(s3, c22);
          } catch (r3) {
            return function(t5, e5, r4, n3) {
              if (de(e5))
                return t5.seen.pop(), t5.indentationLvl = n3, t5.stylize("[".concat(r4, ": Inspection interrupted ") + "prematurely. Maximum call stack size exceeded.]", "special");
              He.fail(e5.stack);
            }(t4, r3, zt(wr(e4, l3, u3), 0, -1), et22);
          }
          if (void 0 !== t4.circular) {
            var rt2 = t4.circular.get(e4);
            if (void 0 !== rt2) {
              var nt22 = t4.stylize("<ref *".concat(rt2, ">"), "special");
              true !== t4.compact ? d3 = "" === d3 ? nt22 : "".concat(nt22, " ").concat(d3) : y3[0] = "".concat(nt22, " ").concat(y3[0]);
            }
          }
          if (t4.seen.pop(), t4.sorted) {
            var ot2 = true === t4.sorted ? void 0 : t4.sorted;
            if (0 === z22)
              j2(s3, ot2);
            else if (a3.length > 1) {
              var at2 = j2(A2(s3, s3.length - a3.length), ot2);
              E2(at2, s3, s3.length - a3.length, a3.length), yt(w2, null, at2);
            }
          }
          var ct2 = Xr(t4, s3, d3, y3, z22, n22, e4), pt2 = (t4.budget[t4.indentationLvl] || 0) + ct2.length;
          return t4.budget[t4.indentationLvl] = pt2, pt2 > Math.pow(2, 27) && (t4.depth = -1), ct2;
        }(t3, e3, i22, a22);
      }
      function Er(t3, e3) {
        return e3 !== "".concat(t3, " Iterator") && ("" !== e3 && (e3 += "] ["), e3 += "".concat(t3, " Iterator")), ["[".concat(e3, "] {"), "}"];
      }
      function _r(t3, e3) {
        for (var r3 = 0; r3 < t3.length - 3; r3++) {
          var n22 = e3.indexOf(t3[r3]);
          if (-1 !== n22) {
            var o22 = e3.length - n22;
            if (o22 > 3) {
              for (var i22 = 1, a22 = G2(t3.length - r3, o22); a22 > i22 && t3[r3 + i22] === e3[n22 + i22]; )
                i22++;
              if (i22 > 3)
                return { len: i22, offset: r3 };
            }
          }
        }
        return { len: 0, offset: 0 };
      }
      function Fr(t3) {
        return t3.stack ? At(t3.stack) : I2(t3);
      }
      function Lr(t3, e3) {
        for (var r3, n22 = "", o22 = 0; null !== (r3 = ir.exec(e3)); )
          n22 += zt(e3, o22, r3.index + 14), n22 += t3.stylize(r3[1], "module"), o22 = r3.index + r3[0].length;
        return 0 !== o22 && (e3 = n22 + zt(e3, o22)), e3;
      }
      function Rr(t3, e3, r3) {
        var n22 = _t(e3, r3), o22 = "", i22 = r3.length;
        if (-1 !== n22) {
          "file://" === zt(e3, n22 - 7, n22) && (i22 += 7, n22 -= 7);
          var a22 = "(" === e3[n22 - 1] ? n22 - 1 : n22, c22 = a22 !== n22 && Bt(e3, ")") ? -1 : e3.length, l22 = n22 + i22 + 1, u22 = zt(e3, a22, l22);
          o22 += zt(e3, 0, a22), o22 += t3.stylize(u22, "undefined"), o22 += zt(e3, l22, c22), -1 === c22 && (o22 += t3.stylize(")", "undefined"));
        } else
          o22 += e3;
        return o22;
      }
      function Tr(t3) {
        for (var e3 = "", r3 = t3.length, n22 = Nt(t3, "-") ? 1 : 0; r3 >= n22 + 4; r3 -= 3)
          e3 = "_".concat(zt(t3, r3 - 3, r3)).concat(e3);
        return r3 === t3.length ? t3 : "".concat(zt(t3, 0, r3)).concat(e3);
      }
      pr.colors = { __proto__: null, reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], blink: [5, 25], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29], doubleunderline: [21, 24], black: [30, fr], red: [31, fr], green: [32, fr], yellow: [33, fr], blue: [34, fr], magenta: [35, fr], cyan: [36, fr], white: [37, fr], bgBlack: [40, yr], bgRed: [41, yr], bgGreen: [42, yr], bgYellow: [43, yr], bgBlue: [44, yr], bgMagenta: [45, yr], bgCyan: [46, yr], bgWhite: [47, yr], framed: [51, 54], overlined: [53, 55], gray: [90, fr], redBright: [91, fr], greenBright: [92, fr], yellowBright: [93, fr], blueBright: [94, fr], magentaBright: [95, fr], cyanBright: [96, fr], whiteBright: [97, fr], bgGray: [100, yr], bgRedBright: [101, yr], bgGreenBright: [102, yr], bgYellowBright: [103, yr], bgBlueBright: [104, yr], bgMagentaBright: [105, yr], bgCyanBright: [106, yr], bgWhiteBright: [107, yr] }, sr("gray", "grey"), sr("gray", "blackBright"), sr("bgGray", "bgGrey"), sr("bgGray", "bgBlackBright"), sr("dim", "faint"), sr("strikethrough", "crossedout"), sr("strikethrough", "strikeThrough"), sr("strikethrough", "crossedOut"), sr("hidden", "conceal"), sr("inverse", "swapColors"), sr("inverse", "swapcolors"), sr("doubleunderline", "doubleUnderline"), pr.styles = tt2({ __proto__: null }, { special: "cyan", number: "yellow", bigint: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", symbol: "green", date: "magenta", regexp: "red", module: "underline" });
      var Ir = function(t3) {
        return "... ".concat(t3, " more item").concat(t3 > 1 ? "s" : "");
      };
      function kr(t3, e3, r3) {
        if (!r3)
          return at(e3, -0) ? t3("-0", "number") : t3("".concat(e3), "number");
        var n22 = V2(e3), o22 = At(n22);
        return n22 === e3 ? !Z2(e3) || Et(o22, "e") ? t3(o22, "number") : t3("".concat(Tr(o22)), "number") : q2(e3) ? t3(o22, "number") : t3("".concat(Tr(o22), ".").concat(function(t4) {
          for (var e4 = "", r4 = 0; r4 < t4.length - 3; r4 += 3)
            e4 += "".concat(zt(t4, r4, r4 + 3), "_");
          return 0 === r4 ? t4 : "".concat(e4).concat(zt(t4, r4));
        }(zt(At(e3), o22.length + 1))), "number");
      }
      function zr(t3, e3, r3) {
        var n22 = At(e3);
        return t3("".concat(r3 ? Tr(n22) : n22, "n"), "bigint");
      }
      function Mr(t3, e3, r3) {
        if ("string" == typeof e3) {
          var n22 = "";
          if (e3.length > r3.maxStringLength) {
            var o22 = e3.length - r3.maxStringLength;
            e3 = zt(e3, 0, r3.maxStringLength), n22 = "... ".concat(o22, " more character").concat(o22 > 1 ? "s" : "");
          }
          return true !== r3.compact && e3.length > 16 && e3.length > r3.breakLength - r3.indentationLvl - 4 ? m2(S2(Ye(e3), function(e4) {
            return t3(br(e4), "string");
          }), " +\n".concat(It(" ", r3.indentationLvl + 2))) + n22 : t3(br(e3), "string") + n22;
        }
        return "number" == typeof e3 ? kr(t3, e3, r3.numericSeparator) : "bigint" == typeof e3 ? zr(t3, e3, r3.numericSeparator) : "boolean" == typeof e3 ? t3("".concat(e3), "boolean") : void 0 === e3 ? t3("undefined", "undefined") : t3(Gt(e3), "symbol");
      }
      function Br(t3, e3, r3, n22) {
        for (var o22 = new s2(t3.length), i22 = 0; i22 < t3.length; i22++)
          try {
            o22[i22] = Jr(e3, r3, n22, t3[i22], 0);
          } catch (r4) {
            He(_e(r4) && "ReferenceError" === r4.name);
            var a22 = l2({}, t3[i22], "");
            o22[i22] = Jr(e3, a22, n22, t3[i22], 0);
            var c22 = Ft(o22[i22], " ");
            o22[i22] = zt(o22[i22], 0, c22 + 1) + e3.stylize("<uninitialized>", "special");
          }
        return t3.length = 0, o22;
      }
      function Nr(t3, e3, r3, n22, o22, i22) {
        for (var a22 = ct(e3), c22 = i22; i22 < a22.length && o22.length < n22; i22++) {
          var l22 = a22[i22], u22 = +l22;
          if (u22 > Math.pow(2, 32) - 2)
            break;
          if ("".concat(c22) !== l22) {
            if (null === dt(nr, l22))
              break;
            var p22 = u22 - c22, f22 = p22 > 1 ? "s" : "", y22 = "<".concat(p22, " empty item").concat(f22, ">");
            if (x2(o22, t3.stylize(y22, "undefined")), c22 = u22, o22.length === n22)
              break;
          }
          x2(o22, Jr(t3, e3, r3, l22, 1)), c22++;
        }
        var s22 = e3.length - c22;
        if (o22.length !== n22) {
          if (s22 > 0) {
            var g22 = s22 > 1 ? "s" : "", d22 = "<".concat(s22, " empty item").concat(g22, ">");
            x2(o22, t3.stylize(d22, "undefined"));
          }
        } else
          s22 > 0 && x2(o22, Ir(s22));
        return o22;
      }
      function Dr(t3, e3) {
        var n22;
        try {
          n22 = new qt(e3);
        } catch (e4) {
          return [t3.stylize("(detached)", "special")];
        }
        void 0 === u2 && (u2 = Yt(r22(11).l.prototype.hexSlice));
        var o22 = Ct(bt(/(.{2})/g, u2(n22, 0, G2(t3.maxArrayLength, n22.length)), "$1 ")), i22 = n22.length - t3.maxArrayLength;
        return i22 > 0 && (o22 += " ... ".concat(i22, " more byte").concat(i22 > 1 ? "s" : "")), ["".concat(t3.stylize("[Uint8Contents]", "special"), ": <").concat(o22, ">")];
      }
      function Cr(t3, e3, r3) {
        for (var n22 = e3.length, o22 = G2(H2(0, t3.maxArrayLength), n22), i22 = n22 - o22, a22 = [], c22 = 0; c22 < o22; c22++) {
          if (!lt(e3, c22))
            return Nr(t3, e3, r3, o22, a22, c22);
          x2(a22, Jr(t3, e3, r3, c22, 1));
        }
        return i22 > 0 && x2(a22, Ir(i22)), a22;
      }
      function Hr(t3, e3, r3, n22, o22) {
        for (var i22 = G2(H2(0, r3.maxArrayLength), e3), a22 = t3.length - i22, c22 = new s2(i22), l22 = t3.length > 0 && "number" == typeof t3[0] ? kr : zr, u22 = 0; u22 < i22; ++u22)
          c22[u22] = l22(r3.stylize, t3[u22], r3.numericSeparator);
        if (a22 > 0 && (c22[i22] = Ir(a22)), r3.showHidden) {
          r3.indentationLvl += 2;
          for (var p22 = 0, f22 = ["BYTES_PER_ELEMENT", "length", "byteLength", "byteOffset", "buffer"]; p22 < f22.length; p22++) {
            var y22 = f22[p22], g22 = jr(r3, t3[y22], o22, true);
            x2(c22, "[".concat(y22, "]: ").concat(g22));
          }
          r3.indentationLvl -= 2;
        }
        return c22;
      }
      function Gr(t3, e3, r3, n22) {
        var i22 = t3.size, a22 = G2(H2(0, e3.maxArrayLength), i22), c22 = i22 - a22, l22 = [];
        e3.indentationLvl += 2;
        var u22, p22 = 0, f22 = o2(t3);
        try {
          for (f22.s(); !(u22 = f22.n()).done; ) {
            var y22 = u22.value;
            if (p22 >= a22)
              break;
            x2(l22, jr(e3, y22, n22)), p22++;
          }
        } catch (t4) {
          f22.e(t4);
        } finally {
          f22.f();
        }
        return c22 > 0 && x2(l22, Ir(c22)), e3.indentationLvl -= 2, l22;
      }
      function Wr(t3, e3, r3, n22) {
        var i22 = t3.size, a22 = G2(H2(0, e3.maxArrayLength), i22), c22 = i22 - a22, l22 = [];
        e3.indentationLvl += 2;
        var u22, p22 = 0, f22 = o2(t3);
        try {
          for (f22.s(); !(u22 = f22.n()).done; ) {
            var y22 = u22.value, s22 = y22[0], g22 = y22[1];
            if (p22 >= a22)
              break;
            x2(l22, "".concat(jr(e3, s22, n22), " => ").concat(jr(e3, g22, n22))), p22++;
          }
        } catch (t4) {
          f22.e(t4);
        } finally {
          f22.f();
        }
        return c22 > 0 && x2(l22, Ir(c22)), e3.indentationLvl -= 2, l22;
      }
      function Ur(t3, e3, r3, n22) {
        var o22 = H2(t3.maxArrayLength, 0), i22 = G2(o22, r3.length), a22 = new s2(i22);
        t3.indentationLvl += 2;
        for (var c22 = 0; c22 < i22; c22++)
          a22[c22] = jr(t3, r3[c22], e3);
        t3.indentationLvl -= 2, 0 !== n22 || t3.sorted || j2(a22);
        var l22 = r3.length - i22;
        return l22 > 0 && x2(a22, Ir(l22)), a22;
      }
      function Vr(t3, e3, r3, n22) {
        var o22 = H2(t3.maxArrayLength, 0), i22 = r3.length / 2, a22 = i22 - o22, c22 = G2(o22, i22), l22 = new s2(c22), u22 = 0;
        if (t3.indentationLvl += 2, 0 === n22) {
          for (; u22 < c22; u22++) {
            var p22 = 2 * u22;
            l22[u22] = "".concat(jr(t3, r3[p22], e3), " => ").concat(jr(t3, r3[p22 + 1], e3));
          }
          t3.sorted || j2(l22);
        } else
          for (; u22 < c22; u22++) {
            var f22 = 2 * u22, y22 = [jr(t3, r3[f22], e3), jr(t3, r3[f22 + 1], e3)];
            l22[u22] = Xr(t3, y22, "", ["[", "]"], 2, e3);
          }
        return t3.indentationLvl -= 2, a22 > 0 && x2(l22, Ir(a22)), l22;
      }
      function $r(t3) {
        return [t3.stylize("<items unknown>", "special")];
      }
      function Zr(t3, e3, r3) {
        return Ur(t3, r3, ae(e3), 0);
      }
      function qr(t3, e3, r3) {
        return Vr(t3, r3, ae(e3), 0);
      }
      function Kr(t3, e3, r3, n22) {
        var o22 = ae(r3, true), i22 = o22[0];
        return o22[1] ? (t3[0] = bt(/ Iterator] {$/, t3[0], " Entries] {"), Vr(e3, n22, i22, 2)) : Ur(e3, n22, i22, 1);
      }
      function Yr(t3, e3, r3) {
        var n22, o22 = oe(e3), i22 = o22[0], a22 = o22[1];
        if (i22 === ee)
          n22 = [t3.stylize("<pending>", "special")];
        else {
          t3.indentationLvl += 2;
          var c22 = jr(t3, a22, r3);
          t3.indentationLvl -= 2, n22 = [i22 === re ? "".concat(t3.stylize("<rejected>", "special"), " ").concat(c22) : c22];
        }
        return n22;
      }
      function Jr(t3, e3, r3, o22, i22, a22) {
        var c22, l22, u22 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : e3, p22 = " ";
        if (void 0 !== (a22 = a22 || rt(e3, o22) || { value: e3[o22], enumerable: true }).value) {
          var f22 = true !== t3.compact || 0 !== i22 ? 2 : 3;
          t3.indentationLvl += f22, l22 = jr(t3, a22.value, r3), 3 === f22 && t3.breakLength < er(l22, t3.colors) && (p22 = "\n".concat(It(" ", t3.indentationLvl))), t3.indentationLvl -= f22;
        } else if (void 0 !== a22.get) {
          var y22 = void 0 !== a22.set ? "Getter/Setter" : "Getter", s22 = t3.stylize, g22 = "special";
          if (t3.getters && (true === t3.getters || "get" === t3.getters && void 0 === a22.set || "set" === t3.getters && void 0 !== a22.set))
            try {
              var d22 = z2(a22.get, u22);
              if (t3.indentationLvl += 2, null === d22)
                l22 = "".concat(s22("[".concat(y22, ":"), g22), " ").concat(s22("null", "null")).concat(s22("]", g22));
              else if ("object" === n2(d22))
                l22 = "".concat(s22("[".concat(y22, "]"), g22), " ").concat(jr(t3, d22, r3));
              else {
                var b22 = Mr(s22, d22, t3);
                l22 = "".concat(s22("[".concat(y22, ":"), g22), " ").concat(b22).concat(s22("]", g22));
              }
              t3.indentationLvl -= 2;
            } catch (t4) {
              var h22 = "<Inspection threw (".concat(t4.message, ")>");
              l22 = "".concat(s22("[".concat(y22, ":"), g22), " ").concat(h22).concat(s22("]", g22));
            }
          else
            l22 = t3.stylize("[".concat(y22, "]"), g22);
        } else
          l22 = void 0 !== a22.set ? t3.stylize("[Setter]", "special") : t3.stylize("undefined", "undefined");
        if (1 === i22)
          return l22;
        if ("symbol" === n2(o22)) {
          var v22 = bt(Ze, Gt(o22), dr);
          c22 = "[".concat(t3.stylize(v22, "symbol"), "]");
        } else if ("__proto__" === o22)
          c22 = "['__proto__']";
        else if (false === a22.enumerable) {
          var m22 = bt(Ze, o22, dr);
          c22 = "[".concat(m22, "]");
        } else
          c22 = null !== dt(rr, o22) ? t3.stylize(o22, "name") : t3.stylize(br(o22), "string");
        return "".concat(c22, ":").concat(p22).concat(l22);
      }
      function Qr(t3, e3, r3, n22) {
        var o22 = e3.length + r3;
        if (o22 + e3.length > t3.breakLength)
          return false;
        for (var i22 = 0; i22 < e3.length; i22++)
          if (t3.colors ? o22 += ge(e3[i22]).length : o22 += e3[i22].length, o22 > t3.breakLength)
            return false;
        return "" === n22 || !Et(n22, "\n");
      }
      function Xr(t3, e3, r3, n22, o22, i22, a22) {
        if (true !== t3.compact) {
          if ("number" == typeof t3.compact && t3.compact >= 1) {
            var c22 = e3.length;
            if (2 === o22 && c22 > 6 && (e3 = function(t4, e4, r4) {
              var n3 = 0, o3 = 0, i3 = 0, a3 = e4.length;
              t4.maxArrayLength < e4.length && a3--;
              for (var c3 = new s2(a3); i3 < a3; i3++) {
                var l3 = er(e4[i3], t4.colors);
                c3[i3] = l3, n3 += l3 + 2, o3 < l3 && (o3 = l3);
              }
              var u3 = o3 + 2;
              if (3 * u3 + t4.indentationLvl < t4.breakLength && (n3 / u3 > 5 || o3 <= 6)) {
                var p3 = U2(u3 - n3 / e4.length), f3 = H2(u3 - 3 - p3, 1), y22 = G2(W2(U2(2.5 * f3 * a3) / f3), C2((t4.breakLength - t4.indentationLvl) / u3), 4 * t4.compact, 15);
                if (y22 <= 1)
                  return e4;
                for (var g22 = [], d22 = [], b22 = 0; b22 < y22; b22++) {
                  for (var h22 = 0, v22 = b22; v22 < e4.length; v22 += y22)
                    c3[v22] > h22 && (h22 = c3[v22]);
                  h22 += 2, d22[b22] = h22;
                }
                var m22 = Tt;
                if (void 0 !== r4) {
                  for (var S22 = 0; S22 < e4.length; S22++)
                    if ("number" != typeof r4[S22] && "bigint" != typeof r4[S22]) {
                      m22 = Rt;
                      break;
                    }
                }
                for (var P22 = 0; P22 < a3; P22 += y22) {
                  for (var O22 = G2(P22 + y22, a3), A22 = "", w22 = P22; w22 < O22 - 1; w22++) {
                    var j22 = d22[w22 - P22] + e4[w22].length - c3[w22];
                    A22 += m22("".concat(e4[w22], ", "), j22, " ");
                  }
                  if (m22 === Tt) {
                    var E22 = d22[w22 - P22] + e4[w22].length - c3[w22] - 2;
                    A22 += Tt(e4[w22], E22, " ");
                  } else
                    A22 += e4[w22];
                  x2(g22, A22);
                }
                t4.maxArrayLength < e4.length && x2(g22, e4[a3]), e4 = g22;
              }
              return e4;
            }(t3, e3, a22)), t3.currentDepth - i22 < t3.compact && c22 === e3.length && Qr(t3, e3, e3.length + t3.indentationLvl + n22[0].length + r3.length + 10, r3)) {
              var l22 = se(e3, ", ");
              if (!Et(l22, "\n"))
                return "".concat(r3 ? "".concat(r3, " ") : "").concat(n22[0], " ").concat(l22) + " ".concat(n22[1]);
            }
          }
          var u22 = "\n".concat(It(" ", t3.indentationLvl));
          return "".concat(r3 ? "".concat(r3, " ") : "").concat(n22[0]).concat(u22, "  ") + "".concat(se(e3, ",".concat(u22, "  "))).concat(u22).concat(n22[1]);
        }
        if (Qr(t3, e3, 0, r3))
          return "".concat(n22[0]).concat(r3 ? " ".concat(r3) : "", " ").concat(se(e3, ", "), " ") + n22[1];
        var p22 = It(" ", t3.indentationLvl), f22 = "" === r3 && 1 === n22[0].length ? " " : "".concat(r3 ? " ".concat(r3) : "", "\n").concat(p22, "  ");
        return "".concat(n22[0]).concat(f22).concat(se(e3, ",\n".concat(p22, "  ")), " ").concat(n22[1]);
      }
      function tn(t3) {
        var e3 = ie(t3, false);
        if (void 0 !== e3) {
          if (null === e3)
            return true;
          t3 = e3;
        }
        if ("function" != typeof t3.toString)
          return true;
        if (lt(t3, "toString"))
          return false;
        var r3 = t3;
        do {
          r3 = it(r3);
        } while (!lt(r3, "toString"));
        var n22 = rt(r3, "constructor");
        return void 0 !== n22 && "function" == typeof n22.value && Je.has(n22.value.name);
      }
      var en, rn = function(t3) {
        return Mt(t3.message, "\n", 1)[0];
      };
      function nn(t3) {
        try {
          return B2(t3);
        } catch (t4) {
          if (!en)
            try {
              var e3 = {};
              e3.a = e3, B2(e3);
            } catch (t5) {
              en = rn(t5);
            }
          if ("TypeError" === t4.name && rn(t4) === en)
            return "[Circular]";
          throw t4;
        }
      }
      function on(t3, e3) {
        var r3;
        return kr(vr, t3, null !== (r3 = null == e3 ? void 0 : e3.numericSeparator) && void 0 !== r3 ? r3 : Xe.numericSeparator);
      }
      function an(t3, e3) {
        var r3;
        return zr(vr, t3, null !== (r3 = null == e3 ? void 0 : e3.numericSeparator) && void 0 !== r3 ? r3 : Xe.numericSeparator);
      }
      function cn(t3, e3) {
        var r3 = e3[0], o22 = 0, i22 = "", a22 = "";
        if ("string" == typeof r3) {
          if (1 === e3.length)
            return r3;
          for (var l22, u22 = 0, p22 = 0; p22 < r3.length - 1; p22++)
            if (37 === wt(r3, p22)) {
              var f22 = wt(r3, ++p22);
              if (o22 + 1 !== e3.length) {
                switch (f22) {
                  case 115:
                    var y22 = e3[++o22];
                    l22 = "number" == typeof y22 ? on(y22, t3) : "bigint" == typeof y22 ? an(y22, t3) : "object" === n2(y22) && null !== y22 && tn(y22) ? pr(y22, c2(c2({}, t3), {}, { compact: 3, colors: false, depth: 0 })) : At(y22);
                    break;
                  case 106:
                    l22 = nn(e3[++o22]);
                    break;
                  case 100:
                    var s22 = e3[++o22];
                    l22 = "bigint" == typeof s22 ? an(s22, t3) : "symbol" === n2(s22) ? "NaN" : on($2(s22), t3);
                    break;
                  case 79:
                    l22 = pr(e3[++o22], t3);
                    break;
                  case 111:
                    l22 = pr(e3[++o22], c2(c2({}, t3), {}, { showHidden: true, showProxy: true, depth: 4 }));
                    break;
                  case 105:
                    var g22 = e3[++o22];
                    l22 = "bigint" == typeof g22 ? an(g22, t3) : "symbol" === n2(g22) ? "NaN" : on(Y2(g22), t3);
                    break;
                  case 102:
                    var d22 = e3[++o22];
                    l22 = "symbol" === n2(d22) ? "NaN" : on(K2(d22), t3);
                    break;
                  case 99:
                    o22 += 1, l22 = "";
                    break;
                  case 37:
                    i22 += zt(r3, u22, p22), u22 = p22 + 1;
                    continue;
                  default:
                    continue;
                }
                u22 !== p22 - 1 && (i22 += zt(r3, u22, p22 - 1)), i22 += l22, u22 = p22 + 1;
              } else
                37 === f22 && (i22 += zt(r3, u22, p22), u22 = p22 + 1);
            }
          0 !== u22 && (o22++, a22 = " ", u22 < r3.length && (i22 += zt(r3, u22)));
        }
        for (; o22 < e3.length; ) {
          var b22 = e3[o22];
          i22 += a22, i22 += "string" != typeof b22 ? pr(b22, t3) : b22, a22 = " ", o22++;
        }
        return i22;
      }
      function ln(t3) {
        return t3 <= 31 || t3 >= 127 && t3 <= 159 || t3 >= 768 && t3 <= 879 || t3 >= 8203 && t3 <= 8207 || t3 >= 8400 && t3 <= 8447 || t3 >= 65024 && t3 <= 65039 || t3 >= 65056 && t3 <= 65071 || t3 >= 917760 && t3 <= 917999;
      }
      if (y2("config").hasIntl)
        He(false);
      else {
        er = function(t3) {
          var e3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], r3 = 0;
          e3 && (t3 = pn(t3)), t3 = Lt(t3, "NFC");
          var n22, i22 = o2(new mt(t3));
          try {
            for (i22.s(); !(n22 = i22.n()).done; ) {
              var a22 = n22.value, c22 = jt(a22, 0);
              un(c22) ? r3 += 2 : ln(c22) || r3++;
            }
          } catch (t4) {
            i22.e(t4);
          } finally {
            i22.f();
          }
          return r3;
        };
        var un = function(t3) {
          return t3 >= 4352 && (t3 <= 4447 || 9001 === t3 || 9002 === t3 || t3 >= 11904 && t3 <= 12871 && 12351 !== t3 || t3 >= 12880 && t3 <= 19903 || t3 >= 19968 && t3 <= 42182 || t3 >= 43360 && t3 <= 43388 || t3 >= 44032 && t3 <= 55203 || t3 >= 63744 && t3 <= 64255 || t3 >= 65040 && t3 <= 65049 || t3 >= 65072 && t3 <= 65131 || t3 >= 65281 && t3 <= 65376 || t3 >= 65504 && t3 <= 65510 || t3 >= 110592 && t3 <= 110593 || t3 >= 127488 && t3 <= 127569 || t3 >= 127744 && t3 <= 128591 || t3 >= 131072 && t3 <= 262141);
        };
      }
      function pn(t3) {
        return Ve(t3, "str"), bt(ur, t3, "");
      }
      var fn = { 34: "&quot;", 38: "&amp;", 39: "&apos;", 60: "&lt;", 62: "&gt;", 160: "&nbsp;" };
      function yn(t3) {
        return t3.replace(/[\u0000-\u002F\u003A-\u0040\u005B-\u0060\u007B-\u00FF]/g, function(t4) {
          var e3 = At(t4.charCodeAt(0));
          return fn[e3] || "&#" + e3 + ";";
        });
      }
      t22.exports = { identicalSequenceRange: _r, inspect: pr, inspectDefaultOptions: Xe, format: function() {
        for (var t3 = arguments.length, e3 = new Array(t3), r3 = 0; r3 < t3; r3++)
          e3[r3] = arguments[r3];
        return cn(void 0, e3);
      }, formatWithOptions: function(t3) {
        Ue(t3, "inspectOptions", { allowArray: true });
        for (var e3 = arguments.length, r3 = new Array(e3 > 1 ? e3 - 1 : 0), n22 = 1; n22 < e3; n22++)
          r3[n22 - 1] = arguments[n22];
        return cn(t3, r3);
      }, getStringWidth: er, stripVTControlCharacters: pn, isZeroWidthCodePoint: ln, stylizeWithColor: hr, stylizeWithHTML: function(t3, e3) {
        var r3 = pr.styles[e3];
        return void 0 !== r3 ? '<span style="color:'.concat(r3, ';">').concat(yn(t3), "</span>") : yn(t3);
      }, Proxy: ue };
    }, 780: (t22) => {
      function e22(t3) {
        if (!t3)
          throw new Error("Assertion failed");
      }
      e22.fail = function(t3) {
        throw new Error(t3);
      }, t22.exports = e22;
    }, 337: (t22, e22) => {
      var r22 = ["_http_agent", "_http_client", "_http_common", "_http_incoming", "_http_outgoing", "_http_server", "_stream_duplex", "_stream_passthrough", "_stream_readable", "_stream_transform", "_stream_wrap", "_stream_writable", "_tls_common", "_tls_wrap", "assert", "assert/strict", "async_hooks", "buffer", "child_process", "cluster", "console", "constants", "crypto", "dgram", "diagnostics_channel", "dns", "dns/promises", "domain", "events", "fs", "fs/promises", "http", "http2", "https", "inspector", "module", "Module", "net", "os", "path", "path/posix", "path/win32", "perf_hooks", "process", "punycode", "querystring", "readline", "readline/promises", "repl", "stream", "stream/consumers", "stream/promises", "stream/web", "string_decoder", "sys", "timers", "timers/promises", "tls", "trace_events", "tty", "url", "util", "util/types", "v8", "vm", "wasi", "worker_threads", "zlib"];
      e22.BuiltinModule = { exists: function(t3) {
        return t3.startsWith("internal/") || -1 !== r22.indexOf(t3);
      } };
    }, 760: (t22) => {
      t22.exports = { CHAR_DOT: 46, CHAR_FORWARD_SLASH: 47, CHAR_BACKWARD_SLASH: 92 };
    }, 744: (t22, e22, r22) => {
      function n2(t3) {
        return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, n2(t3);
      }
      function o2(t3, e3) {
        (null == e3 || e3 > t3.length) && (e3 = t3.length);
        for (var r3 = 0, n22 = new Array(e3); r3 < e3; r3++)
          n22[r3] = t3[r3];
        return n22;
      }
      var i2, a2, c2 = r22(497), l2 = c2.ArrayIsArray, u2 = c2.ArrayPrototypeIncludes, p2 = c2.ArrayPrototypeIndexOf, f2 = c2.ArrayPrototypeJoin, y2 = c2.ArrayPrototypePop, s2 = c2.ArrayPrototypePush, g2 = c2.ArrayPrototypeSplice, d2 = c2.ErrorCaptureStackTrace, b2 = c2.ObjectDefineProperty, h2 = c2.ReflectApply, v2 = c2.RegExpPrototypeTest, m2 = c2.SafeMap, S2 = c2.StringPrototypeEndsWith, P2 = c2.StringPrototypeIncludes, x2 = c2.StringPrototypeSlice, O2 = c2.StringPrototypeToLowerCase, A2 = new m2(), w2 = {}, j2 = /^([A-Z][a-z0-9]*)+$/, E2 = ["string", "function", "number", "object", "Function", "Object", "boolean", "bigint", "symbol"], _15 = null;
      function F2() {
        return _15 || (_15 = r22(609)), _15;
      }
      var L2 = R2(function(t3, e3, r3) {
        (t3 = C2(t3)).name = "".concat(e3, " [").concat(r3, "]"), t3.stack, delete t3.name;
      });
      function R2(t3) {
        var e3 = "__node_internal_" + t3.name;
        return b2(t3, "name", { value: e3 }), t3;
      }
      function T2(t3, e3, n22) {
        var o22 = A2.get(t3);
        return void 0 === a2 && (a2 = r22(780)), a2("function" == typeof o22), a2(o22.length <= e3.length, "Code: ".concat(t3, "; The provided arguments length (").concat(e3.length, ") does not ") + "match the required ones (".concat(o22.length, ").")), h2(o22, n22, e3);
      }
      var I2, k2, z2, M2, B2, N2, D2, C2 = R2(function(t3) {
        return i2 = Error.stackTraceLimit, Error.stackTraceLimit = 1 / 0, d2(t3), Error.stackTraceLimit = i2, t3;
      });
      t22.exports = { codes: w2, hideStackFrames: R2, isStackOverflowError: function(t3) {
        if (void 0 === k2)
          try {
            !function t4() {
              t4();
            }();
          } catch (t4) {
            k2 = t4.message, I2 = t4.name;
          }
        return t3 && t3.name === I2 && t3.message === k2;
      } }, z2 = "ERR_INVALID_ARG_TYPE", M2 = function(t3, e3, r3) {
        a2("string" == typeof t3, "'name' must be a string"), l2(e3) || (e3 = [e3]);
        var i22 = "The ";
        if (S2(t3, " argument"))
          i22 += "".concat(t3, " ");
        else {
          var c22 = P2(t3, ".") ? "property" : "argument";
          i22 += '"'.concat(t3, '" ').concat(c22, " ");
        }
        i22 += "must be ";
        var d22, b22 = [], h22 = [], m22 = [], A22 = function(t4, e4) {
          var r4 = "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
          if (!r4) {
            if (Array.isArray(t4) || (r4 = function(t5, e5) {
              if (t5) {
                if ("string" == typeof t5)
                  return o2(t5, e5);
                var r5 = Object.prototype.toString.call(t5).slice(8, -1);
                return "Object" === r5 && t5.constructor && (r5 = t5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(t5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? o2(t5, e5) : void 0;
              }
            }(t4)) || e4) {
              r4 && (t4 = r4);
              var n22 = 0, i3 = function() {
              };
              return { s: i3, n: function() {
                return n22 >= t4.length ? { done: true } : { done: false, value: t4[n22++] };
              }, e: function(t5) {
                throw t5;
              }, f: i3 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var a22, c3 = true, l22 = false;
          return { s: function() {
            r4 = r4.call(t4);
          }, n: function() {
            var t5 = r4.next();
            return c3 = t5.done, t5;
          }, e: function(t5) {
            l22 = true, a22 = t5;
          }, f: function() {
            try {
              c3 || null == r4.return || r4.return();
            } finally {
              if (l22)
                throw a22;
            }
          } };
        }(e3);
        try {
          for (A22.s(); !(d22 = A22.n()).done; ) {
            var w22 = d22.value;
            a2("string" == typeof w22, "All expected entries have to be of type string"), u2(E2, w22) ? s2(b22, O2(w22)) : v2(j2, w22) ? s2(h22, w22) : (a2("object" !== w22, 'The value "object" should be written as "Object"'), s2(m22, w22));
          }
        } catch (t4) {
          A22.e(t4);
        } finally {
          A22.f();
        }
        if (h22.length > 0) {
          var _22 = p2(b22, "object");
          -1 !== _22 && (g2(b22, _22, 1), s2(h22, "Object"));
        }
        if (b22.length > 0) {
          if (b22.length > 2) {
            var L22 = y2(b22);
            i22 += "one of type ".concat(f2(b22, ", "), ", or ").concat(L22);
          } else
            i22 += 2 === b22.length ? "one of type ".concat(b22[0], " or ").concat(b22[1]) : "of type ".concat(b22[0]);
          (h22.length > 0 || m22.length > 0) && (i22 += " or ");
        }
        if (h22.length > 0) {
          if (h22.length > 2) {
            var R22 = y2(h22);
            i22 += "an instance of ".concat(f2(h22, ", "), ", or ").concat(R22);
          } else
            i22 += "an instance of ".concat(h22[0]), 2 === h22.length && (i22 += " or ".concat(h22[1]));
          m22.length > 0 && (i22 += " or ");
        }
        if (m22.length > 0)
          if (m22.length > 2) {
            var T22 = y2(m22);
            i22 += "one of ".concat(f2(m22, ", "), ", or ").concat(T22);
          } else
            2 === m22.length ? i22 += "one of ".concat(m22[0], " or ").concat(m22[1]) : (O2(m22[0]) !== m22[0] && (i22 += "an "), i22 += "".concat(m22[0]));
        if (null == r3)
          i22 += ". Received ".concat(r3);
        else if ("function" == typeof r3 && r3.name)
          i22 += ". Received function ".concat(r3.name);
        else if ("object" === n2(r3))
          if (r3.constructor && r3.constructor.name)
            i22 += ". Received an instance of ".concat(r3.constructor.name);
          else {
            var I22 = F2().inspect(r3, { depth: -1 });
            i22 += ". Received ".concat(I22);
          }
        else {
          var k22 = F2().inspect(r3, { colors: false });
          k22.length > 25 && (k22 = "".concat(x2(k22, 0, 25), "...")), i22 += ". Received type ".concat(n2(r3), " (").concat(k22, ")");
        }
        return i22;
      }, B2 = TypeError, A2.set(z2, M2), w2[z2] = (N2 = B2, D2 = z2, function() {
        var t3 = Error.stackTraceLimit;
        Error.stackTraceLimit = 0;
        var e3 = new N2();
        Error.stackTraceLimit = t3;
        for (var r3 = arguments.length, n22 = new Array(r3), o22 = 0; o22 < r3; o22++)
          n22[o22] = arguments[o22];
        var i22 = T2(D2, n22, e3);
        return b2(e3, "message", { value: i22, enumerable: false, writable: true, configurable: true }), b2(e3, "toString", { value: function() {
          return "".concat(this.name, " [").concat(D2, "]: ").concat(this.message);
        }, enumerable: false, writable: true, configurable: true }), L2(e3, N2.name, D2), e3.code = D2, e3;
      });
    }, 299: (t22, e22, r22) => {
      var n2 = r22(497), o2 = n2.StringPrototypeCharCodeAt, i2 = n2.StringPrototypeIncludes, a2 = n2.StringPrototypeReplace, c2 = r22(760).CHAR_FORWARD_SLASH, l2 = r22(248), u2 = /%/g, p2 = /\\/g, f2 = /\n/g, y2 = /\r/g, s2 = /\t/g;
      t22.exports = { pathToFileURL: function(t3) {
        var e3 = new URL("file://"), r3 = l2.resolve(t3);
        return o2(t3, t3.length - 1) === c2 && r3[r3.length - 1] !== l2.sep && (r3 += "/"), e3.pathname = function(t4) {
          return i2(t4, "%") && (t4 = a2(t4, u2, "%25")), i2(t4, "\\") && (t4 = a2(t4, p2, "%5C")), i2(t4, "\n") && (t4 = a2(t4, f2, "%0A")), i2(t4, "\r") && (t4 = a2(t4, y2, "%0D")), i2(t4, "	") && (t4 = a2(t4, s2, "%09")), t4;
        }(r3), e3;
      } };
    }, 992: (t22) => {
      var e22 = /\u001b\[\d\d?m/g;
      t22.exports = { customInspectSymbol: Symbol.for("nodejs.util.inspect.custom"), isError: function(t3) {
        return t3 instanceof Error;
      }, join: Array.prototype.join.call.bind(Array.prototype.join), removeColors: function(t3) {
        return String.prototype.replace.call(t3, e22, "");
      } };
    }, 926: (t22, e22, r22) => {
      function n2(t3) {
        return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, n2(t3);
      }
      var o2 = r22(742).getConstructorName;
      function i2(t3) {
        for (var e3 = arguments.length, r3 = new Array(e3 > 1 ? e3 - 1 : 0), i22 = 1; i22 < e3; i22++)
          r3[i22 - 1] = arguments[i22];
        for (var a22 = 0, c22 = r3; a22 < c22.length; a22++) {
          var l22 = c22[a22], u22 = globalThis2[l22];
          if (u22 && t3 instanceof u22)
            return true;
        }
        for (; t3; ) {
          if ("object" !== n2(t3))
            return false;
          if (r3.indexOf(o2(t3)) >= 0)
            return true;
          t3 = Object.getPrototypeOf(t3);
        }
        return false;
      }
      function a2(t3) {
        return function(e3) {
          if (!i2(e3, t3.name))
            return false;
          try {
            t3.prototype.valueOf.call(e3);
          } catch (t4) {
            return false;
          }
          return true;
        };
      }
      "object" !== ("undefined" == typeof globalThis2 ? "undefined" : n2(globalThis2)) && (Object.defineProperty(Object.prototype, "__magic__", { get: function() {
        return this;
      }, configurable: true }), __magic__.globalThis = __magic__, delete Object.prototype.__magic__);
      var c2 = a2(String), l2 = a2(Number), u2 = a2(Boolean), p2 = a2(BigInt), f2 = a2(Symbol);
      t22.exports = { isAsyncFunction: function(t3) {
        return "function" == typeof t3 && Function2.prototype.toString.call(t3).startsWith("async");
      }, isGeneratorFunction: function(t3) {
        return "function" == typeof t3 && Function2.prototype.toString.call(t3).match(/^(async\s+)?function *\*/);
      }, isAnyArrayBuffer: function(t3) {
        return i2(t3, "ArrayBuffer", "SharedArrayBuffer");
      }, isArrayBuffer: function(t3) {
        return i2(t3, "ArrayBuffer");
      }, isArgumentsObject: function(t3) {
        if (null !== t3 && "object" === n2(t3) && !Array.isArray(t3) && "number" == typeof t3.length && t3.length === (0 | t3.length) && t3.length >= 0) {
          var e3 = Object.getOwnPropertyDescriptor(t3, "callee");
          return e3 && !e3.enumerable;
        }
        return false;
      }, isBoxedPrimitive: function(t3) {
        return l2(t3) || c2(t3) || u2(t3) || p2(t3) || f2(t3);
      }, isDataView: function(t3) {
        return i2(t3, "DataView");
      }, isExternal: function(t3) {
        return "object" === n2(t3) && Object.isFrozen(t3) && null == Object.getPrototypeOf(t3);
      }, isMap: function(t3) {
        if (!i2(t3, "Map"))
          return false;
        try {
          t3.has();
        } catch (t4) {
          return false;
        }
        return true;
      }, isMapIterator: function(t3) {
        return "[object Map Iterator]" === Object.prototype.toString.call(Object.getPrototypeOf(t3));
      }, isModuleNamespaceObject: function(t3) {
        return t3 && "object" === n2(t3) && "Module" === t3[Symbol.toStringTag];
      }, isNativeError: function(t3) {
        return t3 instanceof Error && i2(t3, "Error", "EvalError", "RangeError", "ReferenceError", "SyntaxError", "TypeError", "URIError", "AggregateError");
      }, isPromise: function(t3) {
        return i2(t3, "Promise");
      }, isSet: function(t3) {
        if (!i2(t3, "Set"))
          return false;
        try {
          t3.has();
        } catch (t4) {
          return false;
        }
        return true;
      }, isSetIterator: function(t3) {
        return "[object Set Iterator]" === Object.prototype.toString.call(Object.getPrototypeOf(t3));
      }, isWeakMap: function(t3) {
        return i2(t3, "WeakMap");
      }, isWeakSet: function(t3) {
        return i2(t3, "WeakSet");
      }, isRegExp: function(t3) {
        return i2(t3, "RegExp");
      }, isDate: function(t3) {
        if (i2(t3, "Date"))
          try {
            return Date.prototype.getTime.call(t3), true;
          } catch (t4) {
          }
        return false;
      }, isTypedArray: function(t3) {
        return i2(t3, "Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float32Array", "Float64Array", "BigInt64Array", "BigUint64Array");
      }, isStringObject: c2, isNumberObject: l2, isBooleanObject: u2, isBigIntObject: p2, isSymbolObject: f2 };
    }, 52: (t22, e22, r22) => {
      function n2(t3) {
        return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, n2(t3);
      }
      var o2 = r22(497).ArrayIsArray, i2 = r22(744), a2 = i2.hideStackFrames, c2 = i2.codes.ERR_INVALID_ARG_TYPE, l2 = a2(function(t3, e3, r3) {
        var i22 = null == r3, a22 = !i22 && r3.allowArray, l22 = !i22 && r3.allowFunction;
        if ((i22 || !r3.nullable) && null === t3 || !a22 && o2(t3) || "object" !== n2(t3) && (!l22 || "function" != typeof t3))
          throw new c2(e3, "Object", t3);
      });
      t22.exports = { validateObject: l2, validateString: function(t3, e3) {
        if ("string" != typeof t3)
          throw new c2(e3, "string", t3);
      } };
    }, 248: (t22, e22, r22) => {
      var n2 = r22(497), o2 = n2.StringPrototypeCharCodeAt, i2 = n2.StringPrototypeLastIndexOf, a2 = n2.StringPrototypeSlice, c2 = r22(760), l2 = c2.CHAR_DOT, u2 = c2.CHAR_FORWARD_SLASH, p2 = r22(52).validateString;
      function f2(t3) {
        return t3 === u2;
      }
      function y2(t3, e3, r3, n22) {
        for (var c22 = "", p22 = 0, f22 = -1, y22 = 0, s2 = 0, g2 = 0; g2 <= t3.length; ++g2) {
          if (g2 < t3.length)
            s2 = o2(t3, g2);
          else {
            if (n22(s2))
              break;
            s2 = u2;
          }
          if (n22(s2)) {
            if (f22 === g2 - 1 || 1 === y22)
              ;
            else if (2 === y22) {
              if (c22.length < 2 || 2 !== p22 || o2(c22, c22.length - 1) !== l2 || o2(c22, c22.length - 2) !== l2) {
                if (c22.length > 2) {
                  var d2 = i2(c22, r3);
                  -1 === d2 ? (c22 = "", p22 = 0) : p22 = (c22 = a2(c22, 0, d2)).length - 1 - i2(c22, r3), f22 = g2, y22 = 0;
                  continue;
                }
                if (0 !== c22.length) {
                  c22 = "", p22 = 0, f22 = g2, y22 = 0;
                  continue;
                }
              }
              e3 && (c22 += c22.length > 0 ? "".concat(r3, "..") : "..", p22 = 2);
            } else
              c22.length > 0 ? c22 += "".concat(r3).concat(a2(t3, f22 + 1, g2)) : c22 = a2(t3, f22 + 1, g2), p22 = g2 - f22 - 1;
            f22 = g2, y22 = 0;
          } else
            s2 === l2 && -1 !== y22 ? ++y22 : y22 = -1;
        }
        return c22;
      }
      t22.exports = { resolve: function() {
        for (var t3 = "", e3 = false, r3 = arguments.length - 1; r3 >= -1 && !e3; r3--) {
          var n22 = r3 >= 0 ? r3 < 0 || arguments.length <= r3 ? void 0 : arguments[r3] : "/";
          p2(n22, "path"), 0 !== n22.length && (t3 = "".concat(n22, "/").concat(t3), e3 = o2(n22, 0) === u2);
        }
        return t3 = y2(t3, !e3, "/", f2), e3 ? "/".concat(t3) : t3.length > 0 ? t3 : ".";
      } };
    }, 497: (t22, e22, r22) => {
      function n2(t3) {
        return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, n2(t3);
      }
      function o2(t3, e3) {
        if ("function" != typeof e3 && null !== e3)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), Object.defineProperty(t3, "prototype", { writable: false }), e3 && p2(t3, e3);
      }
      function i2(t3) {
        var e3 = u2();
        return function() {
          var r3, n22 = f2(t3);
          if (e3) {
            var o22 = f2(this).constructor;
            r3 = Reflect.construct(n22, arguments, o22);
          } else
            r3 = n22.apply(this, arguments);
          return a2(this, r3);
        };
      }
      function a2(t3, e3) {
        if (e3 && ("object" === n2(e3) || "function" == typeof e3))
          return e3;
        if (void 0 !== e3)
          throw new TypeError("Derived constructors may only return object or undefined");
        return function(t4) {
          if (void 0 === t4)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t4;
        }(t3);
      }
      function c2(t3) {
        var e3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
        return c2 = function(t4) {
          if (null === t4 || (r3 = t4, -1 === Function2.toString.call(r3).indexOf("[native code]")))
            return t4;
          var r3;
          if ("function" != typeof t4)
            throw new TypeError("Super expression must either be null or a function");
          if (void 0 !== e3) {
            if (e3.has(t4))
              return e3.get(t4);
            e3.set(t4, n22);
          }
          function n22() {
            return l2(t4, arguments, f2(this).constructor);
          }
          return n22.prototype = Object.create(t4.prototype, { constructor: { value: n22, enumerable: false, writable: true, configurable: true } }), p2(n22, t4);
        }, c2(t3);
      }
      function l2(t3, e3, r3) {
        return l2 = u2() ? Reflect.construct.bind() : function(t4, e4, r4) {
          var n22 = [null];
          n22.push.apply(n22, e4);
          var o22 = new (Function2.bind.apply(t4, n22))();
          return r4 && p2(o22, r4.prototype), o22;
        }, l2.apply(null, arguments);
      }
      function u2() {
        if ("undefined" == typeof Reflect || !Reflect.construct)
          return false;
        if (Reflect.construct.sham)
          return false;
        if ("function" == typeof Proxy)
          return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (t3) {
          return false;
        }
      }
      function p2(t3, e3) {
        return p2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e4) {
          return t4.__proto__ = e4, t4;
        }, p2(t3, e3);
      }
      function f2(t3) {
        return f2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
          return t4.__proto__ || Object.getPrototypeOf(t4);
        }, f2(t3);
      }
      function y2(t3, e3) {
        if (!(t3 instanceof e3))
          throw new TypeError("Cannot call a class as a function");
      }
      function s2(t3, e3) {
        for (var r3 = 0; r3 < e3.length; r3++) {
          var o22 = e3[r3];
          o22.enumerable = o22.enumerable || false, o22.configurable = true, "value" in o22 && (o22.writable = true), Object.defineProperty(t3, (i22 = function(t4, e4) {
            if ("object" !== n2(t4) || null === t4)
              return t4;
            var r4 = t4[Symbol.toPrimitive];
            if (void 0 !== r4) {
              var o3 = r4.call(t4, e4);
              if ("object" !== n2(o3))
                return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(o22.key, "string"), "symbol" === n2(i22) ? i22 : String(i22)), o22);
        }
        var i22;
      }
      function g2(t3, e3, r3) {
        return e3 && s2(t3.prototype, e3), Object.defineProperty(t3, "prototype", { writable: false }), t3;
      }
      var d2 = function(t3, e3) {
        var r3 = function(r4) {
          function n22(e4) {
            y2(this, n22), this._iterator = t3(e4);
          }
          return g2(n22, [{ key: "next", value: function() {
            return e3(this._iterator);
          } }, { key: Symbol.iterator, value: function() {
            return this;
          } }]), n22;
        }();
        return Object.setPrototypeOf(r3.prototype, null), Object.freeze(r3.prototype), Object.freeze(r3), r3;
      };
      function b2(t3, e3) {
        return Function2.prototype.call.bind(t3.prototype.__lookupGetter__(e3));
      }
      function h2(t3) {
        return Function2.prototype.call.bind(t3);
      }
      var v2 = function(t3, e3) {
        Array.prototype.forEach.call(Reflect.ownKeys(t3), function(r3) {
          Reflect.getOwnPropertyDescriptor(e3, r3) || Reflect.defineProperty(e3, r3, Reflect.getOwnPropertyDescriptor(t3, r3));
        });
      }, m2 = function(t3, e3) {
        if (Symbol.iterator in t3.prototype) {
          var r3, n22 = new t3();
          Array.prototype.forEach.call(Reflect.ownKeys(t3.prototype), function(o22) {
            if (!Reflect.getOwnPropertyDescriptor(e3.prototype, o22)) {
              var i22 = Reflect.getOwnPropertyDescriptor(t3.prototype, o22);
              if ("function" == typeof i22.value && 0 === i22.value.length && Symbol.iterator in (Function2.prototype.call.call(i22.value, n22) || {})) {
                var a22 = h2(i22.value);
                null == r3 && (r3 = h2(a22(n22).next));
                var c22 = d2(a22, r3);
                i22.value = function() {
                  return new c22(this);
                };
              }
              Reflect.defineProperty(e3.prototype, o22, i22);
            }
          });
        } else
          v2(t3.prototype, e3.prototype);
        return v2(t3, e3), Object.setPrototypeOf(e3.prototype, null), Object.freeze(e3.prototype), Object.freeze(e3), e3;
      }, S2 = Function2.prototype.call.bind(String.prototype[Symbol.iterator]), P2 = Reflect.getPrototypeOf(S2(""));
      if (t22.exports = { makeSafe: m2, internalBinding: function(t3) {
        if ("config" === t3)
          return { hasIntl: false };
        throw new Error('unknown module: "'.concat(t3, '"'));
      }, Array, ArrayIsArray: Array.isArray, ArrayPrototypeFilter: Function2.prototype.call.bind(Array.prototype.filter), ArrayPrototypeForEach: Function2.prototype.call.bind(Array.prototype.forEach), ArrayPrototypeIncludes: Function2.prototype.call.bind(Array.prototype.includes), ArrayPrototypeIndexOf: Function2.prototype.call.bind(Array.prototype.indexOf), ArrayPrototypeJoin: Function2.prototype.call.bind(Array.prototype.join), ArrayPrototypeMap: Function2.prototype.call.bind(Array.prototype.map), ArrayPrototypePop: Function2.prototype.call.bind(Array.prototype.pop), ArrayPrototypePush: Function2.prototype.call.bind(Array.prototype.push), ArrayPrototypePushApply: Function2.apply.bind(Array.prototype.push), ArrayPrototypeSlice: Function2.prototype.call.bind(Array.prototype.slice), ArrayPrototypeSort: Function2.prototype.call.bind(Array.prototype.sort), ArrayPrototypeSplice: Function2.prototype.call.bind(Array.prototype.splice), ArrayPrototypeUnshift: Function2.prototype.call.bind(Array.prototype.unshift), BigIntPrototypeValueOf: Function2.prototype.call.bind(BigInt.prototype.valueOf), BooleanPrototypeValueOf: Function2.prototype.call.bind(Boolean.prototype.valueOf), DatePrototypeGetTime: Function2.prototype.call.bind(Date.prototype.getTime), DatePrototypeToISOString: Function2.prototype.call.bind(Date.prototype.toISOString), DatePrototypeToString: Function2.prototype.call.bind(Date.prototype.toString), ErrorCaptureStackTrace: function(t3) {
        var e3 = new Error().stack;
        t3.stack = e3.replace(/.*\n.*/, "$1");
      }, ErrorPrototypeToString: Function2.prototype.call.bind(Error.prototype.toString), FunctionPrototypeBind: Function2.prototype.call.bind(Function2.prototype.bind), FunctionPrototypeCall: Function2.prototype.call.bind(Function2.prototype.call), FunctionPrototypeToString: Function2.prototype.call.bind(Function2.prototype.toString), globalThis: "undefined" == typeof globalThis2 ? r22.g : globalThis2, JSONStringify: JSON.stringify, MapPrototypeGetSize: b2(Map, "size"), MapPrototypeEntries: Function2.prototype.call.bind(Map.prototype.entries), MathFloor: Math.floor, MathMax: Math.max, MathMin: Math.min, MathRound: Math.round, MathSqrt: Math.sqrt, MathTrunc: Math.trunc, Number, NumberIsFinite: Number.isFinite, NumberIsNaN: Number.isNaN, NumberParseFloat: Number.parseFloat, NumberParseInt: Number.parseInt, NumberPrototypeToString: Function2.prototype.call.bind(Number.prototype.toString), NumberPrototypeValueOf: Function2.prototype.call.bind(Number.prototype.valueOf), Object, ObjectAssign: Object.assign, ObjectCreate: Object.create, ObjectDefineProperty: Object.defineProperty, ObjectGetOwnPropertyDescriptor: Object.getOwnPropertyDescriptor, ObjectGetOwnPropertyNames: Object.getOwnPropertyNames, ObjectGetOwnPropertySymbols: Object.getOwnPropertySymbols, ObjectGetPrototypeOf: Object.getPrototypeOf, ObjectIs: Object.is, ObjectKeys: Object.keys, ObjectPrototypeHasOwnProperty: Function2.prototype.call.bind(Object.prototype.hasOwnProperty), ObjectPrototypePropertyIsEnumerable: Function2.prototype.call.bind(Object.prototype.propertyIsEnumerable), ObjectSeal: Object.seal, ObjectSetPrototypeOf: Object.setPrototypeOf, ReflectApply: Reflect.apply, ReflectOwnKeys: Reflect.ownKeys, RegExp, RegExpPrototypeExec: Function2.prototype.call.bind(RegExp.prototype.exec), RegExpPrototypeSymbolReplace: Function2.prototype.call.bind(RegExp.prototype[Symbol.replace]), RegExpPrototypeSymbolSplit: Function2.prototype.call.bind(RegExp.prototype[Symbol.split]), RegExpPrototypeTest: Function2.prototype.call.bind(RegExp.prototype.test), RegExpPrototypeToString: Function2.prototype.call.bind(RegExp.prototype.toString), SafeStringIterator: d2(S2, Function2.prototype.call.bind(P2.next)), SafeMap: m2(Map, function(t3) {
        o2(r3, t3);
        var e3 = i2(r3);
        function r3(t4) {
          return y2(this, r3), e3.call(this, t4);
        }
        return g2(r3);
      }(c2(Map))), SafeSet: m2(Set, function(t3) {
        o2(r3, t3);
        var e3 = i2(r3);
        function r3(t4) {
          return y2(this, r3), e3.call(this, t4);
        }
        return g2(r3);
      }(c2(Set))), SetPrototypeGetSize: b2(Set, "size"), SetPrototypeValues: Function2.prototype.call.bind(Set.prototype.values), String, StringPrototypeCharCodeAt: Function2.prototype.call.bind(String.prototype.charCodeAt), StringPrototypeCodePointAt: Function2.prototype.call.bind(String.prototype.codePointAt), StringPrototypeEndsWith: Function2.prototype.call.bind(String.prototype.endsWith), StringPrototypeIncludes: Function2.prototype.call.bind(String.prototype.includes), StringPrototypeIndexOf: Function2.prototype.call.bind(String.prototype.indexOf), StringPrototypeLastIndexOf: Function2.prototype.call.bind(String.prototype.lastIndexOf), StringPrototypeNormalize: Function2.prototype.call.bind(String.prototype.normalize), StringPrototypePadEnd: Function2.prototype.call.bind(String.prototype.padEnd), StringPrototypePadStart: Function2.prototype.call.bind(String.prototype.padStart), StringPrototypeRepeat: Function2.prototype.call.bind(String.prototype.repeat), StringPrototypeReplace: Function2.prototype.call.bind(String.prototype.replace), StringPrototypeReplaceAll: Function2.prototype.call.bind(String.prototype.replaceAll), StringPrototypeSlice: Function2.prototype.call.bind(String.prototype.slice), StringPrototypeSplit: Function2.prototype.call.bind(String.prototype.split), StringPrototypeStartsWith: Function2.prototype.call.bind(String.prototype.startsWith), StringPrototypeToLowerCase: Function2.prototype.call.bind(String.prototype.toLowerCase), StringPrototypeTrim: Function2.prototype.call.bind(String.prototype.trim), StringPrototypeValueOf: Function2.prototype.call.bind(String.prototype.valueOf), SymbolPrototypeToString: Function2.prototype.call.bind(Symbol.prototype.toString), SymbolPrototypeValueOf: Function2.prototype.call.bind(Symbol.prototype.valueOf), SymbolIterator: Symbol.iterator, SymbolFor: Symbol.for, SymbolToStringTag: Symbol.toStringTag, TypedArrayPrototypeGetLength: function(t3) {
        return t3.constructor.prototype.__lookupGetter__("length").call(t3);
      }, Uint8Array, uncurryThis: h2 }, !String.prototype.replaceAll) {
        var x2 = function(t3) {
          if (null == t3)
            throw new TypeError("Can't call method on " + t3);
          return t3;
        }, O2 = function(t3, e3, r3, n22, o22, i22) {
          var a22 = r3 + t3.length, c22 = n22.length, l22 = /\$([$&'`]|\d{1,2})/;
          return void 0 !== o22 && (o22 = Object(x2(o22)), l22 = /\$([$&'`]|\d{1,2}|<[^>]*>)/g), i22.replace(l22, function(i3, l3) {
            var u22;
            switch (l3.charAt(0)) {
              case "$":
                return "$";
              case "&":
                return t3;
              case "`":
                return e3.slice(0, r3);
              case "'":
                return e3.slice(a22);
              case "<":
                u22 = o22[l3.slice(1, -1)];
                break;
              default:
                var p22 = +l3;
                if (0 === p22)
                  return i3;
                if (p22 > c22) {
                  var f22 = Math.floor(p22 / 10);
                  return 0 === f22 ? i3 : f22 <= c22 ? void 0 === n22[f22 - 1] ? l3.charAt(1) : n22[f22 - 1] + l3.charAt(1) : i3;
                }
                u22 = n22[p22 - 1];
            }
            return void 0 === u22 ? "" : u22;
          });
        };
        t22.exports.StringPrototypeReplaceAll = function(t3, e3, r3) {
          var n22, o22, i22 = x2(t3), a22 = 0, c22 = 0, l22 = "";
          if (null != e3) {
            if (e3 instanceof RegExp && !~e3.flags.indexOf("g"))
              throw new TypeError("`.replaceAll` does not allow non-global regexes");
            if (n22 = e3[Symbol.replace])
              return n22.call(e3, i22, r3);
          }
          var u22 = String(i22), p22 = String(e3), f22 = "function" == typeof r3;
          f22 || (r3 = String(r3));
          var y22 = p22.length, s22 = Math.max(1, y22);
          for (a22 = u22.indexOf(p22, 0); -1 !== a22; )
            o22 = f22 ? String(r3(p22, a22, u22)) : O2(p22, u22, a22, [], void 0, r3), l22 += u22.slice(c22, a22) + o22, c22 = a22 + y22, a22 = u22.indexOf(p22, a22 + s22);
          return c22 < u22.length && (l22 += u22.slice(c22)), l22;
        };
      }
    }, 411: (t22) => {
      function e22(t3) {
        return e22 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, e22(t3);
      }
      function r22(t3, r3) {
        for (var n22 = 0; n22 < r3.length; n22++) {
          var o22 = r3[n22];
          o22.enumerable = o22.enumerable || false, o22.configurable = true, "value" in o22 && (o22.writable = true), Object.defineProperty(t3, (i2 = function(t4, r4) {
            if ("object" !== e22(t4) || null === t4)
              return t4;
            var n3 = t4[Symbol.toPrimitive];
            if (void 0 !== n3) {
              var o3 = n3.call(t4, r4);
              if ("object" !== e22(o3))
                return o3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t4);
          }(o22.key, "string"), "symbol" === e22(i2) ? i2 : String(i2)), o22);
        }
        var i2;
      }
      var n2 = /* @__PURE__ */ new WeakMap(), o2 = function() {
        function t3(e4, r3) {
          !function(t4, e5) {
            if (!(t4 instanceof e5))
              throw new TypeError("Cannot call a class as a function");
          }(this || __umdGlobal, t3);
          var o3 = new Proxy(e4, r3);
          return n2.set(o3, [e4, r3]), o3;
        }
        var e3, o22;
        return e3 = t3, o22 = [{ key: "getProxyDetails", value: function(t4) {
          var e4 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], r3 = n2.get(t4);
          if (r3)
            return e4 ? r3 : r3[0];
        } }, { key: "revocable", value: function(t4, e4) {
          var r3 = Proxy.revocable(t4, e4);
          n2.set(r3.proxy, [t4, e4]);
          var o3 = r3.revoke;
          return r3.revoke = function() {
            n2.set(r3.proxy, [null, null]), o3();
          }, r3;
        } }], o22 && r22(e3, o22), Object.defineProperty(e3, "prototype", { writable: false }), t3;
      }();
      t22.exports = { getProxyDetails: o2.getProxyDetails.bind(o2), Proxy: o2 };
    }, 742: (t22, e22, r22) => {
      function n2(t3) {
        return n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        }, n2(t3);
      }
      function o2(t3, e3) {
        var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
        if (!r3) {
          if (Array.isArray(t3) || (r3 = a2(t3)) || e3) {
            r3 && (t3 = r3);
            var n22 = 0, o22 = function() {
            };
            return { s: o22, n: function() {
              return n22 >= t3.length ? { done: true } : { done: false, value: t3[n22++] };
            }, e: function(t4) {
              throw t4;
            }, f: o22 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var i22, c22 = true, l22 = false;
        return { s: function() {
          r3 = r3.call(t3);
        }, n: function() {
          var t4 = r3.next();
          return c22 = t4.done, t4;
        }, e: function(t4) {
          l22 = true, i22 = t4;
        }, f: function() {
          try {
            c22 || null == r3.return || r3.return();
          } finally {
            if (l22)
              throw i22;
          }
        } };
      }
      function i2(t3, e3) {
        return function(t4) {
          if (Array.isArray(t4))
            return t4;
        }(t3) || function(t4, e4) {
          var r3 = null == t4 ? null : "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
          if (null != r3) {
            var n22, o22, i22, a22, c22 = [], l22 = true, u22 = false;
            try {
              if (i22 = (r3 = r3.call(t4)).next, 0 === e4)
                ;
              else
                for (; !(l22 = (n22 = i22.call(r3)).done) && (c22.push(n22.value), c22.length !== e4); l22 = true)
                  ;
            } catch (t5) {
              u22 = true, o22 = t5;
            } finally {
              try {
                if (!l22 && null != r3.return && (a22 = r3.return(), Object(a22) !== a22))
                  return;
              } finally {
                if (u22)
                  throw o22;
              }
            }
            return c22;
          }
        }(t3, e3) || a2(t3, e3) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function a2(t3, e3) {
        if (t3) {
          if ("string" == typeof t3)
            return c2(t3, e3);
          var r3 = Object.prototype.toString.call(t3).slice(8, -1);
          return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? c2(t3, e3) : void 0;
        }
      }
      function c2(t3, e3) {
        (null == e3 || e3 > t3.length) && (e3 = t3.length);
        for (var r3 = 0, n22 = new Array(e3); r3 < e3; r3++)
          n22[r3] = t3[r3];
        return n22;
      }
      var l2 = r22(411), u2 = Symbol("kPending"), p2 = Symbol("kRejected");
      t22.exports = { constants: { kPending: u2, kRejected: p2, ALL_PROPERTIES: 0, ONLY_ENUMERABLE: 2 }, getOwnNonIndexProperties: function(t3) {
        for (var e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2, r3 = Object.getOwnPropertyDescriptors(t3), n22 = [], a22 = 0, c22 = Object.entries(r3); a22 < c22.length; a22++) {
          var l22 = i2(c22[a22], 2), u22 = l22[0], p22 = l22[1];
          if (!/^(0|[1-9][0-9]*)$/.test(u22) || parseInt(u22, 10) >= Math.pow(2, 32) - 1) {
            if (2 === e3 && !p22.enumerable)
              continue;
            n22.push(u22);
          }
        }
        var f2, y2 = o2(Object.getOwnPropertySymbols(t3));
        try {
          for (y2.s(); !(f2 = y2.n()).done; ) {
            var s2 = f2.value, g2 = Object.getOwnPropertyDescriptor(t3, s2);
            (2 !== e3 || g2.enumerable) && n22.push(s2);
          }
        } catch (t4) {
          y2.e(t4);
        } finally {
          y2.f();
        }
        return n22;
      }, getPromiseDetails: function() {
        return [u2, void 0];
      }, getProxyDetails: l2.getProxyDetails, Proxy: l2.Proxy, previewEntries: function(t3) {
        return [[], false];
      }, getConstructorName: function(t3) {
        if (!t3 || "object" !== n2(t3))
          throw new Error("Invalid object");
        if (t3.constructor && t3.constructor.name)
          return t3.constructor.name;
        var e3 = Object.prototype.toString.call(t3).match(/^\[object ([^\]]+)\]/);
        return e3 ? e3[1] : "Object";
      }, getExternalValue: function() {
        return BigInt(0);
      } };
    } }, e2 = {};
    function r2(n2) {
      var o2 = e2[n2];
      if (void 0 !== o2)
        return o2.exports;
      var i2 = e2[n2] = { exports: {} };
      return t2[n2](i2, i2.exports, r2), i2.exports;
    }
    return r2.g = function() {
      if ("object" == typeof globalThis2)
        return globalThis2;
      try {
        return this || new Function2("return this")();
      } catch (t22) {
        if ("object" == typeof window2)
          return window2;
      }
    }(), r2(609);
  })());
}).call(__umdRoot, __umdRoot, __umdRoot, __umdRoot, __umdRoot, void 0, void 0, __umdFunction);
var inspect_default = __umdExports.length !== 1 && __umdRoot[__umdExports[0]] !== __umdRoot[__umdExports[1]] ? __umdRoot : __umdRoot[__umdExports[0]];
var package_default = inspect_default;
var {
  // The commented out things are not visible from normal node's util.
  // identicalSequenceRange,
  inspect,
  // inspectDefaultOptions,
  format,
  formatWithOptions,
  // getStringWidth,
  stripVTControlCharacters,
  // isZeroWidthCodePoint,
  stylizeWithColor,
  stylizeWithHTML,
  Proxy: Proxy2
} = inspect_default;
var transaction_exports = {};
__export75(transaction_exports, {
  compareTransaction: () => __export411,
  compareTransactionForTest: () => __export311,
  filterTransactions: () => __export0106,
  findTransaction: () => __export226,
  findTransactionRequired: () => __export170,
  flattenTransaction: () => __export511
});
function $$cjs_default$$77(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global210 !== "undefined" && global210 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global210 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global210 !== "undefined" && global210 || typeof globalThis !== "undefined" && globalThis || {};
var exports108 = {};
var module108 = {
  get exports() {
    return exports108;
  },
  set exports(value) {
    exports108 = value;
  }
};
Object.defineProperty(exports108, "__esModule", { value: true });
exports108.filterTransactions = exports108.findTransactionRequired = exports108.findTransaction = exports108.compareTransactionForTest = exports108.compareTransaction = exports108.flattenTransaction = void 0;
var core_1 = $$cjs_default$$77(typeof dist_exports2 !== "undefined" ? dist_exports2 : {});
var node_inspect_extracted_1 = $$cjs_default$$77(typeof package_exports !== "undefined" ? package_exports : {});
function extractOp(body) {
  const s2 = body.beginParse();
  if (s2.remainingBits >= 32) {
    return s2.loadUint(32);
  } else {
    return void 0;
  }
}
function flattenTransaction(tx) {
  return {
    lt: tx.lt,
    now: tx.now,
    outMessagesCount: tx.outMessagesCount,
    oldStatus: tx.oldStatus,
    endStatus: tx.endStatus,
    totalFees: tx.totalFees.coins,
    ...tx.inMessage ? {
      from: tx.inMessage.info.src instanceof core_1.Address ? tx.inMessage.info.src : void 0,
      to: tx.inMessage.info.dest,
      on: tx.inMessage.info.dest,
      value: tx.inMessage.info.type === "internal" ? tx.inMessage.info.value.coins : void 0,
      body: tx.inMessage.body,
      inMessageBounced: tx.inMessage.info.type === "internal" ? tx.inMessage.info.bounced : void 0,
      inMessageBounceable: tx.inMessage.info.type === "internal" ? tx.inMessage.info.bounce : void 0,
      op: extractOp(tx.inMessage.body),
      initData: tx.inMessage.init?.data ?? void 0,
      initCode: tx.inMessage.init?.code ?? void 0,
      deploy: tx.inMessage.init ? tx.oldStatus !== "active" && tx.endStatus === "active" : false
    } : {
      from: void 0,
      to: void 0,
      on: void 0,
      value: void 0,
      body: void 0,
      inMessageBounced: void 0,
      inMessageBounceable: void 0,
      op: void 0,
      initData: void 0,
      initCode: void 0,
      deploy: false
    },
    ...tx.description.type === "generic" || tx.description.type === "tick-tock" || tx.description.type === "split-prepare" || tx.description.type === "merge-install" ? {
      aborted: tx.description.aborted,
      destroyed: tx.description.destroyed,
      exitCode: tx.description.computePhase.type === "vm" ? tx.description.computePhase.exitCode : void 0,
      actionResultCode: tx.description.actionPhase?.resultCode,
      success: tx.description.computePhase.type === "vm" ? tx.description.computePhase.success && tx.description.actionPhase?.success : false
    } : {
      aborted: void 0,
      destroyed: void 0,
      exitCode: void 0,
      actionResultCode: void 0,
      success: void 0
    }
  };
}
exports108.flattenTransaction = flattenTransaction;
function compareValue(a2, b2) {
  if (a2 instanceof core_1.Address) {
    if (!(b2 instanceof core_1.Address))
      return false;
    return a2.equals(b2);
  }
  if (a2 instanceof core_1.Cell) {
    if (!(b2 instanceof core_1.Cell))
      return false;
    return a2.equals(b2);
  }
  return a2 === b2;
}
function compareTransaction(tx, cmp) {
  for (const key in cmp) {
    if (!(key in tx))
      throw new Error(`Unknown flat transaction object key ${key}`);
    const cmpv = cmp[key];
    const txv = tx[key];
    if (typeof cmpv === "function") {
      if (!cmpv(txv))
        return false;
    } else {
      if (!compareValue(txv, cmpv))
        return false;
    }
  }
  return true;
}
exports108.compareTransaction = compareTransaction;
function compareTransactionForTest(subject, cmp) {
  if (Array.isArray(subject)) {
    return {
      pass: subject.some((tx) => compareTransaction(flattenTransaction(tx), cmp)),
      posMessage: ((subj, cmp2) => `Expected ${(0, node_inspect_extracted_1.inspect)(subj.map((tx) => flattenTransaction(tx)))} to contain a transaction that matches pattern ${(0, node_inspect_extracted_1.inspect)(cmp2)}`).bind(void 0, subject, cmp),
      negMessage: ((subj, cmp2) => `Expected ${(0, node_inspect_extracted_1.inspect)(subj.map((tx) => flattenTransaction(tx)))} NOT to contain a transaction that matches pattern ${(0, node_inspect_extracted_1.inspect)(cmp2)}, but it does`).bind(void 0, subject, cmp)
    };
  } else {
    try {
      const flat = flattenTransaction(subject);
      return {
        pass: compareTransaction(flat, cmp),
        posMessage: ((flat2, cmp2) => `Expected ${(0, node_inspect_extracted_1.inspect)(flat2)} to match pattern ${(0, node_inspect_extracted_1.inspect)(cmp2)}`).bind(void 0, flat, cmp),
        negMessage: ((flat2, cmp2) => `Expected ${(0, node_inspect_extracted_1.inspect)(flat2)} NOT to match pattern ${(0, node_inspect_extracted_1.inspect)(cmp2)}, but it does`).bind(void 0, flat, cmp)
      };
    } catch (e2) {
      if (subject.transactions !== void 0) {
        console.warn("It seems that a SendMessageResult is being used for this comparison. Please make sure to pass `result.transactions` instead of just `result` into the matcher.");
      }
      throw e2;
    }
  }
}
exports108.compareTransactionForTest = compareTransactionForTest;
function findTransaction(txs, match) {
  let res;
  if (Array.isArray(txs)) {
    res = txs.find((x2) => compareTransaction(flattenTransaction(x2), match));
  } else {
    res = compareTransaction(flattenTransaction(txs), match) ? txs : void 0;
  }
  return res;
}
exports108.findTransaction = findTransaction;
function findTransactionRequired(txs, match) {
  const res = findTransaction(txs, match);
  if (res === void 0) {
    throw new Error(`Expected ${(0, node_inspect_extracted_1.inspect)(Array.isArray(txs) ? txs.map((x2) => flattenTransaction(x2)) : flattenTransaction(txs))} to contain a transaction that matches pattern ${(0, node_inspect_extracted_1.inspect)(match)}`);
  }
  return res;
}
exports108.findTransactionRequired = findTransactionRequired;
function filterTransactions(txs, match) {
  return txs.filter((x2) => compareTransaction(flattenTransaction(x2), match));
}
exports108.filterTransactions = filterTransactions;
var __export0106;
var __export170;
var __export226;
var __export311;
var __export411;
var __export511;
if (Object.isExtensible(module108.exports)) {
  __export0106 = module108.exports["filterTransactions"];
  __export170 = module108.exports["findTransactionRequired"];
  __export226 = module108.exports["findTransaction"];
  __export311 = module108.exports["compareTransactionForTest"];
  __export411 = module108.exports["compareTransaction"];
  __export511 = module108.exports["flattenTransaction"];
}
function $$cjs_default$$210(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global310 !== "undefined" && global310 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global310 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global310 !== "undefined" && global310 || typeof globalThis !== "undefined" && globalThis || {};
var exports210 = {};
var module210 = {
  get exports() {
    return exports210;
  },
  set exports(value) {
    exports210 = value;
  }
};
Object.defineProperty(exports210, "__esModule", { value: true });
exports210.executeFrom = exports210.executeTill = void 0;
var transaction_1 = $$cjs_default$$210(typeof transaction_exports !== "undefined" ? transaction_exports : {});
var node_inspect_extracted_12 = $$cjs_default$$210(typeof package_exports !== "undefined" ? package_exports : {});
async function executeTill(txs, match) {
  let executed = [];
  let iterResult = await txs.next();
  let found = false;
  while (!iterResult.done) {
    executed.push(iterResult.value);
    found = (0, transaction_1.compareTransaction)((0, transaction_1.flattenTransaction)(iterResult.value), match);
    if (found) {
      break;
    }
    iterResult = await txs.next();
  }
  if (!found) {
    throw new Error(`Expected ${(0, node_inspect_extracted_12.inspect)(executed.map((x2) => (0, transaction_1.flattenTransaction)(x2)))} to contain a transaction that matches pattern ${(0, node_inspect_extracted_12.inspect)(match)}`);
  }
  return executed;
}
exports210.executeTill = executeTill;
async function executeFrom(txs) {
  let executed = [];
  let iterResult = await txs.next();
  while (!iterResult.done) {
    executed.push(iterResult.value);
    iterResult = await txs.next();
  }
  return executed;
}
exports210.executeFrom = executeFrom;
var __export0210;
var __export1212;
if (Object.isExtensible(module210.exports)) {
  __export0210 = module210.exports["executeFrom"];
  __export1212 = module210.exports["executeTill"];
}
var randomAddress_exports = {};
__export75(randomAddress_exports, {
  randomAddress: () => __export0310
});
function $$cjs_default$$310(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global410 !== "undefined" && global410 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global410 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global410 !== "undefined" && global410 || typeof globalThis !== "undefined" && globalThis || {};
var exports310 = {};
var module310 = {
  get exports() {
    return exports310;
  },
  set exports(value) {
    exports310 = value;
  }
};
Object.defineProperty(exports310, "__esModule", { value: true });
exports310.randomAddress = void 0;
var core_12 = $$cjs_default$$310(typeof dist_exports2 !== "undefined" ? dist_exports2 : {});
function randomAddress(workchain = 0) {
  const b2 = Buffer.alloc(32);
  for (let i2 = 0; i2 < 32; i2++) {
    b2[i2] = Math.floor(Math.random() * 256);
  }
  return new core_12.Address(workchain, b2);
}
exports310.randomAddress = randomAddress;
var __export0310;
if (Object.isExtensible(module310.exports)) {
  __export0310 = module310.exports["randomAddress"];
}
var chai_exports2 = {};
__export75(chai_exports2, {
  default: () => chai_default2
});
var comparisons_exports = {};
__export75(comparisons_exports, {
  compareAddressForTest: () => __export1312,
  compareCellForTest: () => __export227,
  compareSliceForTest: () => __export0410
});
var exports410 = {};
var module410 = {
  get exports() {
    return exports410;
  },
  set exports(value) {
    exports410 = value;
  }
};
Object.defineProperty(exports410, "__esModule", { value: true });
exports410.compareSliceForTest = exports410.compareAddressForTest = exports410.compareCellForTest = void 0;
function compareCellForTest(subject, cmp) {
  return {
    pass: cmp.equals(subject),
    posMessage: ((subject2, cmp2) => `Expected
${subject2}
to equal
${cmp2}`).bind(void 0, subject, cmp),
    negMessage: ((subject2, cmp2) => `Expected
${subject2}
NOT to equal
${cmp2}
but it does`).bind(void 0, subject, cmp)
  };
}
exports410.compareCellForTest = compareCellForTest;
function compareAddressForTest(subject, cmp) {
  return {
    pass: cmp.equals(subject),
    posMessage: ((subject2, cmp2) => `Expected ${subject2} to equal ${cmp2}`).bind(void 0, subject, cmp),
    negMessage: ((subject2, cmp2) => `Expected ${subject2} NOT to equal ${cmp2}, but it does`).bind(void 0, subject, cmp)
  };
}
exports410.compareAddressForTest = compareAddressForTest;
function compareSliceForTest(subject, cmp) {
  return {
    pass: cmp.asCell().equals(subject.asCell()),
    posMessage: ((subject2, cmp2) => `Expected
${subject2}
to equal
${cmp2}`).bind(void 0, subject, cmp),
    negMessage: ((subject2, cmp2) => `Expected
${subject2}
NOT to equal
${cmp2}
but it does`).bind(void 0, subject, cmp)
  };
}
exports410.compareSliceForTest = compareSliceForTest;
var __export0410;
var __export1312;
var __export227;
if (Object.isExtensible(module410.exports)) {
  __export0410 = module410.exports["compareSliceForTest"];
  __export1312 = module410.exports["compareAddressForTest"];
  __export227 = module410.exports["compareCellForTest"];
}
function $$cjs_default$$262(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global272 !== "undefined" && global272 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global272 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global272 !== "undefined" && global272 || typeof globalThis !== "undefined" && globalThis || {};
var exports422 = {};
var module422 = {
  get exports() {
    return exports422;
  },
  set exports(value) {
    exports422 = value;
  }
};
Object.defineProperty(exports422, "__esModule", { value: true });
var comparisons_1 = $$cjs_default$$262(typeof comparisons_exports !== "undefined" ? comparisons_exports : {});
var transaction_12 = $$cjs_default$$262(typeof transaction_exports !== "undefined" ? transaction_exports : {});
function wrapComparer(comparer2) {
  return function(cmp) {
    const result = comparer2(this._obj, cmp);
    this.assert(result.pass, result.posMessage(), result.negMessage());
  };
}
try {
  const chai7 = (init_package7(), __toCommonJS(package_exports8));
  if (chai7)
    chai7.use((chai8) => {
      const Assertion = chai8.Assertion;
      Assertion.addMethod("transaction", wrapComparer(transaction_12.compareTransactionForTest));
      Assertion.addMethod("equalCell", wrapComparer(comparisons_1.compareCellForTest));
      Assertion.addMethod("equalAddress", wrapComparer(comparisons_1.compareAddressForTest));
      Assertion.addMethod("equalSlice", wrapComparer(comparisons_1.compareSliceForTest));
    });
} catch (e2) {
}
var chai_default2 = module422.exports != null && typeof module422.exports === "object" && "default" in module422.exports ? module422.exports.default : module422.exports;
var jest_exports = {};
__export75(jest_exports, {
  default: () => jest_default
});
function $$cjs_default$$272(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global282 !== "undefined" && global282 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global282 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global282 !== "undefined" && global282 || typeof globalThis !== "undefined" && globalThis || {};
var exports432 = {};
var module432 = {
  get exports() {
    return exports432;
  },
  set exports(value) {
    exports432 = value;
  }
};
Object.defineProperty(exports432, "__esModule", { value: true });
var transaction_13 = $$cjs_default$$272(typeof transaction_exports !== "undefined" ? transaction_exports : {});
var comparisons_12 = $$cjs_default$$272(typeof comparisons_exports !== "undefined" ? comparisons_exports : {});
function wrapComparer2(comparer2) {
  return function(actual, cmp) {
    const result = comparer2(actual, cmp);
    return {
      pass: result.pass,
      message: () => {
        if (result.pass) {
          return result.negMessage();
        } else {
          return result.posMessage();
        }
      }
    };
  };
}
var toHaveTransaction = wrapComparer2(transaction_13.compareTransactionForTest);
var toEqualCell = wrapComparer2(comparisons_12.compareCellForTest);
var toEqualAddress = wrapComparer2(comparisons_12.compareAddressForTest);
var toEqualSlice = wrapComparer2(comparisons_12.compareSliceForTest);
try {
  const jestGlobals = require_build();
  if (jestGlobals)
    jestGlobals.expect.extend({
      toHaveTransaction,
      toEqualCell,
      toEqualAddress,
      toEqualSlice
    });
} catch (e2) {
}
var jest_default = module432.exports != null && typeof module432.exports === "object" && "default" in module432.exports ? module432.exports.default : module432.exports;
function $$cjs_default$$282(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global292 !== "undefined" && global292 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names = Object2.getOwnPropertyNames(requiredModule);
    names.forEach(function(k2) {
      if (k2 === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k2 != "__esModule") {
        try {
          hasNamedExports = requiredModule[k2] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k2, {
        get: function() {
          return requiredModule[k2];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k2) {
        Object2.defineProperty(specifiers, k2, {
          get: function() {
            return requiredModule[k2];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global292 = typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global292 !== "undefined" && global292 || typeof globalThis !== "undefined" && globalThis || {};
var exports442 = {};
var module442 = {
  get exports() {
    return exports442;
  },
  set exports(value) {
    exports442 = value;
  }
};
Object.defineProperty(exports442, "__esModule", { value: true });
exports442.executeFrom = exports442.executeTill = exports442.randomAddress = exports442.filterTransactions = exports442.findTransactionRequired = exports442.findTransaction = exports442.flattenTransaction = exports442.compareTransaction = void 0;
var transaction_14 = $$cjs_default$$282(typeof transaction_exports !== "undefined" ? transaction_exports : {});
Object.defineProperty(exports442, "compareTransaction", { enumerable: true, get: function() {
  return transaction_14.compareTransaction;
} });
Object.defineProperty(exports442, "flattenTransaction", { enumerable: true, get: function() {
  return transaction_14.flattenTransaction;
} });
Object.defineProperty(exports442, "findTransaction", { enumerable: true, get: function() {
  return transaction_14.findTransaction;
} });
Object.defineProperty(exports442, "findTransactionRequired", { enumerable: true, get: function() {
  return transaction_14.findTransactionRequired;
} });
Object.defineProperty(exports442, "filterTransactions", { enumerable: true, get: function() {
  return transaction_14.filterTransactions;
} });
$$cjs_default$$282(typeof jest_exports !== "undefined" ? jest_exports : {});
$$cjs_default$$282(typeof chai_exports2 !== "undefined" ? chai_exports2 : {});
var randomAddress_1 = $$cjs_default$$282(typeof randomAddress_exports !== "undefined" ? randomAddress_exports : {});
Object.defineProperty(exports442, "randomAddress", { enumerable: true, get: function() {
  return randomAddress_1.randomAddress;
} });
var stepByStep_1 = $$cjs_default$$282(typeof stepByStep_exports !== "undefined" ? stepByStep_exports : {});
Object.defineProperty(exports442, "executeTill", { enumerable: true, get: function() {
  return stepByStep_1.executeTill;
} });
Object.defineProperty(exports442, "executeFrom", { enumerable: true, get: function() {
  return stepByStep_1.executeFrom;
} });
if (Object.isExtensible(module442.exports)) {
  module442.exports["executeFrom"];
  module442.exports["executeTill"];
  module442.exports["randomAddress"];
  module442.exports["filterTransactions"];
  module442.exports["findTransactionRequired"];
  module442.exports["findTransaction"];
  module442.exports["flattenTransaction"];
  module442.exports["compareTransaction"];
}

// ../../node_modules/@layerzerolabs/lz-ton-sdk-v2/artifacts/Uln.compiled.json
var Uln_compiled_default = { hash: "286721003d6720596ebe5b78c19ac76a72d03dcf1518ea19158be71dd92c6bdb", hashBase64: "KGchAD1nIFluvlt4wZrHanLQPc8VGOoZFYvnHdksa9s=", hex: "" };

// ../../node_modules/@layerzerolabs/lz-ton-sdk-v2/artifacts/Endpoint.compiled.json
var Endpoint_compiled_default = { hash: "bae7f3ace142da22b8b38b6ddb1a0e0be3b2ae0f0f867757b210719149f0930a", hashBase64: "uufzrOFC2iK4s4tt2xoOC+Oyrg8PhndXshBxkUnwkwo=", hex: "" };

// ../../node_modules/@layerzerolabs/lz-ton-sdk-v2/artifacts/UlnConnection.compiled.json
var UlnConnection_compiled_default = { hash: "bd92119e381f1d107068f77e916238c488466014a2bcdf68389d372ef287dcba", hashBase64: "vZIRnjgfHRBwaPd+kWI4xIhGYBSivN9oOJ03LvKH3Lo=", hex: "" };

// ../../node_modules/@layerzerolabs/lz-ton-sdk-v2/artifacts/Channel.compiled.json
var Channel_compiled_default = { hash: "460c1c62fd4d98ba683bd25552ab0d830eb761de06ef1858a3ec3948429220ec", hashBase64: "RgwcYv1NmLpoO9JVUqsNgw63Yd4G7xhYo+w5SEKSIOw=", hex: "" };

// ../../node_modules/@layerzerolabs/ui-ton/dist/index.mjs
var __defProp3 = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
function isHexString(value, length) {
  if (typeof value !== "string" || !value.match(/^(0x)?[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (length && value.length !== 2 + 2 * length) {
    return false;
  }
  return true;
}
function to32ByteBuffer2(value, maxIntermediateBufferSize = 66) {
  if (typeof value === "string") {
    if (!isHexString(value)) {
      throw new Error("only hex string is supported");
    }
    let hex2 = lodash.trimStart(value, "0x");
    if (hex2.length % 2 !== 0) {
      hex2 = "0" + hex2;
    }
    value = bigintBuffer.toBigIntBE(Buffer.from(hex2, "hex"));
  }
  if (value instanceof Uint8Array) {
    value = bigintBuffer.toBigIntBE(Buffer.from(value));
  }
  const bf = bigintBuffer.toBufferBE(BigInt(value), maxIntermediateBufferSize);
  return bf.subarray(-32);
}
function bigintToAddress2(value) {
  const buf = to32ByteBuffer2(value);
  return ton.Address.parse(`0:${buf.toString("hex")}`);
}
var parseTonAddress2 = (address2) => {
  if (address2 instanceof ton.Address) {
    return address2;
  }
  if (typeof address2 === "bigint" || typeof address2 === "number") {
    return bigintToAddress2(BigInt(address2));
  }
  if (address2.startsWith("0x")) {
    return bigintToAddress2(BigInt(address2));
  }
  try {
    return ton.Address.parse(address2);
  } catch (e2) {
    return bigintToAddress2(BigInt(`0x${address2}`));
  }
};
var arrayBufferToBase64 = (buffer) => {
  let binary = "";
  let bytes = new Uint8Array(buffer);
  let len = bytes.byteLength;
  for (let i2 = 0; i2 < len; i2++) {
    binary += String.fromCharCode(bytes[i2]);
  }
  return window.btoa(binary);
};
function walletConfigToCell(config7) {
  return __export264().storeUint(0, 4).storeCoins(0).storeAddress(config7.owner_address).storeAddress(config7.jetton_master_address).endCell();
}
var _UsdtWallet = class {
  constructor(address2, init) {
    this.address = address2;
    this.init = init;
  }
  static createFromAddress(address2) {
    return new _UsdtWallet(address2);
  }
  static createFromConfig(config7, code, workchain = 0) {
    const data = walletConfigToCell(config7);
    const init = { code, data };
    return new _UsdtWallet(__export313(workchain, init), init);
  }
  async sendDeploy(provider, via, value) {
    await provider.internal(via, {
      value,
      sendMode: __export1510.PAY_GAS_SEPARATELY,
      body: __export264().endCell()
    });
  }
  async buildTransfer(provider, opts) {
    const builder = __export264().storeUint(_UsdtWallet.OPCODES.TRANSFER, 32).storeUint(opts.queryId ?? 69, 64).storeCoins(opts.jettonAmount).storeAddress(opts.toAddress).storeAddress(opts.fromAddress).storeUint(0, 1).storeCoins(opts.fwdAmount);
    if ("comment" in opts) {
      const commentPayload = __export264().storeUint(0, 32).storeStringTail(opts.comment).endCell();
      builder.storeBit(1);
      builder.storeRef(commentPayload);
    } else {
      if (opts.forwardPayload instanceof __export254) {
        builder.storeBit(0);
        builder.storeSlice(opts.forwardPayload);
      } else if (opts.forwardPayload instanceof __export234) {
        builder.storeBit(1);
        builder.storeRef(opts.forwardPayload);
      } else {
        builder.storeBit(0);
      }
    }
    return builder.endCell();
  }
  async sendTransfer(provider, via, opts) {
    const body = await this.buildTransfer(provider, {
      ...opts,
      fromAddress: via.address
    });
    await provider.internal(via, {
      value: opts.value,
      sendMode: __export1510.PAY_GAS_SEPARATELY,
      body
    });
  }
  async getData(provider) {
    const { stack } = await provider.get("get_wallet_data", []);
    return {
      balance: stack.readBigNumber(),
      owner_address: stack.readAddress(),
      jetton_master_address: stack.readAddress(),
      wallet_code: stack.readCell()
    };
  }
  async getStatus(provider) {
    const result = await provider.get("get_status", []);
    return result.stack.readNumber();
  }
  async getBalance(provider) {
    const state = await provider.getState();
    return state.balance;
  }
  async getUsdtBalance(provider) {
    try {
      const res = await this.getData(provider);
      return res.balance;
    } catch (e2) {
      if (e2.message === "Trying to run get method on non-active contract") {
        return 0n;
      } else {
        throw e2;
      }
    }
  }
};
var UsdtWallet = _UsdtWallet;
__publicField(UsdtWallet, "OPCODES", {
  TRANSFER: 260734629
});
__export234.fromHex(Uln_compiled_default.hex);
__export234.fromHex(Endpoint_compiled_default.hex);
__export234.fromHex(UlnConnection_compiled_default.hex);
__export234.fromHex(Channel_compiled_default.hex);
({
  [uiCore.Stage.SANDBOX]: "https://testnet.toncenter.com/api/v3",
  [uiCore.Stage.TESTNET]: "https://testnet.toncenter.com/api/v3",
  [uiCore.Stage.MAINNET]: "https://ton-mainnet.core.chainstack.com/8d84e91390521b3e86defd93cb74f934/api/v3"
});
var TonSigner = class {
  constructor(adapter) {
    this.adapter = adapter;
  }
  sendTransaction = async (payload) => {
    if (!this.adapter.connected) {
      alert("Please connect wallet to send the transaction!");
    }
    try {
      const result = await this.adapter.sendTransaction({
        validUntil: Math.floor(Date.now() / 1e3) + 360,
        messages: payload.messages.map((message) => ({
          address: message.address.toString(),
          amount: message.amount,
          payload: message.payload ? arrayBufferToBase64(message.payload.toBoc()) : void 0
        }))
      });
      return result.boc;
    } catch (error) {
      if (error instanceof Error) {
        if (error.message.includes("Reject request")) {
          throw new Error("User rejected transaction");
        }
      }
      throw error;
    }
  };
  signTransaction(payload) {
    return Promise.resolve(payload);
  }
  getAddress() {
    return parseTonAddress2(this.adapter.wallet?.account.address ?? "");
  }
};
var TonWallet = class extends uiWallet.AbstractWallet {
  tonWallet = void 0;
  signer = void 0;
  chainType = uiCore.ChainType.TON;
  chainKey;
  tonConnector;
  connectionPromise;
  connectionOptions;
  constructor(connectionOptions) {
    super();
    this.connectionOptions = connectionOptions;
    this.chainKey = connectionOptions.chainKey;
    this.isAutoConnectEnabled = true;
    this.isAvailable = true;
    makeObservable(this, {
      isAvailable: true,
      chainKey: true,
      isConnected: true,
      isConnecting: true,
      isSwitchingChain: true,
      publicKey: true,
      nativeChainId: true,
      address: true,
      signer: true
    });
  }
  async init() {
    this.tonConnector = new TonConnect__default.default();
    this.signer = new TonSigner(this.tonConnector);
    this.tonConnector.onStatusChange((wallet) => {
      if (wallet && this.isCurrentWalletConnecting(wallet)) {
        this.tonWallet = wallet;
        this.setAddress(wallet.account.address);
        this.isConnected = true;
        if (this.connectionPromise) {
          this.connectionPromise.resolve();
        }
      } else if (this.connectionPromise) {
        this.connectionPromise.reject();
      }
    });
    try {
      await this.tonConnector.restoreConnection();
    } catch {
    }
  }
  setAddress(address2) {
    const parsedAddress = parseTonAddress2(address2);
    this.address = "0x" + lodash.trimStart(parsedAddress.toRawString(), "0:");
  }
  async getAddress() {
    if (this.tonWallet) {
      return this.tonWallet.account.address;
    }
    throw new Error("Could not get address");
  }
  async getNativeChainId() {
    if (this.connectionOptions.stage === "mainnet") {
      return 1;
    }
    return 2;
  }
  get icon() {
    return this.connectionOptions.iconSrc;
  }
  get type() {
    return this.connectionOptions.name;
  }
  connect() {
    return new Promise(async (resolve, reject) => {
      this.connectionPromise = {
        resolve,
        reject
      };
      if (this.tonConnector) {
        const walletsList = await this.tonConnector.getWallets();
        const embeddedWallet = walletsList.find(
          TonConnect.isWalletInfoCurrentlyEmbedded
        );
        if (embeddedWallet) {
          this.tonConnector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey });
          return;
        }
        try {
          this.tonConnector.connect({
            jsBridgeKey: this.connectionOptions.jsBridgeKey
          });
        } catch (error) {
          if (error.message.includes("WalletNotInjectedError")) {
            window.open(this.connectionOptions.aboutUrl, "_blank");
          }
        }
      }
    });
  }
  isCurrentWalletConnecting(wallet) {
    return wallet?.device.appName.toLowerCase().includes(this.connectionOptions.jsBridgeKey.toLowerCase());
  }
  autoConnect = async () => {
    if (!this.tonConnector) {
      await this.init();
      if (!this.tonConnector) {
        return;
      }
    }
    if (!this.isAutoConnectEnabled)
      throw new Error("AutoConnect is not enabled");
    try {
      if (this.tonConnector.connected && this.isCurrentWalletConnecting(this.tonConnector.wallet)) {
        this.tonWallet = this.tonConnector.wallet ?? void 0;
        if (this.tonWallet) {
          this.setAddress(this.tonWallet.account.address);
          this.isConnected = true;
        }
      }
    } catch (e2) {
      this.isAutoConnectEnabled = false;
      throw e2;
    }
  };
  async disconnect() {
    if (this.tonConnector?.connected) {
      await this.tonConnector.disconnect();
    }
    this.isConnected = false;
    this.address = void 0;
    this.tonWallet = void 0;
  }
  switchChain(chainKey) {
    this.chainKey = chainKey;
    return Promise.resolve(void 0);
  }
};
var UiTonWallet = class extends uiWallet.AbstractWallet {
  tonWallet = void 0;
  signer = void 0;
  chainType = uiCore.ChainType.TON;
  chainKey;
  tonConnectUI;
  connectionOptions;
  isAvailable = true;
  get isAutoConnectEnabled() {
    return true;
  }
  constructor(connectionOptions) {
    super();
    this.chainKey = connectionOptions.chainKey;
    this.connectionOptions = connectionOptions;
    this.tonConnectUI = new ui.TonConnectUI({
      manifestUrl: `https://lz-static-assets.s3.us-east-1.amazonaws.com/metadata/usdt/tonconnect-manifest.json`
    });
    this.signer = new TonSigner(this.tonConnectUI);
    makeObservable(this, {
      isAvailable: true,
      chainKey: true,
      isConnected: true,
      isConnecting: true,
      isSwitchingChain: true,
      publicKey: true,
      nativeChainId: true,
      address: true,
      signer: true
    });
    this.autoConnect();
  }
  get icon() {
    return this.connectionOptions.iconSrc;
  }
  get type() {
    return this.connectionOptions.name;
  }
  connect() {
    return new Promise(async (resolve, reject) => {
      this.isConnecting = true;
      const { modal } = this.tonConnectUI;
      const unsubscribe = modal.onStateChange((state) => {
        if (state.status === "closed") {
          unsubscribe();
          if (this.tonConnectUI.wallet) {
            this.tonWallet = this.tonConnectUI.wallet;
            this.address = this.tonWallet.account.address;
            this.isConnected = true;
          } else {
            this.isConnected = false;
          }
          this.isConnecting = false;
          resolve();
        }
      });
      await this.tonConnectUI.openModal();
    });
  }
  autoConnect = async () => {
    await this.tonConnectUI.connectionRestored;
    try {
      if (this.tonConnectUI.connected) {
        if (this.tonConnectUI.wallet) {
          this.tonWallet = this.tonConnectUI.wallet;
          this.address = this.tonWallet.account.address;
          this.isConnected = true;
        }
      } else {
        await this.tonConnectUI.disconnect();
      }
    } catch (e2) {
      console.log("error", e2);
      throw e2;
    }
  };
  async disconnect() {
    if (this.tonConnectUI?.connected) {
      await this.tonConnectUI.disconnect();
    }
    this.isConnected = false;
    this.address = void 0;
    this.tonWallet = void 0;
  }
  async init() {
  }
  getAddress() {
    return Promise.resolve("");
  }
  getNativeChainId() {
    return Promise.resolve(0);
  }
  switchChain(chainKey) {
    return Promise.resolve(void 0);
  }
};
/*! Bundled license information:

@layerzerolabs/lz-ton-sdk-v2/dist/index.mjs:
  (*! Bundled license information:
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/interface/assert.js:
    (*!
     * chai
     * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Chai dependencies.
     *)
    (*!
     * Module export.
     *)
    (*!
     * ### .ifError(object)
     *
     * Asserts if value is not a false value, and throws if it is a true value.
     * This is added to allow for chai to be a drop-in replacement for Node's
     * assert class.
     *
     *     var err = new Error('I am a custom error');
     *     assert.ifError(err); // Rethrows err!
     *
     * @name ifError
     * @param {Object} object
     * @namespace Assert
     * @api public
     *)
    (*!
     * Aliases.
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/interface/should.js:
    (*!
     * chai
     * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/interface/expect.js:
    (*!
     * chai
     * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/core/assertions.js:
    (*!
     * chai
     * http://chaijs.com
     * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/assertion.js:
    (*!
     * chai
     * http://chaijs.com
     * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Module dependencies.
     *)
    (*!
     * Module export.
     *)
    (*!
     * Assertion Constructor
     *
     * Creates object for chaining.
     *
     * `Assertion` objects contain metadata in the form of flags. Three flags can
     * be assigned during instantiation by passing arguments to this constructor:
     *
     * - `object`: This flag contains the target of the assertion. For example, in
     *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will
     *   contain `numKittens` so that the `equal` assertion can reference it when
     *   needed.
     *
     * - `message`: This flag contains an optional custom error message to be
     *   prepended to the error message that's generated by the assertion when it
     *   fails.
     *
     * - `ssfi`: This flag stands for "start stack function indicator". It
     *   contains a function reference that serves as the starting point for
     *   removing frames from the stack trace of the error that's created by the
     *   assertion when it fails. The goal is to provide a cleaner stack trace to
     *   end users by removing Chai's internal functions. Note that it only works
     *   in environments that support `Error.captureStackTrace`, and only when
     *   `Chai.config.includeStack` hasn't been set to `false`.
     *
     * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag
     *   should retain its current value, even as assertions are chained off of
     *   this object. This is usually set to `true` when creating a new assertion
     *   from within another assertion. It's also temporarily set to `true` before
     *   an overwritten assertion gets called by the overwriting assertion.
     *
     * - `eql`: This flag contains the deepEqual function to be used by the assertion.
     *
     * @param {Mixed} obj target of the assertion
     * @param {String} msg (optional) custom error message
     * @param {Function} ssfi (optional) starting point for removing stack frames
     * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked
     * @api private
     *)
    (*!
     * ### ._obj
     *
     * Quick reference to stored `actual` value for plugin developers.
     *
     * @api private
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/flag.js:
    (*!
     * Chai - flag utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/isNaN.js:
    (*!
     * Chai - isNaN utility
     * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/isProxyEnabled.js:
    (*!
     * Chai - isProxyEnabled helper
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addLengthGuard.js:
    (*!
     * Chai - addLengthGuard utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getProperties.js:
    (*!
     * Chai - getProperties utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/proxify.js:
    (*!
     * Chai - proxify utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getOwnEnumerablePropertySymbols.js:
    (*!
     * Chai - getOwnEnumerablePropertySymbols utility
     * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getOwnEnumerableProperties.js:
    (*!
     * Chai - getOwnEnumerableProperties utility
     * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Module dependencies
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/compareByInspect.js:
    (*!
     * Chai - compareByInspect utility
     * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Module dependencies
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/transferFlags.js:
    (*!
     * Chai - transferFlags utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/overwriteChainableMethod.js:
    (*!
     * Chai - overwriteChainableMethod utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addChainableMethod.js:
    (*!
     * Chai - addChainingMethod utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Module dependencies
     *)
    (*!
     * Module variables
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/overwriteMethod.js:
    (*!
     * Chai - overwriteMethod utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/overwriteProperty.js:
    (*!
     * Chai - overwriteProperty utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addMethod.js:
    (*!
     * Chai - addMethod utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/addProperty.js:
    (*!
     * Chai - addProperty utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/deep-eql-npm-4.1.3-020a64f862/package/index.js:
    (*!
     * deep-eql
     * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Check to see if the MemoizeMap has recorded a result of the two operands
     *
     * @param {Mixed} leftHandOperand
     * @param {Mixed} rightHandOperand
     * @param {MemoizeMap} memoizeMap
     * @returns {Boolean|null} result
    *)
    (*!
     * Set the result of the equality into the MemoizeMap
     *
     * @param {Mixed} leftHandOperand
     * @param {Mixed} rightHandOperand
     * @param {MemoizeMap} memoizeMap
     * @param {Boolean} result
    *)
    (*!
     * Primary Export
     *)
    (*!
     * The main logic of the `deepEqual` function.
     *
     * @param {Mixed} leftHandOperand
     * @param {Mixed} rightHandOperand
     * @param {Object} [options] (optional) Additional options
     * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.
     * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of
        complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular
        references to blow the stack.
     * @return {Boolean} equal match
    *)
    (*!
     * Compare two Regular Expressions for equality.
     *
     * @param {RegExp} leftHandOperand
     * @param {RegExp} rightHandOperand
     * @return {Boolean} result
     *)
    (*!
     * Compare two Sets/Maps for equality. Faster than other equality functions.
     *
     * @param {Set} leftHandOperand
     * @param {Set} rightHandOperand
     * @param {Object} [options] (Optional)
     * @return {Boolean} result
     *)
    (*!
     * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.
     *
     * @param {Iterable} leftHandOperand
     * @param {Iterable} rightHandOperand
     * @param {Object} [options] (Optional)
     * @return {Boolean} result
     *)
    (*!
     * Simple equality for generator objects such as those returned by generator functions.
     *
     * @param {Iterable} leftHandOperand
     * @param {Iterable} rightHandOperand
     * @param {Object} [options] (Optional)
     * @return {Boolean} result
     *)
    (*!
     * Determine if the given object has an @@iterator function.
     *
     * @param {Object} target
     * @return {Boolean} `true` if the object has an @@iterator function.
     *)
    (*!
     * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.
     * This will consume the iterator - which could have side effects depending on the @@iterator implementation.
     *
     * @param {Object} target
     * @returns {Array} an array of entries from the @@iterator function
     *)
    (*!
     * Gets all entries from a Generator. This will consume the generator - which could have side effects.
     *
     * @param {Generator} target
     * @returns {Array} an array of entries from the Generator.
     *)
    (*!
     * Gets all own and inherited enumerable keys from a target.
     *
     * @param {Object} target
     * @returns {Array} an array of own and inherited enumerable keys from the target.
     *)
    (*!
     * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of
     * each key. If any value of the given key is not equal, the function will return false (early).
     *
     * @param {Mixed} leftHandOperand
     * @param {Mixed} rightHandOperand
     * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against
     * @param {Object} [options] (Optional)
     * @return {Boolean} result
     *)
    (*!
     * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`
     * for each enumerable key in the object.
     *
     * @param {Mixed} leftHandOperand
     * @param {Mixed} rightHandOperand
     * @param {Object} [options] (Optional)
     * @return {Boolean} result
     *)
    (*!
     * Returns true if the argument is a primitive.
     *
     * This intentionally returns true for all objects that can be compared by reference,
     * including functions and symbols.
     *
     * @param {Mixed} value
     * @return {Boolean} result
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/objDisplay.js:
    (*!
     * Chai - flag utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Module dependencies
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getActual.js:
    (*!
     * Chai - getActual utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/getMessage.js:
    (*!
     * Chai - message composition utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Module dependencies
     *)
  
  .store/assertion-error-npm-1.1.0-66b893015e/package/index.js:
    (*!
     * assertion-error
     * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>
     * MIT Licensed
     *)
    (*!
     * Return a function that will copy properties from
     * one object to another excluding any originally
     * listed. Returned function will create a new `{}`.
     *
     * @param {String} excluded properties ...
     * @return {Function}
     *)
    (*!
     * Primary Exports
     *)
    (*!
     * Inherit from Error.prototype
     *)
    (*!
     * Statically set name
     *)
    (*!
     * Ensure correct constructor
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/expectTypes.js:
    (*!
     * Chai - expectTypes utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/test.js:
    (*!
     * Chai - test utility
     * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Module dependencies
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai/utils/index.js:
    (*!
     * chai
     * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Dependencies that are used for multiple exports are required here only once
     *)
    (*!
     * test utility
     *)
    (*!
     * type utility
     *)
    (*!
     * expectTypes utility
     *)
    (*!
     * message utility
     *)
    (*!
     * actual utility
     *)
    (*!
     * Inspect util
     *)
    (*!
     * Object Display util
     *)
    (*!
     * Flag utility
     *)
    (*!
     * Flag transferring utility
     *)
    (*!
     * Deep equal utility
     *)
    (*!
     * Deep path info
     *)
    (*!
     * Check if a property exists
     *)
    (*!
     * Function name
     *)
    (*!
     * add Property
     *)
    (*!
     * add Method
     *)
    (*!
     * overwrite Property
     *)
    (*!
     * overwrite Method
     *)
    (*!
     * Add a chainable method
     *)
    (*!
     * Overwrite chainable method
     *)
    (*!
     * Compare by inspect method
     *)
    (*!
     * Get own enumerable property symbols method
     *)
    (*!
     * Get own enumerable properties method
     *)
    (*!
     * Checks error against a given set of criteria
     *)
    (*!
     * Proxify util
     *)
    (*!
     * addLengthGuard util
     *)
    (*!
     * isProxyEnabled helper
     *)
    (*!
     * isNaN method
     *)
    (*!
     * getOperator method
     *)
  
  .store/chai-npm-4.4.1-ffd006b4b1/package/lib/chai.js:
    (*!
     * chai
     * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
     * MIT Licensed
     *)
    (*!
     * Chai version
     *)
    (*!
     * Assertion Error
     *)
    (*!
     * Utils for plugins (not exported)
     *)
    (*!
     * Utility Functions
     *)
    (*!
     * Configuration
     *)
    (*!
     * Primary `Assertion` prototype
     *)
    (*!
     * Core Assertions
     *)
    (*!
     * Expect interface
     *)
    (*!
     * Should interface
     *)
    (*!
     * Assert interface
     *)
  *)
*/

exports.TonSigner = TonSigner;
exports.TonWallet = TonWallet;
exports.UiTonWallet = UiTonWallet;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.cjs.map