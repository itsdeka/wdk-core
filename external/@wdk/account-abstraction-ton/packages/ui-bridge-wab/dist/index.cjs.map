{"version":3,"sources":["../src/api/OriginalTokenBridge.ts","../src/typechain/factories/OriginalTokenBridge__factory.ts","../src/typechain/factories/WrappedTokenBridge__factory.ts","../src/utils/getExtraGas.ts","../src/utils/isValidSwap.ts","../src/api/AbstractTokenBridge.ts","../src/api/WrappedTokenBridge.ts","../src/types/zod.ts","../src/utils/createWrappedAssetBridge.ts","../src/utils/createWrappedTokenBridgeConfig.ts"],"names":["validateInput","Contract","utils","_abi","CurrencyAmount","getNativeCurrency","isToken","castCurrencyAmountUnsafe","assert","constants","createTransaction","serializeAdapterParams","ERC20__api"],"mappings":"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","sourcesContent":["import {\n  validateInput,\n  type ApproveInput,\n  type BridgeOutput,\n  type ClaimInput,\n  type GetAllowanceInput,\n  type GetDurationInput,\n  type GetExtraGasInput,\n  type GetLimitInput,\n  type GetMessageFeeInput,\n  type GetOutputInput,\n  type GetUnclaimedInput,\n  type IsRegisteredInput,\n  type RegisterInput,\n  type TransferInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {\n  type AdapterParams,\n  type Currency,\n  CurrencyAmount,\n  type FeeQuote,\n  getNativeCurrency,\n  isToken,\n  type Transaction,\n  MaxUint256,\n  castCurrencyAmountUnsafe,\n  assert,\n} from '@layerzerolabs/ui-core';\n\nimport {type Signer, constants} from 'ethers';\nimport {\n  createTransaction,\n  serializeAdapterParams,\n  type ProviderFactory,\n  ERC20__api,\n} from '@layerzerolabs/ui-evm';\n\nimport {OriginalTokenBridge__factory} from '../typechain';\nimport type {LzLib} from '../typechain/WrappedTokenBridge';\nimport {PacketType} from '../types/PacketType';\nimport {getExtraGas} from '../utils/getExtraGas';\nimport {isValidSwap} from '../utils/isValidSwap';\nimport type {AbstractTokenBridge, BridgeFee} from './AbstractTokenBridge';\nimport {BaseTokenBridge} from './AbstractTokenBridge';\nimport type {BridgeContract, WrappedAssetBridgeConfig} from '../types/WrappedAssetBridgeConfig';\n\nexport class OriginalTokenBridge extends BaseTokenBridge implements AbstractTokenBridge<Signer> {\n  protected readonly erc20: ERC20__api;\n\n  constructor(\n    protected providerFactory: ProviderFactory,\n    protected bridge: BridgeContract,\n    config: WrappedAssetBridgeConfig,\n  ) {\n    super(config);\n    this.erc20 = new ERC20__api(providerFactory);\n  }\n\n  supportsClaim(currency: Currency): boolean {\n    return false;\n  }\n\n  supportsRegister(currency: Currency): boolean {\n    if (currency.chainKey !== this.bridge.chainKey) return false;\n    if (!this.config.tokens.flat().some((token) => token.equals(currency))) return false;\n    return true;\n  }\n\n  async getDuration(input: GetDurationInput): Promise<number> {\n    throw new Error('Not implemented');\n  }\n\n  async getAllowance({token, address}: GetAllowanceInput): Promise<CurrencyAmount> {\n    if (!isToken(token)) {\n      return CurrencyAmount.fromRawAmount(token, constants.MaxUint256.toString());\n    }\n    const contract = this.getContract();\n    return this.erc20.forToken(token).allowance(address, contract.address);\n  }\n\n  async approve({amount}: ApproveInput) {\n    const contract = this.getContract();\n    return this.erc20.forToken(amount.token).approve(amount, contract.address);\n  }\n\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    const srcDeployment = this.tryGetDeployment(srcToken.chainKey);\n    const dstDeployment = this.tryGetDeployment(dstToken.chainKey);\n    if (!srcDeployment?.bridgeOriginal) return false;\n    if (!dstDeployment?.bridgeWrapped) return false;\n    return isValidSwap(srcToken, dstToken, this.config);\n  }\n\n  async isRegistered({token, address}: IsRegisteredInput): Promise<boolean> {\n    return true;\n  }\n\n  async getUnclaimed({token, address}: GetUnclaimedInput): Promise<CurrencyAmount<Currency>> {\n    return CurrencyAmount.fromRawAmount(token, 0);\n  }\n\n  claim(input: ClaimInput): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  register(input: RegisterInput): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  async getExtraGas({srcToken, dstToken}: GetExtraGasInput): Promise<number> {\n    const srcChainKey = srcToken.chainKey;\n    const dstChainKey = dstToken.chainKey;\n    const dstEid = this.chainKeyToEndpointId(dstChainKey);\n    const contract = this.getContract();\n    const amount = await contract.minDstGasLookup(dstEid, PacketType.PT_MINT);\n    // return default extra gas if not configured (0)\n    return amount.toNumber() || getExtraGas(srcChainKey, dstChainKey);\n  }\n\n  async transfer(input: TransferInput): Promise<Transaction<Signer>> {\n    if (isToken(input.srcToken)) {\n      return this.transferToken(input);\n    }\n    return this.transferEth(input);\n  }\n\n  private async transferToken(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    const srcToken = input.srcToken;\n    const srcChainKey = srcToken.chainKey;\n    assert(isToken(srcToken));\n    const contract = this.getContract();\n    const value = input.fee.nativeFee.quotient;\n\n    const callParams = this.buildCallParams(input);\n    const adapterParams = this.buildLayerZeroTxParams(input.adapterParams);\n\n    const populatedTransaction = contract.populateTransaction.bridge(\n      srcToken.address,\n      input.srcAmount.quotient,\n      input.dstAddress,\n      callParams,\n      adapterParams,\n      {value, from: input.srcAddress},\n    );\n\n    return createTransaction(populatedTransaction, {\n      provider: this.providerFactory(srcChainKey),\n      chainKey: srcChainKey,\n    });\n  }\n\n  private async transferEth(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    assert(!isToken(input.srcToken));\n    const srcChainKey = input.srcChainKey;\n    const contract = this.getContract();\n    const value = input.fee.nativeFee.add(input.srcAmount).quotient;\n\n    const callParams = this.buildCallParams(input);\n    const adapterParams = this.buildLayerZeroTxParams(input.adapterParams);\n\n    // each version uses different method but both have same signature\n    const bridgeMethod = this.config.version === 2 ? 'bridgeNative' : 'bridgeETH';\n\n    const populatedTransaction = contract.populateTransaction[bridgeMethod](\n      input.srcAmount.quotient,\n      input.dstAddress,\n      callParams,\n      adapterParams,\n      {value, from: input.srcAddress},\n    );\n\n    return createTransaction(populatedTransaction, {\n      provider: this.providerFactory(srcChainKey),\n      chainKey: srcChainKey,\n    });\n  }\n\n  async getMessageFee({srcToken, dstToken, adapterParams}: GetMessageFeeInput): Promise<FeeQuote> {\n    const srcChainKey = srcToken.chainKey;\n    const native = getNativeCurrency(srcChainKey);\n\n    const lzParams = this.buildLayerZeroTxParams(adapterParams);\n    const useZro = false;\n\n    const contract = this.getContract();\n\n    // dstChainId is hardcoded in contract\n    const response = await contract.estimateBridgeFee(useZro, lzParams);\n\n    const fee: FeeQuote = {\n      nativeFee: CurrencyAmount.fromRawAmount(native, response.nativeFee.toBigInt()),\n      zroFee: CurrencyAmount.fromRawAmount(native, response.zroFee.toBigInt()),\n    };\n    return fee;\n  }\n\n  async getOutput({srcAmount, dstToken}: GetOutputInput): Promise<BridgeOutput<BridgeFee>> {\n    // this way fee is 0\n    const bridgeFee = srcAmount.multiply(0);\n    const outputAmountLD = srcAmount.subtract(bridgeFee);\n    const outputAmountRD = castCurrencyAmountUnsafe(outputAmountLD, dstToken);\n\n    return {\n      fee: {bridgeFee: bridgeFee},\n      dstAmount: outputAmountRD,\n    };\n  }\n\n  async getLimit({srcToken}: GetLimitInput): Promise<CurrencyAmount<Currency>> {\n    return CurrencyAmount.fromRawAmount(srcToken, MaxUint256);\n  }\n\n  protected getContract() {\n    const provider = this.providerFactory(this.bridge.chainKey);\n    const contract = OriginalTokenBridge__factory.connect(this.bridge.address, provider);\n    return contract;\n  }\n\n  protected buildLayerZeroTxParams(adapterParams: AdapterParams): string {\n    return serializeAdapterParams(adapterParams);\n  }\n\n  protected buildCallParams(input: TransferInput): LzLib.CallParamsStruct {\n    const callParams: LzLib.CallParamsStruct = {\n      refundAddress: input.srcAddress,\n      zroPaymentAddress: constants.AddressZero,\n    };\n    return callParams;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  OriginalTokenBridge,\n  OriginalTokenBridgeInterface,\n} from \"../OriginalTokenBridge\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_endpoint\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_weth\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_reason\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"MessageFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ReceiveToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"RegisterToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"_payloadHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RetryMessageSuccess\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SendToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_type\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_minDstGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SetMinDstGas\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetPrecrime\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"remoteChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"SetRemoteChainId\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemoteAddress\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"useCustomAdapterParams\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetUseCustomAdapterParams\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WithdrawFee\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"LDtoSDConversionRate\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PT_MINT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PT_UNLOCK\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"accruedFeeLD\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"refundAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zroPaymentAddress\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct LzLib.CallParams\",\n        name: \"callParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"bridge\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"refundAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zroPaymentAddress\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct LzLib.CallParams\",\n        name: \"callParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"bridgeETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"refundAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zroPaymentAddress\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct LzLib.CallParams\",\n        name: \"callParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"bridgeNative\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"useZro\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"estimateBridgeFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"zroFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"failedMessages\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"forceResumeReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getConfig\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"getTrustedRemoteAddress\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"isTrustedRemote\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lzEndpoint\",\n    outputs: [\n      {\n        internalType: \"contract ILayerZeroEndpoint\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"lzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"minDstGasLookup\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"nonblockingLzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"precrime\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"sharedDecimals\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"registerToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"remoteChainId\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"retryMessage\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_config\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setConfig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_packetType\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMinDstGas\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrecrime\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setReceiveVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setRemoteChainId\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setSendVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemoteAddress\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_useCustomAdapterParams\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setUseCustomAdapterParams\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"supportedTokens\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"totalValueLockedSD\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"trustedRemoteLookup\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"useCustomAdapterParams\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"weth\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawFee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n] as const;\n\nexport class OriginalTokenBridge__factory {\n  static readonly abi = _abi;\n  static createInterface(): OriginalTokenBridgeInterface {\n    return new utils.Interface(_abi) as OriginalTokenBridgeInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): OriginalTokenBridge {\n    return new Contract(address, _abi, signerOrProvider) as OriginalTokenBridge;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type {\n  WrappedTokenBridge,\n  WrappedTokenBridgeInterface,\n} from \"../WrappedTokenBridge\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_endpoint\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_reason\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"MessageFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"localToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"remoteToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"RegisterToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"_payloadHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RetryMessageSuccess\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_type\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_minDstGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SetMinDstGas\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetPrecrime\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemoteAddress\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"useCustomAdapterParams\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetUseCustomAdapterParams\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"withdrawalFeeBps\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"SetWithdrawalFeeBps\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"localToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"remoteToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"UnwrapToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"localToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"remoteToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WrapToken\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"PT_MINT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PT_UNLOCK\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOTAL_BPS\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"localToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"unwrapWeth\",\n        type: \"bool\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"refundAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zroPaymentAddress\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct LzLib.CallParams\",\n        name: \"callParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"bridge\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"useZro\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"estimateBridgeFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"zroFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"failedMessages\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"forceResumeReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getConfig\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"getTrustedRemoteAddress\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"isTrustedRemote\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"localToRemote\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lzEndpoint\",\n    outputs: [\n      {\n        internalType: \"contract ILayerZeroEndpoint\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"lzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"minDstGasLookup\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"nonblockingLzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"precrime\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"localToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"remoteToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"registerToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"remoteToLocal\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"retryMessage\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_config\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setConfig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_packetType\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMinDstGas\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrecrime\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setReceiveVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setSendVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemoteAddress\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_useCustomAdapterParams\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setUseCustomAdapterParams\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_withdrawalFeeBps\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setWithdrawalFeeBps\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"totalValueLocked\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"trustedRemoteLookup\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"useCustomAdapterParams\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"withdrawalFeeBps\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const;\n\nexport class WrappedTokenBridge__factory {\n  static readonly abi = _abi;\n  static createInterface(): WrappedTokenBridgeInterface {\n    return new utils.Interface(_abi) as WrappedTokenBridgeInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): WrappedTokenBridge {\n    return new Contract(address, _abi, signerOrProvider) as WrappedTokenBridge;\n  }\n}\n","import type {ChainKey} from '@layerzerolabs/ui-core';\n\nexport function getExtraGas(srcChainKey: ChainKey, dstChainKey: ChainKey) {\n  const extraGas =\n    dstChainKey === 'arbitrum'\n      ? 3_000_000\n      : dstChainKey === 'aptos' || dstChainKey === 'aptos-testnet'\n        ? 10_000\n        : 250_000;\n\n  return extraGas;\n}\n","import type {Currency} from '@layerzerolabs/ui-core';\nimport type {WrappedAssetBridgeConfig} from '../types/WrappedAssetBridgeConfig';\n\n// returns true if tokens are both in the same swap group\nexport function isValidSwap(\n  srcToken: Currency,\n  dstToken: Currency,\n  config: WrappedAssetBridgeConfig,\n) {\n  for (const swapGroup of config.tokens) {\n    if (swapGroup.some((t) => t.equals(srcToken)) && swapGroup.some((t) => t.equals(dstToken))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import {\n  type BridgeApi,\n  type BridgeOption,\n  type BridgeOptions,\n  type GetOptionsInput,\n  type TransferInput,\n  validateInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport type {ChainKey, CurrencyAmount} from '@layerzerolabs/ui-core';\nimport type {WrappedAssetBridgeConfig} from '../types/WrappedAssetBridgeConfig';\n\nexport type BridgeFee = {bridgeFee: CurrencyAmount};\n\nexport type AbstractTokenBridge<Signer> = BridgeApi<Signer, BridgeFee>;\n\nexport abstract class BaseTokenBridge {\n  constructor(protected config: WrappedAssetBridgeConfig) {}\n\n  async getOptions(input: GetOptionsInput): Promise<BridgeOptions> {\n    const taxiOption: BridgeOption = {\n      mode: 'taxi',\n    };\n    return {options: [taxiOption]};\n  }\n\n  protected chainKeyToEndpointId(chainKey: string): number {\n    const deployment = this.getDeployment(chainKey);\n    return deployment.eid;\n  }\n\n  protected tryGetDeployment(chainKey: ChainKey) {\n    const deployment = this.config.deployments[chainKey];\n    // adding this condition so TS understands there can be no deployment\n    if (deployment) return deployment;\n    return undefined;\n  }\n\n  protected getDeployment(chainKey: ChainKey) {\n    const deployment = this.tryGetDeployment(chainKey);\n    if (deployment) return deployment;\n    throw new Error(`No deployment for ${chainKey}`);\n  }\n\n  protected validateInput(input: TransferInput): asserts input is Required<TransferInput> {\n    validateInput(input);\n  }\n}\n","import {\n  validateInput,\n  type ApproveInput,\n  type BridgeOutput,\n  type ClaimInput,\n  type GetAllowanceInput,\n  type GetDurationInput,\n  type GetExtraGasInput,\n  type GetLimitInput,\n  type GetMessageFeeInput,\n  type GetOutputInput,\n  type GetUnclaimedInput,\n  type IsRegisteredInput,\n  type RegisterInput,\n  type TransferInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {\n  type AdapterParams,\n  type Currency,\n  CurrencyAmount,\n  type FeeQuote,\n  getNativeCurrency,\n  isToken,\n  type Transaction,\n  Token,\n  castCurrencyAmountUnsafe,\n  assert,\n} from '@layerzerolabs/ui-core';\n\nimport {type Signer, constants} from 'ethers';\nimport {\n  createTransaction,\n  serializeAdapterParams,\n  type ProviderFactory,\n  ERC20__api,\n} from '@layerzerolabs/ui-evm';\n\nimport {OriginalTokenBridge__factory, WrappedTokenBridge__factory} from '../typechain';\nimport type {LzLib} from '../typechain/WrappedTokenBridge';\nimport {PacketType} from '../types/PacketType';\nimport {getExtraGas} from '../utils/getExtraGas';\nimport {isValidSwap} from '../utils/isValidSwap';\nimport {type AbstractTokenBridge, BaseTokenBridge, type BridgeFee} from './AbstractTokenBridge';\nimport type {BridgeContract, WrappedAssetBridgeConfig} from '../types/WrappedAssetBridgeConfig';\n\nexport class WrappedTokenBridge extends BaseTokenBridge implements AbstractTokenBridge<Signer> {\n  protected readonly erc20: ERC20__api;\n\n  constructor(\n    protected providerFactory: ProviderFactory,\n    protected bridge: BridgeContract,\n    config: WrappedAssetBridgeConfig,\n  ) {\n    super(config);\n    this.erc20 = new ERC20__api(providerFactory);\n  }\n\n  supportsClaim(currency: Currency): boolean {\n    return false;\n  }\n\n  supportsRegister(currency: Currency): boolean {\n    if (currency.chainKey !== this.bridge.chainKey) return false;\n    if (!this.config.tokens.flat().some((token) => token.equals(currency))) return false;\n    return true;\n  }\n\n  async getDuration(input: GetDurationInput): Promise<number> {\n    throw new Error('Not implemented');\n  }\n\n  async getAllowance({token, address}: GetAllowanceInput): Promise<CurrencyAmount<Currency>> {\n    if (!isToken(token)) {\n      return CurrencyAmount.fromRawAmount(token, constants.MaxUint256.toString());\n    }\n    const contract = this.getContract();\n    return this.erc20.forToken(token).allowance(address, contract.address);\n  }\n\n  async approve({amount}: ApproveInput) {\n    const contract = this.getContract();\n    return this.erc20.forToken(amount.token).approve(amount, contract.address);\n  }\n\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    const srcDeployment = this.tryGetDeployment(srcToken.chainKey);\n    const dstDeployment = this.tryGetDeployment(dstToken.chainKey);\n    if (!srcDeployment?.bridgeWrapped) return false;\n    if (!dstDeployment?.bridgeOriginal) return false;\n    return isValidSwap(srcToken, dstToken, this.config);\n  }\n\n  async isRegistered({token, address}: IsRegisteredInput): Promise<boolean> {\n    return true;\n  }\n\n  async getUnclaimed({token, address}: GetUnclaimedInput): Promise<CurrencyAmount<Currency>> {\n    return CurrencyAmount.fromRawAmount(token, 0);\n  }\n\n  claim(input: ClaimInput): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  register(input: RegisterInput): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  async getExtraGas({srcToken, dstToken}: GetExtraGasInput): Promise<number> {\n    const srcChainKey = srcToken.chainKey;\n    const dstChainKey = dstToken.chainKey;\n    const contract = this.getContract();\n    const dstEid = this.chainKeyToEndpointId(dstToken.chainKey);\n    const amount = await contract.minDstGasLookup(dstEid, PacketType.PT_UNLOCK);\n    // return default extra gas if not configured (0)\n    return amount.toNumber() || getExtraGas(srcChainKey, dstChainKey);\n  }\n\n  async transfer(input: TransferInput): Promise<Transaction<Signer>> {\n    if (isToken(input.srcToken)) {\n      return this.transferToken(input);\n    }\n    return this.transferEth(input);\n  }\n\n  private async transferToken(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    const srcToken = input.srcToken;\n    assert(isToken(srcToken));\n    const contract = this.getContract();\n    const srcChainKey = srcToken.chainKey;\n    const value = input.fee.nativeFee.quotient;\n\n    const dstEid = this.chainKeyToEndpointId(input.dstChainKey);\n    const callParams = this.buildCallParams(input);\n    const adapterParams = this.buildLayerZeroTxParams(input.adapterParams);\n    const unwrapWeth = isToken(input.dstToken) ? false : true;\n\n    const populatedTransaction = contract.populateTransaction.bridge(\n      srcToken.address,\n      dstEid,\n      input.srcAmount.quotient,\n      input.dstAddress,\n      unwrapWeth,\n      callParams,\n      adapterParams,\n      {value, from: input.srcAddress},\n    );\n\n    return createTransaction(populatedTransaction, {\n      provider: this.providerFactory(srcChainKey),\n      chainKey: srcChainKey,\n    });\n  }\n\n  private async transferEth(input: TransferInput): Promise<Transaction<Signer>> {\n    throw new Error('Not implemented');\n  }\n\n  protected async getBridgeFee(\n    inputAmount: CurrencyAmount,\n    dstToken: Currency,\n  ): Promise<CurrencyAmount> {\n    const bps = await this.getWithdrawFeeBps();\n    return inputAmount.multiply(bps).divide(10000);\n  }\n\n  // extracted so it can be cached\n  protected getWithdrawFeeBps = () => {\n    const contract = this.getContract();\n    return contract.withdrawalFeeBps();\n  };\n\n  async getMessageFee({srcToken, dstToken, adapterParams}: GetMessageFeeInput): Promise<FeeQuote> {\n    const useZro = false;\n    const native = getNativeCurrency(srcToken.chainKey);\n    const lzParams = this.buildLayerZeroTxParams(adapterParams);\n    const contract = this.getContract();\n    const dstEid = this.chainKeyToEndpointId(dstToken.chainKey);\n\n    const {nativeFee, zroFee} = await contract.estimateBridgeFee(dstEid, useZro, lzParams);\n\n    const fee: FeeQuote = {\n      nativeFee: CurrencyAmount.fromRawAmount(native, nativeFee.toBigInt()),\n      zroFee: CurrencyAmount.fromRawAmount(native, zroFee.toBigInt()),\n    };\n    return fee;\n  }\n\n  async getOutput({srcAmount, dstToken}: GetOutputInput): Promise<BridgeOutput<BridgeFee>> {\n    const fee = await this.getBridgeFee(srcAmount, dstToken);\n    const outputAmountLD = srcAmount.subtract(fee);\n    const outputAmountRD = castCurrencyAmountUnsafe(outputAmountLD, dstToken);\n    return {\n      fee: {bridgeFee: fee},\n      dstAmount: outputAmountRD,\n    };\n  }\n\n  protected async getWeth(chainKey: string): Promise<Token> {\n    const deployment = this.getDeployment(chainKey);\n    assert(deployment.bridgeOriginal, `No bridgeOriginal for ${chainKey}`);\n    const contract = OriginalTokenBridge__factory.connect(\n      deployment.bridgeOriginal.address,\n      this.providerFactory(chainKey),\n    );\n    const weth = await contract.weth();\n    return Token.from({chainKey, address: weth, decimals: 18, symbol: 'WETH'});\n  }\n\n  async getLimit({srcToken, dstToken}: GetLimitInput): Promise<CurrencyAmount> {\n    const dstChainKey = dstToken.chainKey;\n    const dstDeployment = this.getDeployment(dstChainKey);\n    assert(dstDeployment.bridgeOriginal, `No bridgeOriginal for ${dstChainKey}`);\n    const original = OriginalTokenBridge__factory.connect(\n      dstDeployment.bridgeOriginal.address,\n      this.providerFactory(dstChainKey),\n    );\n    const dstTokenAddress = (isToken(dstToken) ? dstToken : await this.getWeth(dstChainKey))\n      .address;\n    const [ld2sdRate, tvlSD] = await Promise.all([\n      original.LDtoSDConversionRate(dstTokenAddress),\n      original.totalValueLockedSD(dstTokenAddress),\n    ]);\n\n    const tvlLD = tvlSD.mul(ld2sdRate);\n    return CurrencyAmount.fromRawAmount(srcToken, tvlLD.toString());\n  }\n\n  protected getContract() {\n    const provider = this.providerFactory(this.bridge.chainKey);\n    const contract = WrappedTokenBridge__factory.connect(this.bridge.address, provider);\n    return contract;\n  }\n\n  protected buildLayerZeroTxParams(adapterParams: AdapterParams): string {\n    return serializeAdapterParams(adapterParams);\n  }\n\n  protected buildCallParams(input: TransferInput): LzLib.CallParamsStruct {\n    const callParams: LzLib.CallParamsStruct = {\n      refundAddress: input.srcAddress,\n      zroPaymentAddress: constants.AddressZero,\n    };\n    return callParams;\n  }\n}\n","import z from 'zod';\nimport {currencySchema, serializeCurrency} from '@layerzerolabs/ui-core';\nimport type {WrappedAssetBridgeConfig} from './WrappedAssetBridgeConfig';\n\nconst bridgeSchema = z.object({\n  address: z.string(),\n});\n\nexport const wrappedAssetBridgeConfigSchema = z\n  .object({\n    version: z.number().or(z.string()),\n    tokens: z.array(z.array(currencySchema)),\n    deployments: z.record(\n      z.object({\n        eid: z.number(),\n        bridgeOriginal: bridgeSchema.optional(),\n        bridgeWrapped: bridgeSchema.optional(),\n      }),\n    ),\n  })\n  .transform((input) => {\n    const config: WrappedAssetBridgeConfig = {\n      version: input.version,\n      deployments: {},\n      tokens: input.tokens,\n    };\n    for (const chainKey in input.deployments) {\n      const deployment = input.deployments[chainKey];\n      let bridgeOriginal, bridgeWrapped;\n      if (deployment.bridgeOriginal) {\n        bridgeOriginal = {\n          address: deployment.bridgeOriginal.address,\n          chainKey,\n        };\n      }\n      if (deployment.bridgeWrapped) {\n        bridgeWrapped = {\n          address: deployment.bridgeWrapped.address,\n          chainKey,\n        };\n      }\n      config.deployments[chainKey] = {\n        eid: deployment.eid,\n        bridgeOriginal,\n        bridgeWrapped,\n      };\n    }\n    return config;\n  });\n\nexport type SerializedWrappedAssetBridgeConfig = z.input<typeof wrappedAssetBridgeConfigSchema>;\n\nexport function serializeWrappedAssetBridgeConfig(\n  input: WrappedAssetBridgeConfig,\n): SerializedWrappedAssetBridgeConfig {\n  const serialized: SerializedWrappedAssetBridgeConfig = {\n    deployments: {},\n    tokens: input.tokens.map((tokenGroup) => tokenGroup.map((token) => serializeCurrency(token))),\n    version: input.version,\n  };\n  for (const chainKey in input.deployments) {\n    const deployment = input.deployments[chainKey];\n    const eid = deployment.eid;\n    if (deployment.bridgeOriginal) {\n      serialized.deployments[chainKey] = {\n        eid,\n        bridgeOriginal: {\n          address: deployment.bridgeOriginal.address,\n        },\n      };\n    }\n    if (deployment.bridgeWrapped) {\n      serialized.deployments[chainKey] = {\n        eid,\n        bridgeWrapped: {\n          address: deployment.bridgeWrapped.address,\n        },\n      };\n    }\n  }\n  return serialized;\n}\n","import type {ProviderFactory} from '@layerzerolabs/ui-evm';\nimport type {Signer} from 'ethers';\n\nimport {OriginalTokenBridge} from '../api/OriginalTokenBridge';\nimport {WrappedTokenBridge} from '../api/WrappedTokenBridge';\nimport type {AbstractTokenBridge} from '../api/AbstractTokenBridge';\nimport type {WrappedAssetBridgeConfig} from '../types/WrappedAssetBridgeConfig';\n\nexport function createWrappedAssetBridge(\n  config: WrappedAssetBridgeConfig,\n  providerFactory: ProviderFactory,\n): AbstractTokenBridge<Signer>[] {\n  const bridges: AbstractTokenBridge<Signer>[] = [];\n  for (const deployment of Object.values(config.deployments)) {\n    if (deployment.bridgeOriginal) {\n      const bridge = new OriginalTokenBridge(providerFactory, deployment.bridgeOriginal, config);\n      bridges.push(bridge);\n    }\n    if (deployment.bridgeWrapped) {\n      const bridge = new WrappedTokenBridge(providerFactory, deployment.bridgeWrapped, config);\n      bridges.push(bridge);\n    }\n  }\n  return bridges;\n}\n","import type {WrappedAssetBridgeConfig} from '../types/WrappedAssetBridgeConfig';\nimport {\n  type SerializedWrappedAssetBridgeConfig,\n  wrappedAssetBridgeConfigSchema,\n} from '../types/zod';\n\nexport function createWrappedAssetBridgeConfig(\n  input: SerializedWrappedAssetBridgeConfig,\n): WrappedAssetBridgeConfig {\n  return wrappedAssetBridgeConfigSchema.parse(input);\n}\n"]}