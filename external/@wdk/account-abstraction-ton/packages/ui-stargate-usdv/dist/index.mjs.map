{"version":3,"sources":["../src/evm/BridgeRecolorBridgeApi__evm.ts","../src/evm/MessagingApi.ts","../src/evm/utils/options.ts","../src/typechain/factories/USDVSide__factory.ts","../src/typechain/factories/MessagingV1__factory.ts","../src/evm/utils/hex.ts","../src/typechain/factories/BridgeRecolor__factory.ts","../src/typechain/factories/MinterProxy__factory.ts","../src/typechain/factories/SideChainLP__factory.ts","../src/typechain/factories/USDVMain__factory.ts","../src/evm/USDVBridgeBase.ts","../src/evm/USDVBridgeApi__evm.ts","../src/evm/MinterProxyBridgeApi__evm.ts","../src/evm/zod.ts","../src/config/testnet.ts","../src/config/mainnet.ts"],"names":["CurrencyAmount","getNativeCurrency","ONE_ADDRESS","utils","Contract","_abi","MsgType","validateInput","isToken","assert","ERC20__api","createTransaction","MaxUint256"],"mappings":"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","sourcesContent":["import {\n  validateInput,\n  type BridgeApi,\n  type TransferInput,\n  type BridgeOutput,\n  type GetExtraGasInput,\n  type GetOutputInput,\n  type GetLimitInput,\n  type GetAllowanceInput,\n  type ApproveInput,\n  type GetMessageFeeInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {\n  type Currency,\n  type FeeQuote,\n  CurrencyAmount,\n  type Transaction,\n  isToken,\n  getNativeCurrency,\n  type Token,\n  Fraction,\n  castCurrencyAmountUnsafe,\n  type ChainKey,\n  assert,\n} from '@layerzerolabs/ui-core';\nimport {\n  ERC20__api,\n  ONE_ADDRESS,\n  type ProviderFactory,\n  createTransaction,\n} from '@layerzerolabs/ui-evm';\nimport {type Signer, utils} from 'ethers';\nimport {MessagingApi, MsgType} from './MessagingApi';\nimport type {IOFT, MessagingFeeStruct, SwapRecolor} from '../typechain/BridgeRecolor';\nimport {USDVSide__factory} from '../typechain/factories/USDVSide__factory';\nimport type {USDVSide} from '../typechain/USDVSide';\nimport type {USDVMain} from '../typechain/USDVMain';\nimport {BridgeRecolor__factory} from '../typechain/factories/BridgeRecolor__factory';\nimport {SideChainLP__factory} from '../typechain';\nimport type {USDVBridgeFee} from './USDVBridgeFee';\nimport {USDVBridgeBase} from './USDVBridgeBase';\nimport type {USDVConfig} from './USDVConfig';\n\nexport class BridgeRecolorBridgeApi__evm\n  extends USDVBridgeBase\n  implements BridgeApi<Signer, USDVBridgeFee>\n{\n  protected erc20: ERC20__api;\n  constructor(\n    config: USDVConfig,\n    protected providerFactory: ProviderFactory,\n    protected readonly color: number,\n    //\n    protected messaging = new MessagingApi(config, providerFactory),\n  ) {\n    super(config);\n    this.erc20 = new ERC20__api(providerFactory);\n  }\n\n  async transfer(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    const {srcToken, dstToken} = input;\n    const srcChainKey = srcToken.chainKey;\n    assert(this.isStable(srcToken));\n    assert(this.isUSDV(dstToken));\n    const contract = this.getBridgeContract(srcChainKey);\n\n    const swapParamStruct: SwapRecolor.SwapParamStruct = {\n      _fromToken: srcToken.address,\n      _fromTokenAmount: input.srcAmount.quotient,\n      _minUSDVOut: input.dstAmountMin.quotient,\n    };\n\n    const sendParamsStruct: IOFT.SendParamStruct = {\n      // amountLD gets converted to USDV in the contract\n      amountLD: input.srcAmount.quotient,\n      minAmountLD: input.dstAmountMin.quotient,\n      dstEid: this.messaging.mapDstEidId(input.dstChainKey),\n      to: this.messaging.mapDstAddress(input.dstAddress),\n    };\n\n    const extraOptions = this.messaging.serializeOptions(input.adapterParams);\n    const msgFee: MessagingFeeStruct = {\n      lzTokenFee: input.fee.zroFee.quotient,\n      nativeFee: input.fee.nativeFee.quotient,\n    };\n    const composeMsg = utils.arrayify('0x');\n\n    const populatedTransaction = contract.populateTransaction.swapRecolorSend(\n      swapParamStruct,\n      this.color, // color doesn't matter it is hardcoded\n      sendParamsStruct,\n      extraOptions,\n      msgFee,\n      input.srcAddress,\n      composeMsg,\n      {\n        value: input.fee.nativeFee.quotient,\n      },\n    );\n\n    return createTransaction(populatedTransaction, {\n      provider: contract.provider,\n    });\n  }\n\n  async getMessageFee({srcToken, dstToken, adapterParams}: GetMessageFeeInput): Promise<FeeQuote> {\n    const usdv = this.getUSDVContract(srcToken.chainKey);\n    const sendParamStruct: IOFT.SendParamStruct = {\n      amountLD: 1, // doesn't affect fee\n      minAmountLD: 1, // doesn't affect fee\n      to: this.messaging.mapDstAddress(ONE_ADDRESS), // doesn't affect fee\n      dstEid: this.chainKeyToEndpointId(dstToken.chainKey),\n    };\n    const extraOptions = this.messaging.serializeOptions(adapterParams);\n    const composeMsg = utils.arrayify('0x');\n    const nativeCurrency = getNativeCurrency(srcToken.chainKey);\n    const feeBN = await usdv.quoteSendFee(sendParamStruct, extraOptions, false, composeMsg);\n    const fee: FeeQuote = {\n      nativeFee: CurrencyAmount.fromRawAmount(nativeCurrency, feeBN.nativeFee.toBigInt()),\n      zroFee: CurrencyAmount.fromRawAmount(nativeCurrency, feeBN.lzTokenFee.toBigInt()),\n    };\n    return fee;\n  }\n\n  async getExtraGas({srcToken, dstToken}: GetExtraGasInput): Promise<number> {\n    return this.messaging.minDstGasLookup({\n      srcChainKey: srcToken.chainKey,\n      dstChainKey: dstToken.chainKey,\n      msgType: MsgType.SEND,\n    });\n  }\n\n  /////////\n  supportsClaim(currency: Currency): boolean {\n    return false;\n  }\n  supportsRegister(currency: Currency): boolean {\n    return false;\n  }\n\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    const srcChainKey = srcToken.chainKey;\n    const deployment = this.tryGetDeployment(srcChainKey);\n    const srcBridgeRecolor = deployment?.bridgeRecolor;\n    if (!srcBridgeRecolor) return false;\n    if (srcToken.chainKey === dstToken.chainKey) return false;\n    if (!this.isStable(srcToken)) return false;\n    if (!this.isUSDV(dstToken)) return false;\n    return true;\n  }\n\n  async getOutput({srcAmount, dstToken}: GetOutputInput): Promise<BridgeOutput<USDVBridgeFee>> {\n    const srcToken = srcAmount.token;\n    assert(isToken(srcToken), 'Not a token');\n    const srcChainKey = srcToken.chainKey;\n    const bridge = this.getBridgeContract(srcChainKey);\n    const quote = await bridge.getUSDVOutVerbose(srcToken.address, srcAmount.quotient);\n    const output = CurrencyAmount.fromRawAmount(dstToken, quote.usdvOut.toBigInt());\n    const reward = CurrencyAmount.fromRawAmount(dstToken, quote.reward.toBigInt());\n    const fee = CurrencyAmount.fromRawAmount(dstToken, quote.fee.toBigInt());\n    return {\n      dstAmount: output,\n      fee: {\n        reward,\n        fee,\n      },\n    };\n  }\n\n  async getDuration(): Promise<number> {\n    throw new Error('Method not implemented.');\n  }\n\n  protected isUSDV(currency: Currency): currency is Token {\n    return this.usdvTokens.some((usdv) => usdv.equals(currency));\n  }\n\n  protected isStable(currency: Currency): currency is Token {\n    return this.config.stables.some((stable) => stable.equals(currency));\n  }\n\n  async getLimit({srcToken, dstToken}: GetLimitInput): Promise<CurrencyAmount<Currency>> {\n    assert(this.isStable(srcToken));\n    assert(this.isUSDV(dstToken));\n    const srcChainKey = srcToken.chainKey;\n    const srcUSDV = this.usdvTokens.find((t) => t.chainKey === srcChainKey);\n    assert(srcUSDV, 'srcUSDV');\n    const bridge = this.getBridgeContract(srcChainKey);\n    const lpAddress = await bridge.lp();\n    const lpContract = SideChainLP__factory.connect(lpAddress, this.providerFactory(srcChainKey));\n\n    const [srcTokenConfig, bridgeRecolorUserRewardBps, bridgeRecolorUsdvBalance, lpUsdvBalance] =\n      await Promise.all([\n        lpContract.tokenConfigs(srcToken.address),\n        bridge.userRewardBps(),\n        this.erc20.forToken(srcUSDV).balanceOf(bridge.address),\n        this.erc20.forToken(srcUSDV).balanceOf(lpAddress),\n      ]);\n\n    const maxSwapAmountA = bridgeRecolorUsdvBalance.divide(\n      new Fraction(\n        bridgeRecolorUserRewardBps - srcTokenConfig.rewardBps + srcTokenConfig.feeBps,\n        10000,\n      ),\n    );\n\n    const maxSwapAmountB = lpUsdvBalance.divide(\n      new Fraction(10000 + srcTokenConfig.rewardBps - srcTokenConfig.feeBps, 10000),\n    );\n\n    // it is just limit - we should be safe\n    return castCurrencyAmountUnsafe(min(maxSwapAmountA, maxSwapAmountB), srcToken);\n  }\n\n  getUnclaimed(): Promise<CurrencyAmount<Currency>> {\n    throw new Error('Method not implemented.');\n  }\n  getAllowance({token, address}: GetAllowanceInput): Promise<CurrencyAmount<Currency>> {\n    const bridge = this.getBridgeContract(token.chainKey);\n    return this.erc20.forToken(token).allowance(address, bridge.address);\n  }\n  isRegistered(): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n  claim(): Promise<Transaction<Signer>> {\n    throw new Error('Method not implemented.');\n  }\n  register(): Promise<Transaction<Signer>> {\n    throw new Error('Method not implemented.');\n  }\n  approve({amount}: ApproveInput): Promise<Transaction<Signer>> {\n    const bridge = this.getBridgeContract(amount.token.chainKey);\n    return this.erc20.forToken(amount.token).approve(amount, bridge.address);\n  }\n\n  protected getBridgeContract(chainKey: ChainKey) {\n    const deployment = this.getDeployment(chainKey);\n    if (!deployment.bridgeRecolor) throw new Error(`No deployment for chainKey: ${chainKey}`);\n    return BridgeRecolor__factory.connect(\n      deployment.bridgeRecolor.address,\n      this.providerFactory(chainKey),\n    );\n  }\n  protected getUSDVContract(chainKey: ChainKey): USDVSide | USDVMain {\n    const deployment = this.getDeployment(chainKey);\n    // doesn't matter if side or main\n    return USDVSide__factory.connect(deployment.usdv.address, this.providerFactory(chainKey));\n  }\n}\n\nfunction min(a: CurrencyAmount, b: CurrencyAmount) {\n  if (a.quotient < b.quotient) return a;\n  return b;\n}\n","import {\n  type AdapterParams,\n  CurrencyAmount,\n  type FeeQuote,\n  type Token,\n  getNativeCurrency,\n  type ChainKey,\n} from '@layerzerolabs/ui-core';\nimport {ONE_ADDRESS, type ProviderFactory} from '@layerzerolabs/ui-evm';\nimport {utils} from 'ethers';\nimport {optionsType1, optionsType2} from './utils/options';\nimport {USDVSide__factory} from '../typechain/factories/USDVSide__factory';\nimport type {IOFT} from '../typechain/BridgeRecolor';\nimport {MessagingV1__factory} from '../typechain/factories/MessagingV1__factory';\nimport type {USDVConfig} from './USDVConfig';\nimport {addressToBytes32} from './utils/hex';\n\nenum USDVRole {\n  OWNER = 0,\n  OPERATOR = 1,\n  VAULT = 2,\n  MESSAGING = 3,\n  FOUNDATION = 4,\n}\n\nexport enum MsgType {\n  SEND = 1,\n  SEND_AND_CALL = 2,\n  SYNC_DELTA = 3,\n  REMINT = 4,\n}\n\n// this will have to be changed when V2 endpoint is used\nexport class MessagingApi {\n  constructor(\n    protected config: USDVConfig,\n    protected providerFactory: ProviderFactory,\n  ) {}\n  async minDstGasLookup(input: {srcChainKey: ChainKey; dstChainKey: ChainKey; msgType: MsgType}) {\n    const dstEid = this.mapDstEidId(input.dstChainKey);\n    const messagingV1 = await this.getMessagingV1Contract(input.srcChainKey);\n    const minDstGasLookup = await messagingV1.minDstGasLookup(dstEid, input.msgType);\n    return minDstGasLookup.toNumber();\n  }\n\n  async getSendMessageFee(input: {\n    srcChainKey: ChainKey;\n    dstChainKey: ChainKey;\n    adapterParams: AdapterParams;\n  }): Promise<FeeQuote> {\n    const usdv = this.getUSDV(input.srcChainKey);\n    const native = getNativeCurrency(input.srcChainKey);\n\n    if (input.srcChainKey === input.srcChainKey) {\n      // no fee - special case for same chain operations\n      return {\n        nativeFee: CurrencyAmount.fromRawAmount(native, 0),\n        zroFee: CurrencyAmount.fromRawAmount(native, 0),\n      };\n    }\n\n    const contract = USDVSide__factory.connect(usdv.address, this.providerFactory(usdv.chainKey));\n\n    // message fee does not depend on:\n    // - sender\n    // - receiver\n    // - amount\n    const to = ONE_ADDRESS;\n    const amountLD = 1;\n    const minAmountLD = 1;\n\n    // dstAddress does not affect message fee\n    const sendParamStruct: IOFT.SendParamStruct = {\n      to: this.mapDstAddress(to),\n      amountLD,\n      minAmountLD,\n      dstEid: this.mapDstEidId(input.dstChainKey),\n    };\n\n    const options = this.serializeOptions(input.adapterParams);\n    const composeMsg = utils.arrayify('0x');\n\n    const [nativeFee, zroFee] = await contract.quoteSendFee(\n      sendParamStruct,\n      options,\n      false,\n      composeMsg,\n    );\n\n    const fee: FeeQuote = {\n      nativeFee: CurrencyAmount.fromRawAmount(native, nativeFee.toBigInt()),\n      zroFee: CurrencyAmount.fromRawAmount(native, zroFee.toBigInt()),\n    };\n    return fee;\n  }\n\n  protected async getMessagingV1Contract(chainKey: ChainKey) {\n    const usdv = this.getUSDV(chainKey);\n    const provider = this.providerFactory(chainKey);\n    // doesn't matter if it is side or main - both share USDVBase\n    const address = await USDVSide__factory.connect(usdv.address, provider).getRole(\n      USDVRole.MESSAGING,\n    );\n    const messagingV1 = MessagingV1__factory.connect(address, provider);\n    return messagingV1;\n  }\n\n  protected getUSDV(chainKey: ChainKey): Token {\n    const deployment = this.config.deployments[chainKey];\n    if (deployment) return deployment.usdv;\n    throw new Error(`No USDV for chainKey: ${chainKey}`);\n  }\n\n  public serializeOptions(adapterParams: AdapterParams) {\n    if (adapterParams.version === 1) {\n      return optionsType1(adapterParams.extraGas);\n    } else if (adapterParams.version === 2) {\n      if (!adapterParams.dstNativeAddress) throw new Error('No dstNativeAddress');\n      if (!adapterParams.dstNativeAmount) throw new Error('No dstNativeAmount');\n      return optionsType2(\n        adapterParams.extraGas,\n        adapterParams.dstNativeAmount!.quotient,\n        adapterParams.dstNativeAddress!,\n      );\n    }\n    throw new Error(`Invalid options version ${adapterParams.version}`);\n  }\n\n  public mapDstEidId(dstChainKey: ChainKey) {\n    const deployment = this.config.deployments[dstChainKey];\n    if (deployment) return deployment.eid;\n    throw new Error(`No deployment for chainKey: ${dstChainKey}`);\n  }\n\n  public mapDstAddress(dstAddress: string) {\n    return utils.hexlify(addressToBytes32(utils.getAddress(dstAddress)));\n  }\n}\n","import {ethers} from 'ethers';\nimport {assert as invariant} from '@layerzerolabs/ui-core';\n\n/**\n *  txType 1,\n *  bytes  [2       32      ]\n *  fields [txType  extraGas]\n */\nconst TYPE_1 = 1;\n/**\n *  txType 2,\n *  bytes  [2       32        32            bytes[]         ]\n *  fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\n */\nconst TYPE_2 = 2;\n/**\n * only available for V2\n */\nconst TYPE_3 = 3;\n\nconst MaxUint128 = ethers.BigNumber.from('0xffffffffffffffffffffffffffffffff');\n\nexport function optionsType1(_extraGas: number | string | bigint): string {\n  const extraGas = ethers.BigNumber.from(_extraGas);\n  invariant(extraGas.lte(MaxUint128), 'extraGas should be less than MaxUint128');\n  return ethers.utils.solidityPack(['uint16', 'uint256'], [TYPE_1, extraGas]);\n}\n\nexport function optionsType2(\n  _extraGas: number | string | bigint,\n  _dstNativeAmt: number | string | bigint,\n  _dstNativeAddress: string,\n): string {\n  const extraGas = ethers.BigNumber.from(_extraGas);\n  invariant(extraGas.lte(MaxUint128), 'extraGas should be less than MaxUint128');\n  const dstNativeAmt = ethers.BigNumber.from(_dstNativeAmt);\n  invariant(dstNativeAmt.lte(MaxUint128), 'dstNativeAmt should be less than MaxUint128');\n  return ethers.utils.solidityPack(\n    ['uint16', 'uint256', 'uint256', 'bytes'],\n    [\n      TYPE_2,\n      ethers.BigNumber.from(extraGas),\n      ethers.BigNumber.from(dstNativeAmt),\n      _dstNativeAddress,\n    ],\n  );\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { USDVSide, USDVSideInterface } from \"../USDVSide\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"previousAdmin\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newAdmin\",\n        type: \"address\",\n      },\n    ],\n    name: \"AdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"beacon\",\n        type: \"address\",\n      },\n    ],\n    name: \"BeaconUpgraded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"Upgraded\",\n    type: \"event\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    inputs: [],\n    name: \"admin\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"admin_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"implementation\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"implementation_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"upgradeTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"upgradeToAndCall\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_amountLDSend\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AmountSlippage\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Blacklisted\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"FeeTooHigh\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InsufficientBalance\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidAmount\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidArgument\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"InvalidColor\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidUser\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"LDMinusSD\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NotDeltaZero\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NotImplemented\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Overflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Paused\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Unauthorized\",\n    type: \"error\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: \"EIP712DomainChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"version\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Initialized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"_guid\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_toAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ReceiveOFT\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"_guid\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct Delta[]\",\n        name: \"deltas\",\n        type: \"tuple[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"remintFee\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"Reminting\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"_guid\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_fromAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SendOFT\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"isBlacklisted\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetBlacklist\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"caller\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"colorer\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetColorer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"caller\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"defaultColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"SetDefaultColor\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_inspector\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetInspector\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetPause\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"enum Role\",\n        name: \"role\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetRole\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"guid\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct Delta[]\",\n        name: \"deltas\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"Synced\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_isBlacklisted\",\n        type: \"bool\",\n      },\n    ],\n    name: \"blacklist\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_amount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"_deficits\",\n        type: \"uint32[]\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"colorStateOf\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint64\",\n            name: \"colored\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"delta\",\n            type: \"int64\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"lastDelta\",\n            type: \"int64\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"lastBlockNumber\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"known\",\n            type: \"bool\",\n          },\n        ],\n        internalType: \"struct Colors.ColorState\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"colorers\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"colorer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"eip712Domain\",\n    outputs: [\n      {\n        internalType: \"bytes1\",\n        name: \"fields\",\n        type: \"bytes1\",\n      },\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"version\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"chainId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"verifyingContract\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"salt\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"extensions\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_startColor\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_endColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getDeltas\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32[]\",\n        name: \"_colors\",\n        type: \"uint32[]\",\n      },\n    ],\n    name: \"getDeltas\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"enum Role\",\n        name: \"_role\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getRole\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_foundation\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxKnownColor\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_amount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_numDeficits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_useLZToken\",\n        type: \"bool\",\n      },\n    ],\n    name: \"quoteRemintFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"to\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minAmountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct IOFT.SendParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_useLZToken\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"quoteSendFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_dstEid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_numDeficits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_useLzToken\",\n        type: \"bool\",\n      },\n    ],\n    name: \"quoteSyncDeltaFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_surplusColor\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_surplusAmount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"_deficits\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeCap\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"_msgFee\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"remint\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"to\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minAmountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct IOFT.SendParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"_msgFee\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"send\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_guid\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_amount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_theta\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"sendAck\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_colorer\",\n        type: \"address\",\n      },\n    ],\n    name: \"setColorer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_defaultColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"setDefaultColor\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setPause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"enum Role\",\n        name: \"_role\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"setRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_eid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_theta\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"_deficits\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeCap\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"_msgFee\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"syncDelta\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"_deltas\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"syncDeltaAck\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"userStates\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"balance\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"blacklisted\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"defaultColor\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_logic\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"admin_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"constructor\",\n  },\n] as const;\n\nexport class USDVSide__factory {\n  static readonly abi = _abi;\n  static createInterface(): USDVSideInterface {\n    return new utils.Interface(_abi) as USDVSideInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): USDVSide {\n    return new Contract(address, _abi, signerOrProvider) as USDVSide;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { MessagingV1, MessagingV1Interface } from \"../MessagingV1\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_endpoint\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_usdv\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_mainChainEid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_isMainChain\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidSize\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NotImplemented\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NotMainChain\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"NotUSDV\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SimulationResult\",\n    type: \"error\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_reason\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"MessageFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"_payloadHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RetryMessageSuccess\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_type\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_minDstGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SetMinDstGas\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"dstEid\",\n        type: \"uint32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"msgType\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"extraGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SetPerColorExtraGas\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetPrecrime\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemoteAddress\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"uint32\",\n                name: \"srcEid\",\n                type: \"uint32\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"sender\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint64\",\n                name: \"nonce\",\n                type: \"uint64\",\n              },\n            ],\n            internalType: \"struct Origin\",\n            name: \"origin\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"address\",\n            name: \"receiver\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"message\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct InboundPacket[]\",\n        name: \"_packets\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"_simulateLzReceive\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"failedMessages\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"forceResumeReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getConfig\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"getTrustedRemoteAddress\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isMainChain\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_eid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_peer\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"isPeer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"isTrustedRemote\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lzEndpoint\",\n    outputs: [\n      {\n        internalType: \"contract ILayerZeroEndpoint\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"lzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: \"uint32\",\n                name: \"srcEid\",\n                type: \"uint32\",\n              },\n              {\n                internalType: \"bytes32\",\n                name: \"sender\",\n                type: \"bytes32\",\n              },\n              {\n                internalType: \"uint64\",\n                name: \"nonce\",\n                type: \"uint64\",\n              },\n            ],\n            internalType: \"struct Origin\",\n            name: \"origin\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"address\",\n            name: \"receiver\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"message\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct InboundPacket[]\",\n        name: \"_packets\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"lzReceiveAndRevert\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"mainChainEid\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"minDstGasLookup\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"nonblockingLzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"oapp\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"dstEid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"msgType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"perColorExtraGasLookup\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"extraGas\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"precrime\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"_deltas\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    name: \"quoteRemintFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_dstEid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"quoteSendFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_dstEid\",\n        type: \"uint32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"_deltas\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    name: \"quoteSyncDeltaFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"_deltas\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_feeColor\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeAmount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeTheta\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"remint\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"retryMessage\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"to\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"amount\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"theta\",\n            type: \"uint64\",\n          },\n        ],\n        internalType: \"struct IMessaging.SendParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"send\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_config\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setConfig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_packetType\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMinDstGas\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_dstEid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"_msgType\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_extraGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPerColorExtraGas\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrecrime\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setReceiveVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setSendVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemoteAddress\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_dstEid\",\n        type: \"uint32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"_deltas\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"syncDelta\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"trustedRemoteLookup\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"usdv\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const;\n\nexport class MessagingV1__factory {\n  static readonly abi = _abi;\n  static createInterface(): MessagingV1Interface {\n    return new utils.Interface(_abi) as MessagingV1Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MessagingV1 {\n    return new Contract(address, _abi, signerOrProvider) as MessagingV1;\n  }\n}\n","// import {PublicKey} from '@solana/web3.js';\nimport {utils} from 'ethers';\n\nexport function hexZeroPadTo32(addr: string): string {\n  return utils.hexZeroPad(addr, 32);\n}\n\nexport function bytes32ToEthAddress(bytes32: string | Uint8Array): string {\n  if (bytes32 instanceof Uint8Array) {\n    bytes32 = utils.hexlify(bytes32);\n  }\n  return utils.getAddress(bytes32.slice(-40));\n}\n\nexport function trim0x(str: string): string {\n  return str.replace(/^0x/, '');\n}\n\n/**\n * Convert address to bytes32\n * @param address 0x prefixed address(20bytes or 32bytes) or solana address\n */\nexport function addressToBytes32(address: string): Uint8Array {\n  if (isSolanaAddress(address)) {\n    // return new PublicKey(address).toBytes();\n    throw new Error('Solana integration is not implemented');\n  } else if (address.startsWith('0x') && address.length <= 66) {\n    return utils.arrayify(hexZeroPadTo32(address));\n  }\n  throw new Error('Invalid address');\n}\n\nconst solanaAddressRegex = /^([1-9A-HJ-NP-Za-km-z]{32,44})$/;\n\nexport function isSolanaAddress(address: string): boolean {\n  return solanaAddressRegex.test(address);\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { BridgeRecolor, BridgeRecolorInterface } from \"../BridgeRecolor\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_lp\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_recolorHelper\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_usdv\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"color\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getSupportedTokens\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_fromTokenAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getUSDVOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_fromTokenAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getUSDVOutVerbose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"fee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reward\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lp\",\n    outputs: [\n      {\n        internalType: \"contract IToUSDVLp\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recolorHelper\",\n    outputs: [\n      {\n        internalType: \"contract IRecolorHelper\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"setColor\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_lp\",\n        type: \"address\",\n      },\n    ],\n    name: \"setLpAddress\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_toleranceBps\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setToleranceBps\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_userRewardBps\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setUserRewardBps\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"_fromToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_fromTokenAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"_minUSDVOut\",\n            type: \"uint64\",\n          },\n        ],\n        internalType: \"struct SwapRecolor.SwapParam\",\n        name: \"_swapParam\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"to\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minAmountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct IOFT.SendParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"_msgFee\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"swapRecolorSend\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"_fromToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_fromTokenAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"_minUSDVOut\",\n            type: \"uint64\",\n          },\n        ],\n        internalType: \"struct SwapRecolor.SwapParam\",\n        name: \"_swapParam\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"swapRecolorTransfer\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"toleranceBps\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"usdv\",\n    outputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"userRewardBps\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawUSDV\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n] as const;\n\nexport class BridgeRecolor__factory {\n  static readonly abi = _abi;\n  static createInterface(): BridgeRecolorInterface {\n    return new utils.Interface(_abi) as BridgeRecolorInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): BridgeRecolor {\n    return new Contract(address, _abi, signerOrProvider) as BridgeRecolor;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { MinterProxy, MinterProxyInterface } from \"../MinterProxy\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_usdv\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"HashExists\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"HashNotExists\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidMinter\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"MinterAlreadyRegistered\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"MinterNotRegistered\",\n    type: \"error\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"hash\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AddedMinterCodeHash\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"minter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"RegisteredMinter\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"hash\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RemovedMinterCodeHash\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"toSTBTLp\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetToSTBTLp\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"minter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"UnregisteredMinter\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_hash\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addMinterCodeHash\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"colorToMinter\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"minter\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getMinterCodeHashes\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getSupportedFromTokens\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_fromTokenAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_mintColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getSwapToUSDVAmountOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_fromTokenAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_mintColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getSwapToUSDVAmountOutVerbose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"fee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reward\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"isRegistered\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"minter\",\n        type: \"address\",\n      },\n    ],\n    name: \"minterToColor\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_minter\",\n        type: \"address\",\n      },\n    ],\n    name: \"registerMinter\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_hash\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeMinterCodeHash\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_toSTBTLp\",\n        type: \"address\",\n      },\n    ],\n    name: \"setToSTBTLp\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"fromToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"fromTokenAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"minUSDVOut\",\n            type: \"uint64\",\n          },\n        ],\n        internalType: \"struct IMinter.SwapParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_usdvReceiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_mintColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"swapToUSDV\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"fromToken\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"fromTokenAmount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"minUSDVOut\",\n            type: \"uint64\",\n          },\n        ],\n        internalType: \"struct IMinter.SwapParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_usdvReceiver\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_dstEid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"_msgFee\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_mintColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"swapToUSDVAndSend\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"toSTBTLp\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_minter\",\n        type: \"address\",\n      },\n    ],\n    name: \"unregisterMinter\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"usdv\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const;\n\nexport class MinterProxy__factory {\n  static readonly abi = _abi;\n  static createInterface(): MinterProxyInterface {\n    return new utils.Interface(_abi) as MinterProxyInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MinterProxy {\n    return new Contract(address, _abi, signerOrProvider) as MinterProxy;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { SideChainLP, SideChainLPInterface } from \"../SideChainLP\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"previousAdmin\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newAdmin\",\n        type: \"address\",\n      },\n    ],\n    name: \"AdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"beacon\",\n        type: \"address\",\n      },\n    ],\n    name: \"BeaconUpgraded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"Upgraded\",\n    type: \"event\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    inputs: [],\n    name: \"admin\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"admin_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"implementation\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"implementation_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"upgradeTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"upgradeToAndCall\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"cap\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"feeBps\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"rewardBps\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n    ],\n    name: \"AddToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"cap\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"feeBps\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"rewardBps\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"enabled\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ConfigToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"source\",\n        type: \"address\",\n      },\n    ],\n    name: \"DepositUSDV\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"version\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Initialized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"RemoveToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"lp\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetLp\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetOperator\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"flag\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetWhitelist\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"caller\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"fromToken\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"fromTokenAmount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SwapToUSDV\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"target\",\n        type: \"address\",\n      },\n    ],\n    name: \"WithdrawToken\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_cap\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_feeBps\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_rewardBps\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n    ],\n    name: \"addToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_cap\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_feeBps\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_rewardBps\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_enabled\",\n        type: \"bool\",\n      },\n    ],\n    name: \"configToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"depositUSDV\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getAllTokens\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getSupportedTokens\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_fromTokenAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getUSDVOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_fromTokenAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getUSDVOutVerbose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"requestedOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rewardOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_usdv\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_lp\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lp\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"operator\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_lp\",\n        type: \"address\",\n      },\n    ],\n    name: \"setLp\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOperator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_p\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setPaused\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_flag\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setWhitelist\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_fromTokenAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_minUSDVOut\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n    ],\n    name: \"swapToUSDV\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"usdvOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"tokenConfigs\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"enabled\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"feeBps\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"rewardBps\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"cap\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"div\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"usdv\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"caller\",\n        type: \"address\",\n      },\n    ],\n    name: \"whitelisted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_logic\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"admin_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"constructor\",\n  },\n] as const;\n\nexport class SideChainLP__factory {\n  static readonly abi = _abi;\n  static createInterface(): SideChainLPInterface {\n    return new utils.Interface(_abi) as SideChainLPInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): SideChainLP {\n    return new Contract(address, _abi, signerOrProvider) as SideChainLP;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { USDVMain, USDVMainInterface } from \"../USDVMain\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"previousAdmin\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newAdmin\",\n        type: \"address\",\n      },\n    ],\n    name: \"AdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"beacon\",\n        type: \"address\",\n      },\n    ],\n    name: \"BeaconUpgraded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"Upgraded\",\n    type: \"event\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    inputs: [],\n    name: \"admin\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"admin_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"implementation\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"implementation_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"upgradeTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newImplementation\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"upgradeToAndCall\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_amountLDSend\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minAmountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AmountSlippage\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Blacklisted\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"FeeTooHigh\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InsufficientBalance\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidAmount\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidArgument\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"InvalidColor\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"InvalidUser\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"LDMinusSD\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NotDeltaZero\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"NotImplemented\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Overflow\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Paused\",\n    type: \"error\",\n  },\n  {\n    inputs: [],\n    name: \"Unauthorized\",\n    type: \"error\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: \"EIP712DomainChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"version\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Initialized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"_guid\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_toAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ReceiveOFT\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct Delta[]\",\n        name: \"deltas\",\n        type: \"tuple[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"remintFee\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"Reminted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"_guid\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"_fromAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SendOFT\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"isBlacklisted\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetBlacklist\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"caller\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"colorer\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetColorer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"caller\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint32\",\n        name: \"defaultColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"SetDefaultColor\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_inspector\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetInspector\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetPause\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"enum Role\",\n        name: \"role\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetRole\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"guid\",\n        type: \"bytes32\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct Delta[]\",\n        name: \"deltas\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"Synced\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_isBlacklisted\",\n        type: \"bool\",\n      },\n    ],\n    name: \"blacklist\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_amount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"_deficits\",\n        type: \"uint32[]\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"colorStateOf\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint64\",\n            name: \"colored\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"delta\",\n            type: \"int64\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"lastDelta\",\n            type: \"int64\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"lastBlockNumber\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"known\",\n            type: \"bool\",\n          },\n        ],\n        internalType: \"struct Colors.ColorState\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"colorers\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"colorer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"eip712Domain\",\n    outputs: [\n      {\n        internalType: \"bytes1\",\n        name: \"fields\",\n        type: \"bytes1\",\n      },\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"version\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"chainId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"verifyingContract\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"salt\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"extensions\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_startColor\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_endColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"getDeltas\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32[]\",\n        name: \"_colors\",\n        type: \"uint32[]\",\n      },\n    ],\n    name: \"getDeltas\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"enum Role\",\n        name: \"_role\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getRole\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_foundation\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxKnownColor\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_amount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"to\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minAmountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct IOFT.SendParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_useLZToken\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"quoteSendFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_dstEid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_numDeficits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_useLzToken\",\n        type: \"bool\",\n      },\n    ],\n    name: \"quoteSyncDeltaFee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lzTokenFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_surplusColor\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_surplusAmount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"_deficits\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeCap\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"remint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"_deltas\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_feeColor\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeAmount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeTheta\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"remintAck\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"to\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minAmountLD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint32\",\n            name: \"dstEid\",\n            type: \"uint32\",\n          },\n        ],\n        internalType: \"struct IOFT.SendParam\",\n        name: \"_param\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"_msgFee\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_composeMsg\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"send\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_guid\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_color\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_amount\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_theta\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"sendAck\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_colorer\",\n        type: \"address\",\n      },\n    ],\n    name: \"setColorer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_defaultColor\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"setDefaultColor\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setPause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"enum Role\",\n        name: \"_role\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"setRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint32\",\n        name: \"_eid\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_theta\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"_deficits\",\n        type: \"uint32[]\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_feeCap\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_extraOptions\",\n        type: \"bytes\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"nativeFee\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"lzTokenFee\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct MessagingFee\",\n        name: \"_msgFee\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_refundAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"syncDelta\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"guid\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"nonce\",\n            type: \"uint64\",\n          },\n          {\n            components: [\n              {\n                internalType: \"uint256\",\n                name: \"nativeFee\",\n                type: \"uint256\",\n              },\n              {\n                internalType: \"uint256\",\n                name: \"lzTokenFee\",\n                type: \"uint256\",\n              },\n            ],\n            internalType: \"struct MessagingFee\",\n            name: \"fee\",\n            type: \"tuple\",\n          },\n        ],\n        internalType: \"struct MessagingReceipt\",\n        name: \"msgReceipt\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"color\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"int64\",\n            name: \"amount\",\n            type: \"int64\",\n          },\n        ],\n        internalType: \"struct Delta[]\",\n        name: \"_deltas\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"syncDeltaAck\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"userStates\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"color\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"balance\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"blacklisted\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"defaultColor\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_logic\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"admin_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"constructor\",\n  },\n] as const;\n\nexport class USDVMain__factory {\n  static readonly abi = _abi;\n  static createInterface(): USDVMainInterface {\n    return new utils.Interface(_abi) as USDVMainInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): USDVMain {\n    return new Contract(address, _abi, signerOrProvider) as USDVMain;\n  }\n}\n","import type {Token} from '@layerzerolabs/ui-core';\nimport type {USDVConfig} from './USDVConfig';\nimport type {BridgeApi, BridgeOptions, GetOptionsInput} from '@layerzerolabs/ui-bridge-sdk/v1';\n\nexport class USDVBridgeBase implements Pick<BridgeApi<unknown>, 'getOptions'> {\n  protected usdvTokens: Token[]; // usdv tokens\n  constructor(protected readonly config: USDVConfig) {\n    this.usdvTokens = Object.values(this.config.deployments).map((d) => d.usdv);\n  }\n\n  async getOptions(input: GetOptionsInput): Promise<BridgeOptions> {\n    return {options: [{mode: 'taxi'}]};\n  }\n\n  getDeployment(chainKey: string) {\n    const deployment = this.tryGetDeployment(chainKey);\n    if (deployment) return deployment;\n    throw new Error(`No deployment for chainKey: ${chainKey}`);\n  }\n\n  tryGetDeployment(chainKey: string) {\n    return this.config.deployments[chainKey];\n  }\n\n  chainKeyToEndpointId(chainKey: string) {\n    const deployment = this.getDeployment(chainKey);\n    return deployment.eid;\n  }\n}\n","import {\n  validateInput,\n  type BridgeApi,\n  type BridgeOutput,\n  type GetAllowanceInput,\n  type GetDurationInput,\n  type GetLimitInput,\n  type GetUnclaimedInput,\n  type TransferInput,\n  type GetMessageFeeInput,\n  type GetExtraGasInput,\n  type GetOutputInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {\n  type ChainKey,\n  type Currency,\n  CurrencyAmount,\n  type FeeQuote,\n  getNativeCurrency,\n  isEvmChainKey,\n  isToken,\n  MaxUint256,\n  assert,\n  removeDust,\n  type Transaction,\n} from '@layerzerolabs/ui-core';\nimport {ERC20__api, ONE_ADDRESS} from '@layerzerolabs/ui-evm';\nimport {createTransaction, type ProviderFactory} from '@layerzerolabs/ui-evm';\nimport {type Signer, utils} from 'ethers';\nimport type {USDVConfig} from './USDVConfig';\nimport type {IOFT, MessagingFeeStruct, USDVMain} from '../typechain/USDVMain';\nimport {MessagingApi, MsgType} from './MessagingApi';\nimport {USDVMain__factory, type USDVSide, USDVSide__factory} from '../typechain';\nimport type {USDVBridgeFee} from './USDVBridgeFee';\nimport {USDVBridgeBase} from './USDVBridgeBase';\n\nexport class USDVBridgeApi__evm extends USDVBridgeBase implements BridgeApi<Signer, USDVBridgeFee> {\n  protected readonly sharedDecimals: number = 6;\n  protected erc20: ERC20__api;\n\n  constructor(\n    config: USDVConfig,\n    protected providerFactory: ProviderFactory,\n    protected messaging: MessagingApi = new MessagingApi(config, providerFactory),\n  ) {\n    super(config);\n    this.erc20 = new ERC20__api(providerFactory);\n  }\n  supportsClaim(currency: Currency): boolean {\n    return this.usdvTokens.some((t) => t.equals(currency));\n  }\n  supportsRegister(currency: Currency): boolean {\n    return this.supportsClaim(currency);\n  }\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    if (!isEvmChainKey(srcToken.chainKey)) return false;\n    if (!this.usdvTokens.some((token) => token.equals(srcToken))) return false;\n    if (!this.usdvTokens.some((token) => token.equals(dstToken))) return false;\n    return srcToken.chainKey !== dstToken.chainKey;\n  }\n  async getDuration(input: GetDurationInput): Promise<number> {\n    throw new Error('Method not implemented.');\n  }\n  async getLimit({srcToken}: GetLimitInput): Promise<CurrencyAmount<Currency>> {\n    return CurrencyAmount.fromRawAmount(srcToken, MaxUint256);\n  }\n  getUnclaimed({token, address}: GetUnclaimedInput): Promise<CurrencyAmount<Currency>> {\n    throw new Error('Method not implemented.');\n  }\n  async getAllowance({token, address}: GetAllowanceInput): Promise<CurrencyAmount> {\n    assert(isToken(token));\n    return CurrencyAmount.fromRawAmount(token, MaxUint256);\n  }\n  async isRegistered(): Promise<boolean> {\n    return true;\n  }\n  claim(): Promise<Transaction<Signer>> {\n    throw new Error('Method not implemented.');\n  }\n  register(): Promise<Transaction<Signer>> {\n    throw new Error('Method not implemented.');\n  }\n  approve(): Promise<Transaction<Signer>> {\n    throw new Error('Method not implemented.');\n  }\n\n  async transfer(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    const contract = this.getUSDVContract(input.srcChainKey);\n\n    const sendParamStruct: IOFT.SendParamStruct = {\n      amountLD: input.srcAmount.quotient,\n      minAmountLD: castCurrencyAmountSafe(input.dstAmountMin, input.srcToken).quotient,\n      dstEid: this.chainKeyToEndpointId(input.dstChainKey),\n      to: this.messaging.mapDstAddress(input.dstAddress),\n    };\n\n    const msgFee: MessagingFeeStruct = {\n      lzTokenFee: input.fee.zroFee.quotient,\n      nativeFee: input.fee.nativeFee.quotient,\n    };\n\n    const composeMsg = utils.arrayify('0x');\n    const options = this.messaging.serializeOptions(input.adapterParams);\n    const populatedTransaction = contract.populateTransaction.send(\n      sendParamStruct,\n      options,\n      msgFee,\n      input.srcAddress,\n      composeMsg,\n      {\n        value: input.fee.nativeFee.quotient,\n      },\n    );\n    const tx = createTransaction(populatedTransaction, {\n      provider: this.providerFactory(input.srcChainKey),\n    });\n    return tx;\n  }\n\n  async getMessageFee({srcToken, dstToken, adapterParams}: GetMessageFeeInput): Promise<FeeQuote> {\n    const srcChainKey = srcToken.chainKey;\n    const dstChainKey = dstToken.chainKey;\n    const native = getNativeCurrency(srcChainKey);\n    const sendParamStruct: IOFT.SendParamStruct = {\n      to: this.messaging.mapDstAddress(ONE_ADDRESS), // doesn't affect fee\n      amountLD: 1, // doesn't affect fee\n      minAmountLD: 1, // doesn't affect fee\n      dstEid: this.chainKeyToEndpointId(dstChainKey),\n    };\n\n    const contract = this.getUSDVContract(srcChainKey);\n\n    const options = this.messaging.serializeOptions(adapterParams);\n    const composeMsg = utils.arrayify('0x');\n\n    const [nativeFee, zroFee] = await contract.quoteSendFee(\n      sendParamStruct,\n      options,\n      false,\n      composeMsg,\n    );\n\n    const fee: FeeQuote = {\n      nativeFee: CurrencyAmount.fromRawAmount(native, nativeFee.toBigInt()),\n      zroFee: CurrencyAmount.fromRawAmount(native, zroFee.toBigInt()),\n    };\n    return fee;\n  }\n\n  async getExtraGas({srcToken, dstToken}: GetExtraGasInput): Promise<number> {\n    return this.messaging.minDstGasLookup({\n      srcChainKey: srcToken.chainKey,\n      dstChainKey: dstToken.chainKey,\n      msgType: MsgType.SEND,\n    });\n  }\n\n  async getOutput({srcAmount, dstToken}: GetOutputInput): Promise<BridgeOutput<USDVBridgeFee>> {\n    const swapAmount = this.removeDust(srcAmount);\n    const zero = swapAmount.multiply(0);\n\n    const amount = castCurrencyAmountSafe(swapAmount, dstToken);\n    return {\n      dstAmount: amount,\n      fee: {\n        fee: zero,\n        reward: zero,\n      },\n    };\n  }\n\n  protected getUSDVContract(chainKey: ChainKey): USDVSide | USDVMain {\n    const deployment = this.getDeployment(chainKey);\n    const provider = this.providerFactory(chainKey);\n    if (deployment.vault?.address) {\n      return USDVMain__factory.connect(deployment.usdv.address, provider);\n    }\n    return USDVSide__factory.connect(deployment.usdv.address, provider);\n  }\n\n  protected removeDust(amount: CurrencyAmount) {\n    return removeDust(amount, this.sharedDecimals);\n  }\n}\n\nfunction castCurrencyAmountSafe(amount: CurrencyAmount, dstToken: Currency): CurrencyAmount {\n  // todo: implement error when dust difference\n  assert(amount.token.decimals === dstToken.decimals, 'Cannot cast amount to different decimals');\n  return CurrencyAmount.fromRawAmount(dstToken, amount.quotient);\n}\n","import {\n  validateInput,\n  type ApproveInput,\n  type BridgeApi,\n  type BridgeOutput,\n  type GetAllowanceInput,\n  type GetDurationInput,\n  type GetExtraGasInput,\n  type GetLimitInput,\n  type GetMessageFeeInput,\n  type GetOutputInput,\n  type TransferInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {\n  type Currency,\n  CurrencyAmount,\n  type ChainKey,\n  type FeeQuote,\n  isToken,\n  MaxUint256,\n  type Transaction,\n  assert,\n} from '@layerzerolabs/ui-core';\nimport {createTransaction, ERC20__api, type ProviderFactory} from '@layerzerolabs/ui-evm';\nimport type {Signer} from 'ethers';\nimport type {USDVConfig} from './USDVConfig';\nimport {MessagingApi, MsgType} from './MessagingApi';\nimport {type MinterProxy, MinterProxy__factory} from '../typechain';\nimport type {IMinter} from '../typechain/MinterProxy';\nimport type {USDVBridgeFee} from './USDVBridgeFee';\nimport {USDVBridgeBase} from './USDVBridgeBase';\n\nexport class MinterProxyBridgeApi__evm\n  extends USDVBridgeBase\n  implements BridgeApi<Signer, USDVBridgeFee>\n{\n  protected minterProxyChainKey: ChainKey;\n  protected minterProxy: MinterProxy;\n  protected erc20: ERC20__api;\n  constructor(\n    config: USDVConfig,\n    private providerFactory: ProviderFactory,\n    protected readonly color: number,\n    //\n    protected messaging: MessagingApi = new MessagingApi(config, providerFactory),\n  ) {\n    super(config);\n\n    let minterProxy;\n    let minterProxyChainKey;\n    for (const chainKey in config.deployments) {\n      const deployment = config.deployments[chainKey];\n      if (deployment.minterProxy) {\n        if (minterProxy) throw new Error('Only one minter proxy is supported');\n        minterProxy = MinterProxy__factory.connect(\n          deployment.minterProxy.address,\n          this.providerFactory(chainKey),\n        );\n        minterProxyChainKey = chainKey;\n      }\n    }\n    if (!minterProxy || !minterProxyChainKey) throw new Error('No minter proxy found');\n    this.minterProxy = minterProxy;\n    this.minterProxyChainKey = minterProxyChainKey;\n\n    this.erc20 = new ERC20__api(providerFactory);\n  }\n  supportsClaim(currency: Currency): boolean {\n    return false;\n  }\n  supportsRegister(currency: Currency): boolean {\n    return false;\n  }\n\n  async getDuration({srcToken, dstToken}: GetDurationInput): Promise<number> {\n    throw new Error('Method not implemented.');\n  }\n  getUnclaimed(): Promise<CurrencyAmount<Currency>> {\n    throw new Error('Method not implemented.');\n  }\n  isRegistered(): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n  claim(): Promise<Transaction<Signer>> {\n    throw new Error('Method not implemented.');\n  }\n  register(): Promise<Transaction<Signer>> {\n    throw new Error('Method not implemented.');\n  }\n\n  getExtraGas({srcToken, dstToken}: GetExtraGasInput): Promise<number> {\n    return this.messaging.minDstGasLookup({\n      srcChainKey: srcToken.chainKey,\n      dstChainKey: dstToken.chainKey,\n      msgType: MsgType.SEND,\n    });\n  }\n\n  async getLimit({srcToken}: GetLimitInput): Promise<CurrencyAmount<Currency>> {\n    // todo: get limit\n    return CurrencyAmount.fromRawAmount(srcToken, MaxUint256);\n  }\n\n  async getMessageFee({srcToken, dstToken, adapterParams}: GetMessageFeeInput): Promise<FeeQuote> {\n    return this.messaging.getSendMessageFee({\n      srcChainKey: srcToken.chainKey,\n      dstChainKey: dstToken.chainKey,\n      adapterParams,\n    });\n  }\n\n  async transfer(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    const {srcToken, dstToken, srcChainKey, dstChainKey} = input;\n    assert(isToken(srcToken), 'token');\n    assert(\n      this.usdvTokens.some((usdv) => usdv.equals(dstToken)),\n      'Not USDV',\n    );\n    assert(input.srcAmount.token.equals(srcToken));\n    assert(input.dstAmountMin.token.equals(dstToken));\n\n    const swapParamStruct: IMinter.SwapParamStruct = {\n      fromToken: srcToken.address,\n      fromTokenAmount: input.srcAmount.quotient,\n      minUSDVOut: input.dstAmountMin.quotient,\n    };\n\n    if (srcChainKey === dstChainKey) {\n      const populatedTransaction = this.minterProxy.populateTransaction.swapToUSDV(\n        swapParamStruct,\n        input.dstAddress,\n        this.color,\n      );\n      return createTransaction(populatedTransaction, {\n        provider: this.minterProxy.provider,\n      });\n    } else {\n      const populatedTransaction = this.minterProxy.populateTransaction.swapToUSDVAndSend(\n        swapParamStruct,\n        this.messaging.mapDstAddress(input.dstAddress),\n        this.messaging.mapDstEidId(dstToken.chainKey),\n        this.messaging.serializeOptions(input.adapterParams),\n        {\n          lzTokenFee: input.fee.zroFee.quotient,\n          nativeFee: input.fee.nativeFee.quotient,\n        },\n        input.srcAddress,\n        this.color,\n        {value: input.fee.nativeFee.quotient},\n      );\n      return createTransaction(populatedTransaction, {\n        provider: this.minterProxy.provider,\n      });\n    }\n  }\n\n  async getAllowance({token, address: user}: GetAllowanceInput): Promise<CurrencyAmount<Currency>> {\n    if (!isToken(token)) return CurrencyAmount.fromRawAmount(token, MaxUint256);\n    return this.erc20.forToken(token).allowance(user, this.minterProxy.address);\n  }\n\n  approve({amount}: ApproveInput): Promise<Transaction<Signer>> {\n    const srcToken = amount.token;\n    assert(isToken(srcToken), 'token');\n    return this.erc20.forToken(srcToken).approve(amount, this.minterProxy.address);\n  }\n\n  async getOutput({srcAmount, dstToken}: GetOutputInput): Promise<BridgeOutput<USDVBridgeFee>> {\n    const srcToken = srcAmount.token;\n    assert(isToken(srcToken), 'srcToken');\n    assert(isToken(dstToken), 'dstToken');\n    const quote = await this.minterProxy.getSwapToUSDVAmountOutVerbose(\n      srcToken.address,\n      srcAmount.quotient,\n      this.color,\n    );\n    const amount = CurrencyAmount.fromRawAmount(dstToken, quote.usdvOut.toBigInt());\n    const reward = CurrencyAmount.fromRawAmount(dstToken, quote.reward.toBigInt());\n    const fee = CurrencyAmount.fromRawAmount(dstToken, quote.fee.toBigInt());\n    return {\n      dstAmount: amount,\n      fee: {\n        fee,\n        reward,\n      },\n    };\n  }\n\n  protected get srcAssets(): Currency[] {\n    const srcAssets = this.config.stables.filter(\n      (stable) => stable.chainKey === this.minterProxyChainKey,\n    );\n    return srcAssets;\n  }\n\n  protected get dstAssets(): Currency[] {\n    return this.usdvTokens;\n  }\n\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    if (!this.srcAssets.some((i) => i.equals(srcToken))) return false;\n    if (!this.dstAssets.some((i) => i.equals(dstToken))) return false;\n    return srcToken.chainKey !== dstToken.chainKey;\n  }\n}\n","import {Token, tokenSchema} from '@layerzerolabs/ui-core';\nimport z from 'zod';\nimport type {USDVConfig} from './USDVConfig';\nconst contractSchema = z.object({\n  address: z.string(),\n});\nexport const serializedUSDVConfigSchema = z\n  .object({\n    deployments: z.record(\n      z.object({\n        eid: z.number(),\n        usdv: contractSchema,\n        vault: contractSchema.optional(),\n        minterProxy: contractSchema.optional(),\n        stbt: contractSchema.optional(),\n        sideChainSwapRecolor: contractSchema.array().optional().default([]),\n        bridgeRecolor: contractSchema.optional(),\n      }),\n    ),\n    stables: tokenSchema.array().default([]),\n  })\n  .transform((input) => {\n    const config: USDVConfig = {\n      deployments: {},\n      stables: input.stables,\n    };\n    for (const chainKey in input.deployments) {\n      const addChainKey = (a?: {address: string}) => a && {address: a.address, chainKey};\n\n      const deployment = input.deployments[chainKey];\n      config.deployments[chainKey] = {\n        eid: deployment.eid,\n        usdv: Token.from({\n          address: deployment.usdv.address,\n          chainKey,\n          decimals: 6,\n          symbol: 'USDV',\n        }),\n        vault: addChainKey(deployment.vault),\n        minterProxy: addChainKey(deployment.minterProxy),\n        stbt: addChainKey(deployment.stbt),\n        bridgeRecolor: addChainKey(deployment.bridgeRecolor),\n        sideChainSwapRecolor: deployment.sideChainSwapRecolor.map(addChainKey).filter(nonNullable),\n      };\n    }\n    return config;\n  });\n\nfunction nonNullable<T>(x: T | null | undefined): x is NonNullable<T> {\n  return !!x;\n}\n\nexport type SerializedUSDVConfig = z.input<typeof serializedUSDVConfigSchema>;\n\nexport function createUSDVConfig(input: SerializedUSDVConfig): USDVConfig {\n  const parsed = serializedUSDVConfigSchema.parse(input);\n  return parsed;\n}\n","import {createUSDVConfig} from '../evm/zod';\n\nexport const usdvTestnetConfig = createUSDVConfig({\n  deployments: {\n    goerli: {\n      eid: 10101,\n      vault: {\n        address: '0x1239bD980fAa9CF687458A630514301c36e27E36',\n      },\n      usdv: {\n        address: '0x0516ABcF93c00aAf9120Cf5d18535506d54BCcbA',\n      },\n      minterProxy: {\n        address: '0xEfBCdE3Db0C63B06e349E9069d4761BDE45120D1',\n      },\n      stbt: {\n        address: '0x33683A382495De6763FCD7505d0E07d7d2A879ca',\n      },\n    },\n    'bsc-testnet': {\n      eid: 10102,\n      usdv: {\n        address: '0xf10be20E035c00e9f9448d1Edb7770E3e1187965',\n      },\n      bridgeRecolor: {\n        address: '0xdD440557cE9ad70C14495755F3E97dDE7096C796',\n      },\n    },\n    fuji: {\n      eid: 10106,\n      usdv: {\n        address: '0xf10be20E035c00e9f9448d1Edb7770E3e1187965',\n      },\n      bridgeRecolor: {\n        address: '0x34Cf53353BA3d24ADBc17083ccC1CB6B5bFaa2D7',\n      },\n    },\n    'arbitrum-goerli': {\n      eid: 10143,\n      usdv: {\n        address: '0xf10be20E035c00e9f9448d1Edb7770E3e1187965',\n      },\n      bridgeRecolor: {\n        address: '0xf630640Cfdb98Bb10C1a0b77Fa5Ec09c5800697C',\n      },\n    },\n    'optimism-goerli': {\n      eid: 10132,\n      usdv: {\n        address: '0xf10be20E035c00e9f9448d1Edb7770E3e1187965',\n      },\n      bridgeRecolor: {\n        address: '0x59d5B1697B7883F4F4acC0c5F41AD4E15636d09E',\n      },\n    },\n    mumbai: {\n      eid: 10109,\n      usdv: {\n        address: '0xf10be20E035c00e9f9448d1Edb7770E3e1187965',\n      },\n    },\n  },\n  stables: [\n    // tokens exported from testnet stargate\n    {\n      chainKey: 'bsc-testnet',\n      decimals: 18,\n      symbol: 'USDT',\n      name: 'USDT',\n      address: '0xF49E250aEB5abDf660d643583AdFd0be41464EfD',\n    },\n    {\n      chainKey: 'bsc-testnet',\n      decimals: 18,\n      symbol: 'BUSD',\n      name: 'BUSD',\n      address: '0x1010Bb1b9Dff29e6233E7947e045e0ba58f6E92e',\n    },\n    {\n      chainKey: 'fuji',\n      decimals: 6,\n      symbol: 'USDC',\n      name: 'USDC',\n      address: '0x4A0D1092E9df255cf95D72834Ea9255132782318',\n    },\n    {\n      chainKey: 'fuji',\n      decimals: 6,\n      symbol: 'USDT',\n      name: 'USDT',\n      address: '0x134Dc38AE8C853D1aa2103d5047591acDAA16682',\n    },\n    {\n      chainKey: 'mumbai',\n      decimals: 6,\n      symbol: 'USDC',\n      name: 'USDC',\n      address: '0x742DfA5Aa70a8212857966D491D67B09Ce7D6ec7',\n    },\n    {\n      chainKey: 'mumbai',\n      decimals: 6,\n      symbol: 'USDT',\n      name: 'USDT',\n      address: '0x6Fc340be8e378c2fF56476409eF48dA9a3B781a0',\n    },\n    {\n      chainKey: 'goerli',\n      decimals: 6,\n      symbol: 'USDC',\n      name: 'USDC',\n      address: '0xDf0360Ad8C5ccf25095Aa97ee5F2785c8d848620',\n    },\n    {\n      chainKey: 'goerli',\n      decimals: 6,\n      symbol: 'USDT',\n      name: 'USDT',\n      address: '0x5BCc22abEC37337630C0E0dd41D64fd86CaeE951',\n    },\n    {\n      chainKey: 'optimism-goerli',\n      decimals: 6,\n      symbol: 'USDC',\n      name: 'USDC',\n      address: '0x0CEDBAF2D0bFF895C861c5422544090EEdC653Bf',\n    },\n    {\n      chainKey: 'arbitrum-goerli',\n      decimals: 6,\n      symbol: 'USDC',\n      name: 'USDC',\n      address: '0x6aAd876244E7A1Ad44Ec4824Ce813729E5B6C291',\n    },\n    {\n      chainKey: 'arbitrum-goerli',\n      decimals: 6,\n      symbol: 'USDT',\n      name: 'USDT',\n      address: '0x533046F316590C19d99c74eE661c6d541b64471C',\n    },\n  ],\n});\n","import {createUSDVConfig} from '../evm/zod';\n\nexport const usdvMainnetConfig = createUSDVConfig({\n  deployments: {\n    ethereum: {\n      eid: 101,\n      vault: {\n        address: '0x2A30E3C5c9DaF417663Dd3903144B394a82C999b',\n      },\n      usdv: {\n        address: '0x0E573Ce2736Dd9637A0b21058352e1667925C7a8',\n      },\n      stbt: {\n        address: '0x530824DA86689C9C17CdC2871Ff29B058345b44a',\n      },\n      minterProxy: {\n        address: '0x3c6CE18aFDE845635A32a69D0a7721b0Db84118e',\n      },\n    },\n    avalanche: {\n      eid: 106,\n      usdv: {\n        address: '0x323665443CEf804A3b5206103304BD4872EA4253',\n      },\n      bridgeRecolor: {\n        address: '0x292dD933180412923ee47fA73bBF407B6d776B4C',\n      },\n    },\n    arbitrum: {\n      eid: 110,\n      usdv: {\n        address: '0x323665443CEf804A3b5206103304BD4872EA4253',\n      },\n      bridgeRecolor: {\n        address: '0x5CC0189652Ee881526eD3B8053B21c44e99010B9',\n      },\n    },\n    bsc: {\n      eid: 102,\n      usdv: {\n        address: '0x323665443CEf804A3b5206103304BD4872EA4253',\n      },\n      bridgeRecolor: {\n        address: '0x5B1d0467BED2e8Bd67c16cE8bCB22a195ae76870',\n      },\n    },\n    optimism: {\n      eid: 111,\n      usdv: {\n        address: '0x323665443CEf804A3b5206103304BD4872EA4253',\n      },\n      bridgeRecolor: {\n        address: '0x31691Fd2Cf50c777943b213836C342327f0DAB9b',\n      },\n    },\n  },\n  stables: [\n    // tokens exported from mainnet stargate\n    {\n      chainKey: 'bsc',\n      address: '0x55d398326f99059fF775485246999027B3197955',\n      symbol: 'USDT',\n      decimals: 18,\n      name: 'Tether USD',\n    },\n    {\n      chainKey: 'bsc',\n      address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      symbol: 'BUSD',\n      decimals: 18,\n      name: 'BUSD Token',\n    },\n    {\n      chainKey: 'avalanche',\n      address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n      symbol: 'USDC',\n      decimals: 6,\n      name: 'USD Coin',\n    },\n    {\n      chainKey: 'avalanche',\n      address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\n      symbol: 'USDt',\n      decimals: 6,\n      name: 'TetherToken',\n    },\n    // No polygon\n    // {\n    //   chainKey: chainKey.MUMBAI,\n    //   decimals: 6,\n    //   symbol: 'USDC',\n    //   name: 'USDC',\n    //   address: '0x742DfA5Aa70a8212857966D491D67B09Ce7D6ec7',\n    // },\n    // {\n    //   chainKey: chainKey.MUMBAI,\n    //   decimals: 6,\n    //   symbol: 'USDT',\n    //   name: 'USDT',\n    //   address: '0x6Fc340be8e378c2fF56476409eF48dA9a3B781a0',\n    // },\n    {\n      chainKey: 'ethereum',\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n      symbol: 'USDC',\n      decimals: 6,\n      name: 'USD Coin',\n    },\n    {\n      chainKey: 'ethereum',\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n      symbol: 'USDT',\n      decimals: 6,\n      name: 'Tether USD',\n    },\n    {\n      chainKey: 'optimism',\n      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\n      symbol: 'USDC',\n      decimals: 6,\n      name: 'USD Coin',\n    },\n    {\n      chainKey: 'arbitrum',\n      address: '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8',\n      symbol: 'USDC',\n      decimals: 6,\n      name: 'USD Coin (Arb1)',\n    },\n    {\n      chainKey: 'arbitrum',\n      address: '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9',\n      symbol: 'USDT',\n      decimals: 6,\n      name: 'Tether USD',\n    },\n  ],\n});\n"]}