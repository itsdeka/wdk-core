{"version":3,"sources":["../src/deployments/arbitrum/index.ts","../src/deployments/avalanche/index.ts","../src/deployments/base/index.ts","../src/deployments/bsc/index.ts","../src/deployments/ethereum/index.ts","../src/deployments/fantom/index.ts","../src/deployments/kava/index.ts","../src/deployments/linea/index.ts","../src/deployments/mantle/index.ts","../src/deployments/metis/index.ts","../src/deployments/optimism/index.ts","../src/deployments/polygon/index.ts","../src/deployments/scroll/index.ts","../src/config/mainnet/pools.json","../src/config/mainnet/chainPaths.json","../src/types/zod.ts","../../ui-stargate/src/StargateVersion.ts","../src/config/mainnet.ts","../src/deployments/bsc-testnet/index.ts","../src/deployments/fuji/index.ts","../src/deployments/sepolia/index.ts","../src/config/testnet/pools.json","../src/config/testnet/chainPaths.json","../src/deployments/arbitrum-sepolia/index.ts","../src/deployments/optimism-sepolia/index.ts","../src/config/testnet.ts","../src/bridge/StargateV1Bridge.ts","../src/bridge/StargateV1WidgetBridge.ts","../src/StargateV1Sdk.ts","../src/pools/getChainPaths.ts"],"names":["pools_default","chainPaths_default","createTransaction","CurrencyAmount","castCurrencyAmountUnsafe","isNativeCurrency","MaxUint256","assert"],"mappings":"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","sourcesContent":["import type {SerializedDeployment} from '../../types/zod';\n\nexport const arbitrum: SerializedDeployment = {\n  eid: 110,\n  factory: {\n    address: '0x55bDb4164D28FBaF0898e0eF14a589ac09Ac9970',\n  },\n  bridge: {\n    address: '0x352d8275AAE3e0c2404d9f68f6cEE084B5bEB3DD',\n  },\n  router: {\n    address: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\n  },\n  routerEth: {\n    address: '0xbf22f0f184bCcbeA268dF387a49fF5238dD23E40',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x6A5294C72F9D82e6A1d79B73c006E3088F9916C9',\n  },\n  stargateToken: {\n    address: '0x6694340fc020c5E6B96567843da2df01b2CE1eb6',\n  },\n  stargatePreCrime: {\n    address: '0x6A5294C72F9D82e6A1d79B73c006E3088F9916C9',\n  },\n  lpStakingTime: [\n    {\n      address: '0x9774558534036Ff2E236331546691b4eB70594b1',\n    },\n  ],\n  lpStaking: [\n    {\n      address: '0xeA8DfEE1898a7e0a59f7527F076106d7e44c2176',\n    },\n  ],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const avalanche: SerializedDeployment = {\n  eid: 106,\n  factory: {\n    address: '0x808d7c71ad2ba3FA531b068a2417C63106BC0949',\n  },\n  bridge: {\n    address: '0x9d1B1669c73b033DFe47ae5a0164Ab96df25B944',\n  },\n  router: {\n    address: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0xc53621C396F6cdab951aCF0b7880318c110d25d1',\n  },\n  stargateToken: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  stargatePreCrime: {\n    address: '0xc53621C396F6cdab951aCF0b7880318c110d25d1',\n  },\n  lpStakingTime: [],\n  lpStaking: [\n    {\n      address: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\n    },\n  ],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const base: SerializedDeployment = {\n  eid: 184,\n  factory: {\n    address: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\n  },\n  bridge: {\n    address: '0xAF54BE5B6eEc24d6BFACf1cce4eaF680A8239398',\n  },\n  router: {\n    address: '0x45f1A95A4D3f3836523F5c83673c797f4d4d263B',\n  },\n  routerEth: {\n    address: '0x50B6EbC2103BFEc165949CC946d739d5650d7ae4',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\n  },\n  stargateToken: {\n    address: '0xE3B53AF74a4BF62Ae5511055290838050bf764Df',\n  },\n  stargatePreCrime: {\n    address: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\n  },\n  lpStakingTime: [\n    {\n      address: '0x06Eb48763f117c7Be887296CDcdfad2E4092739C',\n    },\n  ],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const bsc: SerializedDeployment = {\n  eid: 102,\n  factory: {\n    address: '0xe7Ec689f432f29383f217e36e680B5C855051f25',\n  },\n  bridge: {\n    address: '0x6694340fc020c5E6B96567843da2df01b2CE1eb6',\n  },\n  router: {\n    address: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x43232Ffa28cc59F8E38844257FA2b229dBf3C569',\n  },\n  stargateToken: {\n    address: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\n  },\n  stargatePreCrime: {\n    address: '0x43232Ffa28cc59F8E38844257FA2b229dBf3C569',\n  },\n  lpStakingTime: [\n    {\n      address: '0x18E08773daFfF53e84dDF4CEfC10c094f33671F4',\n    },\n    {\n      address: '0x447f2078a1b6b2C1190B7b7aF98ef4B139d41F70',\n    },\n  ],\n  lpStaking: [\n    {\n      address: '0x3052A0F6ab15b4AE1df39962d5DdEFacA86DaB47',\n    },\n  ],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const ethereum: SerializedDeployment = {\n  eid: 101,\n  factory: {\n    address: '0x06D538690AF257Da524f25D0CD52fD85b1c2173E',\n  },\n  bridge: {\n    address: '0x296F55F8Fb28E498B858d0BcDA06D955B2Cb3f97',\n  },\n  router: {\n    address: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\n  },\n  routerEth: {\n    address: '0x150f94B44927F078737562f0fcF3C95c01Cc2376',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0xe409af258A87545b754B7f1BE423f0f65f3355D6',\n  },\n  stargateToken: {\n    address: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\n  },\n  stargatePreCrime: {\n    address: '0xe409af258A87545b754B7f1BE423f0f65f3355D6',\n  },\n  lpStakingTime: [\n    {\n      address: '0x1c3000b8f475A958b87c73a5cc5780Ab763122FC',\n    },\n  ],\n  lpStaking: [\n    {\n      address: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\n    },\n  ],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const fantom: SerializedDeployment = {\n  eid: 112,\n  factory: {\n    address: '0x9d1B1669c73b033DFe47ae5a0164Ab96df25B944',\n  },\n  bridge: {\n    address: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\n  },\n  router: {\n    address: '0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x06f021541521Ae6dcfaeED4EC9A8bF800528E805',\n  },\n  stargateToken: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  stargatePreCrime: {\n    address: '0x06f021541521Ae6dcfaeED4EC9A8bF800528E805',\n  },\n  lpStakingTime: [],\n  lpStaking: [\n    {\n      address: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\n    },\n  ],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const kava: SerializedDeployment = {\n  eid: 177,\n  factory: {\n    address: '0xAF54BE5B6eEc24d6BFACf1cce4eaF680A8239398',\n  },\n  bridge: {\n    address: '0x45f1A95A4D3f3836523F5c83673c797f4d4d263B',\n  },\n  router: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x808d7c71ad2ba3FA531b068a2417C63106BC0949',\n  },\n  stargateToken: {\n    address: '0x83c30eb8bc9ad7C56532895840039E62659896ea',\n  },\n  stargatePreCrime: {\n    address: '0x808d7c71ad2ba3FA531b068a2417C63106BC0949',\n  },\n  lpStakingTime: [\n    {\n      address: '0x35F78Adf283Fe87732AbC9747d9f6630dF33276C',\n    },\n  ],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const linea: SerializedDeployment = {\n  eid: 183,\n  factory: {\n    address: '0xAF54BE5B6eEc24d6BFACf1cce4eaF680A8239398',\n  },\n  bridge: {\n    address: '0x45f1A95A4D3f3836523F5c83673c797f4d4d263B',\n  },\n  router: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  routerEth: {\n    address: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x296F55F8Fb28E498B858d0BcDA06D955B2Cb3f97',\n  },\n  stargateToken: {\n    address: '0x808d7c71ad2ba3FA531b068a2417C63106BC0949',\n  },\n  stargatePreCrime: {\n    address: '0x296F55F8Fb28E498B858d0BcDA06D955B2Cb3f97',\n  },\n  lpStakingTime: [\n    {\n      address: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\n    },\n  ],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const mantle: SerializedDeployment = {\n  eid: 181,\n  factory: {\n    address: '0xAF54BE5B6eEc24d6BFACf1cce4eaF680A8239398',\n  },\n  bridge: {\n    address: '0x45f1A95A4D3f3836523F5c83673c797f4d4d263B',\n  },\n  router: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  widgetSwap: {\n    address: '0x06D538690AF257Da524f25D0CD52fD85b1c2173E',\n  },\n  poolView: {\n    address: '0x693604E757AC7e2c4A8263594A18d69c35562341',\n  },\n  stargateToken: {\n    address: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\n  },\n  stargatePreCrime: {\n    address: '0x693604E757AC7e2c4A8263594A18d69c35562341',\n  },\n  lpStakingTime: [\n    {\n      address: '0x352d8275AAE3e0c2404d9f68f6cEE084B5bEB3DD',\n    },\n  ],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const metis: SerializedDeployment = {\n  eid: 151,\n  factory: {\n    address: '0xAF54BE5B6eEc24d6BFACf1cce4eaF680A8239398',\n  },\n  bridge: {\n    address: '0x45f1A95A4D3f3836523F5c83673c797f4d4d263B',\n  },\n  router: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x4d97186cD94047E285B7cb78fa63C93E69e7AaD0',\n  },\n  stargateToken: {\n    address: '0xF0Ce6B3268497d637F3e9CbE2c21a1d3C7feC381',\n  },\n  stargatePreCrime: {\n    address: '0x4d97186cD94047E285B7cb78fa63C93E69e7AaD0',\n  },\n  lpStakingTime: [\n    {\n      address: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\n    },\n  ],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const optimism: SerializedDeployment = {\n  eid: 111,\n  factory: {\n    address: '0xE3B53AF74a4BF62Ae5511055290838050bf764Df',\n  },\n  bridge: {\n    address: '0x701a95707A0290AC8B90b3719e8EE5b210360883',\n  },\n  router: {\n    address: '0xB0D502E938ed5f4df2E681fE6E419ff29631d62b',\n  },\n  routerEth: {\n    address: '0xB49c4e680174E331CB0A7fF3Ab58afC9738d5F8b',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x7dBC599313a14bf5e6198348e95e39597F8210F9',\n  },\n  stargateToken: {\n    address: '0x296F55F8Fb28E498B858d0BcDA06D955B2Cb3f97',\n  },\n  stargatePreCrime: {\n    address: '0x7dBC599313a14bf5e6198348e95e39597F8210F9',\n  },\n  lpStakingTime: [\n    {\n      address: '0x4DeA9e918c6289a52cd469cAC652727B7b412Cd2',\n    },\n  ],\n  lpStaking: [\n    {\n      address: '0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8',\n    },\n  ],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const polygon: SerializedDeployment = {\n  eid: 109,\n  factory: {\n    address: '0x808d7c71ad2ba3FA531b068a2417C63106BC0949',\n  },\n  bridge: {\n    address: '0x9d1B1669c73b033DFe47ae5a0164Ab96df25B944',\n  },\n  router: {\n    address: '0x45A01E4e04F14f7A4a6702c74187c5F6222033cd',\n  },\n  widgetSwap: {\n    address: '0x10d16248bED1E0D0c7cF94fFD99A50c336c7Bcdc',\n  },\n  poolView: {\n    address: '0x98325A9d9B05FfBd179362a836201E3856AeDDA2',\n  },\n  stargateToken: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  stargatePreCrime: {\n    address: '0x98325A9d9B05FfBd179362a836201E3856AeDDA2',\n  },\n  lpStakingTime: [],\n  lpStaking: [\n    {\n      address: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\n    },\n  ],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const scroll: SerializedDeployment = {\n  eid: 214,\n  factory: {\n    address: '0xAF54BE5B6eEc24d6BFACf1cce4eaF680A8239398',\n  },\n  bridge: {\n    address: '0x45f1A95A4D3f3836523F5c83673c797f4d4d263B',\n  },\n  router: {\n    address: '0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590',\n  },\n  routerEth: {\n    address: '0x224D8Fd7aB6AD4c6eb4611Ce56EF35Dec2277F03',\n  },\n  widgetSwap: {\n    address: '0x06D538690AF257Da524f25D0CD52fD85b1c2173E',\n  },\n  poolView: {\n    address: '0x693604E757AC7e2c4A8263594A18d69c35562341',\n  },\n  stargateToken: {\n    address: '0x8731d54E9D02c286767d56ac03e8037C07e01e98',\n  },\n  stargatePreCrime: {\n    address: '0x693604E757AC7e2c4A8263594A18d69c35562341',\n  },\n  lpStakingTime: [\n    {\n      address: '0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614',\n    },\n  ],\n  lpStaking: [],\n};\n","[\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"arbitrum\",\n    \"token\": {\n      \"chainKey\": \"arbitrum\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin (Arb1)\",\n      \"address\": \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x892785f33CdeE22A30AEF750F285E18c18040c3e\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"arbitrum\",\n    \"token\": {\n      \"chainKey\": \"arbitrum\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"Tether USD\",\n      \"address\": \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"arbitrum\",\n    \"token\": {\n      \"chainKey\": \"arbitrum\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"ETH\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x915A55e36A01285A14f05dE6e81ED9cE89772f8e\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 7,\n    \"chainKey\": \"arbitrum\",\n    \"token\": {\n      \"chainKey\": \"arbitrum\",\n      \"decimals\": 18,\n      \"symbol\": \"FRAX\",\n      \"name\": \"Frax\",\n      \"address\": \"0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xaa4BF442F024820B2C28Cd0FD72b82c63e66F56C\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*FRAX\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 16,\n    \"chainKey\": \"arbitrum\",\n    \"token\": {\n      \"chainKey\": \"arbitrum\",\n      \"decimals\": 18,\n      \"symbol\": \"MAI\",\n      \"name\": \"Mai Stablecoin\",\n      \"address\": \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xF39B7Be294cB36dE8c510e267B82bb588705d977\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*MAI\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 15,\n    \"chainKey\": \"arbitrum\",\n    \"token\": {\n      \"chainKey\": \"arbitrum\",\n      \"decimals\": 18,\n      \"symbol\": \"LUSD\",\n      \"name\": \"LUSD Stablecoin\",\n      \"address\": \"0x93b346b6BC2548dA6A1E7d98E9a421B42541425b\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x600E576F9d853c95d58029093A16EE49646F3ca5\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*LUSD\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 20,\n    \"chainKey\": \"arbitrum\",\n    \"token\": {\n      \"chainKey\": \"arbitrum\",\n      \"decimals\": 18,\n      \"symbol\": \"WOO\",\n      \"name\": \"Wootrade Network\",\n      \"address\": \"0xcAFcD85D8ca7Ad1e1C6F82F651fA15E33AEfD07b\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x1aE7ca4092C0027bBbB1ce99934528aCf6e7074B\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*WOO\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"avalanche\",\n    \"token\": {\n      \"chainKey\": \"avalanche\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin\",\n      \"address\": \"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x1205f31718499dBf1fCa446663B532Ef87481fe1\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"avalanche\",\n    \"token\": {\n      \"chainKey\": \"avalanche\",\n      \"decimals\": 6,\n      \"symbol\": \"USDt\",\n      \"name\": \"TetherToken\",\n      \"address\": \"0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDt\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 7,\n    \"chainKey\": \"avalanche\",\n    \"token\": {\n      \"chainKey\": \"avalanche\",\n      \"decimals\": 18,\n      \"symbol\": \"FRAX\",\n      \"name\": \"Frax\",\n      \"address\": \"0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*FRAX\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 16,\n    \"chainKey\": \"avalanche\",\n    \"token\": {\n      \"chainKey\": \"avalanche\",\n      \"decimals\": 18,\n      \"symbol\": \"MAI\",\n      \"name\": \"Mai Stablecoin\",\n      \"address\": \"0x5c49b268c9841AFF1Cc3B0a418ff5c3442eE3F3b\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x8736f92646B2542B3e5F3c63590cA7Fe313e283B\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*MAI\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 19,\n    \"chainKey\": \"avalanche\",\n    \"token\": {\n      \"chainKey\": \"avalanche\",\n      \"decimals\": 6,\n      \"symbol\": \"USDt\",\n      \"name\": \"TetherToken\",\n      \"address\": \"0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xEAe5c2F6B25933deB62f754f239111413A0A25ef\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDt\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 20,\n    \"chainKey\": \"avalanche\",\n    \"token\": {\n      \"chainKey\": \"avalanche\",\n      \"decimals\": 18,\n      \"symbol\": \"WOO.e\",\n      \"name\": \"Wootrade Network\",\n      \"address\": \"0xaBC9547B534519fF73921b1FBA6E672b5f58D083\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x45524dc9d05269E1101Ad7Cff1639AE2aA20989d\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*WOO.e\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"base\",\n    \"token\": {\n      \"chainKey\": \"base\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"Ether\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x28fc411f9e1c480AD312b3d9C60c22b965015c6B\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"base\",\n    \"token\": {\n      \"chainKey\": \"base\",\n      \"decimals\": 6,\n      \"symbol\": \"USDbC\",\n      \"name\": \"USD Base Coin\",\n      \"address\": \"0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x4c80E24119CFB836cdF0a6b53dc23F04F7e652CA\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDbC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"bsc\",\n    \"token\": {\n      \"chainKey\": \"bsc\",\n      \"decimals\": 18,\n      \"symbol\": \"USDT\",\n      \"name\": \"Tether USD\",\n      \"address\": \"0x55d398326f99059fF775485246999027B3197955\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x9aA83081AA06AF7208Dcc7A4cB72C94d057D2cda\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 5,\n    \"chainKey\": \"bsc\",\n    \"token\": {\n      \"chainKey\": \"bsc\",\n      \"decimals\": 18,\n      \"symbol\": \"BUSD\",\n      \"name\": \"BUSD Token\",\n      \"address\": \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x98a5737749490856b401DB5Dc27F522fC314A4e1\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*BUSD\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 11,\n    \"chainKey\": \"bsc\",\n    \"token\": {\n      \"chainKey\": \"bsc\",\n      \"decimals\": 18,\n      \"symbol\": \"USDD\",\n      \"name\": \"Decentralized USD\",\n      \"address\": \"0xd17479997F34dd9156Deef8F95A52D81D265be9c\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x4e145a589e4c03cBe3d28520e4BF3089834289Df\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*USDD\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 16,\n    \"chainKey\": \"bsc\",\n    \"token\": {\n      \"chainKey\": \"bsc\",\n      \"decimals\": 18,\n      \"symbol\": \"MAI\",\n      \"name\": \"Mai Stablecoin\",\n      \"address\": \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x7BfD7f2498C4796f10b6C611D9db393D3052510C\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*MAI\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 17,\n    \"chainKey\": \"bsc\",\n    \"token\": {\n      \"chainKey\": \"bsc\",\n      \"decimals\": 18,\n      \"symbol\": \"Metis\",\n      \"name\": \"Metis Token\",\n      \"address\": \"0xe552Fb52a4F19e44ef5A967632DBc320B0820639\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xD4CEc732b3B135eC52a3c0bc8Ce4b8cFb9dacE46\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*Metis\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 19,\n    \"chainKey\": \"bsc\",\n    \"token\": {\n      \"chainKey\": \"bsc\",\n      \"decimals\": 18,\n      \"symbol\": \"USDT\",\n      \"name\": \"Tether USD\",\n      \"address\": \"0x55d398326f99059fF775485246999027B3197955\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x68C6c27fB0e02285829e69240BE16f32C5f8bEFe\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 20,\n    \"chainKey\": \"bsc\",\n    \"token\": {\n      \"chainKey\": \"bsc\",\n      \"decimals\": 18,\n      \"symbol\": \"WOO\",\n      \"name\": \"Wootrade Network\",\n      \"address\": \"0x4691937a7508860F876c9c0a2a617E7d9E945D4B\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x5a0F550bfCaDe1D898034D57A6f72E7Aef32CE79\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*WOO\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin\",\n      \"address\": \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"Tether USD\",\n      \"address\": \"0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x38EA452219524Bb87e18dE1C24D3bB59510BD783\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 11,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"USDD\",\n      \"name\": \"Decentralized USD\",\n      \"address\": \"0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x692953e758c3669290cb1677180c64183cEe374e\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*USDD\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"ETH\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x101816545F6bd2b1076434B54383a1E633390A2E\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 3,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"DAI\",\n      \"name\": \"Dai Stablecoin\",\n      \"address\": \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*DAI\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 7,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"FRAX\",\n      \"name\": \"Frax\",\n      \"address\": \"0x853d955aCEf822Db058eb8505911ED77F175b99e\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xfA0F307783AC21C39E939ACFF795e27b650F6e68\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*FRAX\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 14,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"sUSD\",\n      \"name\": \"Synth sUSD\",\n      \"address\": \"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x590d4f8A68583639f215f675F3a259Ed84790580\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*sUSD\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 15,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"LUSD\",\n      \"name\": \"LUSD Stablecoin\",\n      \"address\": \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*LUSD\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 16,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"MAI\",\n      \"name\": \"Mai Stablecoin\",\n      \"address\": \"0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x9cef9a0b1bE0D289ac9f4a98ff317c33EAA84eb8\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*MAI\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 17,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"Metis\",\n      \"name\": \"Metis Token\",\n      \"address\": \"0x9E32b13ce7f2E80A01932B42553652E053D6ed8e\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xd8772edBF88bBa2667ed011542343b0eDDaCDa47\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*Metis\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 19,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"Tether USD\",\n      \"address\": \"0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x430Ebff5E3E80A6C58E7e6ADA1d90F5c28AA116d\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 20,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"WOO\",\n      \"name\": \"Wootrade Network\",\n      \"address\": \"0x4691937a7508860F876c9c0a2a617E7d9E945D4B\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x1CE66c52C36757Daf6551eDc04800A0Ec9983A09\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*WOO\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 22,\n    \"chainKey\": \"ethereum\",\n    \"token\": {\n      \"chainKey\": \"ethereum\",\n      \"decimals\": 18,\n      \"symbol\": \"mETH\",\n      \"name\": \"mETH\",\n      \"address\": \"0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xA572d137666DCbAdFA47C3fC41F15e90134C618c\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*mETH\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 1,\n    \"chainKey\": \"fantom\",\n    \"token\": {\n      \"chainKey\": \"fantom\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin\",\n      \"address\": \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x12edeA9cd262006cC3C4E77c90d2CD2DD4b1eb97\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 20,\n    \"chainKey\": \"fantom\",\n    \"token\": {\n      \"chainKey\": \"fantom\",\n      \"decimals\": 18,\n      \"symbol\": \"WOO\",\n      \"name\": \"Wootrade Network\",\n      \"address\": \"0x6626c47c00F1D87902fc13EECfaC3ed06D5E8D8a\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x333b6E02eFFD8bE6075F3de0D8075FeD842dd9a3\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*WOO\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 21,\n    \"chainKey\": \"fantom\",\n    \"token\": {\n      \"chainKey\": \"fantom\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin\",\n      \"address\": \"0x28a92dde19D9989F39A49905d7C9C2FAc7799bDf\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xc647CE76ec30033Aa319d472Ae9f4462068f2AD7\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"kava\",\n    \"token\": {\n      \"chainKey\": \"kava\",\n      \"decimals\": 6,\n      \"symbol\": \"USDt\",\n      \"name\": \"TetherUSDt\",\n      \"address\": \"0x919C1c267BC06a7039e03fcc2eF738525769109c\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xAad094F6A75A14417d39f04E690fC216f080A41a\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDt\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"linea\",\n    \"token\": {\n      \"chainKey\": \"linea\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"Linea Ether\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xAad094F6A75A14417d39f04E690fC216f080A41a\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"mantle\",\n    \"token\": {\n      \"chainKey\": \"mantle\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin\",\n      \"address\": \"0x09Bc4E0D864854c6aFB6eB9A9cdF58aC190D0dF9\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xAad094F6A75A14417d39f04E690fC216f080A41a\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"mantle\",\n    \"token\": {\n      \"chainKey\": \"mantle\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"Tether USD\",\n      \"address\": \"0x201EBa5CC46D216Ce6DC03F6a759e8E766e956aE\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x2b60473a7C41Deb80EDdaafD5560e963440eb632\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 22,\n    \"chainKey\": \"mantle\",\n    \"token\": {\n      \"chainKey\": \"mantle\",\n      \"decimals\": 18,\n      \"symbol\": \"mETH\",\n      \"name\": \"mETH\",\n      \"address\": \"0xcDA86A272531e8640cD7F1a92c01839911B90bb0\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xf52b354FFDB323E0667E87a0136040e3e4D9dF33\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*mETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 17,\n    \"chainKey\": \"metis\",\n    \"token\": {\n      \"chainKey\": \"metis\",\n      \"decimals\": 18,\n      \"symbol\": \"Metis\",\n      \"name\": \"Metis Token\",\n      \"address\": \"0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xAad094F6A75A14417d39f04E690fC216f080A41a\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*Metis\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 19,\n    \"chainKey\": \"metis\",\n    \"token\": {\n      \"chainKey\": \"metis\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"USDT Token\",\n      \"address\": \"0xbB06DCA3AE6887fAbF931640f67cab3e3a16F4dC\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x2b60473a7C41Deb80EDdaafD5560e963440eb632\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 16,\n    \"chainKey\": \"metis\",\n    \"token\": {\n      \"chainKey\": \"metis\",\n      \"decimals\": 18,\n      \"symbol\": \"MAI\",\n      \"name\": \"Mai Stablecoin\",\n      \"address\": \"0xdFA46478F9e5EA86d57387849598dbFB2e964b02\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xf52b354FFDB323E0667E87a0136040e3e4D9dF33\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*MAI\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin\",\n      \"address\": \"0x7F5c764cBc14f9669B88837ca1490cCa17c31607\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xDecC0c09c3B5f6e92EF4184125D5648a66E35298\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"ETH\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xd22363e3762cA7339569F3d33EADe20127D5F98C\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 3,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 18,\n      \"symbol\": \"DAI\",\n      \"name\": \"Dai Stablecoin\",\n      \"address\": \"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x165137624F1f692e69659f944BF69DE02874ee27\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*DAI\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 7,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 18,\n      \"symbol\": \"FRAX\",\n      \"name\": \"Frax\",\n      \"address\": \"0x2E3D870790dC77A83DD1d18184Acc7439A53f475\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x368605D9C6243A80903b9e326f1Cddde088B8924\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*FRAX\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 14,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 18,\n      \"symbol\": \"sUSD\",\n      \"name\": \"Synth sUSD\",\n      \"address\": \"0x8c6f28f2F1A3C87F0f938b96d27520d9751ec8d9\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x2F8bC9081c7FCFeC25b9f41a50d97EaA592058ae\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*sUSD\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 15,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 18,\n      \"symbol\": \"LUSD\",\n      \"name\": \"LUSD Stablecoin\",\n      \"address\": \"0xc40F949F8a4e094D1b49a23ea9241D289B7b2819\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x3533F5e279bDBf550272a199a223dA798D9eff78\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*LUSD\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 16,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 18,\n      \"symbol\": \"MAI\",\n      \"name\": \"Mai Stablecoin\",\n      \"address\": \"0xdFA46478F9e5EA86d57387849598dbFB2e964b02\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x5421FA1A48f9FF81e4580557E86C7C0D24C18036\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*MAI\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 20,\n    \"chainKey\": \"optimism\",\n    \"token\": {\n      \"chainKey\": \"optimism\",\n      \"decimals\": 18,\n      \"symbol\": \"WOO\",\n      \"name\": \"Wootrade Network\",\n      \"address\": \"0x871f2F2ff935FD1eD867842FF2a7bfD051A5E527\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xB0a7e3b4aedB6F103BC43f2603c6e73151c8886b\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*WOO\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"polygon\",\n    \"token\": {\n      \"chainKey\": \"polygon\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin (PoS)\",\n      \"address\": \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x1205f31718499dBf1fCa446663B532Ef87481fe1\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"polygon\",\n    \"token\": {\n      \"chainKey\": \"polygon\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"(PoS) Tether USD\",\n      \"address\": \"0xc2132D05D31c914a87C6611C10748AEb04B58e8F\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x29e38769f23701A2e4A8Ef0492e19dA4604Be62c\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 3,\n    \"chainKey\": \"polygon\",\n    \"token\": {\n      \"chainKey\": \"polygon\",\n      \"decimals\": 18,\n      \"symbol\": \"DAI\",\n      \"name\": \"(PoS) Dai Stablecoin\",\n      \"address\": \"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x1c272232Df0bb6225dA87f4dEcD9d37c32f63Eea\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*DAI\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 16,\n    \"chainKey\": \"polygon\",\n    \"token\": {\n      \"chainKey\": \"polygon\",\n      \"decimals\": 18,\n      \"symbol\": \"miMATIC\",\n      \"name\": \"miMATIC\",\n      \"address\": \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x8736f92646B2542B3e5F3c63590cA7Fe313e283B\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*miMATIC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 20,\n    \"chainKey\": \"polygon\",\n    \"token\": {\n      \"chainKey\": \"polygon\",\n      \"decimals\": 18,\n      \"symbol\": \"WOO\",\n      \"name\": \"Wootrade Network (PoS)\",\n      \"address\": \"0x1B815d120B3eF02039Ee11dC2d33DE7aA4a8C603\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xEAe5c2F6B25933deB62f754f239111413A0A25ef\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*WOO\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 1,\n    \"chainKey\": \"scroll\",\n    \"token\": {\n      \"chainKey\": \"scroll\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USD Coin\",\n      \"address\": \"0x06eFdBFf2a14a7c8E15944D1F4A48F9F95F663A4\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xAad094F6A75A14417d39f04E690fC216f080A41a\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": true,\n    \"poolId\": 13,\n    \"chainKey\": \"scroll\",\n    \"token\": {\n      \"chainKey\": \"scroll\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"Ether\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x2b60473a7C41Deb80EDdaafD5560e963440eb632\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  }\n]\n","[\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 111,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 3510\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1428\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 348\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 686\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 711\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 993\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 112,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 184,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1024\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 181,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 500\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 111,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 649\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1987\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 3497\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1227\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 112,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 184,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 177,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 330\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 181,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 400\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 111,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 3225\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2393\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 184,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1907\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 183,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2473\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 111,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 4868\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 106,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 4632\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 500\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 102,\n    \"srcPoolId\": 16,\n    \"dstPoolId\": 16,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 111,\n    \"srcPoolId\": 15,\n    \"dstPoolId\": 15,\n    \"ready\": true,\n    \"weight\": 8190\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 15,\n    \"dstPoolId\": 15,\n    \"ready\": true,\n    \"weight\": 1810\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 102,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 101,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 1000\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 106,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2500\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 111,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 110,\n    \"dstEid\": 109,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2500\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 111,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1494\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 200\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1161\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 200\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 200\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 2497\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 290\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 2787\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 324\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 112,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 267\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 184,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 580\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 181,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 580\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 111,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 480\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 3474\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 374\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1463\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 341\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2148\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 112,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 184,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 177,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 181,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 374\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 111,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 4820\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 101,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 500\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 110,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 4680\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 109,\n    \"srcPoolId\": 16,\n    \"dstPoolId\": 16,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 151,\n    \"srcPoolId\": 19,\n    \"dstPoolId\": 19,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 110,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 109,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 102,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 101,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 106,\n    \"dstEid\": 111,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 111,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 3188\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 110,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 3017\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 101,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 746\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 183,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 3047\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 515\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 416\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2423\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 111,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 416\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 832\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 416\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2621\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 839\n  },\n  {\n    \"srcEid\": 184,\n    \"dstEid\": 181,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 416\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 111,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 732\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 669\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1474\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 156\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2253\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 492\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1025\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 714\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1832\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 112,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 217\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 184,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 292\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 177,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 144\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 181,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 292\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 111,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1510\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 106,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1791\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 106,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 605\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 101,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1824\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 101,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 425\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 109,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1167\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 109,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 618\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 110,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1102\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 110,\n    \"srcPoolId\": 5,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 955\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 101,\n    \"srcPoolId\": 11,\n    \"dstPoolId\": 11,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 109,\n    \"srcPoolId\": 16,\n    \"dstPoolId\": 16,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 101,\n    \"srcPoolId\": 17,\n    \"dstPoolId\": 17,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 151,\n    \"srcPoolId\": 17,\n    \"dstPoolId\": 17,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 151,\n    \"srcPoolId\": 19,\n    \"dstPoolId\": 19,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 110,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 106,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 109,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 3000\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 101,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 102,\n    \"dstEid\": 111,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 2394\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 674\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 108\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 643\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1119\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 932\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 89\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 2953\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 313\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 184,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 775\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 214,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 675\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 181,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 675\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 127\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 325\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 6390\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 470\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1917\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 112,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 184,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 704\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 177,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 181,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 675\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 102,\n    \"srcPoolId\": 11,\n    \"dstPoolId\": 11,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2120\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 4192\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 184,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1203\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 183,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2483\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 214,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2300\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 3,\n    \"dstPoolId\": 3,\n    \"ready\": true,\n    \"weight\": 6972\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 109,\n    \"srcPoolId\": 3,\n    \"dstPoolId\": 3,\n    \"ready\": true,\n    \"weight\": 3027\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 1803\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 106,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 4713\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 3482\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 14,\n    \"dstPoolId\": 14,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 15,\n    \"dstPoolId\": 15,\n    \"ready\": true,\n    \"weight\": 7342\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 15,\n    \"dstPoolId\": 15,\n    \"ready\": true,\n    \"weight\": 2158\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 102,\n    \"srcPoolId\": 16,\n    \"dstPoolId\": 16,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 151,\n    \"srcPoolId\": 17,\n    \"dstPoolId\": 17,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 151,\n    \"srcPoolId\": 19,\n    \"dstPoolId\": 19,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 109,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 1000\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 111,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 1000\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 102,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 5000\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 110,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2500\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 106,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 500\n  },\n  {\n    \"srcEid\": 101,\n    \"dstEid\": 181,\n    \"srcPoolId\": 22,\n    \"dstPoolId\": 22,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 106,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 109,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 111,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1720\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 110,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1690\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 110,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 999\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 106,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1347\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 106,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 558\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 102,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2300\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 101,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 101,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 250\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 109,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1000\n  },\n  {\n    \"srcEid\": 112,\n    \"dstEid\": 109,\n    \"srcPoolId\": 21,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 606\n  },\n  {\n    \"srcEid\": 177,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1457\n  },\n  {\n    \"srcEid\": 177,\n    \"dstEid\": 111,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 847\n  },\n  {\n    \"srcEid\": 177,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 625\n  },\n  {\n    \"srcEid\": 177,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2439\n  },\n  {\n    \"srcEid\": 177,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1736\n  },\n  {\n    \"srcEid\": 177,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2896\n  },\n  {\n    \"srcEid\": 183,\n    \"dstEid\": 184,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 4944\n  },\n  {\n    \"srcEid\": 183,\n    \"dstEid\": 110,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2304\n  },\n  {\n    \"srcEid\": 183,\n    \"dstEid\": 111,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2085\n  },\n  {\n    \"srcEid\": 183,\n    \"dstEid\": 101,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 667\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 111,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 184,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1500\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 109,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 181,\n    \"dstEid\": 101,\n    \"srcPoolId\": 22,\n    \"dstPoolId\": 22,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 151,\n    \"dstEid\": 101,\n    \"srcPoolId\": 17,\n    \"dstPoolId\": 17,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 151,\n    \"dstEid\": 101,\n    \"srcPoolId\": 19,\n    \"dstPoolId\": 19,\n    \"ready\": true,\n    \"weight\": 2194\n  },\n  {\n    \"srcEid\": 151,\n    \"dstEid\": 106,\n    \"srcPoolId\": 19,\n    \"dstPoolId\": 19,\n    \"ready\": true,\n    \"weight\": 2088\n  },\n  {\n    \"srcEid\": 151,\n    \"dstEid\": 102,\n    \"srcPoolId\": 19,\n    \"dstPoolId\": 19,\n    \"ready\": true,\n    \"weight\": 5716\n  },\n  {\n    \"srcEid\": 151,\n    \"dstEid\": 109,\n    \"srcPoolId\": 16,\n    \"dstPoolId\": 16,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 3496\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 648\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 935\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 310\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 310\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 697\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 310\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 310\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 895\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 109,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 310\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 112,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 310\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 184,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1159\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 177,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 310\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 181,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 420\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 110,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 4296\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 950\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 184,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2028\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 183,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 2724\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 109,\n    \"srcPoolId\": 3,\n    \"dstPoolId\": 3,\n    \"ready\": true,\n    \"weight\": 8250\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 3,\n    \"dstPoolId\": 3,\n    \"ready\": true,\n    \"weight\": 1750\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 110,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 3215\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 106,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 3724\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 7,\n    \"dstPoolId\": 7,\n    \"ready\": true,\n    \"weight\": 3061\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 14,\n    \"dstPoolId\": 14,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 15,\n    \"dstPoolId\": 15,\n    \"ready\": true,\n    \"weight\": 500\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 110,\n    \"srcPoolId\": 15,\n    \"dstPoolId\": 15,\n    \"ready\": true,\n    \"weight\": 9500\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 109,\n    \"srcPoolId\": 16,\n    \"dstPoolId\": 16,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 101,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 109,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 102,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 106,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 111,\n    \"dstEid\": 110,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 111,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 2100\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 2121\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 335\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 335\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1089\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 335\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 335\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1986\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 110,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 365\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 112,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 335\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 184,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 664\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 181,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 420\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 111,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 535\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 453\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1953\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 5,\n    \"ready\": true,\n    \"weight\": 200\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2972\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 200\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 101,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 200\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 386\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 110,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 2321\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 112,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 21,\n    \"ready\": true,\n    \"weight\": 200\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 184,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 211\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 177,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 369\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 181,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 400\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 111,\n    \"srcPoolId\": 3,\n    \"dstPoolId\": 3,\n    \"ready\": true,\n    \"weight\": 8750\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 101,\n    \"srcPoolId\": 3,\n    \"dstPoolId\": 3,\n    \"ready\": true,\n    \"weight\": 1250\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 111,\n    \"srcPoolId\": 16,\n    \"dstPoolId\": 16,\n    \"ready\": true,\n    \"weight\": 100\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 102,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 101,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 106,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 110,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 109,\n    \"dstEid\": 111,\n    \"srcPoolId\": 20,\n    \"dstPoolId\": 20,\n    \"ready\": true,\n    \"weight\": 2000\n  },\n  {\n    \"srcEid\": 214,\n    \"dstEid\": 101,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 10000\n  },\n  {\n    \"srcEid\": 214,\n    \"dstEid\": 101,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 10000\n  }\n]\n","import z from 'zod';\nimport type {StargateV1Config, Deployment, StargateV1Pool} from './index';\nimport {StargateVersion} from '@layerzerolabs/ui-stargate';\nimport {Token, currencySchema} from '@layerzerolabs/ui-core';\n\nconst serializedContractSchema = z\n  .union([\n    z.object({\n      address: z.string(),\n    }),\n    z.string(),\n  ])\n  .transform((input) => {\n    if (typeof input === 'string') {\n      return {\n        address: input,\n      };\n    }\n    return input;\n  });\n\nconst chainPathSchema = z.object({\n  srcEid: z.number(),\n  dstEid: z.number(),\n  srcPoolId: z.number(),\n  dstPoolId: z.number(),\n  ready: z.boolean(),\n  weight: z.number(),\n});\n\nconst serializedDeploymentSchema = z.object({\n  eid: z.number(),\n  router: serializedContractSchema.optional(),\n  routerEth: serializedContractSchema.optional(),\n  bridge: serializedContractSchema.optional(),\n  factory: serializedContractSchema.optional(),\n  poolView: serializedContractSchema.optional(),\n  lpStaking: serializedContractSchema.array().optional(),\n  lpStakingTime: serializedContractSchema.array().optional(),\n  stargateToken: serializedContractSchema.optional(),\n  stargatePreCrime: serializedContractSchema.optional(),\n  widgetSwap: serializedContractSchema.optional(),\n});\n\nconst poolSchema = z.object({\n  disabled: z.boolean().optional(),\n  poolId: z.number(),\n  chainKey: z.string(),\n  token: currencySchema,\n  stargateVersion: z.literal(StargateVersion.V1),\n  address: z.string(),\n  decimals: z.number(),\n  sharedDecimals: z.number(),\n  symbol: z.string(),\n});\n\nexport const serializedStargateConfigSchema = z.object({\n  deployments: z.record(serializedDeploymentSchema),\n  chainPaths: chainPathSchema.array(),\n  pools: poolSchema.array(),\n});\n\nexport type SerializedDeployment = z.input<typeof serializedDeploymentSchema>;\n\nexport const stargateConfigSchema = serializedStargateConfigSchema.transform((input, ctx) => {\n  const config: StargateV1Config = {\n    rules: [],\n    deployments: {},\n    chainPaths: input.chainPaths,\n    pools: [],\n  };\n  for (const chainKey in input.deployments) {\n    const {\n      // contracts\n      stargateToken,\n      factory,\n      lpStaking,\n      lpStakingTime,\n      router,\n      routerEth,\n      eid,\n      bridge,\n    } = input.deployments[chainKey];\n\n    const deployment: Deployment = {\n      eid: eid,\n      chainKey: chainKey,\n      router: router && {\n        address: router.address,\n        chainKey,\n      },\n      routerEth: routerEth && {\n        address: routerEth.address,\n        chainKey,\n      },\n      bridge: bridge && {\n        address: bridge.address,\n        chainKey,\n      },\n      factory: factory && {\n        address: factory.address,\n        chainKey,\n      },\n      lpStaking:\n        lpStaking &&\n        lpStaking.map((contract) => ({\n          address: contract.address,\n          chainKey,\n        })),\n      lpStakingTime:\n        lpStakingTime &&\n        lpStakingTime.map((contract) => ({\n          address: contract.address,\n          chainKey,\n        })),\n      stargateToken:\n        stargateToken &&\n        Token.from({\n          symbol: 'STG',\n          decimals: 18,\n          address: stargateToken.address,\n          chainKey,\n        }),\n    };\n    config.deployments[chainKey] = deployment;\n  }\n\n  // pools\n\n  for (const pool of input.pools) {\n    const deployment = config.deployments[pool.chainKey];\n    if (!deployment) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Deployment not found for pool ${pool.symbol} on chain ${pool.chainKey}`,\n      });\n      continue;\n    }\n\n    const lpToken = Token.from({\n      chainKey: pool.chainKey,\n      address: pool.address,\n      symbol: pool.symbol,\n      decimals: pool.decimals,\n    });\n\n    config.pools.push({\n      eid: deployment.eid,\n      chainKey: pool.chainKey,\n      stargateVersion: StargateVersion.V1,\n      lpToken: lpToken,\n      symbol: pool.symbol,\n      token: pool.token,\n      poolId: pool.poolId,\n      address: pool.address,\n      decimals: pool.decimals,\n      sharedDecimals: pool.sharedDecimals,\n      disabled: pool.disabled,\n    });\n  }\n\n  return config;\n});\n\nexport type SerializedStargateConfig = z.input<typeof serializedStargateConfigSchema>;\nexport type SerializedPool = z.input<typeof poolSchema>;\n\nexport function createStargateConfig(input: SerializedStargateConfig): StargateV1Config {\n  return stargateConfigSchema.parse(input);\n}\n\nexport function serializePool(input: StargateV1Pool): SerializedPool {\n  return poolSchema.parse(input);\n}\n","export const StargateVersion = {\n  V1: 'v1',\n  V2: 'v2',\n} as const;\n\nexport type StargateVersion = (typeof StargateVersion)[keyof typeof StargateVersion];\n","import {arbitrum} from '../deployments/arbitrum';\nimport {avalanche} from '../deployments/avalanche';\nimport {base} from '../deployments/base';\nimport {bsc} from '../deployments/bsc';\nimport {ethereum} from '../deployments/ethereum';\nimport {fantom} from '../deployments/fantom';\nimport {kava} from '../deployments/kava';\nimport {linea} from '../deployments/linea';\nimport {mantle} from '../deployments/mantle';\nimport {metis} from '../deployments/metis';\nimport {optimism} from '../deployments/optimism';\nimport {polygon} from '../deployments/polygon';\nimport {scroll} from '../deployments/scroll';\nimport pools from './mainnet/pools.json';\nimport chainPaths from './mainnet/chainPaths.json';\nimport {createStargateConfig} from '../types/zod';\nimport type {StargateV1Pool} from '../types';\n\nexport const mainnet = createStargateConfig({\n  deployments: {\n    arbitrum,\n    avalanche,\n    base,\n    bsc,\n    ethereum,\n    fantom,\n    kava,\n    linea,\n    mantle,\n    metis,\n    optimism,\n    polygon,\n    scroll,\n  },\n  pools: pools as StargateV1Pool[],\n  chainPaths,\n});\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const bscTestnet: SerializedDeployment = {\n  eid: 10102,\n  factory: {\n    address: '0x9DB9116eD670F68B40a5033CE52c72D1702c2Db6',\n  },\n  bridge: {\n    address: '0x6B5b5A7A5195Da7E20251822022Ae03B12Df5952',\n  },\n  router: {\n    address: '0xB606AaA7E2837D4E6FC1e901Ba74045B29D2EB36',\n  },\n  stargateToken: {\n    address: '0x5C4948d523943090bd3AEbD06227272A6b581691',\n  },\n  lpStakingTime: [],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const fuji: SerializedDeployment = {\n  eid: 10106,\n  factory: {\n    address: '0x406f20eAc60D0842f457D11BCBdC7bc949A92c60',\n  },\n  bridge: {\n    address: '0x75D573607f5047C728D3a786BE3Ba33765712875',\n  },\n  router: {\n    address: '0x5C4948d523943090bd3AEbD06227272A6b581691',\n  },\n  stargateToken: {\n    address: '0x1a18c388cb54A5B77C73e7bfFfC020d07bc862b0',\n  },\n  lpStakingTime: [],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const sepolia: SerializedDeployment = {\n  eid: 10161,\n  factory: {\n    address: '0xA296710670e16BA7791E919ddB3704c61f366118',\n  },\n  bridge: {\n    address: '0x96ab23d6224cCA013D119Edd5A31813C32BCA077',\n  },\n  router: {\n    address: '0x2836045A50744FB50D3d04a9C8D18aD7B5012102',\n  },\n  routerEth: {\n    address: '0x676Fa8D37B948236aAcE03A0b34fc0Bc37FABA8D',\n  },\n  stargateToken: {\n    address: '0x5e2675BA29c47E58Cb37e94Ce25A720BD17f6b4a',\n  },\n  lpStakingTime: [],\n  lpStaking: [],\n};\n","[\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"sepolia\",\n    \"token\": {\n      \"chainKey\": \"sepolia\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USDC\",\n      \"address\": \"0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xA3b5d5D34dC3062815685cA93a6Ab8d71FE72969\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"sepolia\",\n    \"token\": {\n      \"chainKey\": \"sepolia\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"Sepolia Ether\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x4B646F443f4783dc12cd1cD0f62ef15Cc6ef01B9\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"arbitrum-sepolia\",\n    \"token\": {\n      \"chainKey\": \"arbitrum-sepolia\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USDC\",\n      \"address\": \"0x3253a335E7bFfB4790Aa4C25C4250d206E9b9773\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x9F8c0670677c79a85306c130f869C6Ea3e9EEE0c\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"arbitrum-sepolia\",\n    \"token\": {\n      \"chainKey\": \"arbitrum-sepolia\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"Ether\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x9325438b843074ce7c0789AbD9A2864B56C9c19B\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"optimism-sepolia\",\n    \"token\": {\n      \"chainKey\": \"optimism-sepolia\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USDC\",\n      \"address\": \"0x488327236B65C61A6c083e8d811a4E0D3d1D4268\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x9cb68Fe59b4c9a829E3B0810b0018409669b9861\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 13,\n    \"chainKey\": \"optimism-sepolia\",\n    \"token\": {\n      \"chainKey\": \"optimism-sepolia\",\n      \"decimals\": 18,\n      \"symbol\": \"ETH\",\n      \"name\": \"Ether\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x23E13646B1C7Ae604B326Cf09080F1c21c6d1A03\",\n    \"decimals\": 18,\n    \"sharedDecimals\": 18,\n    \"symbol\": \"S*SGETH\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"bsc-testnet\",\n    \"token\": {\n      \"chainKey\": \"bsc-testnet\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"USDT\",\n      \"address\": \"0xe37Bdc6F09DAB6ce6E4eBC4d2E72792994Ef3765\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xEFF2E5Afa32d97B8E164EBEfC180dFAEBF63F08F\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 1,\n    \"chainKey\": \"fuji\",\n    \"token\": {\n      \"chainKey\": \"fuji\",\n      \"decimals\": 6,\n      \"symbol\": \"USDC\",\n      \"name\": \"USDC\",\n      \"address\": \"0x89C1D24fFb34020a9Be5463bD2578fF966E9f303\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0xe5B57A342f91A4378a2f84036638D58dF455cd25\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDC\"\n  },\n  {\n    \"disabled\": false,\n    \"poolId\": 2,\n    \"chainKey\": \"fuji\",\n    \"token\": {\n      \"chainKey\": \"fuji\",\n      \"decimals\": 6,\n      \"symbol\": \"USDT\",\n      \"name\": \"USDT\",\n      \"address\": \"0x144843929Df063312A083DB6f0a0FF5697ABED4a\"\n    },\n    \"stargateVersion\": \"v1\",\n    \"address\": \"0x1a60945cFB8F7df17EA23D8f77e58989cff57C9B\",\n    \"decimals\": 6,\n    \"sharedDecimals\": 6,\n    \"symbol\": \"S*USDT\"\n  }\n]\n","[\n  {\n    \"srcEid\": 10161,\n    \"dstEid\": 10232,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10161,\n    \"dstEid\": 10102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10161,\n    \"dstEid\": 10231,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10161,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10161,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10161,\n    \"dstEid\": 10232,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10161,\n    \"dstEid\": 10231,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10231,\n    \"dstEid\": 10161,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10231,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10231,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10231,\n    \"dstEid\": 10232,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10231,\n    \"dstEid\": 10102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10231,\n    \"dstEid\": 10161,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10231,\n    \"dstEid\": 10232,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10232,\n    \"dstEid\": 10161,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10232,\n    \"dstEid\": 10231,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10232,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10232,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10232,\n    \"dstEid\": 10102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10232,\n    \"dstEid\": 10161,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10232,\n    \"dstEid\": 10231,\n    \"srcPoolId\": 13,\n    \"dstPoolId\": 13,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10102,\n    \"dstEid\": 10231,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10102,\n    \"dstEid\": 10232,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10102,\n    \"dstEid\": 10161,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10102,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10102,\n    \"dstEid\": 10106,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10102,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10161,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10231,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10232,\n    \"srcPoolId\": 1,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10102,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 2,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10161,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10231,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  },\n  {\n    \"srcEid\": 10106,\n    \"dstEid\": 10232,\n    \"srcPoolId\": 2,\n    \"dstPoolId\": 1,\n    \"ready\": true,\n    \"weight\": 1\n  }\n]\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const arbitrumSepolia: SerializedDeployment = {\n  eid: 10231,\n  factory: {\n    address: '0x7eEB77fFD369Da207b34FAcD202698dc733192a5',\n  },\n  bridge: {\n    address: '0x2f4B6e5Ae6728C1832E93DE67141908F8Aa9255B',\n  },\n  router: {\n    address: '0x2a4C2F5ffB0E0F2dcB3f9EBBd442B8F77ECDB9Cc',\n  },\n  routerEth: {\n    address: '0x771A4f8a880b499A40c8fF53c7925798E0f2E594',\n  },\n  stargateToken: {\n    address: '0xBe29C694b4DD547A843B13E62E1409d3bCCd68ca',\n  },\n  lpStakingTime: [],\n  lpStaking: [],\n};\n","import type {SerializedDeployment} from '../../types/zod';\n\nexport const optimismSepolia: SerializedDeployment = {\n  eid: 10232,\n  factory: {\n    address: '0xDb6E40E8fACF1a76866ff067D57539c8EE1bfC16',\n  },\n  bridge: {\n    address: '0xB55a9254b467A0a52d6696cD327f4C4a37498c1A',\n  },\n  router: {\n    address: '0xa2dfFdDc372C6aeC3a8e79aAfa3953e8Bc956D63',\n  },\n  routerEth: {\n    address: '0xA251Af9e97aadE0F0E650525Ad531a7a534c335E',\n  },\n  stargateToken: {\n    address: '0x08dD692ECBa27CAb51e1f99De23Df89D2be81111',\n  },\n  lpStakingTime: [],\n  lpStaking: [],\n};\n","import {bscTestnet} from '../deployments/bsc-testnet';\nimport {fuji} from '../deployments/fuji';\nimport {sepolia} from '../deployments/sepolia';\n\nimport pools from './testnet/pools.json';\nimport chainPaths from './testnet/chainPaths.json';\nimport {createStargateConfig} from '../types/zod';\nimport {arbitrumSepolia} from '../deployments/arbitrum-sepolia';\nimport {optimismSepolia} from '../deployments/optimism-sepolia';\nimport type {StargateV1Pool} from '../types';\n\nexport const testnet = createStargateConfig({\n  deployments: {\n    sepolia: sepolia,\n    'arbitrum-sepolia': arbitrumSepolia,\n    'optimism-sepolia': optimismSepolia,\n    'bsc-testnet': bscTestnet,\n    fuji: fuji,\n  },\n  pools: pools as StargateV1Pool[],\n  chainPaths,\n});\n","import {\n  type BridgeApi,\n  validateInput,\n  type TransferInput,\n  type GetAllowanceInput,\n  type ApproveInput,\n  type IsRegisteredInput,\n  type GetUnclaimedInput,\n  type ClaimInput,\n  type RegisterInput,\n  type GetMessageFeeInput,\n  type GetOutputInput,\n  type GetLimitInput,\n  type GetExtraGasInput,\n  type GetDurationInput,\n  type GetOptionsInput,\n  type BridgeOptions,\n  type BridgeOption,\n  type BridgeOutput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {\n  type AdapterParams,\n  castCurrencyAmountUnsafe,\n  type Currency,\n  CurrencyAmount,\n  type FeeQuote,\n  getNativeCurrency,\n  isEvmChainKey,\n  isNativeCurrency,\n  MaxUint256,\n  type Token,\n  type Transaction,\n  assert,\n} from '@layerzerolabs/ui-core';\nimport {\n  ONE_ADDRESS,\n  type ProviderFactory,\n  createTransaction,\n  ERC20__api,\n} from '@layerzerolabs/ui-evm';\nimport {constants, type Signer} from 'ethers';\nimport {\n  Pool__factory,\n  type Router,\n  RouterETH__factory,\n  Router__factory,\n  type StargateFeeLibrary,\n  StargateFeeLibrary__factory,\n} from '../typechain';\n\nimport type {StargateV1Sdk} from '../StargateV1Sdk';\nimport pMemoize from 'p-memoize';\nimport type {IStargateRouter} from '../typechain/Router';\n\nexport type StargateV1Fee = {\n  totalFee: CurrencyAmount;\n  eqFee: CurrencyAmount;\n  eqReward: CurrencyAmount;\n  lpFee: CurrencyAmount;\n  protocolFee: CurrencyAmount;\n  lkbRemove: CurrencyAmount;\n};\n\nenum FunctionType {\n  TYPE_SWAP_REMOTE = 1,\n  TYPE_WITHDRAW_REMOTE = 4,\n  TYPE_REDEEM_LOCAL_CALL_BACK = 3,\n}\n\nexport const StargateV1BridgeMode = {\n  TAXI: 'taxi',\n} as const;\n\nexport class StargateV1Bridge implements BridgeApi<Signer, StargateV1Fee> {\n  protected feeLibraryCache: Map<string, StargateFeeLibrary> = new Map();\n  protected readonly erc20: ERC20__api;\n  constructor(\n    protected readonly providerFactory: ProviderFactory,\n    public readonly sdk: StargateV1Sdk,\n  ) {\n    this.erc20 = new ERC20__api(providerFactory);\n  }\n\n  async getOptions(input: GetOptionsInput): Promise<BridgeOptions> {\n    const taxiOption: BridgeOption = {\n      mode: 'taxi',\n    };\n    return {options: [taxiOption]};\n  }\n\n  async getAllowance({token, address}: GetAllowanceInput): Promise<CurrencyAmount> {\n    if (isNativeCurrency(token)) return CurrencyAmount.fromBigInt(token, MaxUint256);\n    const srcChainKey = token.chainKey;\n    const router = this.sdk.getRouterAddress(srcChainKey);\n    return this.erc20.forToken(token).allowance(address, router);\n  }\n\n  async approve({amount}: ApproveInput) {\n    const srcToken = amount.token;\n    const srcChainKey = srcToken.chainKey;\n    const routerAddress = this.sdk.getRouterAddress(srcChainKey);\n    return this.erc20.forToken(amount.token).approve(amount, routerAddress);\n  }\n\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    const link = this.sdk.tryGetLink(srcToken, dstToken);\n    if (!link) return false;\n    if (link.srcPool.disabled) return false;\n    if (link.dstPool.disabled) return false;\n    if (link.chainPath.weight === 0) return false;\n    if (!isEvmChainKey(link.srcPool.chainKey)) return false;\n    return link.chainPath.ready;\n  }\n\n  supportsClaim(token: Currency): boolean {\n    return false;\n  }\n\n  supportsRegister(token: Currency): boolean {\n    return !!this.sdk.getPools().some((p) => p.token.equals(token));\n  }\n\n  async isRegistered(input: IsRegisteredInput): Promise<boolean> {\n    return true;\n  }\n\n  async getUnclaimed({token: currency}: GetUnclaimedInput): Promise<CurrencyAmount<Currency>> {\n    return CurrencyAmount.fromBigInt(currency, BigInt(0));\n  }\n\n  claim(input: ClaimInput): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  register(input: RegisterInput): Promise<Transaction<Signer>> {\n    throw new Error('Method not supported.');\n  }\n\n  protected validateInput(input: TransferInput): void {\n    validateInput(input);\n    const {srcPool, dstPool} = this.sdk.getLink(input.srcToken, input.dstToken);\n\n    if (srcPool.poolId === 13 || dstPool.poolId === 13) {\n      assert(srcPool.poolId === 13, 'srcPool is not ETH');\n      assert(dstPool.poolId === 13, 'dstPool is not ETH');\n    }\n\n    assert(\n      srcPool.chainKey === input.srcChainKey,\n      `srcPool (${srcPool.chainKey}) and srcChainKey (${input.srcChainKey}) do not match`,\n    );\n    assert(\n      dstPool.chainKey === input.dstChainKey,\n      `dstPool (${dstPool.chainKey}) and dstChainId (${input.dstChainKey}) do not match`,\n    );\n  }\n\n  transfer(input: TransferInput): Promise<Transaction<Signer>> {\n    this.validateInput(input);\n    const {srcPool} = this.sdk.getLink(input.srcToken, input.dstToken);\n    if (srcPool.poolId === 13) return this.transferEth(input);\n    return this.transferToken(input);\n  }\n\n  protected async transferEth(input: TransferInput): Promise<Transaction<Signer>> {\n    const srcChainKey = input.srcChainKey;\n    const {srcPool, dstPool} = this.sdk.getLink(input.srcToken, input.dstToken);\n    assert(srcPool.poolId === 13, 'eth');\n    assert(dstPool.poolId === 13, 'eth');\n    const provider = this.providerFactory(input.srcChainKey);\n    const routerEthAddress = this.sdk.getRouterEthAddress(srcPool.chainKey);\n    const router = RouterETH__factory.connect(routerEthAddress, provider);\n    const amountLD = input.srcAmount.quotient;\n    const minAmountLD = input.dstAmountMin.quotient;\n    const dstEid = dstPool.eid;\n    const {srcAddress, dstAddress} = input;\n\n    const value = input.srcAmount.add(input.fee.nativeFee).quotient;\n\n    const populatedTransaction = router.populateTransaction.swapETH(\n      dstEid,\n      srcAddress,\n      dstAddress,\n      amountLD,\n      minAmountLD,\n      {value, from: srcAddress},\n    );\n\n    return createTransaction(populatedTransaction, {provider, chainKey: srcChainKey});\n  }\n\n  protected async transferToken(input: TransferInput): Promise<Transaction<Signer>> {\n    validateInput(input);\n    const srcChainKey = input.srcChainKey;\n    const {srcPool, dstPool} = this.sdk.getLink(input.srcToken, input.dstToken);\n\n    const provider = this.providerFactory(input.srcChainKey);\n    const router = this.getRouterContract(srcPool.chainKey);\n    const amountLD = input.srcAmount.quotient;\n\n    const minAmountLD =\n      // at this point the conversion is safe\n      castCurrencyAmountUnsafe(input.dstAmountMin, input.srcToken).quotient;\n    const {adapterParams} = input;\n\n    const dstEid = dstPool.eid;\n    const srcPoolId = srcPool.poolId;\n    const dstPoolId = dstPool.poolId;\n    const {srcAddress, dstAddress} = input;\n    const lzTxParams = this.lzTxParams(adapterParams);\n    const payload = '0x';\n    const value = input.fee.nativeFee.quotient;\n\n    const populatedTransaction = router.populateTransaction.swap(\n      dstEid,\n      srcPoolId,\n      dstPoolId,\n      srcAddress,\n      amountLD,\n      minAmountLD,\n      lzTxParams,\n      dstAddress,\n      payload,\n      {value, from: srcAddress},\n    );\n\n    return createTransaction(populatedTransaction, {\n      provider,\n      chainKey: srcChainKey,\n    });\n  }\n\n  async getMessageFee({srcToken, dstToken, adapterParams}: GetMessageFeeInput): Promise<FeeQuote> {\n    const srcChainKey = srcToken.chainKey;\n    const dstChainKey = dstToken.chainKey;\n    const dstEid = this.chainKeyToEndpointId(dstChainKey);\n    const router = this.getRouterContract(srcChainKey);\n\n    const payload = '0x';\n    const lzTxParams: IStargateRouter.LzTxObjStruct = this.lzTxParams(adapterParams);\n\n    const native = getNativeCurrency(srcChainKey);\n    const [nativeFee, lzFee] = await router.quoteLayerZeroFee(\n      dstEid,\n      FunctionType.TYPE_SWAP_REMOTE,\n      ONE_ADDRESS,\n      payload,\n      lzTxParams,\n    );\n    return {\n      nativeFee: CurrencyAmount.fromBigInt(native, nativeFee.toBigInt()),\n      zroFee: CurrencyAmount.fromBigInt(native, lzFee.toBigInt()),\n    };\n  }\n\n  protected lzTxParams(adapterParams: AdapterParams): IStargateRouter.LzTxObjStruct {\n    const lzTxParams: IStargateRouter.LzTxObjStruct = {\n      dstGasForCall: adapterParams.extraGas,\n      dstNativeAddr: adapterParams.dstNativeAddress ?? ONE_ADDRESS,\n      dstNativeAmount: adapterParams.dstNativeAmount\n        ? adapterParams.dstNativeAmount.quotient\n        : constants.Zero,\n    };\n    return lzTxParams;\n  }\n\n  protected getFeeLibraryAddress = pMemoize(\n    async (lpToken: Token): Promise<string> => {\n      const provider = this.providerFactory(lpToken.chainKey);\n      const pool = Pool__factory.connect(lpToken.address, provider);\n      return pool.feeLibrary();\n    },\n    {cacheKey: ([lpToken]) => lpToken.id},\n  );\n\n  protected async getFeeLibrary(lpToken: Token): Promise<StargateFeeLibrary> {\n    const feeLibraryAddress = await this.getFeeLibraryAddress(lpToken);\n    const provider = this.providerFactory(lpToken.chainKey);\n    const feeLibrary = StargateFeeLibrary__factory.connect(feeLibraryAddress, provider);\n    return feeLibrary;\n  }\n\n  async getOutput({\n    srcAmount: inputAmountLD,\n    dstToken,\n  }: GetOutputInput): Promise<BridgeOutput<StargateV1Fee>> {\n    const srcToken = inputAmountLD.token;\n    const {srcPool, dstPool} = this.sdk.getLink(srcToken, dstToken);\n    const feeLibrary = await this.getFeeLibrary(srcPool.lpToken);\n\n    const amountSD = amountLDtoSD(inputAmountLD, srcPool.lpToken);\n    const srcPoolId = srcPool.poolId;\n    const dstPoolId = dstPool.poolId;\n    const dstEid = dstPool.eid;\n\n    const srcAddress = ONE_ADDRESS;\n\n    const fees = await feeLibrary.getFees(\n      srcPoolId,\n      dstPoolId,\n      dstEid,\n      srcAddress,\n      amountSD.quotient,\n    );\n\n    const feeSD = {\n      eqFee: CurrencyAmount.fromBigInt(srcPool.lpToken, fees.eqFee.toBigInt()),\n      eqReward: CurrencyAmount.fromBigInt(srcPool.lpToken, fees.eqReward.toBigInt()),\n      lpFee: CurrencyAmount.fromBigInt(srcPool.lpToken, fees.lpFee.toBigInt()),\n      protocolFee: CurrencyAmount.fromBigInt(srcPool.lpToken, fees.protocolFee.toBigInt()),\n      lkbRemove: CurrencyAmount.fromBigInt(srcPool.lpToken, fees.lkbRemove.toBigInt()),\n    };\n\n    const feeLD = {\n      eqFee: amountSDtoLD(feeSD.eqFee, srcPool.token),\n      eqReward: amountSDtoLD(feeSD.eqReward, srcPool.token),\n      lpFee: amountSDtoLD(feeSD.lpFee, srcPool.token),\n      protocolFee: amountSDtoLD(feeSD.protocolFee, srcPool.token),\n      lkbRemove: amountSDtoLD(feeSD.lkbRemove, srcPool.token),\n    };\n\n    const totalFeeSD = feeSD.eqFee\n      //\n      .add(feeSD.protocolFee)\n      .add(feeSD.lpFee)\n      .subtract(feeSD.eqReward);\n\n    const totalFeeLD = amountSDtoLD(totalFeeSD, srcToken);\n    const inputAmountSD = amountLDtoSD(inputAmountLD, srcPool.lpToken);\n    const outputAmountSD = inputAmountSD.subtract(totalFeeSD);\n    const outputAmountRD = amountSDtoLD(outputAmountSD, dstPool.token);\n\n    const output = {\n      dstAmount: outputAmountRD,\n      fee: {\n        totalFee: totalFeeLD,\n        ...feeLD,\n      },\n    };\n    return output;\n  }\n\n  async getLimit({srcToken, dstToken}: GetLimitInput): Promise<CurrencyAmount<Currency>> {\n    const {srcPool, dstPool} = this.sdk.getLink(srcToken, dstToken);\n\n    const provider = this.providerFactory(srcPool.chainKey);\n    const pool = Pool__factory.connect(srcPool.lpToken.address, provider);\n    const dstEid = dstPool.eid;\n    const dstPoolId = dstPool.poolId;\n\n    const chainPath = await pool.getChainPath(dstEid, dstPoolId);\n    const balanceLP = CurrencyAmount.fromBigInt(srcPool.lpToken, chainPath.balance.toBigInt());\n    const balanceLD = amountSDtoLD(balanceLP, srcToken);\n    return balanceLD;\n  }\n\n  async getExtraGas(input: GetExtraGasInput): Promise<number> {\n    return 0;\n  }\n\n  async getDuration(input: GetDurationInput): Promise<number> {\n    // todo: use UA configuration\n    throw new Error('Not implemented');\n  }\n\n  protected chainKeyToEndpointId(chainKey: string): number {\n    return this.sdk.getDeployment(chainKey).eid;\n  }\n\n  protected getRouterContract(chainKey: string): Router {\n    const routerAddress = this.sdk.getRouterAddress(chainKey);\n    const provider = this.providerFactory(chainKey);\n    const router = Router__factory.connect(routerAddress, provider);\n    return router;\n  }\n}\n\nfunction amountLDtoSD(amountLD: CurrencyAmount, lpToken: Currency): CurrencyAmount {\n  // see Pool.sol:\n  //\n  // sharedDecimals = _sharedDecimals;\n  // decimals = uint8(_sharedDecimals);\n  const sharedDecimals = lpToken.decimals;\n\n  return CurrencyAmount.fromBigInt(\n    lpToken,\n    amountLD.multiply(BigInt(10) ** BigInt(sharedDecimals)).divide(amountLD.decimalScale).quotient,\n  );\n}\n\nfunction amountSDtoLD(\n  amountSD: CurrencyAmount,\n  baseToken: Currency,\n  localDecimals = baseToken.decimals,\n): CurrencyAmount {\n  return CurrencyAmount.fromBigInt(\n    baseToken,\n    amountSD.multiply(BigInt(10) ** BigInt(localDecimals)).divide(amountSD.decimalScale).quotient,\n  );\n}\n","import {type ProviderFactory, createTransaction} from '@layerzerolabs/ui-evm';\n\nimport {StargateV1Bridge} from './StargateV1Bridge';\nimport type {StargateV1Sdk} from '../StargateV1Sdk';\nimport {\n  CurrencyAmount,\n  type Transaction,\n  type FeeQuote,\n  castCurrencyAmountUnsafe,\n  isNativeCurrency,\n  isToken,\n  MaxUint256,\n  type ChainKey,\n} from '@layerzerolabs/ui-core';\nimport type {\n  ApproveInput,\n  BridgeApi,\n  BridgeOutput,\n  GetAllowanceInput,\n  GetMessageFeeInput,\n  GetOutputInput,\n  TransferInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {assert} from '@layerzerolabs/ui-core';\nimport {type Signer, utils} from 'ethers';\n\nimport {StargateWidget__factory} from '../typechain';\nimport type {IStargateWidget, IStargateRouter} from '../typechain/StargateWidget';\n\nexport type PartnerConfig = {\n  partnerId: number;\n  tenthBps: number;\n  feeCollector: string;\n};\n\ntype StargateWidgetFee = {\n  totalFee: CurrencyAmount;\n  eqFee: CurrencyAmount;\n  eqReward: CurrencyAmount;\n  lpFee: CurrencyAmount;\n  protocolFee: CurrencyAmount;\n  lkbRemove: CurrencyAmount;\n  partnerFee: CurrencyAmount;\n};\n\nexport class StargateV1WidgetBridge\n  extends StargateV1Bridge\n  implements BridgeApi<Signer, StargateWidgetFee>\n{\n  private readonly tenthBpsDenominator = 100000;\n\n  constructor(\n    providerFactory: ProviderFactory,\n    sdk: StargateV1Sdk,\n    protected partnerConfig: PartnerConfig,\n  ) {\n    super(providerFactory, sdk);\n  }\n\n  private async getPartnerFee(inputAmountLD: CurrencyAmount): Promise<CurrencyAmount> {\n    return inputAmountLD.multiply(this.partnerConfig.tenthBps).divide(this.tenthBpsDenominator);\n  }\n\n  async getAllowance({token, address}: GetAllowanceInput): Promise<CurrencyAmount> {\n    if (isNativeCurrency(token)) return CurrencyAmount.fromRawAmount(token, MaxUint256);\n    const spender = this.sdk.getWidgetAddress(token.chainKey);\n    return this.erc20.forToken(token).allowance(address, spender);\n  }\n\n  async approve({amount}: ApproveInput) {\n    const srcToken = amount.token;\n    assert(isToken(srcToken), 'Not a token');\n    const widgetAddress = this.sdk.getWidgetAddress(srcToken.chainKey);\n    return this.erc20.forToken(amount.token).approve(amount, widgetAddress);\n  }\n\n  async getOutput({\n    srcAmount: inputAmountLD,\n    dstToken,\n  }: GetOutputInput): Promise<BridgeOutput<StargateWidgetFee>> {\n    const partnerFee = await this.getPartnerFee(inputAmountLD);\n    const swapAmount = inputAmountLD.subtract(partnerFee);\n    const output = await super.getOutput({srcAmount: swapAmount, dstToken});\n\n    const fee: StargateWidgetFee = {\n      ...output.fee,\n      partnerFee,\n    };\n\n    return {\n      dstAmount: output.dstAmount,\n      fee,\n    };\n  }\n\n  protected async transferEth(input: TransferInput): Promise<Transaction<Signer>> {\n    this.validateInput(input);\n    const srcChainKey = input.srcChainKey;\n    const contract = this.getWidgetContract(input.srcChainKey);\n    const dstEid = this.chainKeyToEndpointId(input.dstChainKey);\n\n    const partnerId = utils.solidityPack(['uint16'], [this.partnerConfig.partnerId]);\n    const value = input.fee.nativeFee.add(input.srcAmount).quotient;\n    const {srcAddress, dstAddress} = input;\n\n    const amountLD = input.srcAmount.quotient;\n    const minAmountLD = castCurrencyAmountUnsafe(input.dstAmountMin, input.dstToken).quotient;\n\n    const populatedTransaction = contract.populateTransaction.swapETH(\n      dstEid,\n      amountLD,\n      minAmountLD,\n      dstAddress,\n      partnerId,\n      this.feeObj,\n      {value, from: srcAddress},\n    );\n    return createTransaction(populatedTransaction, {\n      provider: contract.provider,\n      chainKey: srcChainKey,\n    });\n  }\n\n  get feeObj() {\n    const feeObj: IStargateWidget.FeeObjStruct = {\n      tenthBps: this.partnerConfig.tenthBps,\n      feeCollector: this.partnerConfig.feeCollector,\n    };\n    return feeObj;\n  }\n\n  async getMessageFee({srcToken, dstToken, adapterParams}: GetMessageFeeInput): Promise<FeeQuote> {\n    const fee = await super.getMessageFee({srcToken, dstToken, adapterParams});\n\n    return {\n      ...fee,\n      // Transfers that include a partnerId i.e. Widget transfers require slightly more native\n      nativeFee: fee.nativeFee.multiply(110).divide(100),\n    };\n  }\n\n  protected async transferToken(input: TransferInput): Promise<Transaction<Signer>> {\n    this.validateInput(input);\n    const srcChainKey = input.srcChainKey;\n    const contract = this.getWidgetContract(input.srcChainKey);\n    const {srcPool, dstPool} = this.sdk.getLink(input.srcToken, input.dstToken);\n\n    const lzTxParams: IStargateRouter.LzTxObjStruct = {\n      dstGasForCall: 0,\n      dstNativeAmount: input.adapterParams.dstNativeAmount\n        ? input.adapterParams.dstNativeAmount.quotient\n        : 0,\n      dstNativeAddr: input.adapterParams.dstNativeAddress ?? input.dstAddress,\n    };\n\n    const partnerId = utils.solidityPack(['uint16'], [this.partnerConfig.partnerId]);\n    const value = input.fee.nativeFee.quotient;\n    const dstEid = dstPool.eid;\n    const srcPoolId = srcPool.poolId;\n    const dstPoolId = dstPool.poolId;\n\n    const amountLD = input.srcAmount.quotient;\n    const minAmountLD =\n      // at this point the conversion is safe\n      castCurrencyAmountUnsafe(input.dstAmountMin, input.srcToken).quotient;\n\n    const populatedTransaction = contract.populateTransaction.swapTokens(\n      dstEid,\n      srcPoolId,\n      dstPoolId,\n      amountLD,\n      minAmountLD,\n      lzTxParams,\n      input.dstAddress,\n      partnerId,\n      this.feeObj,\n      {value},\n    );\n\n    return createTransaction(populatedTransaction, {\n      provider: contract.provider,\n      chainKey: srcChainKey,\n    });\n  }\n\n  getWidgetContract(chainKey: ChainKey) {\n    const address = this.sdk.getWidgetAddress(chainKey);\n    const provider = this.providerFactory(chainKey);\n    return StargateWidget__factory.connect(address, provider);\n  }\n}\n","import type {ChainKey, Currency} from '@layerzerolabs/ui-core';\nimport type {StargateV1Config, ChainPath, StargateV1Pool} from './types';\n\nexport class StargateV1Sdk {\n  protected poolLinks: PoolLink[] = [];\n  protected endpointIdToChainKeyMap = new Map<number, ChainKey>();\n  protected log = console;\n\n  constructor(public readonly config: StargateV1Config) {\n    this.update(config);\n  }\n\n  public update(config: StargateV1Config) {\n    this.updateEndpointIdToChainKeyMap(config);\n    this.updateChainPaths(config);\n  }\n\n  public tryGetDeployment(chainKey: string) {\n    return this.config.deployments[chainKey];\n  }\n\n  public getDeployment(chainKey: string) {\n    const deployment = this.tryGetDeployment(chainKey);\n    if (deployment) return deployment;\n    throw new Error(`No deployment for chainKey: ${chainKey}`);\n  }\n\n  private updateEndpointIdToChainKeyMap(config: StargateV1Config) {\n    this.endpointIdToChainKeyMap.clear();\n    for (const chainKey in config.deployments) {\n      const deployment = config.deployments[chainKey];\n      this.endpointIdToChainKeyMap.set(deployment.eid, chainKey);\n    }\n  }\n\n  public chainKeyToEndpointId(chainKey: ChainKey) {\n    return this.getDeployment(chainKey).eid;\n  }\n\n  public endpointIdToChainKey(endpointId: number) {\n    const chainKey = this.endpointIdToChainKeyMap.get(endpointId);\n    if (chainKey) return chainKey;\n    throw new Error(`No chainKey for endpointId: ${endpointId}`);\n  }\n\n  // this method cannot throw\n  // if pool or chain is not defined - it will be skipped\n  private updateChainPaths(config: StargateV1Config): void {\n    const chainPathLinks: PoolLink[] = [];\n    for (const chainPath of config.chainPaths) {\n      try {\n        const srcChainKey = this.endpointIdToChainKey(chainPath.srcEid);\n        const dstChainKey = this.endpointIdToChainKey(chainPath.dstEid);\n        const srcPool = this.getPool({poolId: chainPath.srcPoolId, chainKey: srcChainKey});\n        const dstPool = this.getPool({poolId: chainPath.dstPoolId, chainKey: dstChainKey});\n        const disabled = srcPool.disabled || dstPool.disabled || false;\n        const path: PoolLink = {\n          disabled,\n          srcPool,\n          dstPool,\n          chainPath,\n        };\n        chainPathLinks.push(path);\n      } catch (e) {\n        this.log.error(`Could not add chain path ${JSON.stringify(chainPath)}`, e);\n      }\n    }\n    this.poolLinks = chainPathLinks;\n  }\n\n  tryGetPool(poolLike: PoolLike | ContractLike): StargateV1Pool | undefined {\n    if ('address' in poolLike) {\n      const {chainKey, address} = poolLike;\n      for (const pool of this.config.pools) {\n        if (pool.chainKey === chainKey && pool.address === address) {\n          return pool;\n        }\n      }\n    }\n    if ('poolId' in poolLike) {\n      const {chainKey, poolId} = poolLike;\n      for (const pool of this.config.pools) {\n        if (pool.chainKey === chainKey && pool.poolId === poolId) {\n          return pool;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  getPool(poolLike: PoolLike | ContractLike): StargateV1Pool {\n    const pool = this.tryGetPool(poolLike);\n    if (pool) return pool;\n    throw new Error(`No pool for ${JSON.stringify(poolLike)}`);\n  }\n\n  getActiveLinks = (): PoolLink[] => {\n    return this.poolLinks.filter(\n      (path) => path.chainPath.ready && !path.srcPool.disabled && !path.dstPool.disabled,\n    );\n  };\n\n  getLinks = (): PoolLink[] => {\n    return this.poolLinks;\n  };\n\n  getPools = (): StargateV1Pool[] => {\n    return this.config.pools;\n  };\n\n  getLink = (srcToken: Currency, dstToken: Currency): PoolLink => {\n    const link = this.tryGetLink(srcToken, dstToken);\n    if (link) return link;\n    throw new Error('No link found');\n  };\n  tryGetLink = (srcToken?: Currency, dstToken?: Currency): PoolLink | undefined => {\n    if (!srcToken || !dstToken) return undefined;\n    for (const link of this.poolLinks) {\n      if (link.srcPool.token.equals(srcToken) && link.dstPool.token.equals(dstToken)) {\n        return link;\n      }\n    }\n    return undefined;\n  };\n\n  tryGetPath = (srcToken?: Currency, dstToken?: Currency): ChainPath | undefined => {\n    return this.tryGetLink(srcToken, dstToken)?.chainPath;\n  };\n\n  getPath = (srcToken: Currency, dstToken: Currency) => {\n    const path = this.tryGetPath(srcToken, dstToken);\n    if (path) return path;\n    throw new Error('No path found');\n  };\n\n  // other\n  tryGetRouterAddress(chainKey: ChainKey) {\n    return this.tryGetDeployment(chainKey)?.router?.address;\n  }\n  getRouterAddress = (chainKey: ChainKey) => {\n    const address = this.tryGetRouterAddress(chainKey);\n    if (address) return address;\n    throw new Error(`No router address for chainKey: ${chainKey}`);\n  };\n  tryGetRouterEthAddress(chainKey: ChainKey) {\n    return this.tryGetDeployment(chainKey)?.routerEth?.address;\n  }\n  getRouterEthAddress = (chainKey: ChainKey) => {\n    const address = this.tryGetRouterEthAddress(chainKey);\n    if (address) return address;\n    throw new Error('No router ETH address');\n  };\n  isPathDisabled(srcPool: PoolLike, dstPool: PoolLike): boolean {\n    if (this.getPool(srcPool).disabled) return true;\n    if (this.getPool(dstPool).disabled) return true;\n\n    for (const rule of this.config.rules) {\n      // skip if rule does not match path\n      if (rule.srcChainKey && srcPool.chainKey !== rule.srcChainKey) continue;\n      if (rule.dstChainKey && dstPool.chainKey !== rule.dstChainKey) continue;\n      if (rule.srcChainKey && srcPool.poolId !== rule.srcPoolId) continue;\n      if (rule.dstPoolId && dstPool.poolId !== rule.dstPoolId) continue;\n      return true;\n    }\n\n    return false;\n  }\n\n  getWidgetAddress = (chainKey: ChainKey): string => {\n    const address = this.tryGetWidgetAddress(chainKey);\n    if (address) return address;\n    throw new Error(`No widget address for chainKey: ${chainKey}`);\n  };\n\n  tryGetWidgetAddress = (chainKey: ChainKey): string | undefined => {\n    throw new Error('tryGetWidgetAddress not implemented');\n  };\n\n  get pools() {\n    return this.getPools();\n  }\n}\n\ntype PoolLike = {\n  chainKey: ChainKey;\n  poolId: number;\n};\n\ntype ContractLike = {\n  chainKey: ChainKey;\n  address: string;\n};\n\n// we need a data structure with references to pools\ntype PoolLink = {\n  disabled: boolean;\n  srcPool: StargateV1Pool;\n  dstPool: StargateV1Pool;\n  chainPath: ChainPath;\n};\n","import type {ProviderFactory} from '@layerzerolabs/ui-evm';\nimport {Pool__factory} from '../typechain';\nimport type {ChainPath, StargateV1Pool} from '../types';\n\nexport async function getChainPaths(\n  pool: Pick<StargateV1Pool, 'address' | 'chainKey' | 'eid'>,\n  providerFactory: ProviderFactory,\n): Promise<ChainPath[]> {\n  const contract = Pool__factory.connect(pool.address, providerFactory(pool.chainKey));\n  const [chainPathsLength, srcPoolId] = await Promise.all([\n    contract.getChainPathsLength(),\n    contract.poolId(),\n  ]);\n\n  const indexes = range(0, chainPathsLength.toNumber());\n  const promises = indexes.map((index) => getChainPathByIndex(index));\n  const paths = await Promise.all(promises);\n  return paths;\n\n  // hoisted utils\n  async function getChainPathByIndex(index: number): Promise<ChainPath> {\n    const path = await contract.chainPaths(index);\n\n    return {\n      srcEid: pool.eid,\n      dstEid: path.dstChainId,\n      srcPoolId: srcPoolId.toNumber(),\n      dstPoolId: path.dstPoolId.toNumber(),\n      ready: path.ready,\n      weight: path.weight.toNumber(),\n    };\n  }\n\n  function range(start: number, end: number): number[] {\n    return Array.from({length: end - start}, (_, i) => start + i);\n  }\n}\n"]}