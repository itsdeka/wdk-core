{"version":3,"sources":["../src/AptosBridgeV2__aptos.ts","../src/typechain/factories/ITokenBridge__factory.ts","../src/utils.ts","../src/aptos.ts","../src/AptosBridgeV2__evm.ts","../src/types/zod.ts","../src/config/mainnet.ts","../src/AptosClaimV2__aptos.ts"],"names":["isAptosChainKey","isEvmChainKey","CurrencyAmount","castCurrencyAmountUnsafe","hasAddress","MessageFee","removeDust","AddressOne","addressToBytes32","createTransaction","fullAddress"],"mappings":";;;;;;;;AACA;AAAA,EAEE;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,OACK;AAYP;AAAA,EACE;AAAA,EAIA,mBAAAA;AAAA,EACA;AAAA,EACA,iBAAAC;AAAA,EACA;AAAA,EACA;AAAA,OAEK;AACP,SAAQ,wBAA6C;;;AC7BrD,SAAS,UAAkB,aAAa;AAIxC,IAAM,OAAO;AAAA,EACX;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,YAAY;AAAA,UACV;AAAA,YACE,cAAc;AAAA,YACd,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,cAAc;AAAA,YACd,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AAAA,QACF;AAAA,QACA,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,YAAY;AAAA,UACV;AAAA,YACE,cAAc;AAAA,YACd,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,cAAc;AAAA,YACd,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AAAA,QACF;AAAA,QACA,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,YAAY;AAAA,UACV;AAAA,YACE,cAAc;AAAA,YACd,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,cAAc;AAAA,YACd,MAAM;AAAA,YACN,MAAM;AAAA,UACR;AAAA,QACF;AAAA,QACA,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,EACR;AACF;AAEO,IAAM,wBAAN,MAA4B;AAAA,EAEjC,OAAO,kBAAyC;AAC9C,WAAO,IAAI,MAAM,UAAU,IAAI;AAAA,EACjC;AAAA,EACA,OAAO,QACL,SACA,kBACc;AACd,WAAO,IAAI,SAAS,SAAS,MAAM,gBAAgB;AAAA,EACrD;AACF;AAVE,cADW,uBACK,OAAM;;;ACh2CxB;AAAA,EAEE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAEK;AAEP,SAAQ,kBAAiB;AACzB,SAAQ,mBAAkB;AAEnB,SAAS,QAAQ,OAAsB;AAC5C,SAAO,EAAC,aAAa,MAAM,SAAS,UAAU,aAAa,MAAM,SAAS,SAAQ;AACpF;AAEO,SAAS,iBACd,UACA,QACwD;AACxD,SAAO,OAAO,YAAY,QAAQ;AACpC;AAEO,SAAS,cAAc,UAAoB,QAA2B;AAC3E,QAAM,aAAa,iBAAiB,UAAU,MAAM;AACpD,MAAI;AAAY,WAAO;AACvB,QAAM,IAAI,MAAM,qCAAqC,UAAU;AACjE;AAEO,SAAS,sBAAsB,UAAoB;AACxD,MAAI,cAAc,QAAQ,GAAG;AAC3B,WAAO;AAAA,EACT;AACA,MAAI,gBAAgB,QAAQ,GAAG;AAC7B,WAAO,YAAY,GAAG,EAAE,SAAS;AAAA,EACnC;AACA,QAAM,IAAI,MAAM,yBAAyB,UAAU;AACrD;AAEO,SAAS,aAAa,OAAiB;AAC5C,SAAO,eAAe,cAAc,OAAO,UAAU;AACvD;AAEO,SAAS,YACd,UACA,UACA,QACS;AACT,MAAI,SAAS,aAAa,SAAS;AAAU,WAAO;AACpD,aAAW,UAAU,OAAO,OAAO,OAAO,MAAM,GAAG;AACjD,QACE,OAAO,KAAK,CAAC,UAAU,MAAM,OAAO,QAAQ,CAAC,KAC7C,OAAO,KAAK,CAAC,UAAU,MAAM,OAAO,QAAQ,CAAC,GAC7C;AACA,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;;;AC3DA,SAAQ,yBAAwB;AAChC,SAAuB,kBAAAC,iBAAgB,kBAAiB;AACxD,SAAgD,iBAAgB;AAEzD,SAAS,KAAK,OAAiB,UAAkB,KAAK,GAAmB;AAC9E,QAAM,SAASA,gBAAe,cAAc,OAAO,QAAQ;AAC3D,MAAI,MAAM,aAAa;AAAI,WAAO;AAClC,SACE,OAEG,SAAS,MAAM,MAAM,QAAQ,EAC7B,OAAO,MAAM,EAAE;AAEtB;AAIA,eAAsB,iBACpB,QACA,eACA,MACiD;AACjD,QAAM,WAAW,MAAM,OAAO;AAAA,IAC5B;AAAA,IACA,GAAG,mCAAmC;AAAA,EACxC;AAEA,QAAM,EAAC,QAAO,IAAI,SAAS;AAE3B,MAAI,CAAC,SAAS;AACZ,WAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ,OAAO,CAAC;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,OAAO,SAAS;AACtB,QAAM,UAAU;AAAA,IACd,OAAO,OAAO,KAAK,MAAM;AAAA,IACzB,WAAW,OAAO,KAAK,UAAU;AAAA,IACjC,OAAO,OAAO,KAAK,MAAM;AAAA,IACzB,OAAO,OAAO,KAAK,MAAM;AAAA,EAC3B;AAEA,QAAM,MAAM,MAAM,oBAAoB,MAAM;AAC5C,MAAI,SAAS,MAAM,QAAQ,SAAS,QAAQ;AAE5C,SAAO,QAAQ,GAAG;AAChB,YAAQ,SAAS,OAAO,CAAC;AACzB,aAAS,OAAO,CAAC;AAAA,EACnB;AAEA,QAAM,eAAe,QAAQ,QAAQ,QAAQ;AAE7C,QAAM,YAAY,MAAM,aAAa,QAAQ,eAAe,IAAI;AAChE,SAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ,kBAAkB,cAAc,SAAS;AAAA,EACnD;AACF;AAEO,SAAS,kBAAkB,OAAiC;AACjE,MAAI,WAAW,KAAK;AAAG,WAAO,MAAM;AACpC,QAAM,IAAI,MAAM,sBAAsB,MAAM,UAAU,EAAC,OAAO,MAAK,CAAC;AACtE;AAEA,eAAsB,aACpB,QACA,eACA,MAC6B;AAC7B,SAAO,OAAO;AAAA,IACZ;AAAA,IACA,GAAG,yCAAyC;AAAA,EAC9C;AACF;AAEA,eAAe,aACb,QACA,eACA,MACqB;AACrB,QAAM,WAAW,MAAM,aAAa,QAAQ,eAAe,IAAI;AAC/D,QAAM,EAAC,WAAU,IAAI,SAAS;AAC9B,SAAO,OAAO,UAAU;AAC1B;AAEA,eAAe,oBAAoB,QAA0C;AAC3E,QAAM,WAAW,MAAM,OAAO;AAAA,IAC5B;AAAA,IACA;AAAA,EACF;AACA,QAAM,EAAC,aAAY,IAAI,SAAS;AAChC,SAAO,OAAO,YAAY,IAAI,OAAO,GAAO;AAC9C;AAEA,eAAsB,aACpB,QACA,eACA,MACA,OACA;AACA,QAAM,WAAW,MAAM,aAAa,QAAQ,eAAe,IAAI;AAC/D,QAAM,EAAC,iBAAgB,IAAI,SAAS;AACpC,QAAM,uBAAuB,iBAAiB;AAE9C,MAAI;AACF,UAAM,WAAW,MAAM,OAAO,aAAa,sBAAsB;AAAA,MAC/D,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,KAAK;AAAA,IACP,CAAC;AACD,WAAO,OAAO,QAAQ;AAAA,EACxB,SAAS,GAAP;AACA,QAAI,kBAAkB,GAAG,GAAG,GAAG;AAC7B,aAAO,OAAO,CAAC;AAAA,IACjB;AACA,UAAM;AAAA,EACR;AACF;AAEO,SAAS,iBACd,eACA,MACA,OAC4B;AAC5B,SAAO;AAAA,IACL,UAAU,GAAG;AAAA,IACb,gBAAgB,CAAC,IAAI;AAAA,IACrB,WAAW,CAAC,KAAK;AAAA,EACnB;AACF;AAEA,eAAsB,cACpB,QACA,eACA,MACA,eACA;AACA,QAAM,WAAW,MAAM,aAAa,QAAQ,eAAe,IAAI;AAC/D,QAAM,EAAC,aAAY,IAAI,SAAS;AAChC,QAAM,mBAAmB,aAAa;AAEtC,QAAM,aAAa,MAAM,OAAO,aAAa,kBAAkB;AAAA,IAC7D,UAAU;AAAA,IACV,YAAY,GAAG;AAAA,IACf,KAAK,cAAc,SAAS;AAAA,EAC9B,CAAC;AAED,QAAM,UAAU,WAAW;AAAA,IACzB,OAAO,KAAK,UAAU,OAAO,WAAW,cAAc,EAAE,SAAS,GAAG,KAAK;AAAA,EAC3E;AACA,QAAM,QAAQ,OAAO,WAAW,MAAM;AACtC,QAAM,EAAC,YAAW,IAAI;AACtB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAGO,SAAS,kBACd,UACA,WACY;AACZ,SAAO,OAAO,QAAQ,IAAI,OAAO,SAAS;AAC5C;AAEO,SAAS,gBACd,eACA,MACA,YACA,aACA,UACA,WACA,QACA,QACA,eACA,cAC4B;AAC5B,SAAO;AAAA,IACL,UAAU,GAAG;AAAA,IACb,gBAAgB,CAAC,IAAI;AAAA,IACrB,WAAW;AAAA,MACT,WAAW,SAAS;AAAA,MACpB;AAAA,MACA,SAAS,SAAS;AAAA,MAClB,UAAU,SAAS;AAAA,MACnB,OAAO,SAAS;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;;;AHvJA,IAAM,sBAAsB;AAErB,IAAM,uBAAN,MAAgD;AAAA,EAErD,YACY,QACA,UACA,gBACA,aACV;AAJU;AACA;AACA;AACA;AAAA,EACT;AAAA,EANgB,iBAAiB;AAAA,EAQpC,MAAM,YAAY,OAAqD;AACrE,WAAO,EAAC,WAAW,EAAC;AAAA,EACtB;AAAA,EAEA,MAAM,WAAW,OAAgD;AAC/D,WAAO,EAAC,SAAS,CAAC,EAAC,MAAM,OAAM,CAAC,EAAC;AAAA,EACnC;AAAA,EAEA,MAAM,aAAa,MAAuE;AACxF,UAAM,SAAS,KAAK,eAAe,KAAK,WAAW;AACnD,UAAM,WAAW,KAAK,SAAS,KAAK,WAAW;AAC/C,UAAM,SAAS,cAAc,KAAK,aAAa,KAAK,MAAM,EAAE;AAC5D,UAAM,YAAY,cAAc,KAAK,aAAa,KAAK,MAAM,EAAE,OAAO;AACtE,WAAO,aAAa,QAAQ,UAAU,WAAW,QAAQ,OAAO,YAAe,CAAC;AAAA,EAClF;AAAA,EAEA,MAAM,cACJ,MACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF,GACqB;AACrB,UAAM,SAAS,KAAK,eAAe,KAAK,WAAW;AACnD,UAAM,WAAW,KAAK,SAAS,KAAK,WAAW;AAC/C,UAAM,YAAY,cAAc,KAAK,aAAa,KAAK,MAAM,EAAE,OAAO;AACtE,UAAM,SAAS,cAAc,KAAK,aAAa,KAAK,MAAM,EAAE;AAE5D,UAAM,gBACJ,oBAAoB,KAChB,0BAA0B,SAAS,IACnC,0BAA0B,WAAW,iBAAiB,gBAAgB;AAC5E,UAAM,cAAc;AAEpB,UAAM,YAAY,MAAM;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,WAAW,KAAK,KAAK,aAAa;AAAA,MACvC;AAAA,MACA,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,SAAS,OAA+C;AAC5D,UAAM,OAAO,QAAQ,KAAK;AAC1B,UAAM,YAAY,WAAW,MAAM,WAAW,KAAK,cAAc;AAEjE,UAAM,CAAC,aAAa,WAAW,YAAY,IAAI,MAAM,QAAQ,IAAI;AAAA,MAC/D,KAAK,eAAe,KAAK,WAAW;AAAA,MACpC,KAAK,aAAa,IAAI;AAAA,MACtB,KAAK,SAAS;AAAA,QACZ,UAAU,MAAM;AAAA,QAChB,UAAU,MAAM;AAAA,MAClB,CAAC;AAAA,IACH,CAAC;AAED,UAAM,CAAC,aAAa,aAAa,QAAQ,IAAI,MAAM,QAAQ,IAAI;AAAA,MAC7D,KAAK,cAAc,MAAM;AAAA,QACvB,iBAAiB;AAAA,QACjB;AAAA,QACA,kBAAkB,sBAAsB,KAAK,WAAW;AAAA,MAC1D,CAAC;AAAA,MACD,KAAK,cAAc,MAAM;AAAA,QACvB,iBAAiB,MAAM,gBAAgB,SAAS;AAAA,QAChD;AAAA,QACA,kBAAkB,sBAAsB,KAAK,WAAW;AAAA,MAC1D,CAAC;AAAA,MACD,KAAK,YAAY,KAAK;AAAA,IACxB,CAAC;AAED,UAAM,UAAU,YAAY,UAAU,SAAS,YAAY,SAAS;AAEpE,UAAM,cAAc,yBAAyB,WAAW,MAAM,QAAQ;AAEtE,UAAM,QAAQ,YAAY,SAAS,WAAW,EAAE,OAAO,GAAK;AAC5D,UAAM,YAAY,YAAY,SAAS,KAAK;AAC5C,UAAM,eAAe;AACrB,UAAM,YAAY,aAAa,MAAM,QAAQ;AAE7C,UAAM,QAAuB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA,iBAAiB,MAAM;AAAA,MACvB,YAAY;AAAA,MACZ;AAAA,MACA,YAAY,MAAM;AAAA,MAClB,UAAU,MAAM;AAAA,MAChB,MAAM;AAAA,MACN,YAAY,MAAM;AAAA,MAClB,UAAU,MAAM;AAAA,MAChB;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,MACA,OAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,SAAS,OAAqD;AAClE,UAAM,OAAO,QAAQ,KAAK;AAC1B,UAAM,SAAS,KAAK,eAAe,KAAK,WAAW;AACnD,UAAM,YAAY,MAAM,KAAK,aAAa,IAAI;AAC9C,UAAM,aAAa,MAAM,KAAK,cAAc,MAAM;AAAA,MAChD,iBAAiB,MAAM,gBAAgB,SAAS;AAAA,MAChD;AAAA,MACA,kBAAkB,sBAAsB,KAAK,WAAW;AAAA,IAC1D,CAAC;AACD,UAAM,SAAS,OAAO,MAAM,QAAQ;AACpC,UAAM,gBAAgB,cAAc,KAAK,aAAa,KAAK,MAAM,EAAE,OAAO;AAC1E,UAAM,iBAAiB,kBAAkB,MAAM,QAAQ;AACvD,UAAM,SAAS,cAAc,KAAK,aAAa,KAAK,MAAM,EAAE;AAC5D,UAAM,SAAS;AACf,UAAM,YAAY,WAAW,UAAU,SAAS;AAChD,UAAM,gBAAgB,MAAM,gBAAgB,QAAQ,CAAC,IACjD,0BAA0B,SAAS,IACnC,0BAA0B,WAAW,MAAM,gBAAgB,SAAS,GAAG,MAAM,UAAU;AAC3F,UAAM,eAAe,IAAI,WAAW,CAAC;AACrC,UAAM,aAAa,iBAAiB,MAAM,UAAU;AACpD,UAAM,YAAY,MAAM,UAAU,SAAS;AAE3C,UAAM,uBAAuB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,WAAO,kBAAkB,sBAAsB,EAAC,OAAM,CAAC;AAAA,EACzD;AAAA,EAEA,iBAAiB,UAAoB,UAA6B;AAChE,WACEF,iBAAgB,SAAS,QAAQ,KACjCC,eAAc,SAAS,QAAQ,KAC/B,YAAY,UAAU,UAAU,KAAK,MAAM;AAAA,EAE/C;AAAA,EAEA,MAAM,eAAe,aAAwC;AAC3D,UAAM,gBAAgB,cAAc,aAAa,KAAK,MAAM,EAAE,OAAO;AACrE,UAAM,WAAW,KAAK,YAAY,WAAW;AAC7C,WAAO,eAAe,UAAU,aAAa;AAAA,EAC/C;AAAA,EAEA,MAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,EACF,GAAgF;AAC9E,UAAM,WAAW,kBAAkB,QAAQ;AAC3C,UAAM,SAAS,cAAc,SAAS,UAAU,KAAK,MAAM,EAAE;AAC7D,UAAM,SAAS,KAAK,eAAe,SAAS,QAAQ;AACpD,UAAM,gBAAgB,cAAc,SAAS,UAAU,KAAK,MAAM,EAAE,OAAO;AAE3E,UAAM,CAAC,OAAO,GAAG,IAAI,MAAM,QAAQ,IAAI;AAAA,MACrC,iBAAiB,QAAQ,eAAe,QAAQ;AAAA,MAChD,cAAc,QAAQ,eAAe,UAAU,MAAM;AAAA,IACvD,CAAC;AACD,UAAM,WAAW,KAAK,UAAU,IAAI,KAAK;AACzC,QAAI,MAAM,SAAS;AACjB,YAAM,cAAc,KAAK,UAAU,MAAM,MAAM;AAC/C,UAAI,YAAY,SAAS,QAAQ;AAAG,eAAO;AAAA,IAC7C;AACA,WAAO;AAAA,EACT;AACF;AAIA,eAAe,eAAe,UAAwB,eAAuB;AAC3E,QAAM,WAAW,sBAAsB,QAAQ,eAAe,QAAQ;AACtE,QAAM,cAAc,MAAM,SAAS,YAAY;AAC/C,SAAO,YAAY,SAAS;AAC9B;;;AIzOA;AAAA,EACE;AAAA,EACA,4BAAAE;AAAA,EAGA,kBAAAD;AAAA,EACA;AAAA,EACA,cAAAE;AAAA,EACA,mBAAAJ;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAI;AAAA,EACA,cAAAC;AAAA,OAEK;AACP;AAAA,EACE,cAAAC;AAAA,EACA,oBAAAC;AAAA,EACA;AAAA,EACA,qBAAAC;AAAA,EACA;AAAA,EAEA;AAAA,OACK;AAKA,IAAM,qBAAN,MAA8C;AAAA,EAGnD,YACY,QACA,aACV;AAFU;AACA;AAEV,SAAK,QAAQ,IAAI,WAAW,WAAW;AAAA,EACzC;AAAA,EAPA;AAAA,EACmB,iBAAiB;AAAA,EAQpC,MAAM,YAAY,OAAqD;AACrE,WAAO,EAAC,WAAW,EAAC;AAAA,EACtB;AAAA,EAEA,MAAM,WAAW,OAAgD;AAC/D,WAAO;AAAA,MACL,SAAS,CAAC,EAAC,MAAM,OAAM,CAAC;AAAA,IAC1B;AAAA,EACF;AAAA,EAEA,MAAM,SAAS,OAA+C;AAC5D,UAAM,OAAO,QAAQ,KAAK;AAC1B,UAAM,YAAY,MAAM,KAAK,aAAa,IAAI;AAC9C,UAAM,CAAC,aAAa,aAAa,WAAW,QAAQ,IAAI,MAAM,QAAQ,IAAI;AAAA,MACxE,KAAK,cAAc,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB,sBAAsB,KAAK,WAAW;AAAA,QACxD,iBAAiB;AAAA,MACnB,CAAC;AAAA,MACD,KAAK,cAAc,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB,sBAAsB,KAAK,WAAW;AAAA,QACxD,iBAAiB,MAAM,gBAAgB,SAAS;AAAA,MAClD,CAAC;AAAA,MACD,KAAK,aAAa;AAAA,QAChB,UAAU,MAAM;AAAA,QAChB,YAAY,MAAM;AAAA,MACpB,CAAC;AAAA,MACD,KAAK,YAAY,KAAK;AAAA,IACxB,CAAC;AAED,UAAM,YAAYH,YAAW,MAAM,WAAW,KAAK,cAAc;AACjE,UAAM,eAAe,aAAa,MAAM,QAAQ;AAChD,UAAM,YAAYH,0BAAyB,WAAW,MAAM,QAAQ;AACpE,UAAM,eAAe;AAErB,UAAM,QAAuB;AAAA,MAC3B;AAAA,MACA,YAAY,MAAM;AAAA,MAClB;AAAA,MACA,YAAY,MAAM;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN,iBAAiB,MAAM;AAAA,MACvB,UAAU,MAAM;AAAA,MAChB,UAAU,MAAM;AAAA,MAChB,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,MACA,SAAS;AAAA,IACX;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,QAAQ,OAAqD;AACjE,UAAM,SAAS,cAAc,MAAM,aAAa,KAAK,MAAM,EAAE;AAC7D,WAAO,KAAK,MAAM,SAAS,MAAM,QAAQ,EAAE,QAAQ,MAAM,WAAW,OAAO,OAAO;AAAA,EACpF;AAAA,EAEA,MAAM,aAAa,OAA0E;AAC3F,QAAI,CAACC,YAAW,MAAM,QAAQ;AAAG,aAAO,aAAa,MAAM,QAAQ;AACnE,UAAM,UAAU,cAAc,MAAM,SAAS,UAAU,KAAK,MAAM,EAAE,OAAO;AAC3E,WAAO,KAAK,MAAM,SAAS,MAAM,QAAQ,EAAE,UAAU,MAAM,YAAY,OAAO;AAAA,EAChF;AAAA,EAEA,MAAM,SAAS,OAAqD;AAClE,UAAM,OAAO,QAAQ,KAAK;AAC1B,UAAM,YAAY,MAAM,KAAK,aAAa,IAAI;AAC9C,UAAM,aAAa,MAAM,KAAK,cAAc,MAAM;AAAA,MAChD,kBAAkB,sBAAsB,KAAK,WAAW;AAAA,MACxD,iBAAiB,MAAM,gBAAgB,SAAS;AAAA,MAChD;AAAA,IACF,CAAC;AACD,UAAM,YAAY,MAAM,UAAU,SAAS;AAC3C,UAAM,aAAaI,kBAAiB,MAAM,UAAU;AACpD,UAAM,WAAW,KAAK,kBAAkB,KAAK,WAAW;AACxD,UAAM,WAAW,OAAO,SAAS;AACjC,UAAM,gBAAgB;AAAA,MACpB,MAAM,gBAAgB,QAAQ,CAAC,IAC3B,cAAc,MAAM,QAAQ,IAC5B,cAAc,MAAM;AAAA,QAClB;AAAA,QACA,kBAAkB,MAAM;AAAA,QACxB,iBAAiB,MAAM;AAAA,MACzB,CAAC;AAAA,IACP;AACA,UAAM,QAAQJ,YAAW,MAAM,QAAQ,IACnC,WAAW,UAAU,SAAS,IAC9B,WAAW,UAAU,IAAI,MAAM,SAAS,EAAE,SAAS;AAEvD,UAAM,uBAAuBA,YAAW,MAAM,QAAQ,IAClD,SAAS,oBAAoB;AAAA,MAC3B,MAAM,SAAS;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,QACE,eAAe,MAAM;AAAA,QACrB,mBAAmB;AAAA,MACrB;AAAA,MACA;AAAA,MACA,EAAC,MAAK;AAAA,IACR,IACA,SAAS,oBAAoB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,QACE,eAAe,MAAM;AAAA,QACrB,mBAAmB;AAAA,MACrB;AAAA,MACA;AAAA,MACA,EAAC,MAAK;AAAA,IACR;AAEJ,WAAOK,mBAAkB,sBAAsB;AAAA,MAC7C,UAAU,KAAK,YAAY,KAAK,WAAW;AAAA,MAC3C,UAAU,KAAK;AAAA,IACjB,CAAC;AAAA,EACH;AAAA,EAEA,iBAAiB,UAAoB,UAA6B;AAChE,WACER,eAAc,SAAS,QAAQ,KAC/BD,iBAAgB,SAAS,QAAQ,KACjC,YAAY,UAAU,UAAU,KAAK,MAAM;AAAA,EAE/C;AAAA,EAEA,MAAM,aAAa,MAAmE;AACpF,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,cACJ,MACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF,GACqB;AACrB,UAAM,aAAa,EAAC,eAAeO,aAAY,mBAAmBA,YAAU;AAC5E,UAAM,WAAW,KAAK,kBAAkB,KAAK,WAAW;AACxD,UAAM,YAAY,kBAAkB,KAAK,WAAW;AAEpD,UAAM,WAAW,OAAO,SAAS;AACjC,UAAM,gBAAgB;AAAA,MACpB,kBAAkB,IACd,cAAc,MAAM,QAAQ,IAC5B,cAAc,MAAM;AAAA,QAClB;AAAA,QACA,iBAAiBL,gBAAe,WAAW,WAAW,eAAe;AAAA,QACrE;AAAA,MACF,CAAC;AAAA,IACP;AAEA,UAAM,EAAC,WAAW,OAAM,IAAI,MAAM,SAAS,aAAa,YAAY,aAAa;AACjF,WAAOG,YAAW,KAAK,KAAK,aAAa;AAAA,MACvC,WAAW,UAAU,SAAS;AAAA,MAC9B,QAAQ,OAAO,SAAS;AAAA,IAC1B,CAAC;AAAA,EACH;AAAA,EAEA,kBAAkB,UAAoB;AACpC,UAAM,WAAW,KAAK,YAAY,QAAQ;AAC1C,UAAM,aAAa,cAAc,UAAU,KAAK,MAAM;AACtD,UAAM,WAAW,sBAAsB,QAAQ,WAAW,OAAO,SAAS,QAAQ;AAClF,WAAO;AAAA,EACT;AACF;;;AC7NA,OAAO,OAAO;AAEd,SAAQ,sBAAqB;AAG7B,IAAM,6BAA6B,EAAE,OAAO;AAAA,EAC1C,KAAK,EAAE,OAAO;AAAA,EACd,QAAQ,EAAE,OAAO;AAAA,IACf,SAAS,EAAE,OAAO;AAAA,EACpB,CAAC;AACH,CAAC;AAED,IAAM,oCAAoC,EAAE,OAAO;AAAA,EACjD,aAAa,EAAE,OAAO,0BAA0B;AAAA,EAChD,QAAQ,EAAE;AAAA,IACR,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOP,CAAC;AAAA,IACD,EAAE,MAAM,cAAc;AAAA,EACxB;AACF,CAAC;AAMM,SAAS,wBAAwB,OAAuD;AAC7F,QAAM,SAAS,kCAAkC,MAAM,KAAK;AAE5D,SAAO;AACT;;;ACjCO,IAAM,UAAU,wBAAwB;AAAA,EAC7C,aAAa;AAAA,IACX,UAAU;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR,KAAK;AAAA,MACL,QAAQ,EAAC,SAAS,6CAA4C;AAAA,IAChE;AAAA,IACA,WAAW;AAAA,MACT,KAAK;AAAA,MACL,QAAQ,EAAC,SAAS,6CAA4C;AAAA,IAChE;AAAA,IACA,KAAK;AAAA,MACH,KAAK;AAAA,MACL,QAAQ,EAAC,SAAS,6CAA4C;AAAA,IAChE;AAAA,IACA,UAAU;AAAA,MACR,KAAK;AAAA,MACL,QAAQ,EAAC,SAAS,6CAA4C;AAAA,IAChE;AAAA,IACA,SAAS;AAAA,MACP,KAAK;AAAA,MACL,QAAQ,EAAC,SAAS,6CAA4C;AAAA,IAChE;AAAA,IACA,OAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,MAAM;AAAA,MACJ;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,MACJ;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,MACJ;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,MACJ;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,MACJ;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;ACtND;AAAA,EAGE,eAAAK;AAAA,EACA,qBAAAD;AAAA,OACK;AAOP;AAAA,EAGE,kBAAAP;AAAA,EACA,mBAAAF;AAAA,OAEK;AAOA,IAAM,sBAAN,MAAuD;AAAA,EAC5D,YACY,QACA,UACA,WACV;AAHU;AACA;AACA;AAAA,EACT;AAAA,EAEH,SAAS,OAA0B;AACjC,QAAI,CAACA,iBAAgB,MAAM,QAAQ;AAAG,aAAO;AAC7C,eAAW,SAAS,OAAO,OAAO,KAAK,OAAO,MAAM,EAAE,KAAK,GAAG;AAC5D,UAAI,MAAM,OAAO,KAAK;AAAG,eAAO;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,aAAa,OAAuD;AACxE,UAAM,SAAS,KAAK,UAAU,MAAM,MAAM,QAAQ;AAClD,UAAM,gBAAgB,cAAc,MAAM,MAAM,UAAU,KAAK,MAAM,EAAE,OAAO;AAC9E,UAAM,eAAe,kBAAkB,MAAM,KAAK;AAClD,UAAM,YAAY,MAAM,aAAa,QAAQ,eAAe,cAAc,MAAM,KAAK;AACrF,WAAOE,gBAAe,WAAW,MAAM,OAAO,SAAS;AAAA,EACzD;AAAA,EAEA,MAAM,MAAM,OAAkD;AAC5D,UAAM,SAAS,KAAK,UAAU,MAAM,MAAM,QAAQ;AAClD,UAAM,gBAAgB,cAAc,MAAM,MAAM,UAAU,KAAK,MAAM,EAAE,OAAO;AAC9E,UAAM,eAAe,kBAAkB,MAAM,KAAK;AAClD,UAAM,eAAeQ,aAAY,MAAM,KAAK,EAAE,IAAI;AAClD,UAAM,uBAAuB,iBAAiB,eAAe,cAAc,YAAY;AACvF,WAAOD,mBAAkB,sBAAsB,EAAC,OAAM,CAAC;AAAA,EACzD;AACF","sourcesContent":["import type {BaseProvider} from '@ethersproject/providers';\nimport {\n  type Accounts,\n  buildAirdropAdapterParams,\n  buildDefaultAdapterParams,\n  createTransaction,\n  type GetAptosClientFunction,\n  getMessageFee,\n  getMinDstGas,\n} from '@layerzerolabs/ui-aptos';\nimport type {\n  BridgeApi,\n  BridgeOptions,\n  GetDurationInput,\n  GetDurationResult,\n  GetOptionsInput,\n  GetRouteInput,\n  GetRouteResult,\n  ResolvedRoute,\n  TransferInput,\n} from '@layerzerolabs/ui-bridge-sdk/v2';\nimport {\n  castCurrencyAmountUnsafe,\n  type ChainKey,\n  type Currency,\n  type CurrencyAmount,\n  isAptosChainKey,\n  isCoin,\n  isEvmChainKey,\n  MessageFee,\n  removeDust,\n  type Transaction,\n} from '@layerzerolabs/ui-core';\nimport {addressToBytes32, type ProviderFactory} from '@layerzerolabs/ui-evm';\nimport {ITokenBridge__factory} from './typechain/factories/ITokenBridge__factory';\nimport type {AptosBridgeConfig} from './types/AptosBridgeConfig';\nimport {getDeployment, getDstAddressForQuote, getMaxAmount, getPath, isValidPair} from './utils';\nimport {getBridgeCoinType, sendCoinPayload, getLimitedAmount, getRemoteCoin, toLD} from './aptos';\n\nenum PacketType {\n  RECEIVE = 0,\n  SEND = 1,\n}\n\nconst SEND_PAYLOAD_LENGTH = 74;\n\nexport class AptosBridgeV2__aptos implements BridgeApi {\n  protected readonly sharedDecimals = 6;\n  constructor(\n    protected config: AptosBridgeConfig,\n    protected accounts: AccountsConfig,\n    protected getAptosClient: GetAptosClientFunction,\n    protected getProvider: ProviderFactory,\n  ) {}\n\n  async getDuration(input: GetDurationInput): Promise<GetDurationResult> {\n    return {estimated: 0};\n  }\n\n  async getOptions(input: GetOptionsInput): Promise<BridgeOptions> {\n    return {options: [{mode: 'taxi'}]};\n  }\n\n  async getMinDstGas(path: {srcChainKey: ChainKey; dstChainKey: ChainKey}): Promise<bigint> {\n    const client = this.getAptosClient(path.srcChainKey);\n    const accounts = this.accounts[path.srcChainKey];\n    const dstEid = getDeployment(path.dstChainKey, this.config).eid;\n    const uaAddress = getDeployment(path.srcChainKey, this.config).bridge.address;\n    return getMinDstGas(client, accounts, uaAddress, dstEid, BigInt(PacketType.SEND));\n  }\n\n  async getMessageFee(\n    path: {srcChainKey: ChainKey; dstChainKey: ChainKey},\n    {\n      dstNativeAmount,\n      minDstGas,\n      dstNativeAddress,\n    }: {dstNativeAmount: bigint; minDstGas: bigint; dstNativeAddress: string},\n  ): Promise<MessageFee> {\n    const client = this.getAptosClient(path.srcChainKey);\n    const accounts = this.accounts[path.srcChainKey];\n    const uaAddress = getDeployment(path.srcChainKey, this.config).bridge.address;\n    const dstEid = getDeployment(path.dstChainKey, this.config).eid;\n\n    const adapterParams =\n      dstNativeAmount === 0n\n        ? buildDefaultAdapterParams(minDstGas)\n        : buildAirdropAdapterParams(minDstGas, dstNativeAmount, dstNativeAddress);\n    const payloadSize = SEND_PAYLOAD_LENGTH;\n\n    const nativeFee = await getMessageFee(\n      client,\n      accounts,\n      uaAddress,\n      dstEid,\n      adapterParams,\n      payloadSize,\n    );\n\n    return MessageFee.from(path.srcChainKey, {\n      nativeFee,\n      zroFee: 0n,\n    });\n  }\n\n  async getRoute(input: GetRouteInput): Promise<GetRouteResult> {\n    const path = getPath(input);\n    const srcAmount = removeDust(input.srcAmount, this.sharedDecimals);\n\n    const [bridgeFeeBP, minDstGas, srcAmountMax] = await Promise.all([\n      this.getBridgeFeeBP(path.dstChainKey),\n      this.getMinDstGas(path),\n      this.getLimit({\n        srcToken: input.srcToken,\n        dstToken: input.dstToken,\n      }),\n    ]);\n\n    const [messageFee0, messageFee1, duration] = await Promise.all([\n      this.getMessageFee(path, {\n        dstNativeAmount: 0n,\n        minDstGas,\n        dstNativeAddress: getDstAddressForQuote(path.dstChainKey),\n      }),\n      this.getMessageFee(path, {\n        dstNativeAmount: input.dstNativeAmount.toBigInt(),\n        minDstGas,\n        dstNativeAddress: getDstAddressForQuote(path.dstChainKey),\n      }),\n      this.getDuration(input),\n    ]);\n\n    const gasCost = messageFee1.nativeFee.subtract(messageFee0.nativeFee);\n\n    const srcAmountRD = castCurrencyAmountUnsafe(srcAmount, input.dstToken);\n    // fee is collected on remote\n    const feeRD = srcAmountRD.multiply(bridgeFeeBP).divide(10000);\n    const dstAmount = srcAmountRD.subtract(feeRD);\n    const dstAmountMin = dstAmount;\n    const allowance = getMaxAmount(input.srcToken);\n\n    const route: ResolvedRoute = {\n      srcAmount,\n      dstAmount,\n      dstAmountMin,\n      dstNativeAmount: input.dstNativeAmount,\n      messageFee: messageFee0,\n      allowance,\n      dstAddress: input.dstAddress,\n      dstToken: input.dstToken,\n      mode: 'taxi',\n      srcAddress: input.srcAddress,\n      srcToken: input.srcToken,\n      duration,\n      gasCost,\n      option: {\n        mode: 'taxi',\n      },\n      srcAmountMax,\n      error: undefined,\n    };\n\n    return route;\n  }\n\n  async transfer(input: TransferInput): Promise<Transaction<unknown>> {\n    const path = getPath(input);\n    const client = this.getAptosClient(path.srcChainKey);\n    const minDstGas = await this.getMinDstGas(path);\n    const messageFee = await this.getMessageFee(path, {\n      dstNativeAmount: input.dstNativeAmount.toBigInt(),\n      minDstGas,\n      dstNativeAddress: getDstAddressForQuote(path.dstChainKey),\n    });\n    const unwrap = isCoin(input.dstToken);\n    const bridgeAddress = getDeployment(path.srcChainKey, this.config).bridge.address;\n    const bridgeCoinType = getBridgeCoinType(input.srcToken);\n    const dstEid = getDeployment(path.dstChainKey, this.config).eid;\n    const zroFee = 0;\n    const nativeFee = messageFee.nativeFee.toBigInt();\n    const adapterParams = input.dstNativeAmount.equalTo(0)\n      ? buildDefaultAdapterParams(minDstGas)\n      : buildAirdropAdapterParams(minDstGas, input.dstNativeAmount.toBigInt(), input.dstAddress);\n    const msgLibParams = new Uint8Array(0);\n    const dstAddress = addressToBytes32(input.dstAddress);\n    const srcAmount = input.srcAmount.toBigInt();\n\n    const entryFunctionPayload = sendCoinPayload(\n      bridgeAddress,\n      bridgeCoinType,\n      dstEid,\n      dstAddress,\n      srcAmount,\n      nativeFee,\n      zroFee,\n      unwrap,\n      adapterParams,\n      msgLibParams,\n    );\n    return createTransaction(entryFunctionPayload, {client});\n  }\n\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    return (\n      isAptosChainKey(srcToken.chainKey) &&\n      isEvmChainKey(dstToken.chainKey) &&\n      isValidPair(srcToken, dstToken, this.config)\n    );\n  }\n\n  async getBridgeFeeBP(dstChainKey: ChainKey): Promise<number> {\n    const bridgeAddress = getDeployment(dstChainKey, this.config).bridge.address;\n    const provider = this.getProvider(dstChainKey);\n    return getBridgeFeeBP(provider, bridgeAddress);\n  }\n\n  async getLimit({\n    srcToken,\n    dstToken,\n  }: {srcToken: Currency; dstToken: Currency}): Promise<CurrencyAmount<Currency>> {\n    const coinType = getBridgeCoinType(srcToken);\n    const dstEid = getDeployment(dstToken.chainKey, this.config).eid;\n    const client = this.getAptosClient(srcToken.chainKey);\n    const bridgeAddress = getDeployment(srcToken.chainKey, this.config).bridge.address;\n\n    const [limit, tvl] = await Promise.all([\n      getLimitedAmount(client, bridgeAddress, coinType),\n      getRemoteCoin(client, bridgeAddress, coinType, dstEid),\n    ]);\n    const tvlLimit = toLD(srcToken, tvl.tvlSD);\n    if (limit.limited) {\n      const windowLimit = toLD(srcToken, limit.amount);\n      if (windowLimit.lessThan(tvlLimit)) return windowLimit;\n    }\n    return tvlLimit;\n  }\n}\n\ntype AccountsConfig = Record<ChainKey, Accounts>;\n\nasync function getBridgeFeeBP(provider: BaseProvider, bridgeAddress: string) {\n  const contract = ITokenBridge__factory.connect(bridgeAddress, provider);\n  const bridgeFeeBp = await contract.bridgeFeeBP();\n  return bridgeFeeBp.toNumber();\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport type { Provider } from \"@ethersproject/providers\";\nimport type { ITokenBridge, ITokenBridgeInterface } from \"../ITokenBridge\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_layerZeroEndpoint\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_aptosChainId\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"enabled\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"unlockTime\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"EnableEmergencyWithdraw\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_reason\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"MessageFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Receive\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"RegisterToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"_payloadHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RetryMessageSuccess\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"to\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Send\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"aptosChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"SetAptosChainId\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"bridgeFeeBP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SetBridgeBP\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetGlobalPause\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"localChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"SetLocalChainId\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_type\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_minDstGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"SetMinDstGas\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetPrecrime\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetTokenPause\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"SetTrustedRemoteAddress\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"useCustomAdapterParams\",\n        type: \"bool\",\n      },\n    ],\n    name: \"SetUseCustomAdapterParams\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"weth\",\n        type: \"address\",\n      },\n    ],\n    name: \"SetWETH\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WithdrawFee\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WithdrawTVL\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BP_DENOMINATOR\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"SHARED_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"accruedFeeLD\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"aptosChainId\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"bridgeFeeBP\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"emergencyWithdrawEnabled\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"emergencyWithdrawTime\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"enabled\",\n        type: \"bool\",\n      },\n    ],\n    name: \"enableEmergencyWithdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"failedMessages\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"forceResumeReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getConfig\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"getTrustedRemoteAddress\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"globalPaused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"isTrustedRemote\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"ld2sdRates\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lzEndpoint\",\n    outputs: [\n      {\n        internalType: \"contract ILayerZeroEndpoint\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"lzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"minDstGasLookup\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"nonblockingLzReceive\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"pausedTokens\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"precrime\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"refundAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zroPaymentAddress\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct LzLib.CallParams\",\n        name: \"_callParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"quoteForSend\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nativeFee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"zroFee\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"registerToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_srcAddress\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_nonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_payload\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"retryMessage\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_toAddress\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"refundAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zroPaymentAddress\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct LzLib.CallParams\",\n        name: \"_callParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"sendETHToAptos\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_toAddress\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"refundAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"zroPaymentAddress\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct LzLib.CallParams\",\n        name: \"_callParams\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_adapterParams\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"sendToAptos\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_aptosChainId\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setAptosChainId\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_bridgeFeeBP\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setBridgeFeeBP\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_chainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_configType\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_config\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setConfig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setGlobalPause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_dstChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"_packetType\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_minGas\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMinDstGas\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_precrime\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrecrime\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setReceiveVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_version\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"setSendVersion\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_paused\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setTokenPause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_srcChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_path\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"_remoteChainId\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_remoteAddress\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"setTrustedRemoteAddress\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"_useCustomAdapterParams\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setUseCustomAdapterParams\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_weth\",\n        type: \"address\",\n      },\n    ],\n    name: \"setWETH\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"supportedTokens\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"trustedRemoteLookup\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"tvlSDs\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"useCustomAdapterParams\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"weth\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawEmergency\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountLD\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawFee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"_amountSD\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"withdrawTVL\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n] as const;\n\nexport class ITokenBridge__factory {\n  static readonly abi = _abi;\n  static createInterface(): ITokenBridgeInterface {\n    return new utils.Interface(_abi) as ITokenBridgeInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ITokenBridge {\n    return new Contract(address, _abi, signerOrProvider) as ITokenBridge;\n  }\n}\n","import type {GetRouteInput} from '@layerzerolabs/ui-bridge-sdk/v2';\nimport {\n  type Currency,\n  CurrencyAmount,\n  isAptosChainKey,\n  isEvmChainKey,\n  MaxUint256,\n  type ChainKey,\n} from '@layerzerolabs/ui-core';\nimport type {AptosBridgeConfig} from './types/AptosBridgeConfig';\nimport {AddressOne} from '@layerzerolabs/ui-evm';\nimport {fullAddress} from '@layerzerolabs/ui-aptos';\n\nexport function getPath(input: GetRouteInput) {\n  return {srcChainKey: input.srcToken.chainKey, dstChainKey: input.dstToken.chainKey};\n}\n\nexport function tryGetDeployment(\n  chainKey: ChainKey,\n  config: AptosBridgeConfig,\n): AptosBridgeConfig['deployments'][ChainKey] | undefined {\n  return config.deployments[chainKey];\n}\n\nexport function getDeployment(chainKey: ChainKey, config: AptosBridgeConfig) {\n  const deployment = tryGetDeployment(chainKey, config);\n  if (deployment) return deployment;\n  throw new Error(`Deployment not found for chainKey ${chainKey}`);\n}\n\nexport function getDstAddressForQuote(chainKey: ChainKey) {\n  if (isEvmChainKey(chainKey)) {\n    return AddressOne;\n  }\n  if (isAptosChainKey(chainKey)) {\n    return fullAddress('0').toString();\n  }\n  throw new Error(`Unsupported chainKey: ${chainKey}`);\n}\n\nexport function getMaxAmount(token: Currency) {\n  return CurrencyAmount.fromRawAmount(token, MaxUint256);\n}\n\nexport function isValidPair(\n  srcToken: Currency,\n  dstToken: Currency,\n  config: AptosBridgeConfig,\n): boolean {\n  if (srcToken.chainKey === dstToken.chainKey) return false;\n  for (const tokens of Object.values(config.tokens)) {\n    if (\n      tokens.some((token) => token.equals(srcToken)) &&\n      tokens.some((token) => token.equals(dstToken))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n","import {isErrorOfApiError} from '@layerzerolabs/ui-aptos';\nimport {type Currency, CurrencyAmount, hasAddress} from '@layerzerolabs/ui-core';\nimport {type AptosClient, type BCS, type Types, HexString} from 'aptos';\n\nexport function toLD(token: Currency, amountSD: bigint, SD = 6): CurrencyAmount {\n  const amount = CurrencyAmount.fromRawAmount(token, amountSD);\n  if (token.decimals === SD) return amount;\n  return (\n    amount\n      //\n      .multiply(10 ** token.decimals)\n      .divide(10 ** SD)\n  );\n}\n\ntype BridgeCoinType = string;\n\nexport async function getLimitedAmount(\n  client: AptosClient,\n  bridgeAddress: string, // bridge\n  coin: BridgeCoinType,\n): Promise<{limited: boolean; amount: BCS.Uint64}> {\n  const resource = await client.getAccountResource(\n    bridgeAddress,\n    `${bridgeAddress}::limiter::Limiter<${coin}>`,\n  );\n\n  const {enabled} = resource.data as {enabled: boolean};\n\n  if (!enabled) {\n    return {\n      limited: false,\n      amount: BigInt(0),\n    };\n  }\n\n  const data = resource.data as {[key: string]: string};\n  const limiter = {\n    t0Sec: BigInt(data.t0_sec),\n    windowSec: BigInt(data.window_sec),\n    sumSD: BigInt(data.sum_sd),\n    capSD: BigInt(data.cap_sd),\n  };\n\n  const now = await getCurrentTimestamp(client);\n  let count = (now - limiter.t0Sec) / limiter.windowSec;\n\n  while (count > 0) {\n    limiter.sumSD /= BigInt(2);\n    count -= BigInt(1);\n  }\n\n  const limitedAmtSD = limiter.capSD - limiter.sumSD;\n\n  const ld2sdRate = await getLd2SdRate(client, bridgeAddress, coin);\n  return {\n    limited: true,\n    amount: convertAmountToLD(limitedAmtSD, ld2sdRate),\n  };\n}\n\nexport function getBridgeCoinType(token: Currency): BridgeCoinType {\n  if (hasAddress(token)) return token.address;\n  throw new Error(`Unsupported token: ${token.symbol}`, {cause: token});\n}\n\nexport async function getCoinStore(\n  client: AptosClient,\n  bridgeAddress: string, // bridge\n  coin: BridgeCoinType,\n): Promise<Types.MoveResource> {\n  return client.getAccountResource(\n    bridgeAddress,\n    `${bridgeAddress}::coin_bridge::CoinStore<${coin}>`,\n  );\n}\n\nasync function getLd2SdRate(\n  client: AptosClient,\n  bridgeAddress: string,\n  coin: BridgeCoinType,\n): Promise<BCS.Uint64> {\n  const resource = await getCoinStore(client, bridgeAddress, coin);\n  const {ld2sd_rate} = resource.data as {ld2sd_rate: string};\n  return BigInt(ld2sd_rate);\n}\n\nasync function getCurrentTimestamp(client: AptosClient): Promise<BCS.Uint64> {\n  const resource = await client.getAccountResource(\n    '0x1',\n    '0x1::timestamp::CurrentTimeMicroseconds',\n  );\n  const {microseconds} = resource.data as {microseconds: string};\n  return BigInt(microseconds) / BigInt(1000000);\n}\n\nexport async function getUnclaimed(\n  client: AptosClient,\n  bridgeAddress: string,\n  coin: BridgeCoinType,\n  owner: string,\n) {\n  const resource = await getCoinStore(client, bridgeAddress, coin);\n  const {claimable_amt_ld} = resource.data as {claimable_amt_ld: {handle: string}};\n  const claimableAmtLDHandle = claimable_amt_ld.handle;\n\n  try {\n    const response = await client.getTableItem(claimableAmtLDHandle, {\n      key_type: 'address',\n      value_type: 'u64',\n      key: owner,\n    });\n    return BigInt(response);\n  } catch (e) {\n    if (isErrorOfApiError(e, 404)) {\n      return BigInt(0);\n    }\n    throw e;\n  }\n}\n\nexport function claimCoinPayload(\n  bridgeAddress: string,\n  coin: BridgeCoinType,\n  owner: string,\n): Types.EntryFunctionPayload {\n  return {\n    function: `${bridgeAddress}::coin_bridge::claim`,\n    type_arguments: [coin],\n    arguments: [owner],\n  };\n}\n\nexport async function getRemoteCoin(\n  client: AptosClient,\n  bridgeAddress: string, // bridge\n  coin: BridgeCoinType,\n  remoteChainId: BCS.Uint16,\n) {\n  const resource = await getCoinStore(client, bridgeAddress, coin);\n  const {remote_coins} = resource.data as {remote_coins: {handle: string}};\n  const remoteCoinHandle = remote_coins.handle;\n\n  const remoteCoin = await client.getTableItem(remoteCoinHandle, {\n    key_type: 'u64',\n    value_type: `${bridgeAddress}::coin_bridge::RemoteCoin`,\n    key: remoteChainId.toString(),\n  });\n\n  const address = Uint8Array.from(\n    Buffer.from(HexString.ensure(remoteCoin.remote_address).noPrefix(), 'hex'),\n  );\n  const tvlSD = BigInt(remoteCoin.tvl_sd);\n  const {unwrappable} = remoteCoin;\n  return {\n    address,\n    tvlSD,\n    unwrappable,\n  };\n}\n\n// https://github.com/LayerZero-Labs/monorepo/blob/c2f65256dcaa114044371655d2e291e3ca2357e2/packages/layerzero-v1/aptos/sdk/src/modules/apps/bridge.ts#L426\nexport function convertAmountToLD(\n  amountSD: BCS.Uint64 | BCS.Uint32,\n  ld2sdRate: BCS.Uint64 | BCS.Uint32,\n): BCS.Uint64 {\n  return BigInt(amountSD) * BigInt(ld2sdRate);\n}\n\nexport function sendCoinPayload(\n  bridgeAddress: string,\n  coin: BridgeCoinType,\n  dstChainId: BCS.Uint16,\n  dstReceiver: BCS.Bytes,\n  amountLD: BCS.Uint64 | BCS.Uint32,\n  nativeFee: BCS.Uint64 | BCS.Uint32,\n  zroFee: BCS.Uint64 | BCS.Uint32,\n  unwrap: boolean,\n  adapterParams: BCS.Bytes,\n  msgLibParams: BCS.Bytes,\n): Types.EntryFunctionPayload {\n  return {\n    function: `${bridgeAddress}::coin_bridge::send_coin_from`,\n    type_arguments: [coin],\n    arguments: [\n      dstChainId.toString(),\n      dstReceiver,\n      amountLD.toString(),\n      nativeFee.toString(),\n      zroFee.toString(),\n      unwrap,\n      adapterParams,\n      msgLibParams,\n    ],\n  };\n}\n","import type {\n  BridgeApi,\n  BridgeOptions,\n  GetDurationInput,\n  GetDurationResult,\n  GetOptionsInput,\n  GetRouteInput,\n  GetRouteResult,\n  ResolvedRoute,\n  TransferInput,\n} from '@layerzerolabs/ui-bridge-sdk/v2';\nimport {\n  AdapterParams,\n  castCurrencyAmountUnsafe,\n  type ChainKey,\n  type Currency,\n  CurrencyAmount,\n  getNativeCurrency,\n  hasAddress,\n  isAptosChainKey,\n  isEvmChainKey,\n  MessageFee,\n  removeDust,\n  type Transaction,\n} from '@layerzerolabs/ui-core';\nimport {\n  AddressOne,\n  addressToBytes32,\n  AddressZero,\n  createTransaction,\n  ERC20__api,\n  type ProviderFactory,\n  serializeAdapterParams,\n} from '@layerzerolabs/ui-evm';\nimport {ITokenBridge__factory} from './typechain/factories/ITokenBridge__factory';\nimport type {AptosBridgeConfig} from './types/AptosBridgeConfig';\nimport {getDeployment, getDstAddressForQuote, getMaxAmount, getPath, isValidPair} from './utils';\n\nexport class AptosBridgeV2__evm implements BridgeApi {\n  erc20: ERC20__api;\n  protected readonly sharedDecimals = 6;\n  constructor(\n    protected config: AptosBridgeConfig,\n    protected getProvider: ProviderFactory,\n  ) {\n    this.erc20 = new ERC20__api(getProvider);\n  }\n\n  async getDuration(input: GetDurationInput): Promise<GetDurationResult> {\n    return {estimated: 0};\n  }\n\n  async getOptions(input: GetOptionsInput): Promise<BridgeOptions> {\n    return {\n      options: [{mode: 'taxi'}],\n    };\n  }\n\n  async getRoute(input: GetRouteInput): Promise<GetRouteResult> {\n    const path = getPath(input);\n    const minDstGas = await this.getMinDstGas(path);\n    const [messageFee0, messageFee1, allowance, duration] = await Promise.all([\n      this.getMessageFee(path, {\n        minDstGas,\n        dstNativeAddress: getDstAddressForQuote(path.dstChainKey),\n        dstNativeAmount: 0n,\n      }),\n      this.getMessageFee(path, {\n        minDstGas,\n        dstNativeAddress: getDstAddressForQuote(path.dstChainKey),\n        dstNativeAmount: input.dstNativeAmount.toBigInt(),\n      }),\n      this.getAllowance({\n        srcToken: input.srcToken,\n        srcAddress: input.srcAddress,\n      }),\n      this.getDuration(input),\n    ]);\n\n    const srcAmount = removeDust(input.srcAmount, this.sharedDecimals);\n    const srcAmountMax = getMaxAmount(input.srcToken);\n    const dstAmount = castCurrencyAmountUnsafe(srcAmount, input.dstToken);\n    const dstAmountMin = dstAmount;\n\n    const route: ResolvedRoute = {\n      allowance,\n      srcAddress: input.srcAddress,\n      srcAmount,\n      dstAddress: input.dstAddress,\n      dstAmount,\n      dstAmountMin,\n      duration,\n      mode: 'taxi',\n      dstNativeAmount: input.dstNativeAmount,\n      srcToken: input.srcToken,\n      dstToken: input.dstToken,\n      messageFee: messageFee0,\n      error: undefined,\n      option: {\n        mode: 'taxi',\n      },\n      srcAmountMax,\n      gasCost: undefined!,\n    };\n\n    return route;\n  }\n\n  async approve(input: TransferInput): Promise<Transaction<unknown>> {\n    const bridge = getDeployment(input.srcChainKey, this.config).bridge;\n    return this.erc20.forToken(input.srcToken).approve(input.srcAmount, bridge.address);\n  }\n\n  async getAllowance(input: {srcToken: Currency; srcAddress: string}): Promise<CurrencyAmount> {\n    if (!hasAddress(input.srcToken)) return getMaxAmount(input.srcToken);\n    const spender = getDeployment(input.srcToken.chainKey, this.config).bridge.address;\n    return this.erc20.forToken(input.srcToken).allowance(input.srcAddress, spender);\n  }\n\n  async transfer(input: TransferInput): Promise<Transaction<unknown>> {\n    const path = getPath(input);\n    const minDstGas = await this.getMinDstGas(path);\n    const messageFee = await this.getMessageFee(path, {\n      dstNativeAddress: getDstAddressForQuote(path.dstChainKey),\n      dstNativeAmount: input.dstNativeAmount.toBigInt(),\n      minDstGas,\n    });\n    const srcAmount = input.srcAmount.toBigInt();\n    const dstAddress = addressToBytes32(input.dstAddress);\n    const contract = this.getBridgeContract(path.srcChainKey);\n    const extraGas = Number(minDstGas);\n    const adapterParams = serializeAdapterParams(\n      input.dstNativeAmount.equalTo(0)\n        ? AdapterParams.forV1(extraGas)\n        : AdapterParams.forV2({\n            extraGas,\n            dstNativeAddress: input.dstAddress,\n            dstNativeAmount: input.dstNativeAmount,\n          }),\n    );\n    const value = hasAddress(input.srcToken)\n      ? messageFee.nativeFee.toBigInt()\n      : messageFee.nativeFee.add(input.srcAmount).toBigInt();\n\n    const populatedTransaction = hasAddress(input.srcToken)\n      ? contract.populateTransaction.sendToAptos(\n          input.srcToken.address,\n          dstAddress,\n          srcAmount,\n          {\n            refundAddress: input.srcAddress,\n            zroPaymentAddress: AddressZero,\n          },\n          adapterParams,\n          {value},\n        )\n      : contract.populateTransaction.sendETHToAptos(\n          dstAddress,\n          srcAmount,\n          {\n            refundAddress: input.srcAddress,\n            zroPaymentAddress: AddressZero,\n          },\n          adapterParams,\n          {value},\n        );\n\n    return createTransaction(populatedTransaction, {\n      provider: this.getProvider(path.srcChainKey),\n      chainKey: path.srcChainKey,\n    });\n  }\n\n  supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    return (\n      isEvmChainKey(srcToken.chainKey) &&\n      isAptosChainKey(dstToken.chainKey) &&\n      isValidPair(srcToken, dstToken, this.config)\n    );\n  }\n\n  async getMinDstGas(path: {srcChainKey: string; dstChainKey: string}): Promise<bigint> {\n    return 10_000n;\n  }\n\n  async getMessageFee(\n    path: {srcChainKey: ChainKey; dstChainKey: ChainKey},\n    {\n      dstNativeAmount,\n      minDstGas,\n      dstNativeAddress,\n    }: {dstNativeAmount: bigint; minDstGas: bigint; dstNativeAddress: string},\n  ): Promise<MessageFee> {\n    const callParams = {refundAddress: AddressOne, zroPaymentAddress: AddressOne};\n    const contract = this.getBridgeContract(path.srcChainKey);\n    const dstNative = getNativeCurrency(path.dstChainKey);\n\n    const extraGas = Number(minDstGas);\n    const adapterParams = serializeAdapterParams(\n      dstNativeAmount > 0\n        ? AdapterParams.forV1(extraGas)\n        : AdapterParams.forV2({\n            extraGas,\n            dstNativeAmount: CurrencyAmount.fromBigInt(dstNative, dstNativeAmount),\n            dstNativeAddress,\n          }),\n    );\n\n    const {nativeFee, zroFee} = await contract.quoteForSend(callParams, adapterParams);\n    return MessageFee.from(path.srcChainKey, {\n      nativeFee: nativeFee.toBigInt(),\n      zroFee: zroFee.toBigInt(),\n    });\n  }\n\n  getBridgeContract(chainKey: ChainKey) {\n    const provider = this.getProvider(chainKey);\n    const deployment = getDeployment(chainKey, this.config);\n    const contract = ITokenBridge__factory.connect(deployment.bridge.address, provider);\n    return contract;\n  }\n}\n","import z from 'zod';\nimport type {AptosBridgeConfig} from './AptosBridgeConfig';\nimport {currencySchema} from '@layerzerolabs/ui-core';\nimport {AptosCoinType} from './AptosCoinType';\n\nconst serializedDeploymentSchema = z.object({\n  eid: z.number(),\n  bridge: z.object({\n    address: z.string(),\n  }),\n});\n\nconst serializedAptosBridgeConfigSchema = z.object({\n  deployments: z.record(serializedDeploymentSchema),\n  tokens: z.record(\n    z.enum([\n      AptosCoinType.USDC,\n      AptosCoinType.BUSD,\n      AptosCoinType.WBTC,\n      AptosCoinType.USDT,\n      AptosCoinType.USDD,\n      AptosCoinType.WETH,\n    ]),\n    z.array(currencySchema),\n  ),\n});\n\nconst aptosBridgeConfigSchema = serializedAptosBridgeConfigSchema;\n\ntype SerializedAptosBridgeConfig = z.input<typeof serializedAptosBridgeConfigSchema>;\n\nexport function createAptosBridgeConfig(input: SerializedAptosBridgeConfig): AptosBridgeConfig {\n  const config = serializedAptosBridgeConfigSchema.parse(input);\n  // todo: test\n  return config as unknown as AptosBridgeConfig;\n}\n","import {createAptosBridgeConfig} from '../types/zod';\n\nexport const mainnet = createAptosBridgeConfig({\n  deployments: {\n    ethereum: {\n      eid: 101,\n      bridge: {\n        address: '0x50002CdFe7CCb0C41F519c6Eb0653158d11cd907',\n      },\n    },\n    arbitrum: {\n      eid: 110,\n      bridge: {address: '0x1BAcC2205312534375c8d1801C27D28370656cFf'},\n    },\n    avalanche: {\n      eid: 106,\n      bridge: {address: '0xA5972EeE0C9B5bBb89a5B16D1d65f94c9EF25166'},\n    },\n    bsc: {\n      eid: 102,\n      bridge: {address: '0x2762409Baa1804D94D8c0bCFF8400B78Bf915D5B'},\n    },\n    optimism: {\n      eid: 111,\n      bridge: {address: '0x86Bb63148d17d445Ed5398ef26Aa05Bf76dD5b59'},\n    },\n    polygon: {\n      eid: 109,\n      bridge: {address: '0x488863D609F3A673875a914fBeE7508a1DE45eC6'},\n    },\n    aptos: {\n      eid: 108,\n      bridge: {\n        address: '0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa',\n      },\n    },\n  },\n  tokens: {\n    WETH: [\n      {\n        chainKey: 'ethereum',\n        decimals: 18,\n        symbol: 'ETH',\n        name: 'ETH',\n      },\n      {\n        chainKey: 'optimism',\n        decimals: 18,\n        symbol: 'ETH',\n        name: 'ETH',\n      },\n      {\n        chainKey: 'arbitrum',\n        decimals: 18,\n        symbol: 'ETH',\n        name: 'ETH',\n      },\n      {\n        chainKey: 'ethereum',\n        decimals: 18,\n        symbol: 'WETH',\n        name: 'Wrapped Ether',\n        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n      },\n      {\n        chainKey: 'arbitrum',\n        decimals: 18,\n        symbol: 'WETH',\n        name: 'Wrapped Ether',\n        address: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n      },\n      {\n        chainKey: 'optimism',\n        decimals: 18,\n        symbol: 'WETH',\n        name: 'Wrapped Ether',\n        address: '0x4200000000000000000000000000000000000006',\n      },\n      {\n        chainKey: 'aptos',\n        decimals: 6,\n        symbol: 'WETH',\n        name: 'Wrapped Ether',\n        address: '0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::WETH',\n      },\n    ],\n    USDC: [\n      {\n        chainKey: 'ethereum',\n        decimals: 6,\n        symbol: 'USDC',\n        name: 'USD Coin',\n        address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n      },\n      {\n        chainKey: 'avalanche',\n        decimals: 6,\n        symbol: 'USDC',\n        name: 'USD Coin',\n        address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n      },\n      {\n        chainKey: 'polygon',\n        decimals: 6,\n        symbol: 'USDC',\n        name: 'USD Coin',\n        address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n      },\n      {\n        chainKey: 'arbitrum',\n        decimals: 6,\n        symbol: 'USDC',\n        name: 'USD Coin',\n        address: '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8',\n      },\n      {\n        chainKey: 'optimism',\n        decimals: 6,\n        symbol: 'USDC',\n        name: 'USD Coin',\n        address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\n      },\n      {\n        chainKey: 'bsc',\n        decimals: 18,\n        symbol: 'USDC',\n        name: 'USD Coin',\n        address: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      },\n      {\n        chainKey: 'aptos',\n        decimals: 6,\n        symbol: 'USDC',\n        name: 'USD Coin',\n        address: '0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC',\n      },\n    ],\n    USDT: [\n      {\n        chainKey: 'ethereum',\n        decimals: 6,\n        symbol: 'USDT',\n        name: 'USD Tether',\n        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n      },\n      {\n        chainKey: 'bsc',\n        decimals: 18,\n        symbol: 'USDT',\n        name: 'USD Tether',\n        address: '0x55d398326f99059fF775485246999027B3197955',\n      },\n      {\n        chainKey: 'avalanche',\n        decimals: 6,\n        symbol: 'USDT',\n        name: 'USD Tether',\n        address: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',\n      },\n      {\n        chainKey: 'polygon',\n        decimals: 6,\n        symbol: 'USDT',\n        name: 'USD Tether',\n        address: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',\n      },\n      {\n        chainKey: 'aptos',\n        decimals: 6,\n        symbol: 'USDT',\n        name: 'USD Tether',\n        address: '0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDT',\n      },\n    ],\n    USDD: [\n      {\n        chainKey: 'ethereum',\n        decimals: 18,\n        symbol: 'USDD',\n        name: 'Decentralized USD',\n        address: '0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6',\n      },\n      {\n        chainKey: 'bsc',\n        decimals: 18,\n        symbol: 'USDD',\n        name: 'Decentralized USD',\n        address: '0xd17479997F34dd9156Deef8F95A52D81D265be9c',\n      },\n      {\n        chainKey: 'aptos',\n        decimals: 6,\n        symbol: 'USDD',\n        name: 'Decentralized USD',\n        address: '0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDD',\n      },\n    ],\n    WBTC: [\n      {\n        chainKey: 'ethereum',\n        decimals: 8,\n        symbol: 'WBTC',\n        name: 'Wrapped BTC',\n        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n      },\n      {\n        chainKey: 'aptos',\n        decimals: 6,\n        symbol: 'WBTC',\n        name: 'Wrapped BTC',\n        address: '0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::WBTC',\n      },\n    ],\n  },\n});\n\nconst CoinType = {\n  APTOS: 'AptosCoin',\n  USDC: 'USDC',\n  BUSD: 'BUSD',\n  WBTC: 'WBTC',\n  USDT: 'USDT',\n  USDD: 'USDD',\n  WETH: 'WETH',\n} as const;\n","import {\n  type GetAptosClientFunction,\n  type Accounts,\n  fullAddress,\n  createTransaction,\n} from '@layerzerolabs/ui-aptos';\nimport type {\n  ClaimApi,\n  ClaimInput,\n  GetUnclaimedInput,\n  GetUnclaimedResult,\n} from '@layerzerolabs/ui-bridge-sdk/v2';\nimport {\n  type ChainKey,\n  type Currency,\n  CurrencyAmount,\n  isAptosChainKey,\n  type Transaction,\n} from '@layerzerolabs/ui-core';\nimport type {AptosBridgeConfig} from './types/AptosBridgeConfig';\nimport {claimCoinPayload, getBridgeCoinType, getUnclaimed} from './aptos';\nimport {getDeployment} from './utils';\n\ntype AccountsConfig = Record<ChainKey, Accounts>;\n\nexport class AptosClaimV2__aptos implements ClaimApi<unknown> {\n  constructor(\n    protected config: AptosBridgeConfig,\n    protected accounts: AccountsConfig,\n    protected getClient: GetAptosClientFunction,\n  ) {}\n\n  supports(token: Currency): boolean {\n    if (!isAptosChainKey(token.chainKey)) return false;\n    for (const other of Object.values(this.config.tokens).flat()) {\n      if (token.equals(other)) return true;\n    }\n    return false;\n  }\n\n  async getUnclaimed(input: GetUnclaimedInput): Promise<GetUnclaimedResult> {\n    const client = this.getClient(input.token.chainKey);\n    const bridgeAddress = getDeployment(input.token.chainKey, this.config).bridge.address;\n    const tokenAddress = getBridgeCoinType(input.token);\n    const unclaimed = await getUnclaimed(client, bridgeAddress, tokenAddress, input.owner);\n    return CurrencyAmount.fromBigInt(input.token, unclaimed);\n  }\n\n  async claim(input: ClaimInput): Promise<Transaction<unknown>> {\n    const client = this.getClient(input.token.chainKey);\n    const bridgeAddress = getDeployment(input.token.chainKey, this.config).bridge.address;\n    const tokenAddress = getBridgeCoinType(input.token);\n    const ownerAddress = fullAddress(input.owner).hex();\n    const entryFunctionPayload = claimCoinPayload(bridgeAddress, tokenAddress, ownerAddress);\n    return createTransaction(entryFunctionPayload, {client});\n  }\n}\n"]}