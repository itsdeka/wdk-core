{"version":3,"sources":["../src/utils/convertFromV1.ts","../src/tron/OftBridgeV3__tron.ts","../src/tron/constants.ts","../src/tron/OftBridgeApiFactory__tron.ts"],"names":["native","token","proxy","assert","getNativeCurrency","AddressZero"],"mappings":"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","sourcesContent":["import {\n  assert,\n  chainKeyToEndpointId,\n  endpointIdToChainKey,\n  endpointIdToStage,\n  getNativeCurrency,\n  type Token,\n} from '@layerzerolabs/ui-core';\nimport type {SerializedOftBridgeConfig} from '../types';\n\ntype OldOftBridgeConfig = {\n  fee?: boolean;\n  sharedDecimals: number;\n  version: number;\n  tokens: {\n    address: string;\n    chainId: number;\n    decimals: number;\n    symbol: string;\n    name: string;\n  }[];\n  proxy?: {\n    chainId: number;\n    address: string;\n  }[];\n  native?: {\n    chainId: number;\n    address: string;\n  }[];\n};\n\nexport function convertFromV1(\n  oldOftBridgeConfig: OldOftBridgeConfig,\n  endpointVersion: 1 | 2,\n): SerializedOftBridgeConfig {\n  const oftBridgeConfig: SerializedOftBridgeConfig = {\n    sharedDecimals: oldOftBridgeConfig.sharedDecimals,\n    version: oldOftBridgeConfig.version,\n    fee: oldOftBridgeConfig.fee ?? false,\n    deployments: {},\n  };\n  const chainIds = new Set<number>();\n  oldOftBridgeConfig.tokens.forEach((token) => {\n    chainIds.add(token.chainId);\n  });\n  oldOftBridgeConfig.proxy?.forEach((proxy) => {\n    chainIds.add(proxy.chainId);\n  });\n  oldOftBridgeConfig.native?.forEach((native) => {\n    chainIds.add(native.chainId);\n  });\n  for (const chainId of chainIds) {\n    const chainKey = endpointIdToChainKey(chainId);\n    const stage = endpointIdToStage(chainId);\n    const eid = chainKeyToEndpointId(chainKey, endpointVersion, stage);\n    const native = oldOftBridgeConfig.native?.find((native) => native.chainId === chainId);\n    const token =\n      oldOftBridgeConfig.tokens.find((token) => token.chainId === chainId) ??\n      (native ? getNativeCurrency(chainKey) : undefined);\n\n    const proxy = oldOftBridgeConfig.proxy?.find((proxy) => proxy.chainId === chainId);\n    assert(token, `Token for ${chainKey} not found`);\n    const deployment: SerializedOftBridgeConfig['deployments'][string] = {\n      eid: eid,\n      token: {\n        chainKey,\n        address: (token as Token).address,\n        decimals: token?.decimals,\n        name: token?.name,\n        symbol: token?.symbol,\n      },\n      oftNative: native ? {address: native.address} : undefined,\n      oftProxy: proxy ? {address: proxy.address} : undefined,\n    };\n    oftBridgeConfig.deployments[chainKey] = deployment;\n  }\n  return oftBridgeConfig;\n}\n","import type {\n  BridgeOutput,\n  GetExtraGasInput,\n  GetMessageFeeInput,\n  GetOptionsInput,\n  GetOutputInput,\n  TransferInput,\n  BridgeOptions,\n  GetAllowanceInput,\n  ApproveInput,\n  GetLimitInput,\n} from '@layerzerolabs/ui-bridge-sdk/v1';\nimport {\n  AdapterParams,\n  assert,\n  castCurrencyAmountUnsafe,\n  type ChainKey,\n  CurrencyAmount,\n  type FeeQuote,\n  getNativeCurrency,\n  MessageFee,\n  parseCurrencyAmount,\n  type Transaction,\n  Currency,\n  isTronChainKey,\n} from '@layerzerolabs/ui-core';\nimport {AddressOne, AddressZero} from '@layerzerolabs/ui-evm';\n\nimport type {SendParamStruct} from '../typechain/OFTV3';\nimport type {OftBridgeConfig, OftBridgeFee} from '../types';\nimport {createOptions, addressToBytes32ForChain} from '../utils';\nimport {OftBridgeBase} from '../evm/impl/OftBridgeBase';\nimport type {SendParamsInput, TronWebProvider} from './types';\nimport {toTronAddress} from './utils';\nimport {\n  TRON_OFT_ABI,\n  TRC20_ABI,\n  VIEW_CALL_OPTIONS,\n  SEND_CALL_OPTIONS,\n  DEFAULT_FEE_LIMIT,\n} from './constants';\n\nexport class OftBridgeV3__tron extends OftBridgeBase {\n  constructor(\n    protected getTronWeb: (chainKey: ChainKey) => Promise<TronWebProvider>,\n    public config: OftBridgeConfig,\n  ) {\n    super(null as any, config);\n  }\n\n  protected validateConfig(config: OftBridgeConfig): asserts config is OftBridgeConfig {\n    assert(config.version === 3, 'Invalid config.version: is not 3');\n  }\n\n  override supportsRegister(token: Currency): boolean {\n    const {chainKey} = token;\n    if (!isTronChainKey(chainKey)) return false;\n    return Boolean(this.tryGetDeployment(token.chainKey)?.token.equals(token));\n  }\n\n  override supportsTransfer(srcToken: Currency, dstToken: Currency): boolean {\n    if (!isTronChainKey(srcToken.chainKey)) return false;\n    const srcDstChains = this.tryGetDeployment(srcToken.chainKey)?.destinationChains;\n    if (srcDstChains) {\n      if (!srcDstChains.includes(dstToken.chainKey)) {\n        return false;\n      }\n    }\n    return Boolean(\n      this.tryGetDeployment(srcToken.chainKey)?.token.equals(srcToken) &&\n        this.tryGetDeployment(dstToken.chainKey)?.token.equals(dstToken),\n    );\n  }\n\n  override async transfer(input: TransferInput): Promise<Transaction<any>> {\n    this.validateInput(input);\n\n    const {srcChainKey, srcAddress} = input;\n    const contract = await this.getContract(srcChainKey);\n\n    // Use the actual fee from input\n    const value = input.fee.nativeFee.toBigInt();\n    const native = getNativeCurrency(srcChainKey);\n\n    const sendParams = await this.buildSendParams(input);\n    const fee = {\n      nativeFee: input.fee.nativeFee.toBigInt(),\n      lzTokenFee: input.fee.zroFee.toBigInt(),\n    };\n\n    // Structure the parameters with _sendParam nesting like quoteSend\n    const params = {\n      _sendParam: {\n        dstEid: sendParams.dstEid,\n        to: sendParams.to,\n        amountLD: sendParams.amountLD.toString(),\n        minAmountLD: sendParams.minAmountLD.toString(),\n        extraOptions: sendParams.extraOptions,\n        composeMsg: '0x',\n        oftCmd: '0x',\n      },\n    };\n\n    const contractCall = contract.send(params, fee, srcAddress).send({\n      callValue: value,\n      feeLimit: DEFAULT_FEE_LIMIT,\n      from: srcAddress,\n      owner_address: srcAddress,\n      shouldPollResponse: false,\n    });\n\n    return {\n      signAndSubmitTransaction: async () => {\n        try {\n          const result = await contractCall;\n\n          if (!result) {\n            throw new Error('No transaction response received');\n          }\n\n          // According to Tron protocol, transaction should have txID\n          if (typeof result === 'object' && 'txID' in result) {\n            const txHash = '0x' + result.txID;\n            return {\n              txHash,\n              wait: async () => ({txHash}),\n            };\n          }\n\n          // For other response formats\n          if (typeof result === 'string') {\n            return {\n              txHash: '0x' + result,\n              wait: async () => ({txHash: result}),\n            };\n          }\n\n          throw new Error('Invalid transaction response format');\n        } catch (error) {\n          throw error;\n        }\n      },\n      estimateGas: async () => BigInt(1000000),\n      estimateNative: async () => CurrencyAmount.fromRawAmount(native, value),\n      unwrap: () => contractCall,\n    };\n  }\n\n  override async getMessageFee(input: GetMessageFeeInput): Promise<FeeQuote> {\n    const dstAddress = input.dstAddress ?? AddressOne;\n    const srcAmount = input.srcAmount ?? parseCurrencyAmount(input.srcToken, '1');\n    const dstAmountMin = input.dstAmountMin ?? CurrencyAmount.fromBigInt(input.dstToken, BigInt(0));\n    const srcChainKey = input.srcToken.chainKey;\n    const useZro = false;\n\n    const contract = await this.getContract(srcChainKey);\n    const params = await this.buildSendParams({\n      adapterParams: input.adapterParams,\n      dstToken: input.dstToken,\n      srcAmount,\n      dstAmountMin,\n      dstAddress,\n    });\n\n    try {\n      const response = await contract\n        .quoteSend(\n          {\n            _sendParam: {\n              dstEid: params.dstEid,\n              to: params.to,\n              amountLD: params.amountLD.toString(),\n              minAmountLD: params.minAmountLD.toString(),\n              extraOptions: params.extraOptions,\n              composeMsg: '0x',\n              oftCmd: '0x',\n            },\n          },\n          useZro,\n        )\n        .call({\n          _isConstant: true,\n          callValue: 0,\n          feeLimit: 1000000,\n          from: AddressZero,\n          owner_address: AddressZero,\n        });\n\n      const fee: FeeQuote = MessageFee.from(srcChainKey, {\n        nativeFee: BigInt(response.nativeFee.toString()),\n        zroFee: BigInt(response.lzTokenFee.toString()),\n      });\n\n      return fee;\n    } catch (error) {\n      console.error('Error getting message fee:', error);\n      // Use a reasonable default fee of 5 TRX\n      const native = getNativeCurrency(srcChainKey);\n      return {\n        nativeFee: CurrencyAmount.fromRawAmount(native, BigInt(5e6)), // 5 TRX\n        zroFee: CurrencyAmount.fromRawAmount(native, 0n),\n      };\n    }\n  }\n\n  // We do not need to get the enforced options from the contract, they are already applied.\n  override async getExtraGas(input: GetExtraGasInput): Promise<number> {\n    return 0;\n  }\n\n  override async getOutput(input: GetOutputInput): Promise<BridgeOutput<OftBridgeFee>> {\n    const {srcAmount, dstToken} = input;\n    const contract = await this.getContract(srcAmount.token.chainKey);\n\n    const dstEid = this.chainKeyToEndpointId(dstToken.chainKey);\n    const toAddress = addressToBytes32ForChain(AddressZero, dstToken.chainKey);\n    const amountLD = srcAmount.toBigInt();\n    const minAmountLD = srcAmount.toBigInt() / 2n;\n    const extraOptions = '0x';\n\n    const sendParam = {\n      _sendParam: {\n        dstEid,\n        to: toAddress,\n        amountLD: amountLD.toString(),\n        minAmountLD: minAmountLD.toString(),\n        extraOptions,\n        composeMsg: '0x',\n        oftCmd: '0x',\n      },\n    };\n\n    try {\n      const {oftReceipt} = await contract.quoteOFT(sendParam).call(VIEW_CALL_OPTIONS);\n      // The received amount should be the same as sent for USDT\n      return {\n        dstAmount: CurrencyAmount.fromRawAmount(dstToken, oftReceipt.amountReceivedLD),\n        fee: {\n          bridgeFee: CurrencyAmount.fromRawAmount(srcAmount.token, '0'),\n        },\n      };\n    } catch (error) {\n      console.error('Error in getOutput:', error);\n      // Return 1:1 ratio for the transfer\n      return {\n        dstAmount: CurrencyAmount.fromRawAmount(dstToken, amountLD),\n        fee: {\n          bridgeFee: CurrencyAmount.fromRawAmount(srcAmount.token, '0'),\n        },\n      };\n    }\n  }\n\n  private async buildSendParams(input: SendParamsInput): Promise<SendParamStruct> {\n    const {dstToken, srcAmount, adapterParams, dstAddress} = input;\n    const dstChainKey = dstToken.chainKey;\n    const dstEid = this.chainKeyToEndpointId(dstChainKey);\n\n    // If dstAmountMin is provided, use it, otherwise default to half of srcAmount\n    const minAmount = input.dstAmountMin\n      ? castCurrencyAmountUnsafe(input.dstAmountMin, srcAmount.token)\n      : CurrencyAmount.fromRawAmount(srcAmount.token, srcAmount.toBigInt() / 2n);\n\n    const options = await this.createOptions({adapterParams, dstChainKey});\n\n    return {\n      dstEid: BigInt(dstEid),\n      to: addressToBytes32ForChain(dstAddress, dstChainKey),\n      amountLD: srcAmount.toBigInt(),\n      minAmountLD: minAmount.toBigInt(),\n      extraOptions: options.toHex(),\n      composeMsg: '0x', // No compose message by default\n      oftCmd: '0x', // No OFT command by default\n    };\n  }\n\n  // The extra gas value in AdapterParams can be ignored because the extra gas is already\n  // enforced and automatically applied to the tx. We only need to serialize the dst native amount\n  // and address, which only exist in our AdapterParams V2.\n  public async createOptions({\n    adapterParams,\n    dstChainKey,\n  }: {\n    adapterParams: AdapterParams;\n    dstChainKey: ChainKey;\n  }) {\n    return createOptions({adapterParams, dstChainKey}, this.config);\n  }\n\n  override async getLimit({srcToken, dstToken}: GetLimitInput) {\n    // Get credits for the destination chain\n    const contract = await this.getContract(srcToken.chainKey);\n    return CurrencyAmount.fromBigInt(\n      srcToken,\n      await contract.credits(this.getDeployment(dstToken.chainKey).eid).call(),\n    );\n  }\n\n  protected async getContract(chainKey: ChainKey) {\n    const {oftProxy, oft} = this.getDeployment(chainKey);\n    const tronWeb = await this.getTronWeb(chainKey);\n\n    const address = toTronAddress(tronWeb, oftProxy ? oftProxy.address : oft!.address);\n\n    // Create contract instance with ABI and address\n    const contract = await tronWeb.contract(TRON_OFT_ABI, address);\n\n    // Create a proxy object that mimics the contract interface\n    return {\n      credits: (dstEid: number) => ({\n        call: async (): Promise<bigint> => {\n          // Get credits for the destination chain\n          const creditsResult = await contract.credits(dstEid).call(SEND_CALL_OPTIONS);\n          return BigInt(creditsResult.credits._hex);\n        },\n      }),\n      quoteOFT: (params: any) => ({\n        call: async (options: any) => {\n          if (!params._sendParam) {\n            throw new Error('Missing required parameters for quoteOFT');\n          }\n\n          // Convert parameters to array format for Tron contract\n          const sendParamArray = [\n            params._sendParam.dstEid,\n            params._sendParam.to,\n            params._sendParam.amountLD.toString(),\n            params._sendParam.minAmountLD.toString(),\n            params._sendParam.extraOptions,\n            params._sendParam.composeMsg,\n            params._sendParam.oftCmd,\n          ];\n\n          const result = await contract.quoteOFT(sendParamArray).call(SEND_CALL_OPTIONS);\n\n          return {\n            oftReceipt: {\n              amountReceivedLD: result.oftReceipt.amountReceivedLD.toString(),\n              amountSentLD: result.oftReceipt.amountSentLD.toString(),\n            },\n          };\n        },\n      }),\n\n      quoteSend: (params: any, payInLzToken: boolean) => ({\n        call: async (options: any) => {\n          if (!params._sendParam) {\n            throw new Error('Missing required parameters for quoteSend');\n          }\n\n          // Convert parameters to array format for Tron contract\n          const sendParamArray = [\n            params._sendParam.dstEid,\n            params._sendParam.to,\n            params._sendParam.amountLD.toString(),\n            params._sendParam.minAmountLD.toString(),\n            params._sendParam.extraOptions,\n            params._sendParam.composeMsg,\n            params._sendParam.oftCmd,\n          ];\n\n          const result = await contract\n            .quoteSend(sendParamArray, payInLzToken)\n            .call(SEND_CALL_OPTIONS);\n\n          return {\n            nativeFee: result.msgFee.nativeFee.toString(),\n            lzTokenFee: result.msgFee.lzTokenFee.toString(),\n          };\n        },\n      }),\n\n      send: (params: any, fee: any, refundAddress: string) => ({\n        send: async (options: any) => {\n          if (!params || !fee || !refundAddress) {\n            throw new Error('Missing required parameters for send');\n          }\n\n          // Convert parameters to array format for Tron contract\n          const sendParamArray = [\n            params._sendParam.dstEid,\n            params._sendParam.to,\n            params._sendParam.amountLD,\n            params._sendParam.minAmountLD,\n            params._sendParam.extraOptions,\n            params._sendParam.composeMsg,\n            params._sendParam.oftCmd,\n          ];\n\n          const feeArray = [fee.nativeFee.toString(), fee.lzTokenFee.toString()];\n\n          // Call the contract method to create the transaction\n          const transaction = await contract.send(sendParamArray, feeArray, refundAddress).send({\n            ...options,\n            feeLimit: DEFAULT_FEE_LIMIT,\n          });\n\n          return transaction;\n        },\n      }),\n    };\n  }\n\n  override async getOptions(input: GetOptionsInput): Promise<BridgeOptions> {\n    return {\n      options: [\n        {\n          mode: 'taxi',\n        },\n      ],\n    };\n  }\n\n  override async getAllowance({token, address}: GetAllowanceInput): Promise<CurrencyAmount> {\n    if (!this.supportsRegister(token)) {\n      return CurrencyAmount.fromRawAmount(token, 0n);\n    }\n\n    const tronWeb = await this.getTronWeb(token.chainKey);\n    const deployment = this.getDeployment(token.chainKey);\n\n    // Use oftProxy address as spender\n    const spender = deployment.oftProxy?.address;\n    if (!spender) {\n      console.error('Missing spender:', {spender});\n      return CurrencyAmount.fromRawAmount(token, 0n);\n    }\n\n    // Get token contract address from the deployment configuration\n    const tokenDeployment = deployment.token;\n    if (!('address' in tokenDeployment)) {\n      console.error('Token is not a contract (no address)');\n      return CurrencyAmount.fromRawAmount(token, 0n);\n    }\n\n    // Convert addresses to Tron format\n    const tronTokenAddress = toTronAddress(tronWeb, tokenDeployment.address);\n    const tronSpenderAddress = toTronAddress(tronWeb, spender);\n\n    try {\n      // Get the TRC20 token contract\n      const tokenContract = await tronWeb.contract(TRC20_ABI, tronTokenAddress);\n\n      const result = await tokenContract\n        .allowance(address, tronSpenderAddress)\n        .call(VIEW_CALL_OPTIONS);\n\n      return CurrencyAmount.fromRawAmount(token, BigInt(result.toString()));\n    } catch (error) {\n      console.error('Error getting allowance:', error);\n      return CurrencyAmount.fromRawAmount(token, 0n);\n    }\n  }\n\n  override async approve({amount, address}: ApproveInput): Promise<Transaction<any>> {\n    if (!this.supportsRegister(amount.token)) {\n      throw new Error('Token not supported');\n    }\n\n    const tronWeb = await this.getTronWeb(amount.token.chainKey);\n    const deployment = this.getDeployment(amount.token.chainKey);\n\n    // Use oftProxy address as spender\n    const spender = deployment.oftProxy?.address;\n    if (!spender) {\n      throw new Error('Missing spender address');\n    }\n\n    // Get token contract address from the deployment configuration\n    const tokenDeployment = deployment.token;\n    if (!('address' in tokenDeployment)) {\n      throw new Error('Token is not a contract (no address)');\n    }\n\n    // Convert addresses to Tron format\n    const tronTokenAddress = toTronAddress(tronWeb, tokenDeployment.address);\n    const tronSpenderAddress = toTronAddress(tronWeb, spender);\n\n    try {\n      // Get the TRC20 token contract\n      const tokenContract = await tronWeb.contract(TRC20_ABI, tronTokenAddress);\n\n      return tokenContract.approve(tronSpenderAddress, amount.toBigInt()).send({\n        ...SEND_CALL_OPTIONS,\n        from: address,\n        owner_address: address,\n      });\n    } catch (error) {\n      console.error('Error in approve:', error);\n      throw error;\n    }\n  }\n}\n","import {AddressZero} from '@layerzerolabs/ui-evm';\n\n// Common contract call options\nexport const DEFAULT_FEE_LIMIT = 100_000_000;\n\nexport const VIEW_CALL_OPTIONS = {\n  _isConstant: true,\n  callValue: 0,\n  feeLimit: DEFAULT_FEE_LIMIT,\n  from: AddressZero,\n  owner_address: AddressZero,\n} as const;\n\nexport const SEND_CALL_OPTIONS = {\n  _isConstant: false,\n  callValue: 0,\n  feeLimit: DEFAULT_FEE_LIMIT,\n  from: AddressZero,\n  owner_address: AddressZero,\n} as const;\n\n// Simplified ABI with only the functions we need\nexport const TRON_OFT_ABI = [\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: '_arbitrumEid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint32',\n        name: '_celoEid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint32',\n        name: '_ethEid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint32',\n        name: '_tonEid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint32',\n        name: '_tronEid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'address',\n        name: '_token',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_lzEndpoint',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_delegate',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n    ],\n    name: 'AddressEmptyCode',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'AddressInsufficientBalance',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ComposeNotSupported',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'FailedInnerCall',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: 'eid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'credits',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amountWithdraw',\n        type: 'uint256',\n      },\n    ],\n    name: 'InsufficientCredits',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InsufficientFeeBalance',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidAmount',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidDelegate',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidEid',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidEndpointCall',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint16',\n        name: 'feeBps',\n        type: 'uint16',\n      },\n    ],\n    name: 'InvalidFeeBps',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidLocalDecimals',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint16',\n        name: 'msgType',\n        type: 'uint16',\n      },\n    ],\n    name: 'InvalidMsgType',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'options',\n        type: 'bytes',\n      },\n    ],\n    name: 'InvalidOptions',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'LzTokenUnavailable',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: 'eid',\n        type: 'uint32',\n      },\n    ],\n    name: 'NoPeer',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'msgValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'NotEnoughNative',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'OnlyEndpoint',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'OnlyLpAdminOrOwner',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: 'eid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'sender',\n        type: 'bytes32',\n      },\n    ],\n    name: 'OnlyPeer',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'OnlyPlanner',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnableInvalidOwner',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'OwnableUnauthorizedAccount',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'token',\n        type: 'address',\n      },\n    ],\n    name: 'SafeERC20FailedOperation',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'amountLD',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'minAmountLD',\n        type: 'uint256',\n      },\n    ],\n    name: 'SlippageExceeded',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'guid',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint32',\n        name: 'srcEid',\n        type: 'uint32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'message',\n        type: 'bytes',\n      },\n    ],\n    name: 'CreditsReceived',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint32',\n        name: 'dstEid',\n        type: 'uint32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'creditsArbitrum',\n        type: 'uint64',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'creditsCelo',\n        type: 'uint64',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'creditsEth',\n        type: 'uint64',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'creditsTon',\n        type: 'uint64',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'creditsTron',\n        type: 'uint64',\n      },\n    ],\n    name: 'CreditsSent',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'eid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint16',\n            name: 'msgType',\n            type: 'uint16',\n          },\n          {\n            internalType: 'bytes',\n            name: 'options',\n            type: 'bytes',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct EnforcedOptionParam[]',\n        name: '_enforcedOptions',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'EnforcedOptionSet',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'feeBps',\n        type: 'uint16',\n      },\n    ],\n    name: 'FeeBpsSet',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'FeesWithdrawn',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'LocalDeposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'LocalWithdrawn',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'lpAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'LpAdminSet',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'guid',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint32',\n        name: 'srcEid',\n        type: 'uint32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'toAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amountReceivedLD',\n        type: 'uint256',\n      },\n    ],\n    name: 'OFTReceived',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'guid',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint32',\n        name: 'dstEid',\n        type: 'uint32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'fromAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amountSentLD',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amountReceivedLD',\n        type: 'uint256',\n      },\n    ],\n    name: 'OFTSent',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint32',\n        name: 'eid',\n        type: 'uint32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'peer',\n        type: 'bytes32',\n      },\n    ],\n    name: 'PeerSet',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'planner',\n        type: 'address',\n      },\n    ],\n    name: 'PlannerSet',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'guid',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint32',\n        name: 'srcEid',\n        type: 'uint32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'RemoteWithdrawReceived',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint32',\n        name: 'dstEid',\n        type: 'uint32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'RemoteWithdrawn',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'ARBITRUM_EID',\n    outputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'BPS_DENOMINATOR',\n    outputs: [\n      {\n        internalType: 'uint16',\n        name: '',\n        type: 'uint16',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'CELO_EID',\n    outputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'ETH_EID',\n    outputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'LOCAL_EID',\n    outputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'SEND_CREDITS',\n    outputs: [\n      {\n        internalType: 'uint16',\n        name: '',\n        type: 'uint16',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'SEND_OFT',\n    outputs: [\n      {\n        internalType: 'uint16',\n        name: '',\n        type: 'uint16',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'TON_EID',\n    outputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'TRON_EID',\n    outputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'WITHDRAW_REMOTE',\n    outputs: [\n      {\n        internalType: 'uint16',\n        name: '',\n        type: 'uint16',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'srcEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'sender',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'nonce',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct Origin',\n        name: 'origin',\n        type: 'tuple',\n      },\n    ],\n    name: 'allowInitializePath',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'approvalRequired',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: '_eid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint16',\n        name: '_msgType',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes',\n        name: '_extraOptions',\n        type: 'bytes',\n      },\n    ],\n    name: 'combineOptions',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: 'eid',\n        type: 'uint32',\n      },\n    ],\n    name: 'credits',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'credits',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'depositLocal',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'endpoint',\n    outputs: [\n      {\n        internalType: 'contract ILayerZeroEndpointV2',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: 'eid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint16',\n        name: 'msgType',\n        type: 'uint16',\n      },\n    ],\n    name: 'enforcedOptions',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: 'enforcedOption',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'feeBalance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'feeBps',\n    outputs: [\n      {\n        internalType: 'uint16',\n        name: '',\n        type: 'uint16',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'srcEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'sender',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'nonce',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct Origin',\n        name: '',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n      {\n        internalType: 'address',\n        name: '_sender',\n        type: 'address',\n      },\n    ],\n    name: 'isComposeMsgSender',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'lpAdmin',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'srcEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'sender',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'nonce',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct Origin',\n        name: '_origin',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_guid',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_message',\n        type: 'bytes',\n      },\n      {\n        internalType: 'address',\n        name: '_executor',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes',\n        name: '_extraData',\n        type: 'bytes',\n      },\n    ],\n    name: 'lzReceive',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nextNonce',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: 'nonce',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'oAppVersion',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: 'senderVersion',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: 'receiverVersion',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'oftVersion',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n      {\n        internalType: 'uint64',\n        name: 'version',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: 'eid',\n        type: 'uint32',\n      },\n    ],\n    name: 'peers',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'peer',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'planner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'dstEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'to',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'amountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minAmountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'extraOptions',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'composeMsg',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'oftCmd',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct SendParam',\n        name: '_sendParam',\n        type: 'tuple',\n      },\n    ],\n    name: 'quoteOFT',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'minAmountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxAmountLD',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct OFTLimit',\n        name: 'oftLimit',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'int256',\n            name: 'feeAmountLD',\n            type: 'int256',\n          },\n          {\n            internalType: 'string',\n            name: 'description',\n            type: 'string',\n          },\n        ],\n        internalType: 'struct OFTFeeDetail[]',\n        name: 'oftFeeDetails',\n        type: 'tuple[]',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'amountSentLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'amountReceivedLD',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct OFTReceipt',\n        name: 'oftReceipt',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'dstEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'to',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'amountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minAmountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'extraOptions',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'composeMsg',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'oftCmd',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct SendParam',\n        name: '_sendParam',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bool',\n        name: '_payInLzToken',\n        type: 'bool',\n      },\n    ],\n    name: 'quoteSend',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'nativeFee',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'lzTokenFee',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct MessagingFee',\n        name: 'msgFee',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: '_dstEid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsArbitrum',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsCelo',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsEth',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsTon',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsTron',\n        type: 'uint64',\n      },\n      {\n        internalType: 'bytes',\n        name: '_extraOptions',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bool',\n        name: '_payInLzToken',\n        type: 'bool',\n      },\n    ],\n    name: 'quoteSendCredits',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'nativeFee',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'lzTokenFee',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct MessagingFee',\n        name: 'msgFee',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'dstEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'to',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'amountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minAmountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'extraOptions',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'composeMsg',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'oftCmd',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct SendParam',\n        name: '_sendParam',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bool',\n        name: '_payInLzToken',\n        type: 'bool',\n      },\n    ],\n    name: 'quoteWithdrawRemote',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'nativeFee',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'lzTokenFee',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct MessagingFee',\n        name: 'msgFee',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'dstEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'to',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'amountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minAmountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'extraOptions',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'composeMsg',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'oftCmd',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct SendParam',\n        name: '_sendParam',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'nativeFee',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'lzTokenFee',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct MessagingFee',\n        name: '_fee',\n        type: 'tuple',\n      },\n      {\n        internalType: 'address',\n        name: '_refundAddress',\n        type: 'address',\n      },\n    ],\n    name: 'send',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'guid',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'nonce',\n            type: 'uint64',\n          },\n          {\n            components: [\n              {\n                internalType: 'uint256',\n                name: 'nativeFee',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'lzTokenFee',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct MessagingFee',\n            name: 'fee',\n            type: 'tuple',\n          },\n        ],\n        internalType: 'struct MessagingReceipt',\n        name: 'msgReceipt',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'amountSentLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'amountReceivedLD',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct OFTReceipt',\n        name: 'oftReceipt',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: '_dstEid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsArbitrum',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsCelo',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsEth',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsTon',\n        type: 'uint64',\n      },\n      {\n        internalType: 'uint64',\n        name: '_creditsTron',\n        type: 'uint64',\n      },\n      {\n        internalType: 'bytes',\n        name: '_extraOptions',\n        type: 'bytes',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'nativeFee',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'lzTokenFee',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct MessagingFee',\n        name: '_fee',\n        type: 'tuple',\n      },\n    ],\n    name: 'sendCredits',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'guid',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'nonce',\n            type: 'uint64',\n          },\n          {\n            components: [\n              {\n                internalType: 'uint256',\n                name: 'nativeFee',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'lzTokenFee',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct MessagingFee',\n            name: 'fee',\n            type: 'tuple',\n          },\n        ],\n        internalType: 'struct MessagingReceipt',\n        name: 'msgReceipt',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_delegate',\n        type: 'address',\n      },\n    ],\n    name: 'setDelegate',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'eid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint16',\n            name: 'msgType',\n            type: 'uint16',\n          },\n          {\n            internalType: 'bytes',\n            name: 'options',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct EnforcedOptionParam[]',\n        name: '_enforcedOptions',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'setEnforcedOptions',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint16',\n        name: '_feeBps',\n        type: 'uint16',\n      },\n    ],\n    name: 'setFeeBps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_lpAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'setLpAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint32',\n        name: '_eid',\n        type: 'uint32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_peer',\n        type: 'bytes32',\n      },\n    ],\n    name: 'setPeer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_planner',\n        type: 'address',\n      },\n    ],\n    name: 'setPlanner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'sharedDecimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'token',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'tvl',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'withdrawFees',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'withdrawLocal',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint32',\n            name: 'dstEid',\n            type: 'uint32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'to',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'amountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minAmountLD',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'extraOptions',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'composeMsg',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'oftCmd',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct SendParam',\n        name: '_sendParam',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'nativeFee',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'lzTokenFee',\n            type: 'uint256',\n          },\n        ],\n        internalType: 'struct MessagingFee',\n        name: '_fee',\n        type: 'tuple',\n      },\n      {\n        internalType: 'address',\n        name: '_refundAddress',\n        type: 'address',\n      },\n    ],\n    name: 'withdrawRemote',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'guid',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'nonce',\n            type: 'uint64',\n          },\n          {\n            components: [\n              {\n                internalType: 'uint256',\n                name: 'nativeFee',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'lzTokenFee',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct MessagingFee',\n            name: 'fee',\n            type: 'tuple',\n          },\n        ],\n        internalType: 'struct MessagingReceipt',\n        name: 'msgReceipt',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n];\n\n// TRC20 token ABI with only the functions we need\nexport const TRC20_ABI = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address',\n      },\n      {\n        name: '_spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import type {OftBridgeConfig} from '../types';\nimport type {OftBridgeBase} from '../evm/impl/OftBridgeBase';\nimport {OftBridgeV3__tron} from './OftBridgeV3__tron';\nimport type {TronWebProvider} from './types';\nimport type {ChainKey} from '@layerzerolabs/ui-core';\n\nexport class OftBridgeApiFactory__tron {\n  constructor(protected getTronWeb: (chainKey: ChainKey) => Promise<TronWebProvider>) {}\n  create(config: OftBridgeConfig): OftBridgeBase {\n    const impl = config.version === 3 ? new OftBridgeV3__tron(this.getTronWeb, config) : undefined;\n    if (!impl) {\n      throw new Error(\n        `Unsupported config: Tron only supports {version: 3}, got {version: ${config.version}, fee: ${config.fee}}`,\n      );\n    }\n    return impl;\n  }\n}\n"]}